antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component","keyword"],"fieldVectors":[["title/1",[0,29.273,1,59.259]],["name/1",[1,3.171]],["text/1",[0,4.838,2,2.675,3,2.327,4,2.243,5,3.896,6,4.33,7,4.33,8,2.09,9,8.304,10,3.977,11,2.461,12,2.525,13,4.33,14,4.33,15,6.591,16,1.581,17,4.652,18,3.614,19,4.33,20,3.056,21,2.866,22,5.051,23,1.789,24,2.348,25,3.571,26,3.359,27,3.219,28,2.348,29,5.701,30,6.591,31,3.219,32,2.186,33,3.056,34,3.977,35,3.571,36,3.977,37,2.718,38,3.745,39,2.866,40,4.28,41,3.056,42,3.132,43,2.813,44,3.977,45,2.251,46,4.327,47,2.675,48,3.571,49,2.207,50,2.924,51,1.99,52,2.987,53,2.718,54,4.137,55,1.607,56,3.433,57,3.535,58,3.745,59,6.591,60,3.977,61,4.33,62,0.789,63,3.977,64,4.33,65,4.072,66,3.571,67,3.571,68,2.813,69,2.374,70,1.448,71,2.127,72,2.813,73,3.977,74,6.591,75,4.33,76,0.993,77,1.441,78,4.33,79,2.764,80,2.055,81,3.977,82,3.977,83,3.056,84,1.85,85,1.625,86,2.866,87,3.571,88,4.33,89,3.571,90,1.837,91,3.977,92,1.974,93,2.186,94,2.461,95,1.682,96,2.005,97,3.977,98,0.554]],["component/1",[3,0.415,4,0.422]],["keyword/1",[0,5.303,1,10.734,62,2.261,76,2.847]],["title/2",[99,59.259,100,29.273]],["name/2",[99,3.171]],["text/2",[0,4.526,2,7.604,3,2.22,4,2.26,99,9.162,100,4.526,101,8.595,102,4.215,103,5.804,104,6.066,105,4.768,106,5.012,107,8.595]],["component/2",[3,0.415,4,0.422]],["keyword/2",[62,2.261,100,5.303,108,7.178]],["title/3-1",[]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["keyword/3-1",[]],["title/3-2",[109,44.663]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["keyword/3-2",[]],["title/3-3",[110,61.912]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["keyword/3-3",[]],["title/3-4",[111,38.883]],["name/3-4",[]],["text/3-4",[]],["component/3-4",[]],["keyword/3-4",[]],["title/3-5",[112,66.03]],["name/3-5",[]],["text/3-5",[]],["component/3-5",[]],["keyword/3-5",[]],["title/3-6",[113,72.03]],["name/3-6",[]],["text/3-6",[]],["component/3-6",[]],["keyword/3-6",[]],["title/3-7",[114,30.239]],["name/3-7",[]],["text/3-7",[]],["component/3-7",[]],["keyword/3-7",[]],["title/3-8",[115,68.694]],["name/3-8",[]],["text/3-8",[]],["component/3-8",[]],["keyword/3-8",[]],["title/3-9",[116,66.03]],["name/3-9",[]],["text/3-9",[]],["component/3-9",[]],["keyword/3-9",[]],["title/3-10",[117,63.812]],["name/3-10",[]],["text/3-10",[]],["component/3-10",[]],["keyword/3-10",[]],["title/3-11",[118,58.774]],["name/3-11",[]],["text/3-11",[]],["component/3-11",[]],["keyword/3-11",[]],["title/3-12",[119,37.13]],["name/3-12",[]],["text/3-12",[]],["component/3-12",[]],["keyword/3-12",[]],["title/3-13",[120,54.108]],["name/3-13",[]],["text/3-13",[]],["component/3-13",[]],["keyword/3-13",[]],["title/3-14",[121,66.03]],["name/3-14",[]],["text/3-14",[]],["component/3-14",[]],["keyword/3-14",[]],["title/3-15",[122,72.03]],["name/3-15",[]],["text/3-15",[]],["component/3-15",[]],["keyword/3-15",[]],["title/3-16",[123,42.042]],["name/3-16",[]],["text/3-16",[]],["component/3-16",[]],["keyword/3-16",[]],["title/3-17",[124,53.16]],["name/3-17",[]],["text/3-17",[]],["component/3-17",[]],["keyword/3-17",[]],["title/3-18",[125,44.188]],["name/3-18",[]],["text/3-18",[]],["component/3-18",[]],["keyword/3-18",[]],["title/3-19",[126,76.497]],["name/3-19",[]],["text/3-19",[]],["component/3-19",[]],["keyword/3-19",[]],["title/3",[127,66.03]],["name/3",[127,2.907]],["text/3",[3,2.106,4,2.387,24,2.609,41,5.035,70,2.387,76,2.499,84,3.048,85,3.192,94,4.055,98,1.393,109,3.826,112,5.657,118,5.035,119,2.145,128,3.048,129,5.035,130,4.084,131,2.452,132,2.734,133,3.636,134,1.951,135,1.976,136,3.709,137,3.358,138,5.304,139,2.988,140,1.996,141,3.786,142,4.723,143,2.58,144,2.303,145,2.161,146,1.903,147,2.844,148,1.951,149,2.893,150,2.341,151,4.636,152,4.922,153,7.135,154,1.915,155,3.185,156,2.265,157,2.734,158,4.215,159,4.811,160,2.553,161,4.811,162,2.476,163,3.185,164,4.811,165,2.734,166,3.319,167,2.734,168,2.476,169,4.419,170,3.319,171,3.481,172,3.481,173,4.811,174,3.02,175,4.811]],["component/3",[3,0.415,4,0.422]],["keyword/3",[62,3.666,127,15.951]],["title/4-1",[0,19.109,2,27.628,3,9.374,4,9.543,176,25.417]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["keyword/4-1",[]],["title/4-2",[177,52.498,178,31.735]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["keyword/4-2",[]],["title/4-3",[140,19.165,179,31.989]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["keyword/4-3",[]],["title/4-4",[3,12.197,4,12.417,180,24.865]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["keyword/4-4",[]],["title/4-5",[158,41.273]],["name/4-5",[]],["text/4-5",[]],["component/4-5",[]],["keyword/4-5",[]],["title/4-6",[140,19.165,158,33.955]],["name/4-6",[]],["text/4-6",[]],["component/4-6",[]],["keyword/4-6",[]],["title/4-7",[98,8.76,181,33.356]],["name/4-7",[]],["text/4-7",[]],["component/4-7",[]],["keyword/4-7",[]],["title/4",[0,21.61,2,31.244,3,10.601,4,10.792]],["name/4",[182,2.587]],["text/4",[0,3.311,2,4.401,3,2.204,4,2.118,17,3.801,20,2.913,23,1.003,24,1.316,38,2.099,40,2.889,50,1.639,51,1.115,55,0.901,62,0.981,69,2.264,76,1.458,77,1.374,80,1.152,83,1.713,92,1.107,96,2.495,98,1.429,102,1.643,104,1.713,106,1.415,125,4.111,127,1.924,130,1.507,133,1.237,140,2.539,141,1.288,144,1.976,145,1.854,146,0.96,149,0.984,150,0.796,156,1.142,158,3.15,160,1.288,162,2.124,165,3.061,166,1.674,167,1.379,168,1.249,169,2.229,170,1.674,171,1.756,172,2.987,176,1.379,179,1.927,180,1.037,181,1.182,183,3.801,184,2.229,185,2.229,186,2.229,187,2.427,188,2.229,189,3.163,190,2.229,191,2.847,192,2.157,193,2.427,194,4.128,195,4.128,196,1.897,197,2.346,198,2.427,199,1.613,200,1.476,201,1.924,202,4.298,203,1.249,204,3.706,205,3.303,206,1.515,207,2.01,208,1.499,209,3.792,210,1.507,211,2.788,212,2.427,213,3.184,214,1.362,215,2.367,216,3.381,217,2.35,218,2.346,219,2.511,220,1.956,221,1.943,222,1.182,223,1.674,224,1.639,225,1.051,226,1.577,227,1.107,228,2.099,229,1.713,230,1.577,231,1.499,232,2.002,233,1.959,234,2.427,235,1.577,236,1.225,237,2.229,238,2.229,239,2.099,240,2.427,241,1.639,242,1.713,243,1.437,244,1.713,245,1.567,246,1.415,247,1.607,248,2.55,249,1.639,250,1.107,251,1.804,252,2.427,253,2.427,254,2.427,255,1.86,256,1.225,257,2.427,258,2.104,259,1.868,260,1.713,261,1.455,262,2.788,263,1.577,264,1.274,265,2.44,266,0.96,267,2.27,268,1.415,269,1.331,270,1.523,271,2.229,272,1.713,273,1.804,274,2.099,275,1.397,276,2.427,277,1.499,278,1.86,279,3.57,280,1.362,281,1.577,282,1.549,283,2.427,284,3.163,285,1.577,286,2.427,287,1.924,288,1.051,289,1.639,290,2.229,291,2.229,292,1.133,293,1.379,294,2.44,295,1.044,296,2.099,297,2.229,298,2.427,299,1.674,300,2.229,301,1.098,302,2.427,303,1.756,304,2.229,305,1.607,306,1.549,307,2.002,308,2.099,309,1.288,310,1.756,311,2.002,312,1.639,313,1.804,314,2.099,315,1.523]],["component/4",[3,0.415,4,0.422]],["keyword/4",[3,1.473,62,1.28,76,1.612,98,0.898,189,9.773,190,6.455,236,3.547]],["title/5-1",[316,66.03]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["keyword/5-1",[]],["title/5-2",[317,63.812]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["keyword/5-2",[]],["title/5-3",[318,60.25]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["keyword/5-3",[]],["title/5-4",[130,30.403]],["name/5-4",[]],["text/5-4",[]],["component/5-4",[]],["keyword/5-4",[]],["title/5",[103,46.266,199,26.776]],["name/5",[103,2.476]],["text/5",[0,3.238,2,3.226,3,2.05,4,2.087,16,2.766,32,2.637,37,3.278,40,2.801,47,3.226,49,2.662,52,3.602,62,1.381,92,3.456,96,4.131,103,3.527,127,4.141,182,3.686,197,2.968,199,3.485,236,2.637,243,1.818,258,5.522,259,2.364,260,3.686,267,4.124,268,3.045,271,4.797,272,3.686,274,4.517,309,4.021,317,4.002,319,5.223,320,5.223,321,4.797,322,5.223,323,3.527,324,3.045,325,5.223,326,5.223,327,4.797,328,5.223,329,4.308,330,4.797,331,3.226,332,5.223,333,3.602,334,5.223,335,7.578,336,3.979,337,6.96,338,3.602,339,3.602,340,3.602,341,2.932,342,5.223,343,2.771,344,4.002,345,3.131,346,6.554,347,4.304,348,3.883,349,5.223,350,5.223,351,4.141,352,4.141,353,4.797,354,3.883,355,4.797,356,3.883,357,5.806,358,4.141]],["component/5",[3,0.415,4,0.422]],["keyword/5",[3,1.881,62,1.635,98,1.147,103,6.059,199,3.507,236,4.53]],["title/6-1",[0,19.109,2,27.628,3,9.374,4,9.543,359,31.564]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["keyword/6-1",[]],["title/6",[96,31.735,359,48.353]],["name/6",[359,2.587]],["text/6",[3,2.394,4,2.437,8,2.712,23,3.3,52,3.875,53,3.527,93,2.836,98,1.587,135,3.279,137,2.644,140,2.234,144,2.689,145,2.524,149,2.278,171,4.065,200,3.418,206,2.931,210,2.915,214,3.154,215,2.469,264,2.95,265,4.72,269,3.081,288,2.434,344,4.305,359,3.965,360,3.321,361,8.534,362,4.634,363,1.976,364,2.685,365,4.177,366,2.12,367,7.985,368,3.471,369,4.455,370,5.508,371,2.784,372,5.392,373,4.859,374,4.177,375,6.907,376,3.922,377,4.859,378,2.487,379,3.234,380,4.177,381,3.013,382,4.177]],["component/6",[3,0.415,4,0.422]],["keyword/6",[62,2.797,199,5.999,359,10.834]],["title/7-1",[366,31.432]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["keyword/7-1",[]],["title/7-2",[345,41.074,383,39.953]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["keyword/7-2",[]],["title/7-3",[119,37.13]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["keyword/7-3",[]],["title/7-4",[111,38.883]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["keyword/7-4",[]],["title/7-5",[109,44.663]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["keyword/7-5",[]],["title/7-6",[71,24.843,98,6.467,202,28.057,243,17.611]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["keyword/7-6",[]],["title/7-7",[384,72.03]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["keyword/7-7",[]],["title/7-8",[385,56.514,386,42.323]],["name/7-8",[]],["text/7-8",[]],["component/7-8",[]],["keyword/7-8",[]],["title/7-9",[387,62.934,388,39.432]],["name/7-9",[]],["text/7-9",[]],["component/7-9",[]],["keyword/7-9",[]],["title/7",[259,31.007,260,48.353]],["name/7",[259,1.003,260,1.564]],["text/7",[0,0.702,2,0.54,3,1.76,4,2.103,12,0.958,16,2.449,17,0.616,20,0.616,26,0.445,28,1.261,32,0.441,47,0.54,49,1.185,51,1.069,55,0.863,57,0.468,62,1.81,69,0.901,70,0.292,71,0.429,76,1.35,77,1.852,84,0.373,85,1.958,90,0.697,93,0.441,95,1.141,98,1.27,102,0.348,105,0.911,108,1.189,109,2.597,111,3.536,116,0.692,118,0.616,119,3.974,121,2.328,125,0.463,128,2.968,129,1.641,130,3.478,131,0.445,133,2.029,134,1.614,135,1.988,137,0.411,139,1.667,140,1.805,142,1.088,143,0.468,146,0.345,148,0.943,149,2.256,150,2.279,154,1.387,155,1.088,156,0.773,157,0.496,160,1.234,162,0.449,165,0.496,168,1.511,178,1.614,180,0.994,192,3.106,199,1.362,202,1.29,203,0.449,210,1.905,211,0.59,215,0.384,216,0.548,217,1.015,220,1.066,221,1.382,222,1.429,223,1.133,224,0.59,225,1.008,233,0.414,236,0.829,243,1.543,245,2.233,246,3.431,250,1.589,258,0.445,261,0.524,264,0.863,266,0.345,268,0.509,270,0.548,275,0.503,292,1.371,293,1.322,295,1.499,305,0.578,313,1.729,324,0.509,331,0.54,339,0.602,341,0.49,345,0.524,347,0.422,360,0.971,363,1.4,364,0.987,366,2.332,370,0.602,371,0.814,374,0.649,375,0.755,378,1.542,383,1.356,384,3.014,389,0.873,390,0.669,391,0.911,392,1.489,393,0.873,394,0.958,395,1.109,396,0.922,397,1.29,398,2.376,399,0.845,400,0.755,401,1.189,402,1.259,403,0.72,404,0.873,405,0.873,406,0.873,407,0.616,408,0.873,409,0.616,410,0.873,411,0.873,412,1.394,413,0.669,414,0.873,415,0.437,416,0.755,417,1.643,418,0.873,419,0.463,420,1.405,421,0.616,422,0.516,423,0.755,424,0.755,425,1.303,426,0.802,427,0.755,428,1.159,429,3.656,430,2.378,431,1.088,432,0.454,433,0.669,434,1.627,435,2.763,436,0.558,437,3.032,438,0.509,439,0.632,440,1.415,441,4.081,442,1.571,443,0.873,444,0.971,445,1.309,446,1.049,447,0.793,448,1.944,449,3.003,450,1.421,451,0.8,452,0.649,453,3.003,454,1.221,455,0.484,456,0.755,457,0.755,458,0.692,459,0.578,460,2.021,461,1.339,462,1.489,463,1.259,464,1.911,465,1.221,466,1.654,467,0.649,468,0.755,469,1.031,470,0.459,471,1.303,472,1.221,473,0.802,474,0.59,475,0.767,476,0.54,477,0.837,478,1.189,479,1.375,480,1.037,481,1.643,482,3.657,483,0.578,484,0.692,485,1.303,486,0.602,487,1.061,488,0.558,489,0.786,490,1.067,491,1.067,492,0.616,493,0.405,494,0.578,495,0.602,496,3.352,497,0.445,498,0.755,499,1.811,500,0.845,501,0.616,502,0.531,503,0.429,504,0.72,505,0.873,506,0.743,507,0.881,508,1.405,509,1.022,510,0.72,511,0.755,512,0.72,513,0.72,514,0.602,515,1.015,516,0.873,517,0.802,518,0.985,519,0.802,520,0.873,521,1.159,522,0.999,523,0.72,524,0.873,525,0.616,526,0.873,527,1.109,528,0.449,529,1.133,530,0.985,531,1.031,532,1.221,533,0.632,534,0.632,535,0.669,536,0.692,537,0.468,538,1.759,539,1.015,540,1.905,541,0.881,542,0.414,543,0.373,544,0.411,545,0.496,546,1.643,547,0.755,548,0.72,549,0.484,550,0.558,551,0.802,552,0.54,553,0.945,554,0.437,555,0.616,556,2.892,557,1.394,558,2.541,559,0.72,560,0.755,561,0.786,562,0.922,563,1.329,564,1.509,565,0.669,566,1.356,567,1.303,568,1.421,569,0.669,570,1.509,571,0.702,572,1.272,573,1.189,574,2.326,575,2.874,576,0.692,577,1.109,578,0.422,579,0.873,580,0.425,581,0.72,582,1.049,583,1.303,584,0.873,585,0.59,586,0.524,587,0.632,588,0.958,589,0.873,590,0.468,591,0.72,592,0.548,593,0.578,594,0.602,595,0.578,596,0.669,597,0.802,598,0.873,599,0.873,600,0.524,601,1.643,602,0.632,603,0.999,604,0.602,605,0.602,606,0.463,607,0.873,608,0.449,609,0.632,610,0.692]],["component/7",[3,0.415,4,0.422]],["keyword/7",[0,2.467,2,3.567,3,1.21,4,1.232,109,3.097,111,2.696,119,2.574,259,2.613,260,4.075,366,2.179]],["title/8-1",[76,7.617,135,13.631,179,15.5,210,12.12,216,20.838,218,18.866,371,16.453,611,21.977]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["keyword/8-1",[]],["title/8-2",[23,10.211,76,9.616,102,9.832,128,10.557,179,11.536,210,9.02,333,17.043,371,12.245,612,21.37,613,19.59,614,14.22]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["keyword/8-2",[]],["title/8-3",[41,17.437,98,5.359,110,18.368,140,6.911,144,11.824,179,11.536,180,10.557,205,12.843,206,9.069,301,11.182,371,12.245]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["keyword/8-3",[]],["title/8-4",[0,9.922,3,4.867,4,4.955,140,6.496,162,11.952,179,10.843,251,17.265,269,12.734,371,11.509,615,17.265,616,16.019,617,12.734,618,17.265]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["keyword/8-4",[]],["title/8-5",[619,50.935,620,54.323]],["name/8-5",[]],["text/8-5",[]],["component/8-5",[]],["keyword/8-5",[]],["title/8",[0,17.127,2,24.762,3,8.401,4,8.553,140,11.213,179,18.716]],["name/8",[140,0.62,179,1.035]],["text/8",[0,2.912,2,1.193,3,2.156,4,2.225,5,2.002,12,1.126,17,1.363,20,1.363,21,2.242,22,2.596,23,0.798,28,1.837,39,1.278,51,0.887,55,1.257,62,1.128,69,1.857,71,0.948,76,1.564,77,0.643,79,1.232,84,1.934,95,1.316,97,1.773,98,1.35,100,1.447,102,2.712,109,1.035,110,1.435,111,1.582,119,2.76,125,1.024,128,3.503,130,2.26,131,0.984,132,1.925,133,0.984,135,3.367,140,1.907,144,0.924,145,0.867,146,1.34,149,3.465,150,1.111,154,1.348,156,0.909,158,0.957,162,3.185,163,2.242,168,1.743,174,2.126,177,1.479,179,2.113,180,0.825,181,0.94,192,0.773,201,1.531,203,0.994,205,3.819,210,3.331,211,2.287,213,1.141,214,1.084,216,2.126,218,1.097,219,1.174,220,1.23,221,2.13,222,3.013,225,1.467,226,2.201,227,2.064,236,2.285,243,2.155,245,0.733,248,1.193,250,2.064,251,1.435,255,1.479,256,0.975,262,1.304,266,0.764,269,2.983,270,2.126,275,1.111,280,1.902,294,1.141,301,0.874,306,1.232,310,1.397,312,1.304,323,1.304,333,1.332,343,2.886,347,0.932,359,2.391,363,1.192,364,0.649,365,1.435,370,1.332,371,0.957,372,1.304,377,1.67,383,1.126,391,1.071,392,0.825,394,1.126,398,1.817,407,1.363,409,1.363,419,1.024,429,0.957,430,0.948,432,1.004,434,0.901,437,1.769,438,1.126,449,1.111,454,1.014,463,1.479,465,2.518,475,0.901,493,0.894,496,0.854,498,0.887,499,1.004,502,1.174,529,1.332,544,0.909,549,1.071,552,1.193,580,1.649,608,0.994,611,2.996,613,1.531,614,1.95,616,3.752,617,1.059,618,1.435,621,2.287,622,1.773,623,1.879,624,1.773,625,1.479,626,1.479,627,1.931,628,1.743,629,1.931,630,1.773,631,1.773,632,2.983,633,1.592,634,1.035,635,1.111,636,1.212,637,1.397,638,0.916,639,1.531,640,1.479,641,1.531,642,1.363,643,1.232,644,1.435,645,1.111,646,1.084,647,1.157,648,1.097,649,1.111,650,3.194,651,1.67,652,1.193,653,1.931,654,1.332,655,1.592,656,1.304,657,1.479,658,1.141,659,2.287,660,1.931,661,1.67,662,1.397,663,1.773,664,1.363,665,1.479,666,1.435,667,1.975,668,1.479,669,1.931,670,1.931,671,2.93,672,1.931,673,1.435,674,2.713,675,1.931,676,1.931,677,1.278,678,0.909,679,1.071,680,1.773,681,1.014,682,1.479,683,1.592,684,1.363,685,2.096,686,2.223,687,1.435,688,1.254,689,1.531,690,1.773,691,1.332,692,1.014,693,1.363,694,1.363,695,1.773,696,1.004,697,0.975,698,1.67,699,1.332,700,1.773,701,1.193,702,1.304,703,1.254,704,1.931,705,1.531,706,1.397,707,0.916,708,1.592,709,1.479,710,1.126]],["component/8",[3,0.415,4,0.422]],["keyword/8",[62,1.635,140,2.51,179,7.415,199,3.507,711,8.973]],["title/9-1",[98,10.647]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["keyword/9-1",[]],["title/9-2",[171,49.568,712,59.259]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["keyword/9-2",[]],["title/9-3",[76,10.262,140,12.511,343,23.731,491,29.059,713,21.226]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["keyword/9-3",[]],["title/9-4",[76,10.262,140,12.511,262,30.202,713,21.226,714,31.564]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["keyword/9-4",[]],["title/9-5",[98,7.441,285,37.811,397,32.282]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["keyword/9-5",[]],["title/9-6",[3,12.197,4,12.417,715,42.103]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["keyword/9-6",[]],["title/9-7",[24,27.424,98,6.467,215,22.225,233,24.004]],["name/9-7",[]],["text/9-7",[]],["component/9-7",[]],["keyword/9-7",[]],["title/9-8",[98,6.467,282,32.286,716,34.155,717,35.696]],["name/9-8",[]],["text/9-8",[]],["component/9-8",[]],["keyword/9-8",[]],["title/9-9",[0,19.109,2,27.628,3,9.374,4,9.543,168,23.018]],["name/9-9",[]],["text/9-9",[]],["component/9-9",[]],["keyword/9-9",[]],["title/9-10",[0,17.127,2,24.762,3,8.401,4,8.553,98,5.125,718,40.085]],["name/9-10",[]],["text/9-10",[]],["component/9-10",[]],["keyword/9-10",[]],["title/9-11",[119,30.547,437,26.776]],["name/9-11",[]],["text/9-11",[]],["component/9-11",[]],["keyword/9-11",[]],["title/9-12",[71,28.584,98,7.441,134,23.594]],["name/9-12",[]],["text/9-12",[]],["component/9-12",[]],["keyword/9-12",[]],["title/9-13",[77,19.374,98,7.441,719,44.592]],["name/9-13",[]],["text/9-13",[]],["component/9-13",[]],["keyword/9-13",[]],["title/9-14",[76,11.605,98,6.467,686,24.843,713,24.004]],["name/9-14",[]],["text/9-14",[]],["component/9-14",[]],["keyword/9-14",[]],["title/9-15",[98,8.76,537,36.744]],["name/9-15",[]],["text/9-15",[]],["component/9-15",[]],["keyword/9-15",[]],["title/9-16",[0,14.184,2,20.508,3,6.958,4,7.083,98,4.244,119,14.801,495,22.9,720,22.418]],["name/9-16",[]],["text/9-16",[]],["component/9-16",[]],["keyword/9-16",[]],["title/9",[0,19.109,2,27.628,3,9.374,4,9.543,262,30.202]],["name/9",[262,2.476]],["text/9",[0,4.42,2,6.079,3,2.222,4,2.386,5,0.489,8,0.753,11,0.47,16,0.302,22,0.634,23,1.159,24,0.448,28,0.448,36,0.759,40,1.188,42,0.598,50,1.054,51,0.38,55,0.579,62,1.09,66,1.287,69,0.855,70,2.092,76,2.003,77,3.426,79,0.528,83,0.584,85,2.442,92,0.711,94,0.47,95,0.321,96,0.383,98,1.521,102,0.621,104,0.584,105,0.459,108,2.377,109,1.188,111,1.782,116,2.223,119,3.2,121,2.223,123,0.417,124,0.528,125,0.439,128,0.353,130,2.692,131,0.795,132,0.887,134,1.889,135,2.335,136,0.43,137,0.389,139,0.653,140,2.062,145,1.259,148,0.335,149,1.889,150,1.529,151,1.439,152,0.57,154,1.116,155,1.466,156,1.32,158,2.493,160,0.439,162,1.14,163,1.033,165,0.47,168,0.426,171,1.129,172,1.602,177,0.634,180,1.198,181,0.76,183,0.584,192,0.625,196,0.717,199,1.096,201,0.656,202,1.85,203,0.803,204,0.482,205,0.811,206,0.573,207,1.078,208,0.511,210,1.023,213,0.489,214,0.464,215,0.973,217,0.966,218,1.593,220,1.546,221,1.57,222,1.365,223,0.57,225,0.96,227,0.711,233,1.051,236,1.415,239,1.349,245,1.266,247,0.547,251,1.16,259,1.509,262,1.496,266,0.876,267,0.658,269,0.855,270,0.519,275,0.476,279,0.715,282,0.528,288,0.676,292,1.557,293,0.47,294,0.489,301,0.374,313,0.615,340,0.57,341,0.464,343,0.439,347,2.428,348,1.16,360,0.489,363,2.001,364,1.121,366,0.312,368,0.511,378,2.063,383,1.635,386,0.511,391,0.459,392,1.631,394,0.482,395,0.558,397,1.555,398,1.788,401,0.598,403,0.682,419,0.439,434,0.386,435,0.656,437,0.866,445,0.369,446,0.528,447,0.399,449,0.476,451,1.078,454,0.434,456,1.349,462,0.667,464,1.829,465,0.615,470,0.434,480,0.369,491,1.014,493,0.383,494,0.547,495,2.937,496,0.366,497,1.7,499,0.43,503,0.406,506,0.374,514,0.57,515,1.223,518,1.328,521,0.584,522,0.949,528,0.426,532,2.004,538,0.417,540,2.571,543,0.353,544,1.57,545,0.47,552,0.511,554,0.78,561,0.396,570,0.759,571,0.353,573,1.602,578,0.753,586,0.496,590,0.443,594,0.57,613,0.656,614,1.275,617,0.855,633,0.682,636,0.979,637,0.598,645,1.919,650,0.584,652,0.511,661,0.715,665,0.634,667,0.482,685,0.383,686,0.766,694,0.584,697,0.417,706,1.602,707,0.74,713,1.33,715,2.413,716,1.054,717,0.584,719,1.195,721,0.922,722,0.715,723,0.827,724,0.827,725,0.57,726,0.715,727,0.827,728,0.558,729,0.715,730,0.827,731,0.922,732,1.349,733,2.035,734,0.827,735,0.615,736,1.195,737,0.615,738,0.656,739,0.682,740,0.827,741,0.827,742,0.827,743,0.547,744,0.584,745,1.56,746,0.715,747,1.287,748,0.682,749,0.827,750,0.482,751,0.759,752,0.682,753,0.827,754,0.615,755,0.827,756,0.827,757,0.964,758,1.39,759,0.827,760,0.827,761,0.715,762,0.759,763,0.715,764,0.615,765,0.827,766,0.715,767,0.827,768,0.519,769,0.656,770,0.715,771,2.925,772,1.237,773,0.682,774,0.519,775,0.399,776,0.496,777,0.57,778,0.682,779,0.682,780,0.715,781,0.759,782,0.827,783,0.759,784,2.575,785,0.759,786,0.759,787,0.759,788,2.803,789,0.827,790,0.827,791,1.555,792,0.827,793,0.827,794,0.827,795,1.827,796,0.827,797,0.827,798,0.827,799,0.489,800,0.827,801,0.827,802,0.827,803,0.827,804,0.827,805,2.035,806,0.827,807,0.827,808,1.56,809,0.598,810,0.827,811,0.827,812,1.349,813,0.759,814,0.615,815,1.496,816,0.496,817,1.078,818,0.519,819,0.78,820,0.489,821,0.91,822,0.759,823,1.555,824,1.647,825,0.598,826,0.547,827,1.129,828,0.682,829,1.076,830,0.476,831,0.615,832,1.647,833,0.598,834,0.503,835,0.827,836,0.57,837,0.634,838,0.715,839,0.426,840,0.827,841,1.433,842,0.715,843,0.682,844,0.682,845,1.978,846,1.56,847,1.16,848,0.715,849,0.511,850,1.16,851,1.827,852,0.715,853,0.979,854,0.759,855,0.827,856,0.656,857,0.91,858,0.759,859,0.827,860,0.827,861,0.598,862,0.656,863,0.827,864,0.759,865,0.558,866,0.682,867,0.827]],["component/9",[3,0.415,4,0.422]],["keyword/9",[62,2.797,76,3.522,262,10.366]],["title/10",[817,33.356,868,52.498]],["name/10",[817,1.785]],["text/10",[4,2.358,26,1.765,37,2.174,39,2.293,40,2.969,55,1.285,62,1.26,69,3.036,70,1.159,71,1.701,77,3.068,98,0.708,131,1.765,139,2.897,140,2.706,141,1.838,145,3.882,150,1.136,168,1.782,172,4.006,180,4.134,218,1.968,224,2.339,227,2.525,236,2.795,259,1.567,264,1.819,293,1.968,343,1.838,363,1.948,366,2.09,383,2.019,386,2.139,398,1.857,429,3.428,430,3.398,434,4.035,445,1.544,446,2.211,453,1.993,455,3.071,475,1.617,480,1.544,532,2.907,540,4.63,573,2.506,590,1.857,594,2.389,603,2.107,605,2.389,616,2.389,628,2.85,636,2.174,641,2.746,656,2.339,719,5.301,772,4.39,816,3.319,817,5.604,818,6.814,819,1.732,820,2.047,827,5.005,868,2.654,869,2.995,870,2.139,871,2.575,872,6.416,873,3.181,874,5.086,875,2.746,876,6.852,877,6.836,878,2.654,879,2.506,880,3.463,881,3.463,882,4.789,883,4.789,884,6.918,885,5.301,886,4.39,887,2.339,888,3.181,889,2.047,890,2.389,891,2.995,892,2.995,893,2.339]],["component/10",[3,0.415,4,0.422]],["keyword/10",[4,2.648,62,2.261,719,9.509,817,6.042]],["title/11-1",[83,48.353,830,39.432]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["keyword/11-1",[]],["title/11",[98,7.441,685,26.956,686,28.584]],["name/11",[98,0.203,685,0.735,686,0.78]],["text/11",[0,1.159,4,0.967,8,1.309,16,0.99,23,1.874,46,1.471,55,2.168,62,1.383,71,1.332,76,2.096,79,1.731,84,2.916,85,1.018,92,1.237,94,1.541,95,1.054,98,1.516,102,1.079,108,1.547,109,2.431,111,2.727,114,0.985,119,1.209,128,1.159,130,4.146,134,2.767,135,3.75,140,1.909,149,3.847,150,1.488,154,1.079,162,2.333,167,1.541,192,1.815,199,1.06,210,0.99,220,0.985,227,1.237,243,2.034,248,2.801,265,1.603,267,1.143,270,5.152,292,1.266,293,1.541,295,3.531,301,2.052,347,1.309,364,0.912,370,1.871,392,1.159,397,2.515,415,4.746,420,1.298,434,1.266,437,2.283,447,2.188,451,1.321,460,4.165,461,1.561,462,1.937,466,1.287,480,1.209,487,2.664,489,1.298,491,2.946,496,3.633,500,1.396,506,2.052,507,1.455,508,3.266,515,1.183,527,1.832,532,2.381,543,1.159,552,1.675,561,1.298,581,3.74,592,1.703,614,2.609,632,1.487,638,1.287,652,1.675,685,4.396,686,4.811,694,1.914,775,1.309,776,1.626,820,1.603,830,3.928,894,3.001,895,2.151,896,1.832,897,2.078,898,2.712,899,2.491,900,1.796,901,1.962,902,2.801,903,1.914,904,3.37,905,2.712,906,2.237,907,2.016,908,1.703,909,1.344,910,1.962,911,2.016,912,2.237,913,2.846,914,1.832,915,2.712,916,2.078,917,1.914,918,2.712,919,1.675,920,1.487,921,4.534,922,2.381,923,2.491,924,2.151,925,2.712]],["component/11",[3,0.415,4,0.422]],["keyword/11",[62,1.155,98,0.81,109,3.4,111,2.96,135,2.603,270,3.979,685,2.936,686,3.114,897,4.857]],["title/12-1",[98,5.718,215,19.653,216,28.074,217,19.513,926,25.107]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["keyword/12-1",[]],["title/12-2",[98,8.76,489,32.789]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["keyword/12-2",[]],["title/12-3",[98,8.76,926,38.461]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["keyword/12-3",[]],["title/12",[98,8.76,181,33.356]],["name/12",[98,0.283,181,1.079]],["text/12",[0,0.811,16,1.219,28,1.03,49,0.968,51,3.102,55,0.705,62,1.602,68,1.234,76,0.436,77,2.039,85,1.253,92,0.866,96,0.88,98,1.483,100,1.426,102,1.778,108,3.626,114,3.08,123,0.959,125,2.37,128,2.297,130,2.825,131,1.701,133,0.968,134,1.353,135,1.371,136,1.735,140,1.713,141,1.008,143,1.018,147,1.122,148,2.483,150,1.095,154,1.328,156,1.571,158,0.941,165,2.539,167,1.079,181,1.625,191,2.303,192,4.099,197,1.897,200,1.155,207,1.625,210,1.219,214,2.508,215,3.4,216,3.844,217,3.835,221,0.894,225,0.823,233,1.584,243,0.661,245,2.562,250,0.866,255,1.455,266,0.751,267,0.8,269,1.831,273,1.412,291,1.744,301,0.859,305,2.21,309,1.008,324,1.107,339,1.31,360,1.973,364,1.122,378,0.84,391,1.053,392,0.811,420,0.909,436,2.131,437,0.742,438,1.107,445,0.847,447,0.916,460,1.522,462,2.297,480,1.992,489,4.745,493,0.88,506,1.511,507,1.79,509,0.834,515,0.828,519,1.744,521,1.34,523,1.566,528,1.718,534,2.415,535,2.558,538,0.959,542,2.551,554,0.95,555,1.34,561,2.138,562,1.066,563,0.859,569,1.455,571,0.811,578,0.916,580,0.924,585,1.282,586,1.138,632,1.041,638,3.203,658,2.641,659,1.282,685,0.88,686,0.933,694,1.34,775,0.916,776,2.001,816,1.138,819,0.95,825,1.374,831,1.412,834,2.031,857,1.107,870,1.173,872,1.212,890,1.31,894,1.257,895,1.506,903,1.34,917,1.34,919,1.173,926,4.344,927,1.921,928,2.754,929,1.744,930,1.744,931,1.744,932,1.744,933,1.257,934,1.899,935,1.744,936,1.122,937,1.173,938,1.008,939,0.941,940,1.566,941,1.234,942,2.356,943,1.192,944,1.455,945,3.338,946,1.412,947,1.506,948,1.455,949,8.483,950,1.455,951,3.338,952,3.338,953,1.455,954,5.376,955,1.412,956,1.455,957,2.415,958,2.415,959,1.642,960,2.887,961,4.263,962,3.338,963,2.415,964,3.338,965,3.375,966,1.34,967,1.642,968,1.744,969,2.647,970,2.754,971,1.899,972,2.095,973,3.338,974,2.754,975,1.899,976,2.754,977,1.566,978,1.506,979,1.642,980,1.642,981,1.744,982,0.959,983,1.31,984,3.338,985,3.338,986,3.338,987,1.744,988,3.338,989,1.744]],["component/12",[3,0.415,4,0.422]],["keyword/12",[62,1.898,98,1.332,125,5.527,158,5.162,215,4.577]],["title/13-1",[98,7.441,154,23.159,990,58.196]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["keyword/13-1",[]],["title/13-2",[9,38.684,98,5.718,154,17.798,550,28.549,991,44.725]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["keyword/13-2",[]],["title/13-3",[618,61.912]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["keyword/13-3",[]],["title/13-4",[4,5.632,76,6.056,98,3.375,154,10.504,708,21.772,827,19.096,992,22.83,993,19.623,994,26.395,995,20.928,996,24.246]],["name/13-4",[]],["text/13-4",[]],["component/13-4",[]],["keyword/13-4",[]],["title/13-5",[618,61.912]],["name/13-5",[]],["text/13-5",[]],["component/13-5",[]],["keyword/13-5",[]],["title/13-6",[243,28.996]],["name/13-6",[]],["text/13-6",[]],["component/13-6",[]],["keyword/13-6",[]],["title/13",[98,8.76,154,27.265]],["name/13",[98,0.283,154,0.882]],["text/13",[0,0.865,3,0.424,4,1.361,8,0.977,16,2.053,23,3.94,47,2.181,51,0.931,62,0.643,67,1.67,70,1.181,76,1.29,77,0.674,79,1.292,85,3.578,98,1.271,108,3.327,111,2.626,130,2.558,132,2.007,134,0.821,137,0.953,140,0.988,149,1.904,150,2.299,154,4.344,157,1.151,162,1.042,178,0.938,180,0.865,192,2.806,206,0.743,210,1.289,214,1.982,219,1.232,236,1.022,243,1.635,245,2.422,246,1.181,250,1.61,267,0.853,270,1.271,292,1.649,295,2.419,309,1.074,363,1.242,364,2.686,376,0.994,386,1.251,392,0.865,398,1.086,420,3.053,434,1.649,445,0.903,451,1.719,460,3.196,462,2.403,466,2.669,493,0.938,496,3.336,498,1.623,499,2.923,502,4.263,506,3.616,507,1.894,508,2.691,509,2.471,515,1.541,532,1.854,538,1.783,540,0.969,541,1.086,542,1.676,552,1.251,553,1.165,556,3.316,557,3.371,558,5.101,561,2.691,563,2.887,571,0.865,572,2.034,587,2.555,588,1.181,590,1.086,593,1.34,595,1.34,600,1.214,608,1.042,618,1.505,643,1.292,645,1.165,659,2.385,684,1.429,708,1.67,766,1.751,773,1.67,826,2.338,827,2.555,834,2.148,839,1.042,844,1.67,887,2.385,903,1.429,912,1.67,922,5.007,936,1.197,995,1.605,997,2.025,998,3.244,999,3.531,1000,3.638,1001,2.025,1002,1.86,1003,1.67,1004,1.86,1005,1.465,1006,2.025,1007,1.86,1008,2.555,1009,2.025,1010,1.292,1011,1.67,1012,1.605,1013,2.025,1014,2.025,1015,1.86,1016,2.555,1017,2.913,1018,3.531,1019,3.054,1020,3.054,1021,2.492,1022,4.864,1023,2.913,1024,4.639,1025,3.244,1026,2.913,1027,3.244,1028,3.244,1029,4.864,1030,3.054,1031,3.244,1032,1.232,1033,1.751,1034,1.751,1035,7.008,1036,3.531,1037,2.025,1038,2.025,1039,1.367,1040,2.025,1041,1.86,1042,2.025,1043,2.025,1044,2.025,1045,1.86,1046,1.751,1047,1.67]],["component/13",[3,0.415,4,0.422]],["keyword/13",[62,1.635,76,2.059,98,1.147,109,4.812,111,4.19,154,3.571]],["title/14-1",[345,34.888,363,20.472,1000,28.089]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["keyword/14-1",[]],["title/14-2",[98,8.76,479,40.499]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["keyword/14-2",[]],["title/14-3",[479,40.499,1048,43.735]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["keyword/14-3",[]],["title/14-4",[18,27.734,57,27.125,167,28.743,479,29.897]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["keyword/14-4",[]],["title/14-5",[98,7.441,685,26.956,686,28.584]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["keyword/14-5",[]],["title/14-6",[70,22.92,364,23.033]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["keyword/14-6",[]],["title/14-7",[221,32.249,222,33.356]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["keyword/14-7",[]],["title/14-8",[77,22.809,98,8.76]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["keyword/14-8",[]],["title/14",[98,8.76,922,35.977]],["name/14",[98,0.283,922,1.164]],["text/14",[0,0.493,3,1.22,5,1.259,16,1.347,18,2.023,23,1.787,31,0.858,37,0.724,45,0.6,46,0.626,51,0.979,55,0.428,57,3.337,62,0.388,68,3.172,70,1.234,76,0.265,77,1.439,85,1.385,90,0.49,92,0.526,95,0.448,98,1.528,100,0.493,102,0.459,108,3.655,109,0.619,111,0.539,128,0.493,130,2.524,134,1.202,135,0.474,137,1.396,139,0.483,140,2.291,148,0.468,149,0.468,150,1.602,151,0.75,154,0.459,160,0.612,162,0.594,178,0.986,180,0.493,192,1.477,199,0.451,200,1.296,207,1.037,210,2.272,211,0.779,219,0.702,220,0.419,221,0.543,225,0.923,227,0.526,231,0.713,236,0.583,243,1.7,245,0.808,250,3.636,259,0.522,264,1.118,266,0.456,267,0.898,288,0.5,292,3.228,293,0.656,295,1.587,338,0.796,339,1.469,343,0.612,345,0.692,347,1.028,363,1.043,364,2.681,378,1.313,388,0.664,392,3.665,397,2.047,398,1.142,407,2.604,409,3.446,415,1.483,431,0.764,434,0.994,441,1.296,444,0.682,446,3.433,447,0.557,451,1.444,454,0.606,458,0.915,459,1.41,460,2.226,461,1.226,462,1.267,466,1.011,474,0.779,476,3.323,479,1.259,490,0.75,493,1.709,494,0.764,496,0.943,497,1.512,499,1.542,500,0.594,503,0.567,506,1.67,507,1.142,508,1.766,509,0.507,514,2.046,515,0.503,518,0.692,527,1.438,530,1.277,533,1.541,538,2.183,540,1.019,541,1.142,542,2.553,543,0.91,544,1.737,545,0.656,550,0.737,553,0.664,556,1.107,557,0.692,561,1.419,562,0.648,566,1.242,577,1.438,580,0.562,581,0.952,588,1.242,590,1.591,602,0.835,614,2.81,617,1.168,623,0.64,628,2.225,634,1.142,638,1.408,646,0.648,647,0.692,649,0.664,659,1.438,684,1.503,685,2.003,686,2.398,688,0.75,707,0.548,713,0.548,726,1.842,731,0.682,735,0.858,743,0.764,744,0.814,747,0.952,757,3.016,758,1.337,768,1.337,775,2.087,791,1.645,816,3.73,819,2.442,826,0.764,828,0.952,839,1.526,850,1.583,852,0.998,878,0.884,889,1.753,895,0.915,896,1.438,902,0.713,904,2.205,922,4.837,938,1.13,982,1.075,993,1.583,995,0.915,1000,3.003,1004,1.06,1032,0.702,1048,3.972,1049,1.154,1050,1.438,1051,0.998,1052,6.584,1053,1.337,1054,1.632,1055,0.814,1056,1.757,1057,0.764,1058,2.92,1059,3.313,1060,1.503,1061,5.349,1062,3.044,1063,1.956,1064,1.842,1065,1.689,1066,1.963,1067,1.06,1068,1.06,1069,5.349,1070,1.06,1071,1.06,1072,4.485,1073,1.06,1074,1.06,1075,0.724,1076,1.583,1077,1.154,1078,0.952,1079,2.13,1080,2.13,1081,1.154,1082,1.154,1083,1.689,1084,0.884,1085,1.06,1086,0.998,1087,1.154,1088,1.154,1089,1.154,1090,0.998,1091,0.884,1092,1.06,1093,0.952,1094,0.858,1095,1.06,1096,1.06,1097,0.884,1098,0.998,1099,2.724,1100,1.06,1101,1.06,1102,1.06,1103,0.998,1104,1.296,1105,1.956,1106,1.06,1107,0.915,1108,0.713,1109,1.06,1110,0.737,1111,1.06,1112,1.06,1113,1.06,1114,1.06,1115,1.06,1116,1.06,1117,1.06,1118,1.06,1119,1.06,1120,0.952,1121,0.952,1122,1.06,1123,0.702,1124,1.06,1125,1.06,1126,3.69,1127,1.154,1128,1.384,1129,1.06,1130,0.952,1131,1.154,1132,2.966,1133,1.06,1134,1.154,1135,1.154,1136,1.503,1137,1.154,1138,1.583,1139,1.154,1140,0.612,1141,0.858,1142,0.998,1143,0.998]],["component/14",[3,0.415,4,0.422]],["keyword/14",[62,1.898,98,1.332,407,7.351,409,7.351,922,5.469]],["title/15-1",[366,31.432]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["keyword/15-1",[]],["title/15-2",[453,47.93]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["keyword/15-2",[]],["title/15-3",[243,28.996]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["keyword/15-3",[]],["title/15",[62,9.216,106,29.494,236,25.534,1012,40.102]],["name/15",[106,1.292,1012,1.757]],["text/15",[4,1.784,28,2.85,39,2.149,45,1.688,54,3.3,62,2.147,71,2.582,76,1.206,77,1.081,84,1.387,90,1.378,93,1.639,95,1.261,98,0.973,100,1.387,106,4.44,108,1.794,119,1.448,132,1.845,134,2.131,135,3.434,139,1.359,140,2.13,141,3.514,144,1.554,148,1.316,149,1.316,183,2.291,213,1.919,214,1.823,227,1.481,235,2.109,236,2.654,243,2.306,275,1.869,288,1.406,293,2.987,347,1.567,363,1.142,384,2.808,397,1.801,398,5.263,401,2.349,429,3.773,430,5.501,432,1.688,437,2.589,440,1.975,444,1.919,449,4.813,451,2.559,453,5.994,454,1.705,455,1.801,470,1.705,475,1.516,486,2.239,493,1.504,499,1.688,509,1.427,538,2.654,540,2.516,541,2.819,542,1.541,571,1.387,572,2.869,573,3.803,595,2.149,596,5.075,597,6.084,603,1.975,636,2.038,637,2.349,713,2.495,758,2.038,774,2.038,799,1.919,875,4.168,885,5.075,893,2.192,1011,2.678,1012,7.78,1123,3.198,1144,2.982,1145,2.192,1146,2.006,1147,3.247,1148,3.247,1149,3.247,1150,3.247,1151,3.247,1152,3.247,1153,3.247,1154,2.808,1155,2.349,1156,2.808,1157,6.623,1158,3.48,1159,3.247,1160,3.247,1161,2.038,1162,3.247,1163,2.982,1164,3.247,1165,2.488,1166,2.808,1167,2.072,1168,2.808,1169,2.982,1170,2.349,1171,3.247]],["component/15",[3,0.415,4,0.422]],["keyword/15",[62,2.261,76,2.847,106,7.237,1012,9.84]],["title/16",[366,25.859,1172,56.514]],["name/16",[366,0.836,1172,1.828]],["text/16",[4,1.36,12,1.422,26,1.243,28,2.247,62,2.019,76,0.559,77,2.122,90,1.035,96,2.504,102,0.97,104,1.721,105,1.353,108,2.976,116,3.286,121,3.286,128,3.885,130,1.973,135,1.001,136,1.267,137,1.148,140,1.998,141,1.294,150,2.344,162,3.998,180,1.042,192,3.11,197,3.072,218,1.386,220,0.885,221,1.148,222,1.187,225,1.056,227,1.112,236,2.729,243,1.443,263,1.584,264,1.28,281,1.584,282,5.567,295,3.752,336,1.28,363,2.915,366,1.564,397,1.353,398,2.223,401,1.764,419,1.294,429,3.85,430,4.069,433,4.142,437,2.792,453,1.403,460,2.465,462,2.309,466,2.565,475,1.139,500,1.255,509,3.413,539,2.56,540,3.419,543,1.042,590,1.308,600,1.462,603,1.483,605,1.682,622,2.24,628,2.133,667,1.422,685,1.129,697,1.231,720,1.647,721,1.441,758,1.531,772,1.933,817,4.246,818,3.393,819,1.22,820,4.592,826,1.614,834,1.483,849,2.56,869,2.109,870,3.339,872,2.646,877,3.585,889,1.441,903,1.721,909,3.159,922,3.751,936,1.441,966,1.721,968,2.24,1000,3.077,1050,1.647,1154,2.109,1172,8.2,1173,1.584,1174,5.405,1175,2.438,1176,1.294,1177,2.24,1178,2.438,1179,2.438,1180,1.813,1181,4.145,1182,2.24,1183,2.438,1184,2.438,1185,7.143,1186,5.405,1187,5.405,1188,5.405,1189,2.438,1190,4.675,1191,5.405,1192,5.405,1193,3.45,1194,5.405,1195,5.405,1196,2.438,1197,2.438,1198,4.675,1199,1.813,1200,2.438,1201,5.405,1202,4.145,1203,4.145,1204,4.145,1205,2.438,1206,1.933,1207,2.438]],["component/16",[3,0.415,4,0.422]],["keyword/16",[62,2.797,1011,12.662,1172,12.662]],["title/17-1",[366,31.432]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["keyword/17-1",[]],["title/17-2",[46,27.424,90,21.464,98,6.467,379,29.11]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["keyword/17-2",[]],["title/17-3",[913,52.274]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["keyword/17-3",[]],["title/17-4",[531,43.006,1208,43.006]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["keyword/17-4",[]],["title/17-5",[220,21.131,604,40.143,1209,43.264]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["keyword/17-5",[]],["title/17",[221,32.249,222,33.356]],["name/17",[221,1.043,222,1.079]],["text/17",[4,1.876,8,1.088,16,0.823,18,1.236,23,0.931,28,1.222,46,4.561,55,1.438,62,1.957,72,1.464,76,0.517,80,1.069,84,2.177,93,1.138,95,2.35,98,1.204,102,2.028,108,2.719,112,1.786,115,3.195,118,5.623,128,1.655,130,1.86,132,1.28,135,2.798,136,1.171,137,1.061,139,2.533,140,0.63,144,1.078,149,1.571,150,0.739,160,2.056,168,1.16,178,2.36,179,1.052,180,2.177,192,0.902,207,3.318,214,1.265,216,1.414,220,1.85,221,4.295,222,4.583,225,1.678,226,1.464,227,1.028,236,1.138,243,0.785,251,1.675,259,1.02,260,2.734,261,1.351,270,2.432,275,1.297,343,2.056,363,2.128,364,2.502,366,3.553,371,1.117,378,0.997,379,4.841,383,2.259,397,1.25,398,4.893,399,2.622,419,2.056,420,1.078,429,3.378,430,4.482,434,1.052,436,3.253,437,2.909,441,2.357,442,2.616,447,2.459,454,1.183,474,1.522,475,1.809,482,2.07,494,1.492,500,2.622,509,2.239,528,1.994,531,2.432,554,1.127,556,2.649,561,1.078,566,1.314,571,0.963,572,3.224,586,1.351,590,1.208,604,2.672,606,1.196,614,2.23,615,1.675,617,1.236,623,1.25,632,2.124,637,1.63,639,1.786,640,2.968,667,1.314,673,1.675,696,2.014,707,1.839,713,1.839,722,1.949,736,1.726,737,1.675,758,1.414,778,1.859,779,1.859,819,1.127,822,2.07,823,2.149,871,1.675,882,3.351,887,1.522,908,1.414,913,4.278,922,1.183,927,1.297,972,1.414,1066,1.492,1158,3.373,1167,1.438,1208,2.432,1209,2.88,1210,4.407,1211,1.786,1212,1.464,1213,1.859,1214,2.253,1215,2.253,1216,2.968,1217,1.786,1218,1.726,1219,6.139,1220,1.949,1221,1.859,1222,1.859,1223,1.392,1224,2.253,1225,2.07,1226,2.07,1227,2.253,1228,2.253,1229,2.253,1230,2.253,1231,2.253,1232,1.949,1233,1.63]],["component/17",[3,0.415,4,0.422]],["keyword/17",[62,2.261,76,2.847,221,5.842,222,6.042]],["title/18-1",[148,27.777,1234,49.568]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["keyword/18-1",[]],["title/18",[301,26.337,378,25.757,817,28.333]],["name/18",[301,0.719,378,0.703,817,0.773]],["text/18",[4,1.092,27,3.806,62,1.361,69,2.807,70,1.713,77,3.431,92,3.406,98,1.376,114,3.519,119,2.283,136,5.038,140,3.185,148,2.076,162,3.844,196,2.353,202,2.84,203,2.635,210,1.869,213,3.026,215,3.874,217,4.228,225,2.218,230,3.326,245,2.835,281,3.326,299,3.531,301,2.317,363,1.801,364,1.721,366,1.932,381,2.746,395,3.457,437,2.919,466,2.43,477,2.609,522,5.364,571,2.187,590,2.746,632,2.807,634,2.746,642,3.613,707,2.43,721,3.026,775,2.471,815,5.043,817,4.719,818,6.084,833,3.704,834,4.544,926,4.193,1000,2.471,1057,4.944,1234,5.403,1235,4.143,1236,5.12,1237,3.457,1238,4.223,1239,4.223,1240,4.703]],["component/18",[3,0.415,4,0.422]],["keyword/18",[62,1.898,76,2.39,301,4.714,378,4.61,817,5.071]],["title/19-1",[203,35.261,478,49.568]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["keyword/19-1",[]],["title/19-2",[62,12.484,363,24.102]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["keyword/19-2",[]],["title/19-3",[493,31.735,648,38.936]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["keyword/19-3",[]],["title/19-4",[221,27.393,222,28.333,493,26.956]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["keyword/19-4",[]],["title/19",[62,9.216,203,26.03,693,35.696,1241,38.756]],["name/19",[149,0.898,693,1.564]],["text/19",[3,1.334,11,1.742,52,2.114,62,1.341,69,1.68,70,1.025,76,0.703,85,3.045,95,1.191,98,1.114,105,1.7,109,1.644,111,1.431,119,3.885,128,2.72,129,2.163,130,3.358,135,3.578,138,2.278,139,1.283,140,0.857,145,1.377,149,3.29,156,1.442,174,1.924,199,1.198,202,2.782,203,3.276,210,1.119,218,1.742,219,3.051,220,1.821,221,4.101,222,1.492,224,2.069,225,1.328,236,2.532,251,2.278,258,1.562,262,2.069,264,1.609,266,1.212,267,1.292,294,1.811,330,2.815,347,2.421,363,2.855,364,1.03,371,1.519,381,2.69,386,1.893,391,1.7,469,3.996,483,2.029,491,1.991,493,2.949,496,1.356,500,2.581,527,2.069,532,1.609,540,2.4,572,1.328,585,2.069,590,1.644,592,4.618,614,1.764,619,2.278,623,1.7,628,1.577,635,1.764,642,2.163,654,2.114,662,5.871,663,4.607,665,3.843,685,2.949,686,3.127,687,2.278,693,2.163,706,3.628,720,4.968,725,2.114,736,2.348,743,2.029,748,2.528,775,1.479,833,2.217,845,2.163,862,3.977,873,2.815,899,2.815,913,1.924,938,1.626,1023,2.528,1094,2.278,1120,2.528,1158,3.32,1241,2.348,1242,2.528,1243,2.528,1244,5.015,1245,3.065,1246,3.065,1247,2.815,1248,3.065,1249,5.506,1250,4.607,1251,3.065,1252,2.815,1253,3.628,1254,3.977,1255,2.069,1256,3.065,1257,3.065,1258,3.065,1259,5.015,1260,3.065,1261,3.065,1262,2.651,1263,2.528,1264,3.065,1265,3.065,1266,2.815,1267,4.338,1268,4.607,1269,2.815,1270,2.528,1271,3.007,1272,2.815,1273,3.065,1274,3.065,1275,2.815,1276,2.651,1277,2.815,1278,3.996,1279,3.065,1280,3.259,1281,3.065,1282,2.528,1283,2.651,1284,3.065,1285,2.815,1286,2.815,1287,2.528,1288,6.363,1289,3.065,1290,3.065]],["component/19",[3,0.415,4,0.422]],["keyword/19",[62,2.261,76,2.847,119,5.533,381,6.656]],["title/20-1",[62,12.484,436,43.735]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["keyword/20-1",[]],["title/20-2",[62,12.484,1291,62.934]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["keyword/20-2",[]],["title/20",[436,43.735,1292,59.259]],["name/20",[436,1.414,1292,1.916]],["text/20",[4,2.247,5,4.73,55,1.614,62,2.229,71,2.135,86,2.878,98,0.845,108,3.703,116,7.089,121,7.089,128,3.82,130,1.587,135,1.785,139,1.82,140,1.85,149,4.399,150,2.626,168,4.95,178,2.014,191,2.999,192,2.648,199,1.699,202,2.412,210,2.921,218,4.547,220,2.401,226,2.825,243,1.514,248,2.686,293,2.471,388,2.502,399,3.403,436,2.775,441,4.023,449,5.83,469,2.729,493,2.014,529,2.999,537,2.332,556,4.647,575,5.454,639,3.447,693,6.31,746,3.761,772,3.447,892,3.761,1005,4.784,1055,3.068,1104,2.645,1182,3.994,1291,3.994,1292,5.719,1293,3.586,1294,3.994,1295,4.348,1296,6.612,1297,6.612,1298,3.761,1299,4.348,1300,2.775,1301,2.825,1302,3.586]],["component/20",[3,0.415,4,0.422]],["keyword/20",[109,8.233,111,7.167,363,5.4]],["title/21-1",[1303,58.774]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["keyword/21-1",[]],["title/21-2",[98,7.441,455,32.282,701,35.95]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["keyword/21-2",[]],["title/21-3",[62,7.304,96,18.567,98,5.125,578,19.348,721,23.695,1140,21.27]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["keyword/21-3",[]],["title/21-4",[98,5.125,288,17.366,470,21.049,701,24.762,1140,21.27,1304,21.498]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["keyword/21-4",[]],["title/21-5",[62,9.216,288,21.912,608,26.03,1305,40.102]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["keyword/21-5",[]],["title/21-6",[98,5.125,208,24.762,288,17.366,608,20.63,1306,21.735,1307,36.821]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["keyword/21-6",[]],["title/21-7",[146,17.69,220,16.24,434,20.882,799,26.437,1140,23.731]],["name/21-7",[]],["text/21-7",[]],["component/21-7",[]],["keyword/21-7",[]],["title/21-8",[181,21.775,942,31.564,1140,23.731,1271,26.812,1308,35.461]],["name/21-8",[]],["text/21-8",[]],["component/21-8",[]],["keyword/21-8",[]],["title/21-9",[98,7.441,134,23.594,364,19.564]],["name/21-9",[]],["text/21-9",[]],["component/21-9",[]],["keyword/21-9",[]],["title/21",[62,9.216,98,6.467,701,31.244,1304,27.125]],["name/21",[701,1.369,1304,1.188]],["text/21",[3,0.136,16,0.452,24,0.351,26,0.33,28,0.351,32,0.625,33,1.603,41,0.457,42,0.469,51,0.569,54,0.777,55,1.573,62,1.216,69,0.355,70,1.184,71,0.608,77,0.216,79,0.79,84,0.759,85,1.181,90,0.275,91,0.595,92,0.564,93,0.327,95,0.481,96,0.3,98,1.359,100,0.277,102,2.144,104,0.457,108,3.887,111,0.83,114,1.416,120,1.154,125,1.67,128,2.302,130,2.056,131,1.158,133,1.39,134,1.718,135,0.266,139,0.744,140,1.963,141,0.657,143,0.347,144,1.087,145,1.02,146,3.455,147,0.731,148,2.078,149,1.434,150,2.064,154,0.707,156,0.305,158,0.88,160,0.344,172,0.469,178,1.458,180,0.759,181,0.865,191,0.854,192,2.874,196,0.298,197,0.368,199,0.253,200,0.394,203,0.333,204,0.378,206,0.454,208,1.403,210,1.663,214,0.364,215,0.285,216,0.407,217,0.54,220,2.045,225,0.984,243,1.232,245,0.862,259,0.293,261,1.887,264,0.34,265,0.383,266,0.256,267,1.149,268,1.036,269,0.679,272,0.457,280,0.997,288,2.44,292,1.47,295,1.959,301,1.234,310,0.469,315,0.407,331,0.4,336,0.65,341,0.364,345,0.388,358,0.514,359,0.457,360,0.731,364,1.531,368,0.4,371,0.321,376,3.089,378,0.287,388,0.373,391,0.686,392,0.277,397,0.986,398,0.953,399,0.333,402,0.496,419,0.657,420,1.867,421,1.254,428,0.457,432,0.337,434,2.515,436,0.414,437,0.253,438,0.378,445,1.216,447,1.883,451,0.602,453,1.307,454,0.65,455,0.686,459,0.429,460,2.338,461,0.712,462,1.667,464,1.726,466,1.294,470,0.34,475,1.47,477,0.33,480,2.712,488,0.414,489,1.693,491,0.421,495,0.447,496,0.548,497,1.39,498,1.253,499,1.417,500,0.637,506,2.32,507,1.897,508,2.578,509,0.285,515,0.775,527,0.437,528,1.169,529,0.447,538,2.14,540,0.31,541,0.664,542,0.843,543,0.759,544,0.305,545,0.368,549,4.739,550,0.414,554,0.619,556,0.643,557,0.742,558,1.45,561,1.087,563,1.918,566,0.722,572,0.281,573,0.469,577,0.437,578,0.597,585,0.836,586,0.388,588,0.378,590,0.664,595,0.429,602,0.469,603,0.394,604,0.447,606,0.657,608,3.524,616,0.854,623,0.359,628,1.403,635,0.712,638,0.843,643,0.414,644,0.482,652,0.4,656,0.437,677,0.819,678,0.305,685,0.3,689,0.514,697,0.327,699,0.447,701,1.945,713,2.012,720,0.437,721,0.383,731,1.05,764,0.482,773,0.534,775,1.316,777,1.225,779,0.534,791,1.746,819,0.324,821,0.378,831,0.482,832,2.63,858,0.595,865,0.836,878,0.496,885,1.361,887,1.2,889,0.731,897,0.496,903,0.457,908,1.115,909,0.321,914,0.437,920,0.355,924,0.514,926,0.364,933,0.429,937,1.945,938,0.344,939,0.613,942,1.254,944,0.496,946,0.482,948,0.496,950,0.496,953,0.496,955,0.482,956,0.496,957,0.469,958,0.469,965,3.948,978,0.514,1000,0.857,1039,1.534,1053,0.407,1056,0.534,1060,1.925,1066,0.429,1075,0.407,1078,0.534,1108,3.328,1110,2.258,1123,0.394,1140,0.943,1141,0.482,1146,1.403,1158,0.429,1167,0.414,1173,0.804,1176,1.877,1212,0.804,1217,0.514,1300,0.414,1304,4.472,1305,0.514,1306,3.804,1307,2.892,1308,0.981,1309,0.648,1310,0.514,1311,1.409,1312,1.021,1313,0.514,1314,0.895,1315,1.965,1316,0.648,1317,1.973,1318,0.496,1319,1.137,1320,0.595,1321,0.482,1322,0.4,1323,1.777,1324,1.689,1325,2.412,1326,1.965,1327,3.939,1328,3.248,1329,2.597,1330,1.632,1331,1.537,1332,1.321,1333,1.632,1334,1.777,1335,1.777,1336,1.632,1337,1.036,1338,1.237,1339,3.538,1340,1.409,1341,0.648,1342,3.538,1343,0.534,1344,0.648,1345,0.56,1346,0.469,1347,0.648,1348,1.137,1349,2.805,1350,1.777,1351,1.777,1352,1.777,1353,1.777,1354,2.409,1355,1.777,1356,0.482,1357,0.648,1358,0.648,1359,0.56,1360,0.648,1361,0.595,1362,1.237,1363,1.237,1364,1.137,1365,0.534,1366,0.534,1367,0.648,1368,0.56,1369,0.648,1370,0.378,1371,0.595,1372,0.514,1373,1.021,1374,0.514,1375,2.505,1376,1.137,1377,1.021,1378,0.648,1379,0.56,1380,0.648,1381,0.534,1382,2.271,1383,0.648,1384,1.137,1385,0.648,1386,1.237,1387,1.07,1388,0.648,1389,0.648,1390,0.595,1391,0.447,1392,0.873,1393,0.648,1394,1.285,1395,0.394,1396,1.689,1397,0.595,1398,1.777,1399,0.648,1400,0.496,1401,0.648,1402,0.56,1403,1.237,1404,1.237,1405,0.648,1406,1.643,1407,1.237,1408,0.648,1409,1.321,1410,0.56,1411,0.948,1412,2.086,1413,1.237,1414,0.753,1415,1.07,1416,1.465,1417,0.56,1418,1.465,1419,1.237,1420,0.595,1421,0.648,1422,0.648,1423,0.648,1424,0.321,1425,0.648,1426,0.648,1427,1.147,1428,0.648,1429,0.595,1430,0.595,1431,0.648,1432,0.648,1433,1.291,1434,0.469,1435,0.648,1436,0.648,1437,0.648,1438,0.534,1439,0.496,1440,0.56,1441,0.56,1442,0.56,1443,0.56,1444,0.56,1445,0.595,1446,0.648,1447,0.648,1448,0.595,1449,1.137,1450,1.321,1451,1.409,1452,1.321,1453,0.648,1454,0.648,1455,0.648,1456,0.648,1457,0.648]],["component/21",[3,0.415,4,0.422]],["keyword/21",[]],["title/22-1",[105,32.282,366,21.965,1458,44.592]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["keyword/22-1",[]],["title/22",[114,24.878,366,25.859]],["name/22",[114,0.805,366,0.836]],["text/22",[16,1.569,24,1.38,32,2.817,62,0.783,80,4.786,90,1.08,105,3.095,108,1.467,114,4.489,140,2.677,143,2.306,144,1.218,145,1.144,148,4.384,156,2.024,162,3.374,163,1.685,165,5.439,166,1.756,180,1.088,181,1.24,196,1.976,203,1.31,210,0.929,225,1.103,236,1.285,245,0.966,258,1.298,269,1.396,284,1.951,296,2.202,297,2.339,299,6.791,311,2.1,339,1.756,366,4.226,376,1.251,380,1.893,403,2.1,420,3.137,446,2.744,447,3.835,488,1.625,518,5.071,528,2.871,563,1.152,604,2.965,668,1.951,678,1.198,713,2.04,817,2.716,937,3.447,943,2.698,982,4.012,1008,1.842,1075,1.598,1233,1.842,1314,5.299,1414,1.549,1458,5.613,1459,1.797,1460,5.125,1461,7.332,1462,5.579,1463,4.299,1464,4.299,1465,2.339,1466,6.556,1467,1.719,1468,4.299,1469,4.299,1470,4.299,1471,3.949,1472,2.546,1473,2.546,1474,5.198,1475,6.556,1476,6.556,1477,7.325,1478,3.949,1479,2.546,1480,2.546,1481,4.299,1482,4.826,1483,4.299,1484,4.424,1485,5.125,1486,5.125,1487,4.275,1488,5.579,1489,7.946,1490,2.546,1491,4.299,1492,2.546,1493,2.202,1494,2.339,1495,2.546]],["component/22",[3,0.415,4,0.422]],["keyword/22",[62,1.635,76,2.059,114,5.767,366,5.994]],["title/23-1",[243,28.996]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["keyword/23-1",[]],["title/23-2",[1379,72.03]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["keyword/23-2",[]],["title/23",[0,19.109,3,9.374,62,8.149,140,12.511,496,19.795]],["name/23",[0,0.529,3,0.259,62,0.225,496,0.547]],["text/23",[0,1.835,3,0.443,4,0.451,16,0.771,23,2.707,32,0.577,33,0.807,45,0.595,51,1.974,55,0.424,57,1.579,62,1.055,69,0.627,76,0.985,84,0.489,85,0.429,95,0.821,98,0.791,102,1.171,108,3.553,111,0.534,119,0.51,128,3.293,130,1.771,134,1.193,135,1.209,139,0.479,140,1.201,149,3.878,150,1.202,154,1.458,168,0.589,176,1.2,178,1.363,179,0.534,180,0.903,192,2.875,201,0.907,202,1.633,204,0.667,206,0.42,207,0.557,210,0.418,213,0.676,220,1.069,221,0.994,223,1.457,224,0.772,225,1.275,227,0.522,231,0.707,242,0.807,243,1.025,244,2.586,245,2.926,246,1.232,250,2.213,256,1.066,259,1.332,269,1.158,275,1.216,282,0.73,289,1.426,292,0.534,295,2.087,341,1.186,345,0.686,363,1.511,364,1.444,392,0.489,396,0.642,397,1.633,420,2.055,434,0.534,437,1.432,440,0.696,441,3.985,445,0.942,447,0.552,449,0.658,453,1.216,455,0.634,458,0.907,460,2.438,461,0.658,462,2.799,466,2.938,469,2.3,479,0.676,484,0.907,493,0.53,496,3.7,497,0.583,498,2.457,499,2.779,502,2.952,503,2.383,506,1.658,507,0.613,508,1.011,509,2.72,515,0.499,537,1.133,540,0.547,541,0.613,542,1.397,549,3.434,552,1.305,553,1.216,554,1.057,556,4.442,557,2.909,558,4.583,561,2.771,566,1.716,571,1.258,572,0.915,573,1.528,576,0.907,577,0.772,578,2.795,580,0.557,582,6.492,587,2.651,588,0.667,591,0.943,593,0.757,609,0.827,616,0.789,620,1.675,651,0.989,652,0.707,656,0.772,667,0.667,697,1.066,699,1.457,700,1.051,701,0.707,705,0.907,715,0.827,768,0.718,775,0.552,777,1.457,847,2.188,849,0.707,872,1.879,886,0.907,892,0.989,902,1.818,903,0.807,907,2.724,908,4.679,922,2.255,924,0.907,993,0.85,1017,0.943,1019,0.989,1020,0.989,1021,3.424,1022,1.827,1023,1.742,1024,1.742,1025,1.051,1027,1.051,1028,1.051,1029,1.827,1030,0.989,1033,6.21,1039,2.474,1041,1.051,1050,0.772,1128,2.381,1145,0.772,1158,0.757,1176,3.81,1208,2.3,1213,0.943,1280,2.381,1302,0.943,1354,3.291,1359,0.989,1424,1.816,1434,1.528,1496,0.989,1497,7.08,1498,2.546,1499,1.144,1500,0.789,1501,0.989,1502,1.398,1503,1.144,1504,1.144,1505,1.94,1506,1.051,1507,5.319,1508,0.943,1509,2.527,1510,3.945,1511,3.945,1512,3.291,1513,4.295,1514,4.295,1515,2.905,1516,2.807,1517,2.586,1518,2.112,1519,2.112,1520,3.664,1521,2.112,1522,2.905,1523,2.112,1524,2.112,1525,1.144,1526,1.144,1527,0.907,1528,1.051,1529,1.144,1530,2.112,1531,2.112,1532,3.664,1533,2.112,1534,1.144,1535,2.112,1536,1.144,1537,0.827,1538,1.144,1539,1.144,1540,1.144,1541,1.144,1542,1.144,1543,1.144,1544,1.144,1545,1.144,1546,1.144,1547,1.144,1548,0.876,1549,1.144,1550,1.144,1551,0.989,1552,1.051,1553,1.144,1554,1.144,1555,0.642,1556,1.144,1557,0.607,1558,1.051,1559,2.943,1560,2.112,1561,1.144,1562,0.989,1563,0.943,1564,0.989,1565,1.051,1566,0.743]],["component/23",[3,0.415,4,0.422]],["keyword/23",[0,5.45,3,1.473,62,1.28,76,1.612,98,0.898,496,5.645]],["title/24-1",[98,6.467,128,21.61,266,20.006,1391,34.889]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["keyword/24-1",[]],["title/24-2",[57,31.21,378,25.757,542,27.619]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["keyword/24-2",[]],["title/24-3",[98,5.718,137,21.052,385,36.892,1567,41.083,1568,44.725]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["keyword/24-3",[]],["title/24",[98,8.76,363,24.102]],["name/24",[98,0.469]],["text/24",[3,0.701,4,0.406,16,1.221,18,1.833,21,1.259,23,1.382,24,1.031,31,6.744,43,1.236,45,0.989,51,2.818,55,0.706,57,4.865,77,0.633,85,1.255,90,0.807,95,0.739,98,1.269,100,0.813,102,0.757,108,3.543,109,1.793,111,2.863,119,1.491,128,4.161,130,2.828,133,2.28,134,1.356,135,1.837,137,1.574,139,2.254,140,2.167,149,1.356,150,2.391,154,1.78,162,2.77,178,1.549,191,1.312,192,2.155,202,2.986,206,0.698,210,3.212,220,1.214,227,0.868,231,1.175,243,1.874,244,1.343,245,0.722,246,3.94,256,0.96,259,0.861,266,1.323,281,1.236,288,1.449,292,2.513,295,2.316,301,0.861,309,1.009,347,0.918,363,1.574,364,2.737,365,1.414,368,1.175,371,2.668,378,1.48,385,1.569,398,1.02,399,1.721,407,3.157,409,3.157,419,1.009,434,3.155,437,1.748,451,0.926,460,4.012,461,3.098,462,2.62,466,2.555,477,0.97,487,0.868,490,2.172,492,1.343,496,2.714,498,0.874,499,0.989,506,2.436,507,3.909,508,3.488,509,1.469,515,1.952,527,1.285,538,0.96,540,0.91,542,3.207,548,2.758,549,1.855,554,0.951,555,1.343,556,1.738,559,1.569,561,0.91,566,1.109,572,0.824,577,1.285,580,2.621,588,1.109,609,1.376,640,1.458,662,2.419,664,2.36,666,1.414,682,5.585,688,1.236,696,0.989,697,0.96,744,1.343,757,1.175,775,1.614,817,0.926,819,1.672,839,0.979,853,1.194,868,1.458,896,2.258,908,1.194,922,0.999,1000,2.598,1048,2.134,1097,1.458,1098,1.645,1103,1.645,1104,1.157,1120,1.569,1123,1.157,1128,1.236,1146,1.175,1158,1.259,1166,1.645,1300,1.214,1318,1.458,1497,3.071,1567,3.071,1569,1.194,1570,4.474,1571,3.895,1572,3.344,1573,3.344,1574,2.258,1575,2.651,1576,1.645,1577,1.902,1578,3.071,1579,1.902,1580,1.343,1581,1.747,1582,1.902,1583,3.344,1584,1.902,1585,1.902,1586,3.344,1587,1.902,1588,3.344,1589,1.902,1590,1.902,1591,1.902,1592,1.902,1593,1.902,1594,3.344,1595,1.458,1596,1.902,1597,3.344,1598,1.747,1599,1.645,1600,1.645,1601,1.645,1602,1.645,1603,1.508,1604,3.344,1605,1.902,1606,1.902,1607,1.902,1608,1.376]],["component/24",[3,0.415,4,0.422]],["keyword/24",[98,1.332,109,5.586,111,4.863,128,4.45,363,3.664]],["title/25",[98,7.441,140,16.279,922,30.559]],["name/25",[98,0.283,922,1.164]],["text/25",[3,0.969,8,1.341,16,1.014,18,1.523,46,1.506,51,2.125,57,3.715,68,5.397,77,1.54,84,1.187,85,1.736,95,1.079,98,1.179,108,3.895,130,1.688,140,2.324,150,1.949,192,1.112,210,1.014,216,1.744,223,1.916,231,3.67,243,0.967,250,4.625,272,3.264,288,1.203,292,2.774,293,1.578,295,1.989,364,1.997,392,2.96,407,1.96,409,3.264,420,1.329,434,1.297,441,2.813,446,5.302,455,1.541,460,2.709,461,1.599,462,1.976,466,1.318,476,5.131,490,1.805,496,2.63,499,2.404,506,1.257,507,1.49,508,2.213,515,1.212,538,3.884,540,2.213,541,2.48,542,2.82,553,1.599,556,3.601,557,2.772,561,2.213,562,1.559,563,2.093,566,2.697,572,1.203,577,3.123,588,2.697,617,2.536,619,2.065,634,2.48,638,1.318,688,1.805,696,1.444,707,1.318,744,3.264,775,1.341,791,3.296,816,5.53,819,4.154,922,4.04,938,1.474,982,2.335,995,2.202,1000,2.232,1048,1.773,1056,2.291,1057,1.839,1058,4.678,1059,5.308,1060,1.96,1061,4.248,1062,3.815,1063,4.248,1064,4,1065,3.667,1066,3.933,1067,2.551,1068,2.551,1069,4.248,1070,2.551,1071,2.551,1072,4.248,1073,2.551,1074,2.551,1097,4.552,1098,2.402,1099,5.457,1100,2.551,1101,2.551,1102,2.551,1103,2.402,1104,2.813,1105,4.248,1106,2.551,1107,2.202,1108,1.716,1109,2.551,1110,1.773,1111,2.551,1112,2.551,1113,2.551,1114,2.551,1115,2.551,1116,2.551,1117,2.551,1118,2.551,1119,2.551,1120,2.291,1271,1.665,1609,2.402,1610,2.778,1611,2.402,1612,2.402]],["component/25",[3,0.415,4,0.422]],["keyword/25",[62,1.898,98,1.332,407,7.351,409,7.351,922,5.469]],["title/26-1",[363,17.793,625,38.756,1613,43.747,1614,36.592]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["keyword/26-1",[]],["title/26-2",[625,63.812]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["keyword/26-2",[]],["title/26-3",[1613,59.259,1614,49.568]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["keyword/26-3",[]],["title/26-4",[363,24.102,1608,49.568]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["keyword/26-4",[]],["title/26-5",[119,25.947,363,20.472,381,31.21]],["name/26-5",[]],["text/26-5",[]],["component/26-5",[]],["keyword/26-5",[]],["title/26-6",[1615,68.694]],["name/26-6",[]],["text/26-6",[]],["component/26-6",[]],["keyword/26-6",[]],["title/26-7",[363,20.472,1616,50.335,1617,50.335]],["name/26-7",[]],["text/26-7",[]],["component/26-7",[]],["keyword/26-7",[]],["title/26-8",[108,17.258,1614,53.556,1618,43.747]],["name/26-8",[]],["text/26-8",[]],["component/26-8",[]],["keyword/26-8",[]],["title/26-9",[108,15.261,363,15.734,1614,48.875,1618,38.684]],["name/26-9",[]],["text/26-9",[]],["component/26-9",[]],["keyword/26-9",[]],["title/26-10",[85,25.713,256,34.588]],["name/26-10",[]],["text/26-10",[]],["component/26-10",[]],["keyword/26-10",[]],["title/26-11",[85,21.841,256,29.38,363,20.472]],["name/26-11",[]],["text/26-11",[]],["component/26-11",[]],["keyword/26-11",[]],["title/26-12",[1608,60.25]],["name/26-12",[]],["text/26-12",[]],["component/26-12",[]],["keyword/26-12",[]],["title/26-13",[363,24.102,1608,49.568]],["name/26-13",[]],["text/26-13",[]],["component/26-13",[]],["keyword/26-13",[]],["title/26-14",[98,7.441,219,35.404,706,42.103]],["name/26-14",[]],["text/26-14",[]],["component/26-14",[]],["keyword/26-14",[]],["title/26-15",[130,21.246,693,41.071,1267,50.335]],["name/26-15",[]],["text/26-15",[]],["component/26-15",[]],["keyword/26-15",[]],["title/26-16",[221,27.393,693,41.071,714,41.071]],["name/26-16",[]],["text/26-16",[]],["component/26-16",[]],["keyword/26-16",[]],["title/26",[62,9.216,168,26.03,363,17.793,381,27.125]],["name/26",[149,0.898,381,1.188]],["text/26",[0,0.636,3,0.77,4,1.401,11,0.447,16,0.774,23,1.325,25,1.749,26,0.401,28,0.427,31,1.999,37,0.494,40,0.422,45,1.102,50,1.006,51,1.689,52,0.543,55,1.19,62,1.537,69,0.817,70,0.263,71,0.387,72,0.512,76,1.557,77,2.571,83,0.556,84,1.149,85,1.952,92,0.679,95,1.749,98,1.007,102,1.07,108,1.66,119,4.415,130,2.758,131,1.37,134,1.49,135,2.495,137,0.371,138,1.107,139,0.888,140,2.114,145,0.354,147,0.465,149,1.972,150,1.052,151,0.512,154,0.313,156,0.371,157,0.847,162,1.384,168,1.892,174,0.935,178,3.418,179,0.368,180,0.636,181,0.383,192,2.534,199,0.829,202,1.492,203,0.767,210,2.478,215,0.346,217,0.343,218,3.596,219,2.498,220,1.335,221,2.596,222,1.789,224,0.532,225,0.341,226,0.968,227,1.676,235,0.512,236,0.397,243,1.92,244,0.556,245,1.558,248,0.486,255,0.603,256,1.357,258,0.759,259,0.959,266,1.268,269,0.432,295,1.766,299,0.543,305,0.521,336,0.413,343,0.418,347,1.547,360,0.465,363,2.388,364,2.481,370,0.543,371,0.738,372,0.532,378,1.19,381,0.422,383,1.869,386,0.486,391,1.176,392,0.336,394,0.459,397,0.437,419,0.418,429,1.588,430,1.574,434,0.368,437,2.033,438,0.459,445,0.351,447,0.719,448,0.521,449,2.115,453,0.857,454,1.113,455,0.437,457,1.288,460,1.872,461,2.115,462,1.754,463,0.603,466,1.744,469,2.307,470,1.113,475,0.368,477,1.08,480,1.199,483,1.403,490,0.968,492,1.051,493,1.485,496,4.149,497,1.634,499,1.102,500,2.504,506,1.451,509,0.346,515,0.343,530,0.472,532,1.412,540,0.377,544,0.998,545,0.447,549,2.039,550,0.503,552,1.661,561,0.377,571,0.336,572,1.165,578,1.023,592,0.494,595,0.521,600,0.893,613,0.624,614,2.115,621,0.532,624,0.723,625,3.728,628,0.405,632,1.474,635,0.453,636,0.494,638,0.374,640,1.624,641,0.624,642,0.556,645,0.453,646,0.442,651,0.681,654,0.543,657,1.624,658,0.881,662,3.52,664,0.556,665,1.141,666,1.107,667,0.459,682,1.141,685,0.365,686,0.387,687,1.107,691,0.543,693,3.177,696,0.409,706,1.078,714,1.496,716,1.006,720,1.006,733,0.723,739,1.749,743,1.403,744,1.051,748,0.649,764,1.107,768,0.494,769,1.181,775,0.38,799,0.465,819,3.039,825,0.57,833,1.534,842,0.681,845,1.496,854,0.723,861,2.659,878,0.603,886,0.624,914,1.006,916,0.603,938,1.125,966,0.556,1000,2.802,1002,0.723,1008,1.078,1021,0.556,1032,0.479,1050,0.532,1056,0.649,1094,0.585,1104,0.479,1110,1.353,1123,0.479,1146,1.31,1173,0.968,1190,0.681,1212,0.512,1237,1.432,1241,1.141,1242,0.649,1255,3.92,1262,0.681,1267,1.288,1270,2.218,1272,2.47,1277,0.723,1278,0.935,1282,1.229,1286,0.723,1287,0.649,1288,3.179,1312,0.649,1331,0.681,1346,0.57,1366,0.649,1368,0.681,1374,0.624,1395,0.479,1487,0.603,1496,0.681,1508,0.649,1548,0.603,1557,0.418,1569,0.935,1575,3.569,1608,4.579,1613,1.288,1614,6.36,1615,0.649,1616,2.326,1617,2.326,1618,3.179,1619,4.106,1620,4.291,1621,0.787,1622,0.681,1623,1.368,1624,0.787,1625,0.787,1626,1.49,1627,0.723,1628,1.947,1629,0.787,1630,1.681,1631,0.787,1632,1.141,1633,0.723,1634,0.787,1635,0.787,1636,0.723,1637,0.787,1638,0.681,1639,0.787,1640,1.49,1641,3.205,1642,2.944,1643,0.787,1644,3.205,1645,2.689,1646,1.49,1647,2.12,1648,2.12,1649,0.723,1650,0.787,1651,0.787,1652,0.787,1653,0.787,1654,0.787,1655,1.368,1656,0.723,1657,0.787,1658,1.947,1659,1.49,1660,0.787,1661,0.787,1662,0.787,1663,0.787,1664,0.723,1665,1.229,1666,1.288,1667,0.521,1668,0.787,1669,0.787,1670,0.649,1671,0.723,1672,0.723,1673,0.603,1674,0.787,1675,0.787,1676,0.787,1677,1.229,1678,1.368,1679,0.681,1680,1.288,1681,0.649,1682,0.787,1683,1.181,1684,0.787,1685,0.787,1686,0.787,1687,1.288,1688,0.787,1689,0.787,1690,2.772,1691,0.787,1692,0.787,1693,1.181,1694,0.787,1695,1.49,1696,1.49,1697,0.681,1698,0.787,1699,0.787,1700,0.681,1701,0.787,1702,0.787,1703,0.681,1704,0.521,1705,1.49,1706,1.49,1707,0.787,1708,0.787,1709,0.723,1710,0.723,1711,0.465,1712,0.486,1713,0.787,1714,0.787,1715,0.723,1716,1.107,1717,0.787,1718,0.787,1719,0.787,1720,1.229,1721,0.787,1722,0.521,1723,0.723,1724,0.787,1725,0.787,1726,0.681,1727,0.787,1728,0.787,1729,1.49,1730,0.787,1731,0.723,1732,0.787]],["component/26",[3,0.415,4,0.422]],["keyword/26",[62,1.155,76,1.454,119,2.826,256,3.2,381,3.4,625,4.857,1608,4.586,1614,4.586,1615,5.229]],["title/27-1",[62,10.604,502,35.404,699,40.143]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["keyword/27-1",[]],["title/27-2",[245,19.199,246,29.494,248,31.244,1501,43.747]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["keyword/27-2",[]],["title/27-3",[23,24.05,363,20.472,922,30.559]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["keyword/27-3",[]],["title/27-4",[245,22.09,246,33.936,363,20.472]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["keyword/27-4",[]],["title/27-5",[128,24.865,363,20.472,707,27.619]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["keyword/27-5",[]],["title/27-6",[62,8.149,98,5.718,502,27.209,1000,21.587,1076,33.25]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["keyword/27-6",[]],["title/27-7",[502,35.404,701,35.95,1733,50.335]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["keyword/27-7",[]],["title/27",[701,42.323,1734,62.934]],["name/27",[502,1.348,701,1.369]],["text/27",[3,0.84,4,0.453,5,0.355,8,0.8,11,0.654,16,0.42,23,2.487,28,0.326,51,2.672,52,0.414,55,1.098,62,1.132,69,0.329,70,0.201,76,0.264,77,1.226,79,0.383,84,0.257,85,1.505,93,0.303,95,0.644,96,0.533,98,1.261,108,3.186,111,2.276,128,2.392,130,1.779,131,0.306,134,0.861,135,1.215,136,0.312,139,0.251,140,1.566,144,1.224,145,0.954,146,0.238,147,1.256,148,0.467,149,1.037,150,2.614,154,2.041,170,0.414,183,0.424,192,3.566,196,0.276,202,0.919,207,1.441,210,1.872,213,0.355,220,1.456,243,1.396,244,1.17,245,2.56,246,4.709,247,0.762,248,2.275,250,2.553,264,0.315,265,0.355,266,0.238,267,0.253,270,0.377,292,2.276,293,0.341,295,3.036,299,0.414,331,0.711,336,0.604,341,0.337,347,0.8,363,1.969,364,2.023,369,1.314,371,0.57,386,0.371,397,1.179,415,0.3,420,1.919,428,2.599,432,0.312,434,2.276,436,1.058,437,0.235,445,0.947,451,0.56,453,0.346,455,0.333,460,3.866,461,2.805,462,3.015,464,0.329,466,3.349,475,0.28,480,0.739,487,0.274,491,0.39,496,3.907,497,0.306,498,0.762,499,3.23,500,0.309,502,6.298,503,1.454,506,3.324,507,2.614,508,3.227,509,1.896,510,0.495,512,0.495,515,0.262,518,0.36,538,3.039,540,1.762,543,0.257,544,0.283,552,0.371,555,0.424,556,3.418,557,3.219,558,4.774,559,0.495,561,4.184,563,0.962,569,0.882,571,0.908,577,2.487,578,1.026,582,4.935,587,1.537,588,2.148,595,0.398,606,0.319,609,0.435,611,0.398,620,0.913,666,0.856,667,0.671,685,0.278,687,1.232,690,0.552,695,0.552,699,0.794,701,1.828,707,2.549,725,0.414,738,1.314,758,0.377,770,0.519,776,0.36,820,0.68,823,0.333,829,0.794,830,0.662,847,0.856,871,0.446,872,2.755,890,0.414,903,0.812,910,0.435,922,3.36,928,1.367,936,0.68,943,0.377,1000,0.8,1017,0.495,1019,0.996,1020,2.56,1021,2.089,1022,3.733,1023,0.949,1024,3.56,1029,0.519,1030,0.996,1031,3.383,1033,2.56,1039,0.406,1047,0.949,1054,0.882,1076,1.232,1090,0.519,1155,0.435,1170,0.435,1173,0.39,1199,0.446,1208,2.312,1235,0.333,1254,2.92,1255,0.406,1300,0.735,1354,1.208,1356,0.856,1377,0.495,1394,0.435,1414,1.008,1424,0.298,1484,0.476,1501,3.733,1502,0.762,1506,1.523,1507,1.952,1511,1.952,1512,0.46,1515,0.476,1516,1.96,1517,0.424,1667,0.398,1680,0.996,1733,1.434,1734,2.719,1735,0.996,1736,0.552,1737,2.96,1738,2.125,1739,2.125,1740,2.558,1741,2.96,1742,2.96,1743,2.96,1744,2.96,1745,2.96,1746,0.601,1747,1.151,1748,1.657,1749,0.552,1750,0.601,1751,2.412,1752,0.601,1753,0.519,1754,1.151,1755,1.151,1756,1.523,1757,0.519,1758,0.552,1759,0.552,1760,0.601,1761,0.601,1762,1.151,1763,1.367,1764,2.558,1765,2.558,1766,3.964,1767,2.558,1768,2.349,1769,0.601,1770,0.495,1771,0.552,1772,1.151,1773,1.057,1774,0.495,1775,1.657,1776,0.601,1777,1.657,1778,1.151,1779,1.151,1780,1.151,1781,1.151,1782,2.125,1783,0.601,1784,0.996,1785,0.46,1786,0.601,1787,0.519,1788,2.125,1789,0.552,1790,2.96,1791,0.601,1792,0.601,1793,0.996,1794,0.601,1795,1.657,1796,0.601,1797,0.601,1798,1.151,1799,2.125,1800,0.601,1801,0.601,1802,0.552,1803,1.434,1804,1.151,1805,0.601,1806,1.151,1807,0.601,1808,2.349,1809,1.151,1810,0.601,1811,0.601,1812,0.519,1813,0.996,1814,0.949,1815,1.057,1816,1.151,1817,1.523,1818,1.657,1819,0.601,1820,0.446,1821,1.151,1822,1.057,1823,1.057,1824,0.601,1825,0.601,1826,0.601,1827,0.601,1828,0.601,1829,1.151,1830,0.601,1831,0.601,1832,0.601,1833,0.601,1834,2.125,1835,0.601,1836,0.601,1837,0.601,1838,0.601,1839,0.601,1840,0.601,1841,0.601,1842,0.601,1843,0.601,1844,0.601,1845,0.601,1846,0.601,1847,0.601,1848,0.601,1849,1.151,1850,0.601,1851,0.601,1852,0.424,1853,0.519]],["component/27",[3,0.415,4,0.422]],["keyword/27",[0,3.367,62,1.436,76,1.808,98,1.008,496,3.488,502,4.795,1808,7.24]],["title/28-1",[76,10.262,77,14.889,98,5.718,220,16.24,289,30.202]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["keyword/28-1",[]],["title/28-2",[4,7.083,62,6.049,69,18.204,76,7.617,77,11.052,98,4.244,220,12.055,554,16.604]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["keyword/28-2",[]],["title/28-3",[140,16.279,771,36.53,1854,53.457]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["keyword/28-3",[]],["title/28-4",[70,27.86]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["keyword/28-4",[]],["title/28-5",[154,33.141]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["keyword/28-5",[]],["title/28-6",[98,7.441,206,21.362,692,30.559]],["name/28-6",[]],["text/28-6",[]],["component/28-6",[]],["keyword/28-6",[]],["title/28",[98,8.76,692,35.977]],["name/28",[98,0.283,692,1.164]],["text/28",[4,0.578,16,1.352,18,2.87,23,1.873,51,2.083,62,0.826,65,1.675,69,0.824,70,2.914,71,0.738,76,1.659,77,3.159,84,0.642,85,2.561,92,0.685,95,0.584,98,1.498,100,0.642,102,0.598,108,4.035,114,0.984,117,1.152,120,1.761,124,0.959,130,2.491,134,0.609,135,0.617,136,2.355,140,1.909,145,0.675,148,1.099,149,2.122,150,1.487,154,3.021,156,0.707,157,2.104,158,0.745,183,1.061,192,2.894,199,1.771,205,0.781,206,1.663,213,0.888,217,0.656,218,0.854,219,0.914,220,1.344,227,0.685,231,0.928,236,0.759,243,0.523,245,1.405,250,0.685,259,2.369,261,0.901,263,0.977,266,1.072,289,1.831,292,2.116,295,1.593,301,0.68,331,2.799,336,2.749,356,3.369,363,0.529,364,1.76,368,0.928,378,1.2,381,1.454,392,0.642,415,2.618,422,2.189,432,0.781,437,1.059,441,0.914,445,0.67,460,1.688,462,2.495,464,1.486,466,1.757,467,2.015,469,0.943,475,1.266,480,0.67,498,1.702,499,1.409,501,1.913,508,1.297,509,1.991,531,1.702,537,1.986,539,1.675,549,0.834,554,0.752,555,2.613,556,1.409,557,0.901,561,0.719,571,0.642,578,0.725,586,0.901,614,3.662,615,2.753,617,0.824,626,1.152,638,1.757,667,1.581,678,1.276,679,0.834,681,0.789,685,1.256,686,0.738,692,4.892,707,0.713,771,2.324,772,1.192,776,1.625,823,1.504,829,3.611,830,3.013,839,0.774,845,1.061,849,0.928,857,0.876,893,1.015,895,1.192,900,2.451,907,1.117,908,2.324,909,0.745,927,0.865,1000,0.725,1026,3.054,1032,0.914,1058,3.943,1059,2.077,1093,1.24,1124,1.381,1128,1.761,1129,4.808,1142,3.919,1176,0.798,1180,1.117,1208,3.286,1223,1.675,1232,3.202,1254,2.936,1306,0.815,1332,1.117,1424,1.835,1474,2.936,1502,2.451,1509,1.037,1515,1.192,1763,4.816,1793,1.3,1815,1.381,1854,2.49,1855,1.503,1856,1.503,1857,1.152,1858,1.087,1859,1.152,1860,5.235,1861,1.503,1862,2.345,1863,2.345,1864,2.345,1865,2.753,1866,2.711,1867,2.711,1868,3.703,1869,2.711,1870,2.345,1871,2.711,1872,3.202,1873,1.503,1874,1.503,1875,1.503,1876,2.711,1877,1.503,1878,1.503,1879,1.503,1880,2.711,1881,1.503,1882,1.503,1883,1.503,1884,2.711,1885,1.503,1886,1.381,1887,2.49,1888,1.503,1889,1.381,1890,1.503,1891,1.3,1892,1.503,1893,3.401,1894,3.703,1895,3.703,1896,3,1897,3.401,1898,0.943,1899,2.711,1900,1.503,1901,1.503]],["component/28",[3,0.415,4,0.422]],["keyword/28",[62,1.898,76,2.39,98,1.332,100,4.45,692,5.469]],["title/29-1",[98,8.76,146,27.1]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["keyword/29-1",[]],["title/29-2",[233,32.516,1902,46.266]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["keyword/29-2",[]],["title/29-3",[114,21.131,143,31.21,144,27.851]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["keyword/29-3",[]],["title/29-4",[140,19.165,179,31.989]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["keyword/29-4",[]],["title/29-5",[366,31.432]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["keyword/29-5",[]],["title/29-6",[658,49.227]],["name/29-6",[]],["text/29-6",[]],["component/29-6",[]],["keyword/29-6",[]],["title/29-7",[98,8.76,202,38.006]],["name/29-7",[]],["text/29-7",[]],["component/29-7",[]],["keyword/29-7",[]],["title/29-8",[388,39.432,1140,36.354]],["name/29-8",[]],["text/29-8",[]],["component/29-8",[]],["keyword/29-8",[]],["title/29",[323,46.266,492,48.353]],["name/29",[323,2.476]],["text/29",[0,0.506,3,0.248,8,0.572,16,0.796,23,0.489,32,0.598,40,0.635,43,0.769,49,1.112,51,1.002,55,1.125,57,1.17,62,1.58,63,1.088,76,1.677,77,0.394,80,1.035,84,1.296,85,2.221,90,1.287,93,0.598,94,2.141,95,0.46,98,1.525,102,0.471,105,1.21,108,3.854,111,3.273,114,3.63,120,1.417,123,0.598,125,0.628,130,1.107,134,0.884,135,3.114,136,2.291,137,1.027,139,0.496,140,1.531,142,0.784,143,1.626,144,2.379,145,2.658,146,2.164,147,0.7,148,1.787,149,1.527,150,1.795,154,1.207,156,1.027,157,1.24,158,1.081,163,0.784,165,2.825,176,3.363,178,1.01,181,0.577,189,0.907,192,1.214,197,0.673,199,0.463,202,1.682,203,0.609,205,0.616,206,0.801,210,0.796,215,2.404,216,0.743,217,2.169,218,1.24,220,2.654,233,1.035,236,0.598,243,1.312,245,1.887,246,4.705,256,0.598,259,0.536,260,0.836,263,0.769,265,1.792,270,1.903,292,1.416,293,1.24,295,0.509,301,1.372,315,1.369,318,0.857,323,1.473,324,0.691,340,0.817,341,0.665,347,0.572,355,1.088,356,0.88,360,0.7,363,1.067,364,1.266,366,0.823,371,1.081,376,0.582,392,1.609,396,1.224,399,1.123,401,0.857,415,1.091,420,3.498,422,0.7,431,0.784,432,0.616,437,0.463,445,0.528,447,1.464,453,0.682,455,1.21,460,1.383,462,1.609,466,0.562,470,0.622,477,0.604,480,1.68,487,1.718,489,1.803,493,0.549,496,3.571,499,2.291,500,1.561,506,0.987,507,1.17,508,1.044,515,0.517,518,2.258,521,0.836,522,0.72,528,1.123,529,0.817,530,2.981,532,0.622,542,0.562,544,0.557,550,0.756,553,0.682,554,0.592,556,1.958,557,1.308,559,4.514,561,1.803,563,0.536,564,1.088,566,0.691,572,0.513,578,1.053,580,1.062,581,1.799,588,0.691,609,1.578,621,0.8,635,1.255,642,1.539,656,0.8,658,1.792,679,0.657,684,0.836,685,1.745,686,1.85,687,0.88,688,0.769,707,0.562,721,0.7,731,0.7,744,0.836,757,0.732,775,0.572,776,3.28,791,1.21,809,0.857,826,0.784,831,0.88,857,0.691,894,1.444,909,0.587,926,1.224,927,1.745,937,0.732,938,0.628,939,0.587,941,0.769,957,0.857,958,0.857,965,1.369,977,0.977,978,0.939,979,1.024,983,3.775,1016,0.857,1032,0.72,1047,0.977,1053,0.743,1055,1.539,1097,0.907,1140,0.628,1232,1.024,1233,0.857,1235,2.09,1253,0.857,1324,1.622,1332,0.88,1394,2.194,1406,3.189,1414,1.327,1424,0.587,1427,2.225,1433,2.141,1458,0.907,1500,0.817,1557,1.609,1580,1.539,1620,0.977,1681,0.977,1712,0.732,1785,1.671,1820,0.88,1857,0.907,1865,0.88,1896,0.784,1902,2.048,1903,0.817,1904,0.817,1905,1.184,1906,1.088,1907,0.907,1908,0.907,1909,1.184,1910,1.184,1911,2.181,1912,1.184,1913,1.024,1914,2.004,1915,1.024,1916,0.907,1917,1.088,1918,1.799,1919,1.505,1920,1.184,1921,5.472,1922,1.088,1923,1.184,1924,1.184,1925,1.184,1926,1.088,1927,0.836,1928,1.024,1929,1.184,1930,2.181,1931,1.184,1932,0.977,1933,1.184,1934,0.907,1935,3.46,1936,2.181,1937,2.181,1938,2.181,1939,2.181,1940,2.181,1941,2.181,1942,1.184,1943,1.184,1944,1.184,1945,1.184,1946,1.184,1947,2.181,1948,0.977,1949,1.088]],["component/29",[3,0.415,4,0.422]],["keyword/29",[62,1.436,76,1.808,98,1.008,109,4.227,111,3.68,114,2.862,119,3.514]],["title/30-1",[701,42.323,1140,36.354]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["keyword/30-1",[]],["title/30",[701,42.323,702,46.266]],["name/30",[701,1.369,1950,1.647]],["text/30",[3,0.553,16,1.616,23,1.09,45,1.37,62,1.222,69,1.446,70,1.481,76,1.714,95,1.024,98,1.331,102,1.762,108,3.919,111,1.231,114,2.713,117,3.392,130,2.089,140,2.405,144,1.262,147,2.617,148,1.795,149,1.795,150,1.453,154,1.049,177,2.02,192,2.992,199,1.03,205,1.37,206,0.968,207,2.155,210,1.616,220,1.608,245,2.545,259,1.193,261,2.654,266,2.264,267,1.111,285,1.713,292,1.231,295,2.462,324,1.537,364,0.886,368,1.629,378,1.167,397,3.175,420,2.739,434,2.067,438,2.582,446,2.826,447,3.607,460,3.408,461,1.517,462,2.445,466,2.716,475,2.067,488,2.826,492,1.861,503,1.295,506,1.193,507,2.374,508,2.119,530,1.581,536,3.51,541,2.374,561,1.262,562,1.48,563,2.004,569,3.392,586,1.581,588,1.537,612,3.829,658,1.558,674,5.155,701,4.998,702,5.046,735,1.96,748,2.175,752,2.175,795,3.652,830,1.517,834,1.604,848,5.798,879,1.907,887,1.78,890,3.054,902,2.735,908,2.779,1048,4.77,1050,2.99,1053,1.655,1055,3.125,1060,3.125,1108,2.735,1140,1.399,1354,2.516,1372,2.09,1373,3.652,1427,3.384,1502,2.931,1508,2.175,1509,3.054,1555,1.48,1574,2.99,1950,6.393,1951,2.637,1952,2.637,1953,2.637,1954,2.637,1955,2.637,1956,4.067,1957,5.53,1958,4.427,1959,4.427,1960,4.427,1961,4.427,1962,2.422,1963,2.422,1964,4.427,1965,3.829,1966,4.427,1967,4.721,1968,2.422,1969,2.422,1970,2.422,1971,4.427,1972,4.427,1973,4.427,1974,1.96,1975,2.637,1976,2.637,1977,2.422,1978,3.652,1979,2.28,1980,2.637]],["component/30",[3,0.415,4,0.422]],["keyword/30",[62,1.898,76,2.39,674,6.244,702,7.033,1950,7.743]],["title/31-1",[92,31.244,532,35.977]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["keyword/31-1",[]],["title/31-2",[461,47.93]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["keyword/31-2",[]],["title/31-3",[109,44.663]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["keyword/31-3",[]],["title/31-4",[407,58.774]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["keyword/31-4",[]],["title/31-5",[1981,76.497]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["keyword/31-5",[]],["title/31-6",[1982,76.497]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["keyword/31-6",[]],["title/31-7",[1983,72.03]],["name/31-7",[]],["text/31-7",[]],["component/31-7",[]],["keyword/31-7",[]],["title/31-8",[1984,72.03]],["name/31-8",[]],["text/31-8",[]],["component/31-8",[]],["keyword/31-8",[]],["title/31-9",[111,38.883]],["name/31-9",[]],["text/31-9",[]],["component/31-9",[]],["keyword/31-9",[]],["title/31-10",[409,58.774]],["name/31-10",[]],["text/31-10",[]],["component/31-10",[]],["keyword/31-10",[]],["title/31-11",[1985,76.497]],["name/31-11",[]],["text/31-11",[]],["component/31-11",[]],["keyword/31-11",[]],["title/31-12",[1986,76.497]],["name/31-12",[]],["text/31-12",[]],["component/31-12",[]],["keyword/31-12",[]],["title/31-13",[1987,72.03]],["name/31-13",[]],["text/31-13",[]],["component/31-13",[]],["keyword/31-13",[]],["title/31-14",[1988,72.03]],["name/31-14",[]],["text/31-14",[]],["component/31-14",[]],["keyword/31-14",[]],["title/31-15",[1989,76.497]],["name/31-15",[]],["text/31-15",[]],["component/31-15",[]],["keyword/31-15",[]],["title/31-16",[904,61.912]],["name/31-16",[]],["text/31-16",[]],["component/31-16",[]],["keyword/31-16",[]],["title/31-17",[1990,76.497]],["name/31-17",[]],["text/31-17",[]],["component/31-17",[]],["keyword/31-17",[]],["title/31-18",[1991,72.03]],["name/31-18",[]],["text/31-18",[]],["component/31-18",[]],["keyword/31-18",[]],["title/31-19",[1992,76.497]],["name/31-19",[]],["text/31-19",[]],["component/31-19",[]],["keyword/31-19",[]],["title/31-20",[1991,72.03]],["name/31-20",[]],["text/31-20",[]],["component/31-20",[]],["keyword/31-20",[]],["title/31-21",[1993,76.497]],["name/31-21",[]],["text/31-21",[]],["component/31-21",[]],["keyword/31-21",[]],["title/31-22",[1994,76.497]],["name/31-22",[]],["text/31-22",[]],["component/31-22",[]],["keyword/31-22",[]],["title/31-23",[1995,72.03]],["name/31-23",[]],["text/31-23",[]],["component/31-23",[]],["keyword/31-23",[]],["title/31-24",[1996,76.497]],["name/31-24",[]],["text/31-24",[]],["component/31-24",[]],["keyword/31-24",[]],["title/31-25",[119,37.13]],["name/31-25",[]],["text/31-25",[]],["component/31-25",[]],["keyword/31-25",[]],["title/31-26",[1997,72.03]],["name/31-26",[]],["text/31-26",[]],["component/31-26",[]],["keyword/31-26",[]],["title/31-27",[1998,76.497]],["name/31-27",[]],["text/31-27",[]],["component/31-27",[]],["keyword/31-27",[]],["title/31-28",[1999,72.03]],["name/31-28",[]],["text/31-28",[]],["component/31-28",[]],["keyword/31-28",[]],["title/31-29",[2000,72.03]],["name/31-29",[]],["text/31-29",[]],["component/31-29",[]],["keyword/31-29",[]],["title/31-30",[2001,76.497]],["name/31-30",[]],["text/31-30",[]],["component/31-30",[]],["keyword/31-30",[]],["title/31-31",[1016,60.25]],["name/31-31",[]],["text/31-31",[]],["component/31-31",[]],["keyword/31-31",[]],["title/31-32",[109,44.663]],["name/31-32",[]],["text/31-32",[]],["component/31-32",[]],["keyword/31-32",[]],["title/31-33",[1983,72.03]],["name/31-33",[]],["text/31-33",[]],["component/31-33",[]],["keyword/31-33",[]],["title/31-34",[1984,72.03]],["name/31-34",[]],["text/31-34",[]],["component/31-34",[]],["keyword/31-34",[]],["title/31-35",[111,38.883]],["name/31-35",[]],["text/31-35",[]],["component/31-35",[]],["keyword/31-35",[]],["title/31-36",[1987,72.03]],["name/31-36",[]],["text/31-36",[]],["component/31-36",[]],["keyword/31-36",[]],["title/31-37",[1988,72.03]],["name/31-37",[]],["text/31-37",[]],["component/31-37",[]],["keyword/31-37",[]],["title/31-38",[1995,72.03]],["name/31-38",[]],["text/31-38",[]],["component/31-38",[]],["keyword/31-38",[]],["title/31-39",[1996,76.497]],["name/31-39",[]],["text/31-39",[]],["component/31-39",[]],["keyword/31-39",[]],["title/31-40",[119,37.13]],["name/31-40",[]],["text/31-40",[]],["component/31-40",[]],["keyword/31-40",[]],["title/31-41",[1997,72.03]],["name/31-41",[]],["text/31-41",[]],["component/31-41",[]],["keyword/31-41",[]],["title/31-42",[1999,72.03]],["name/31-42",[]],["text/31-42",[]],["component/31-42",[]],["keyword/31-42",[]],["title/31-43",[2000,72.03]],["name/31-43",[]],["text/31-43",[]],["component/31-43",[]],["keyword/31-43",[]],["title/31-44",[2001,76.497]],["name/31-44",[]],["text/31-44",[]],["component/31-44",[]],["keyword/31-44",[]],["title/31",[130,18.465,378,22.386,397,28.057,398,27.125]],["name/31",[398,1.966]],["text/31",[0,0.143,3,0.577,4,0.072,16,0.656,18,0.184,21,3.236,23,0.397,24,1.61,27,1.88,28,0.974,31,0.25,43,0.994,51,2.039,55,0.356,57,1.1,62,0.418,70,2.415,76,1.122,77,1.31,80,0.311,85,2.618,92,2.417,93,0.632,94,0.191,95,0.594,98,1.155,102,0.382,108,1.668,109,2.111,111,1.918,119,2.476,125,0.51,128,1.826,130,2.274,134,1.862,135,0.514,136,0.651,137,0.589,139,0.274,140,1.652,142,0.636,144,0.314,148,1.025,149,1.288,150,0.673,154,0.715,155,1.013,156,0.452,157,0.546,160,2.268,162,0.494,167,0.711,178,2.787,179,0.838,180,0.143,192,1.353,199,1.853,203,0.787,205,0.175,207,0.319,208,0.593,210,1.233,215,0.422,217,1.202,218,0.373,219,0.584,220,1.154,221,0.589,223,0.452,224,0.649,225,0.542,226,0.218,227,0.299,233,0.456,243,1.107,245,1.856,249,0.443,250,0.571,256,0.485,258,0.171,266,0.133,267,0.528,275,1.71,292,1.181,295,1.767,301,0.297,313,1.335,324,0.382,336,1.205,338,0.863,339,0.662,343,0.51,347,0.464,358,1.82,360,3.682,363,1.045,364,1.907,365,0.487,371,0.476,378,0.149,382,0.714,390,0.257,391,0.533,392,2.264,394,2.587,396,1.008,397,0.849,399,0.173,407,1.62,409,1.447,413,0.502,415,0.898,419,0.348,422,0.387,437,3.211,447,0.464,449,0.72,451,0.998,452,0.714,454,0.657,460,1.949,461,1.71,462,2.705,466,1.089,469,1.441,470,1.446,471,0.52,472,0.487,475,0.448,477,3.971,479,0.568,480,1.023,483,1.189,484,2.184,485,0.52,487,2.587,488,0.418,489,0.599,490,0.624,491,0.218,493,1.172,496,1.119,497,1.915,498,1.266,500,1.055,506,2.513,508,0.46,509,0.901,514,0.863,515,3.28,522,1.539,525,0.463,532,3.618,533,1.107,534,0.695,535,0.736,536,1.424,538,1.803,539,1.963,540,3.958,541,2.203,542,1.868,543,0.143,544,0.158,545,0.869,549,1.763,551,0.308,554,0.168,561,1.21,562,0.368,568,0.567,571,0.41,572,0.542,578,0.867,580,1.547,587,0.905,590,0.671,592,1.441,593,0.222,596,2.435,605,1.239,614,0.72,617,0.359,623,0.533,625,0.959,628,0.924,632,1.958,634,0.671,638,0.726,642,0.678,643,1.146,644,0.25,674,0.393,691,0.452,696,0.651,703,0.218,714,1.785,719,0.736,720,1.033,757,0.593,764,2.208,771,0.786,791,0.533,799,0.387,809,1.83,817,0.609,819,1.968,820,0.387,826,1.966,829,0.863,831,0.714,832,0.487,839,0.337,864,0.602,889,0.387,896,2.658,900,0.828,904,1.137,907,1.88,916,1.172,920,4.535,922,2.067,927,0.553,936,0.198,937,0.593,972,0.411,983,0.863,1000,3.881,1008,0.243,1010,0.214,1016,1.484,1024,0.541,1048,2.156,1076,0.93,1095,0.308,1096,0.308,1104,0.931,1108,0.405,1123,1.093,1128,2.778,1140,0.51,1141,0.93,1144,2.323,1156,5.388,1161,1.127,1173,1.491,1212,0.624,1213,0.277,1223,0.405,1234,1.66,1235,0.364,1239,0.541,1255,0.227,1278,2.683,1280,1.167,1287,1.692,1302,0.792,1311,0.761,1318,1.376,1337,0.892,1343,2.272,1346,3.537,1354,0.546,1384,0.308,1391,2.463,1502,0.222,1548,0.257,1574,2.411,1575,1.424,1581,0.308,1608,0.474,1614,0.695,1616,0.831,1617,0.831,1620,1.032,1622,1.985,1623,0.308,1642,2.919,1658,0.602,1665,0.277,1666,0.29,1677,1.692,1678,0.602,1680,0.29,1683,2.005,1693,0.52,1697,0.29,1709,0.602,1712,0.405,1751,0.243,1763,0.792,1784,1.082,1785,1.938,1853,0.567,1857,0.502,1858,0.474,1865,0.487,1872,0.831,1893,0.882,1903,0.452,1981,1.15,1982,0.882,1983,1.985,1984,1.553,1985,1.15,1986,0.882,1987,1.985,1988,1.774,1989,1.15,1990,1.405,1991,1.082,1992,0.602,1993,0.602,1994,1.15,1995,0.831,1997,1.985,1998,0.602,1999,1.323,2000,2.382,2002,2.295,2003,2.295,2004,0.96,2005,0.831,2006,1.796,2007,1.796,2008,0.96,2009,7.059,2010,0.96,2011,0.96,2012,0.96,2013,0.96,2014,0.792,2015,0.882,2016,0.96,2017,0.96,2018,0.96,2019,0.96,2020,1.53,2021,0.96,2022,2.276,2023,0.52,2024,0.308,2025,0.308,2026,0.308,2027,0.96,2028,2.529,2029,0.882,2030,0.96,2031,0.96,2032,0.96,2033,0.831,2034,1.65,2035,0.96,2036,1.796,2037,3.178,2038,0.831,2039,3.178,2040,3.178,2041,1.796,2042,1.796,2043,3.088,2044,1.481,2045,0.602,2046,2.569,2047,0.655,2048,0.655,2049,0.602,2050,1.137,2051,0.655,2052,0.655,2053,0.655,2054,0.655,2055,1.65,2056,1.796,2057,0.96,2058,0.96,2059,2.529,2060,0.96,2061,0.96,2062,0.96,2063,1.985,2064,0.96,2065,0.882,2066,0.96,2067,1.553,2068,0.567,2069,0.487,2070,0.96,2071,0.736,2072,1.15,2073,2.295,2074,0.336,2075,0.336,2076,1.252,2077,0.655,2078,0.655,2079,0.655,2080,1.252,2081,1.252,2082,0.655,2083,0.655,2084,0.655,2085,0.655,2086,0.655,2087,1.082,2088,1.15,2089,1.15,2090,0.52,2091,0.474,2092,0.602,2093,1.15,2094,0.655,2095,0.336,2096,0.308,2097,0.25,2098,0.655]],["component/31",[3,0.415,4,0.422]],["keyword/31",[62,1.635,76,2.059,130,3.276,378,3.971,397,4.978,398,4.812]],["title/32-1",[62,12.484,80,32.516]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["keyword/32-1",[]],["title/32-2",[165,47.327]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["keyword/32-2",[]],["title/32-3",[215,30.106,233,32.516]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["keyword/32-3",[]],["title/32-4",[429,25.067,430,24.843,522,30.77,632,27.734]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["keyword/32-4",[]],["title/32",[62,12.484,233,32.516]],["name/32",[233,1.74]],["text/32",[4,1.282,16,2.194,32,3.033,49,3.062,62,1.899,69,3.295,77,2,80,3.973,93,4.226,96,2.783,98,1.07,102,2.391,114,2.182,125,3.188,140,1.681,143,3.222,144,2.875,146,2.377,196,2.761,213,3.552,215,4.579,221,2.828,222,2.925,228,7.241,233,5.201,245,3.657,250,3.818,268,3.504,315,6.542,317,4.604,424,5.197,429,5.165,430,4.732,433,4.604,498,2.761,522,3.655,556,3.123,623,3.333,632,3.295,656,4.057,721,3.552,982,3.033,1161,3.771,1301,3.904,1396,4.467,2099,6.008,2100,6.008,2101,6.008,2102,6.008,2103,6.008]],["component/32",[3,0.415,4,0.422]],["keyword/32",[100,5.303,233,5.89,250,5.66,2104,12.411]],["title/33-1",[141,26.837,647,30.322,648,28.743,649,29.11]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["keyword/33-1",[]],["title/33-2",[90,29.074,141,36.354]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["keyword/33-2",[]],["title/33-3",[106,48.563]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["keyword/33-3",[]],["title/33",[141,36.354,2105,56.514]],["name/33",[141,1.176,2105,1.828]],["text/33",[4,0.981,8,3.329,46,3.74,55,1.707,62,1.796,93,2.321,96,2.13,98,0.588,102,2.745,106,2.681,108,3.531,141,4.392,146,3.274,157,3.92,168,4.734,196,2.113,206,1.688,210,2.518,221,2.164,222,2.239,227,2.097,241,3.105,243,2.882,258,2.344,265,2.718,266,1.819,289,3.105,343,4.392,366,1.735,379,2.646,394,2.681,398,3.699,429,4.559,430,5.809,437,1.797,439,3.327,447,4.757,470,3.622,475,3.221,487,2.097,571,1.965,593,3.044,604,3.172,647,4.963,648,3.92,649,4.764,865,3.105,1021,4.868,1110,2.935,1217,3.646,1219,3.793,1271,2.757,1381,3.793,1667,3.044,1704,3.044,1915,3.977,2106,4.598,2107,4.598,2108,4.598,2109,3.793,2110,4.224,2111,3.977,2112,4.598,2113,4.598,2114,3.977,2115,4.758,2116,3.977,2117,4.598,2118,4.598,2119,3.977,2120,4.598,2121,4.598,2122,4.598,2123,4.598,2124,4.598]],["component/33",[3,0.415,4,0.422]],["keyword/33",[141,9.604,398,5.586,430,5.116,2105,8.591]],["title/34-1",[114,18.366,176,28.743,420,24.206,1459,35.696]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["keyword/34-1",[]],["title/34-2",[114,30.239]],["name/34-2",[]],["text/34-2",[]],["component/34-2",[]],["keyword/34-2",[]],["title/34-3",[1918,68.694]],["name/34-3",[]],["text/34-3",[]],["component/34-3",[]],["keyword/34-3",[]],["title/34-4",[90,35.34]],["name/34-4",[]],["text/34-4",[]],["component/34-4",[]],["keyword/34-4",[]],["title/34-5",[114,24.878,489,32.789]],["name/34-5",[]],["text/34-5",[]],["component/34-5",[]],["keyword/34-5",[]],["title/34-6",[2125,50.663]],["name/34-6",[]],["text/34-6",[]],["component/34-6",[]],["keyword/34-6",[]],["title/34-7",[90,35.34]],["name/34-7",[]],["text/34-7",[]],["component/34-7",[]],["keyword/34-7",[]],["title/34-8",[114,24.878,2126,62.934]],["name/34-8",[]],["text/34-8",[]],["component/34-8",[]],["keyword/34-8",[]],["title/34-9",[2125,50.663]],["name/34-9",[]],["text/34-9",[]],["component/34-9",[]],["keyword/34-9",[]],["title/34-10",[90,35.34]],["name/34-10",[]],["text/34-10",[]],["component/34-10",[]],["keyword/34-10",[]],["title/34-11",[105,38.006,114,24.878]],["name/34-11",[]],["text/34-11",[]],["component/34-11",[]],["keyword/34-11",[]],["title/34-12",[90,35.34]],["name/34-12",[]],["text/34-12",[]],["component/34-12",[]],["keyword/34-12",[]],["title/34-13",[114,24.878,1919,47.26]],["name/34-13",[]],["text/34-13",[]],["component/34-13",[]],["keyword/34-13",[]],["title/34-14",[2125,50.663]],["name/34-14",[]],["text/34-14",[]],["component/34-14",[]],["keyword/34-14",[]],["title/34-15",[90,35.34]],["name/34-15",[]],["text/34-15",[]],["component/34-15",[]],["keyword/34-15",[]],["title/34-16",[114,24.878,1146,42.323]],["name/34-16",[]],["text/34-16",[]],["component/34-16",[]],["keyword/34-16",[]],["title/34-17",[90,35.34]],["name/34-17",[]],["text/34-17",[]],["component/34-17",[]],["keyword/34-17",[]],["title/34-18",[114,24.878,972,43.006]],["name/34-18",[]],["text/34-18",[]],["component/34-18",[]],["keyword/34-18",[]],["title/34-19",[114,24.878,776,41.074]],["name/34-19",[]],["text/34-19",[]],["component/34-19",[]],["keyword/34-19",[]],["title/34-20",[2125,50.663]],["name/34-20",[]],["text/34-20",[]],["component/34-20",[]],["keyword/34-20",[]],["title/34-21",[90,35.34]],["name/34-21",[]],["text/34-21",[]],["component/34-21",[]],["keyword/34-21",[]],["title/34-22",[114,24.878,391,38.006]],["name/34-22",[]],["text/34-22",[]],["component/34-22",[]],["keyword/34-22",[]],["title/34-23",[90,35.34]],["name/34-23",[]],["text/34-23",[]],["component/34-23",[]],["keyword/34-23",[]],["title/34-24",[98,8.76,114,24.878]],["name/34-24",[]],["text/34-24",[]],["component/34-24",[]],["keyword/34-24",[]],["title/34-25",[114,24.878,1235,38.006]],["name/34-25",[]],["text/34-25",[]],["component/34-25",[]],["keyword/34-25",[]],["title/34-26",[2125,50.663]],["name/34-26",[]],["text/34-26",[]],["component/34-26",[]],["keyword/34-26",[]],["title/34-27",[90,35.34]],["name/34-27",[]],["text/34-27",[]],["component/34-27",[]],["keyword/34-27",[]],["title/34-28",[114,24.878,926,38.461]],["name/34-28",[]],["text/34-28",[]],["component/34-28",[]],["keyword/34-28",[]],["title/34-29",[2125,50.663]],["name/34-29",[]],["text/34-29",[]],["component/34-29",[]],["keyword/34-29",[]],["title/34-30",[90,35.34]],["name/34-30",[]],["text/34-30",[]],["component/34-30",[]],["keyword/34-30",[]],["title/34-31",[114,24.878,1332,50.935]],["name/34-31",[]],["text/34-31",[]],["component/34-31",[]],["keyword/34-31",[]],["title/34-32",[2125,50.663]],["name/34-32",[]],["text/34-32",[]],["component/34-32",[]],["keyword/34-32",[]],["title/34-33",[114,24.878,220,24.878]],["name/34-33",[]],["text/34-33",[]],["component/34-33",[]],["keyword/34-33",[]],["title/34-34",[2125,50.663]],["name/34-34",[]],["text/34-34",[]],["component/34-34",[]],["keyword/34-34",[]],["title/34-35",[90,35.34]],["name/34-35",[]],["text/34-35",[]],["component/34-35",[]],["keyword/34-35",[]],["title/34-36",[114,24.878,941,44.515]],["name/34-36",[]],["text/34-36",[]],["component/34-36",[]],["keyword/34-36",[]],["title/34-37",[2125,50.663]],["name/34-37",[]],["text/34-37",[]],["component/34-37",[]],["keyword/34-37",[]],["title/34-38",[90,35.34]],["name/34-38",[]],["text/34-38",[]],["component/34-38",[]],["keyword/34-38",[]],["title/34-39",[114,24.878,1427,34.588]],["name/34-39",[]],["text/34-39",[]],["component/34-39",[]],["keyword/34-39",[]],["title/34-40",[1918,68.694]],["name/34-40",[]],["text/34-40",[]],["component/34-40",[]],["keyword/34-40",[]],["title/34-41",[3,10.601,85,18.982,114,18.366,1427,25.534]],["name/34-41",[]],["text/34-41",[]],["component/34-41",[]],["keyword/34-41",[]],["title/34-42",[90,35.34]],["name/34-42",[]],["text/34-42",[]],["component/34-42",[]],["keyword/34-42",[]],["title/34-43",[114,21.131,374,43.264,1427,29.38]],["name/34-43",[]],["text/34-43",[]],["component/34-43",[]],["keyword/34-43",[]],["title/34-44",[90,35.34]],["name/34-44",[]],["text/34-44",[]],["component/34-44",[]],["keyword/34-44",[]],["title/34-45",[114,21.131,1427,29.38,1433,33.072]],["name/34-45",[]],["text/34-45",[]],["component/34-45",[]],["keyword/34-45",[]],["title/34-46",[2125,50.663]],["name/34-46",[]],["text/34-46",[]],["component/34-46",[]],["keyword/34-46",[]],["title/34-47",[90,35.34]],["name/34-47",[]],["text/34-47",[]],["component/34-47",[]],["keyword/34-47",[]],["title/34-48",[114,21.131,1427,29.38,1950,43.264]],["name/34-48",[]],["text/34-48",[]],["component/34-48",[]],["keyword/34-48",[]],["title/34-49",[90,35.34]],["name/34-49",[]],["text/34-49",[]],["component/34-49",[]],["keyword/34-49",[]],["title/34-50",[114,18.366,634,27.125,1223,31.244,1427,25.534]],["name/34-50",[]],["text/34-50",[]],["component/34-50",[]],["keyword/34-50",[]],["title/34-51",[80,32.516,114,24.878]],["name/34-51",[]],["text/34-51",[]],["component/34-51",[]],["keyword/34-51",[]],["title/34-52",[2125,50.663]],["name/34-52",[]],["text/34-52",[]],["component/34-52",[]],["keyword/34-52",[]],["title/34-53",[90,35.34]],["name/34-53",[]],["text/34-53",[]],["component/34-53",[]],["keyword/34-53",[]],["title/34",[114,24.878,143,36.744]],["name/34",[114,0.805,143,1.188]],["text/34",[3,0.776,16,0.592,35,0.367,40,0.462,43,1.054,45,0.843,49,2.812,51,1.335,60,3.168,62,1.257,68,2.988,70,0.769,76,0.957,79,0.8,80,1.637,84,2.05,85,1.726,90,1.77,93,0.995,95,0.173,98,1.344,100,1.36,102,0.499,105,1.093,108,3.915,109,0.672,111,0.92,113,1.704,114,3.107,115,0.711,117,0.341,120,0.56,124,0.55,125,0.861,126,2.112,130,2.431,133,0.227,134,0.508,136,1.356,137,0.59,139,0.186,140,1.863,144,0.413,145,2.065,146,0.341,147,3.45,148,4.172,150,0.146,156,1.082,158,0.621,162,0.444,167,1.96,174,0.541,176,0.253,178,3.652,179,0.402,180,0.19,197,2.727,199,0.77,204,0.259,208,0.275,210,0.315,214,0.484,215,1.276,217,2.851,220,0.948,227,2.516,233,0.211,236,0.225,245,2.661,249,1.961,256,0.225,264,0.234,266,0.176,267,0.363,288,0.193,292,1.073,309,1.22,311,2.844,324,0.503,336,0.453,338,2.003,341,0.704,347,0.783,363,0.571,364,1.855,374,1.465,378,2.583,379,0.256,386,0.532,391,1.275,392,0.982,395,1.961,397,1.275,398,0.462,412,1.741,415,0.985,419,0.457,420,1.1,422,2.836,431,1.304,432,0.448,434,0.208,436,1.854,437,1.446,438,0.259,447,0.416,451,0.42,453,0.496,454,0.234,459,3.541,462,1.36,478,0.322,479,0.51,480,0.384,487,1.048,489,2.476,493,0.399,494,1.074,495,0.595,497,0.439,498,1.199,499,0.448,503,1.694,504,0.711,506,0.39,515,1.267,517,2.397,518,0.752,522,2.537,528,5.786,530,1.908,539,1.002,544,0.209,554,0.985,557,0.267,561,0.413,563,2.571,569,0.66,580,1.119,586,1.741,592,0.541,595,0.295,603,0.271,612,0.385,617,0.244,634,3.363,635,3.176,637,0.322,658,3.786,667,1.522,671,0.746,674,0.517,678,0.209,685,1.345,686,1.426,689,0.683,691,0.595,692,1.811,697,0.225,702,0.847,705,0.353,707,2.619,726,0.746,744,0.314,774,2.618,775,1.402,776,1.181,817,3.053,819,3.136,824,0.641,830,0.496,834,0.524,870,2.84,872,1.467,879,0.624,886,0.353,888,0.409,889,0.959,894,0.571,897,0.66,904,0.641,912,1.034,920,0.688,926,1.465,927,1.323,939,0.804,941,1.494,942,0.608,943,2.755,955,0.331,960,1.084,961,0.683,965,1.019,972,0.787,974,2.844,976,4.552,977,0.711,982,1.466,983,4.418,1000,0.416,1005,0.624,1008,2.101,1010,0.55,1032,0.271,1039,1.961,1050,0.847,1093,0.711,1097,0.961,1136,2.434,1146,0.775,1206,0.353,1223,3.509,1233,1.174,1235,1.448,1300,1.467,1304,0.462,1306,0.467,1311,0.683,1324,0.331,1325,0.66,1332,0.932,1343,1.896,1376,0.409,1391,0.307,1406,0.624,1424,2.651,1427,2.519,1433,1.65,1458,1.51,1459,0.608,1494,0.409,1502,0.83,1548,1.761,1555,0.484,1574,0.582,1649,0.409,1656,0.409,1712,1.217,1919,1.359,1922,2.667,1949,1.49,1950,0.932,1967,0.367,1978,0.367,1979,1.084,2043,0.746,2046,0.746,2069,2.159,2097,0.932,2126,2.397,2127,0.862,2128,0.683,2129,1.403,2130,1.084,2131,0.385,2132,0.862,2133,1.623,2134,0.862,2135,0.862,2136,0.862,2137,1.623,2138,1.254,2139,2.642,2140,2.564,2141,1.443,2142,0.711,2143,2.667,2144,0.445,2145,0.409,2146,0.445,2147,0.341,2148,0.445,2149,0.445,2150,0.353,2151,4.99,2152,2.564,2153,0.353,2154,0.862,2155,0.284,2156,0.409,2157,1.623,2158,1.254,2159,0.367,2160,0.409,2161,0.445,2162,0.445,2163,1.287,2164,2.112,2165,0.792,2166,0.711,2167,0.862,2168,0.746,2169,2.667,2170,3.448,2171,0.862,2172,0.385,2173,0.445,2174,0.445,2175,0.445,2176,2.299,2177,0.353,2178,0.792,2179,0.445,2180,0.445,2181,1.152,2182,0.385,2183,0.445,2184,0.792,2185,0.445,2186,0.862,2187,0.409]],["component/34",[3,0.415,4,0.422]],["keyword/34",[92,7.001,114,5.574,143,8.233]],["title/35-1",[77,22.809,98,8.76]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["keyword/35-1",[]],["title/35-2",[648,47.327]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["keyword/35-2",[]],["title/35-3",[2188,72.03]],["name/35-3",[]],["text/35-3",[]],["component/35-3",[]],["keyword/35-3",[]],["title/35-4",[2189,72.03]],["name/35-4",[]],["text/35-4",[]],["component/35-4",[]],["keyword/35-4",[]],["title/35",[92,31.244,648,38.936]],["name/35",[92,1.01,648,1.259]],["text/35",[18,2.938,26,2.73,51,2.462,62,0.976,67,4.419,76,1.771,77,3.012,84,2.289,85,3.715,98,1.474,102,3.6,128,2.289,130,3.614,135,3.169,139,2.243,142,3.547,150,1.758,154,3.072,178,2.481,192,3.623,210,1.956,220,1.945,265,3.167,270,3.363,288,2.321,295,2.305,360,3.167,383,3.124,392,3.866,434,2.501,449,3.083,479,3.167,498,3.547,514,3.695,531,3.363,532,4.053,538,2.705,542,2.543,549,2.972,591,4.419,626,4.105,638,3.663,645,3.083,648,4.386,721,3.167,732,4.634,754,3.983,819,2.679,823,2.972,839,3.972,936,3.167,1054,4.105,1411,5.914,1595,4.105,1704,3.547,2188,4.634,2189,7.825,2190,5.357,2191,4.921,2192,5.357,2193,5.357,2194,5.357,2195,5.357,2196,5.357]],["component/35",[3,0.415,4,0.422]],["keyword/35",[62,2.261,76,2.847,92,5.66,648,7.053]],["title/36-1",[98,7.441,475,27.172,580,28.333]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["keyword/36-1",[]],["title/36-2",[98,7.441,154,23.159,1010,37.148]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["keyword/36-2",[]],["title/36",[394,39.953,580,33.356]],["name/36",[394,1.292,580,1.079]],["text/36",[0,1.357,21,6.661,23,2.135,28,1.723,55,1.917,77,1.719,85,2.449,95,1.234,98,1.549,108,1.762,109,3.5,111,3.861,119,1.417,130,3.235,132,1.806,134,1.288,139,1.33,140,0.889,149,2.646,150,2.141,154,3.873,178,1.472,192,1.272,210,1.16,235,2.064,243,1.106,244,2.242,245,1.206,266,1.257,267,2.177,292,1.483,295,1.367,364,1.068,366,1.199,392,1.357,394,6.656,434,3.047,437,2.019,449,3.756,451,1.547,454,2.712,460,2.355,462,1.357,463,2.434,464,1.742,465,2.362,466,3.097,475,3.047,479,3.858,486,2.192,493,1.472,496,1.406,497,1.619,502,1.933,503,1.56,504,2.621,506,1.438,507,1.704,508,1.52,509,1.396,510,2.621,511,2.748,512,2.621,513,2.621,537,1.704,542,2.451,544,1.495,545,1.806,562,1.783,571,1.357,578,2.493,580,5.866,616,2.192,617,1.742,626,2.434,628,3.359,638,2.451,646,2.899,648,2.935,649,2.973,650,3.645,652,1.963,677,2.103,713,1.508,775,1.533,849,1.963,879,2.299,924,2.519,938,2.741,1016,2.299,1083,2.519,1165,3.958,1212,2.064,1263,2.621,1300,3.297,1500,3.563,1548,2.434,1562,2.748,1666,2.748,1903,2.192,2189,2.748,2197,3.177,2198,3.177,2199,2.748,2200,3.177,2201,3.177]],["component/36",[3,0.415,4,0.422]],["keyword/36",[62,2.261,76,2.847,394,7.237,580,6.042]],["title/37-1",[96,23.428,215,22.225,217,22.067,696,26.291]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["keyword/37-1",[]],["title/37-2",[215,25.572,217,25.39,707,27.619]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["keyword/37-2",[]],["title/37-3",[8,24.412,144,24.206,215,22.225,217,22.067]],["name/37-3",[]],["text/37-3",[]],["component/37-3",[]],["keyword/37-3",[]],["title/37-4",[26,34.919,439,49.568]],["name/37-4",[]],["text/37-4",[]],["component/37-4",[]],["keyword/37-4",[]],["title/37-5",[422,40.499,1902,46.266]],["name/37-5",[]],["text/37-5",[]],["component/37-5",[]],["keyword/37-5",[]],["title/37-6",[2202,76.497]],["name/37-6",[]],["text/37-6",[]],["component/37-6",[]],["keyword/37-6",[]],["title/37",[62,9.216,100,21.61,215,22.225,217,22.067]],["name/37",[100,0.678,215,0.698,217,0.693]],["text/37",[8,2.19,16,1.657,49,2.313,54,2.848,55,1.684,62,1.786,95,1.763,96,3.164,98,1.05,100,3.904,108,2.33,114,1.648,136,2.359,140,2.297,143,2.434,144,2.172,181,3.325,196,2.085,215,4.306,217,4.662,233,4.651,245,3.909,250,3.115,258,3.481,266,1.795,305,4.521,309,2.408,318,3.283,352,3.598,399,5.659,422,5.401,432,2.359,437,1.773,438,2.646,452,3.374,480,2.023,487,2.069,571,1.939,572,4.763,636,2.848,652,2.803,667,2.646,697,2.291,721,2.682,737,3.374,763,3.925,830,2.612,926,2.547,929,4.168,930,4.168,931,4.168,932,4.168,1143,3.925,1366,3.743,1628,4.168,1902,5.546,1908,3.477,2202,6.274,2203,4.168,2204,3.283,2205,4.538,2206,4.538,2207,4.538,2208,4.538,2209,4.538,2210,4.538,2211,4.538,2212,4.538,2213,4.538,2214,4.168,2215,4.538,2216,4.168,2217,4.538,2218,4.538,2219,4.538]],["component/37",[3,0.415,4,0.422]],["keyword/37",[62,1.898,76,2.39,100,4.45,215,4.577,217,4.544]],["title/38-1",[677,55.13]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["keyword/38-1",[]],["title/38-2",[256,42.042]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["keyword/38-2",[]],["title/38-3",[363,29.296]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["keyword/38-3",[]],["title/38-4",[98,8.76,654,47.26]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["keyword/38-4",[]],["title/38-5",[77,19.374,98,7.441,654,40.143]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["keyword/38-5",[]],["title/38-6",[3,8.401,4,8.553,76,9.197,769,31.783,1278,25.162,1321,29.801]],["name/38-6",[]],["text/38-6",[]],["component/38-6",[]],["keyword/38-6",[]],["title/38-7",[62,8.149,98,5.718,392,19.109,436,28.549,1278,28.074]],["name/38-7",[]],["text/38-7",[]],["component/38-7",[]],["keyword/38-7",[]],["title/38-8",[62,8.149,98,5.718,207,21.775,392,19.109,1278,28.074]],["name/38-8",[]],["text/38-8",[]],["component/38-8",[]],["keyword/38-8",[]],["title/38",[21,33.483,98,6.467,392,21.61,1278,31.748]],["name/38",[98,0.203,392,0.678,1278,0.997]],["text/38",[0,0.489,3,1.214,4,0.451,11,1.202,16,0.772,18,2.357,20,0.808,21,1.95,23,0.473,24,0.621,26,0.584,28,0.621,29,2.548,32,0.578,37,0.719,42,2.131,45,0.595,51,0.972,55,0.425,57,0.614,62,1.056,70,0.383,72,1.374,76,2.074,77,3.492,85,2.894,86,0.758,87,1.744,95,0.445,98,1.543,105,1.173,108,1.826,109,0.614,111,0.987,119,1.314,130,2.513,131,0.584,137,1.387,140,1.358,144,0.548,149,0.464,150,1.203,151,1.374,154,0.456,155,0.758,160,1.563,166,0.79,178,3.781,179,0.535,192,1.721,199,0.447,200,1.286,203,1.516,204,0.668,205,1.531,206,0.42,207,1.434,210,1.773,218,0.651,220,1.07,222,0.557,226,1.914,227,2.214,235,0.744,243,0.736,245,0.435,255,0.877,256,0.578,259,1.333,264,1.926,266,0.453,267,0.483,277,0.707,288,0.496,292,0.535,295,1.267,301,0.518,303,1.53,309,1.122,314,0.99,343,3.075,347,1.021,363,1.512,364,2.593,365,0.851,370,0.79,378,1.902,392,4.568,396,0.643,397,0.635,432,0.595,434,1.376,436,1.35,437,1.68,440,2.615,444,1.25,445,1.314,451,0.557,452,0.851,455,1.173,460,2.44,461,1.696,462,1.259,464,0.628,466,1.398,470,1.547,472,2.19,479,2.168,488,2.744,489,0.548,490,0.744,496,0.507,500,1.088,503,0.562,506,0.518,507,1.967,508,1.755,509,0.503,522,1.286,525,2.079,532,3.917,539,0.707,540,3.57,542,2.04,544,1.387,545,1.202,561,0.548,562,1.187,571,1.259,572,0.496,578,0.553,590,1.134,591,0.944,592,4.115,593,0.758,608,0.589,614,0.659,620,0.908,628,0.589,632,2.663,637,0.828,638,0.543,640,0.877,641,0.908,646,0.643,649,0.659,650,0.808,654,4.748,662,0.828,665,0.877,667,1.718,677,0.758,678,0.539,679,0.635,689,1.677,696,0.595,697,0.578,705,0.908,707,1.004,708,3.546,709,1.62,710,1.233,713,0.543,716,0.773,717,0.808,720,1.428,728,1.428,731,1.25,743,0.758,766,0.99,769,1.677,799,1.25,820,1.741,821,1.233,827,3.11,833,2.131,834,0.697,836,0.79,845,0.808,876,0.908,878,0.877,889,0.677,908,0.719,914,0.773,938,1.122,966,1.492,996,1.052,1000,0.553,1055,0.808,1084,0.877,1104,1.792,1158,0.758,1173,0.744,1209,0.851,1213,0.944,1278,7.013,1280,2.793,1282,0.944,1300,1.35,1301,0.744,1400,1.62,1450,0.851,1451,0.908,1452,0.851,1537,0.828,1555,2.059,1557,1.563,1599,0.99,1600,0.99,1601,0.99,1602,0.99,1603,0.908,1620,1.744,1630,1.677,1632,0.877,1667,1.4,1670,0.944,1671,1.942,1679,3.718,1683,0.908,1693,1.677,1710,1.052,1711,0.677,1766,1.052,1927,0.808,2023,0.908,2067,1.829,2072,1.052,2142,1.744,2166,0.944,2220,2.115,2221,2.115,2222,0.908,2223,1.145,2224,1.145,2225,0.99,2226,1.052,2227,0.99,2228,1.145,2229,0.99,2230,2.115,2231,4.856,2232,1.052,2233,2.115,2234,1.145,2235,2.115,2236,1.145,2237,1.145,2238,2.115,2239,2.115,2240,1.052,2241,1.145,2242,1.145,2243,1.052,2244,1.052,2245,1.145,2246,1.145,2247,1.145,2248,2.43,2249,2.115,2250,2.115,2251,1.145,2252,0.99,2253,0.99,2254,1.145,2255,1.145,2256,1.145,2257,1.145]],["component/38",[3,0.415,4,0.422]],["keyword/38",[21,6.895,62,1.898,76,2.39,98,1.332,1278,6.538]],["title/39-1",[77,14.889,98,5.718,176,25.417,420,21.404,1459,31.564]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["keyword/39-1",[]],["title/39-2",[77,22.809,98,8.76]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["keyword/39-2",[]],["title/39-3",[1918,68.694]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["keyword/39-3",[]],["title/39-4",[90,35.34]],["name/39-4",[]],["text/39-4",[]],["component/39-4",[]],["keyword/39-4",[]],["title/39-5",[77,19.374,98,7.441,1146,35.95]],["name/39-5",[]],["text/39-5",[]],["component/39-5",[]],["keyword/39-5",[]],["title/39-6",[90,35.34]],["name/39-6",[]],["text/39-6",[]],["component/39-6",[]],["keyword/39-6",[]],["title/39",[77,19.374,98,7.441,143,31.21]],["name/39",[77,0.529,98,0.203,143,0.851]],["text/39",[3,0.475,21,2.579,26,1.156,37,2.445,53,1.424,76,1.175,77,2.809,79,1.448,84,1.664,86,1.501,90,0.962,98,1.358,108,4.006,128,2.188,133,1.156,136,1.179,140,1.914,145,2.3,147,3.027,148,4.504,150,0.744,152,1.564,157,1.289,167,1.289,176,1.289,178,4.49,197,2.214,199,2.674,204,1.323,207,3.331,217,1.7,220,2.206,227,1.034,231,2.407,245,0.861,249,1.532,281,2.531,336,1.191,338,1.564,364,1.31,378,1.004,391,1.258,392,0.969,412,1.36,420,3.274,422,2.303,436,3.269,437,3.575,470,1.191,474,1.532,478,1.641,480,1.011,483,1.501,489,1.085,490,1.474,501,3.614,518,2.335,522,3.115,528,5.105,530,2.335,538,1.967,539,1.401,541,1.216,563,2.75,573,2.818,580,2.958,603,1.38,634,2.089,638,1.849,646,4.193,648,2.214,649,1.305,658,2.303,667,2.272,685,1.051,686,1.114,707,1.076,771,1.424,774,4.295,775,1.095,817,2.493,818,2.445,819,2.561,823,1.258,824,1.686,842,3.369,843,1.871,844,1.871,848,1.962,870,1.401,909,1.931,943,1.424,960,4.429,961,3.089,972,2.445,983,1.564,1026,1.871,1039,1.532,1104,1.38,1142,1.962,1146,3.163,1208,3.814,1223,1.401,1278,3.214,1301,1.474,1373,1.871,1424,1.931,1459,1.601,1498,1.962,1502,1.501,1679,1.962,1712,3.163,1773,4.704,2130,3.369,2141,2.445,2143,2.083,2169,2.083,2178,2.083,2187,2.083,2258,2.268,2259,2.268,2260,1.962,2261,2.083,2262,3.578,2263,2.083,2264,1.738,2265,9.438,2266,2.268,2267,2.268,2268,4.704,2269,4.429,2270,3.896,2271,1.962,2272,2.083,2273,1.962,2274,2.268,2275,1.871,2276,2.268,2277,2.268,2278,3.896,2279,2.268,2280,2.268,2281,3.896,2282,2.268,2283,2.268,2284,2.268,2285,2.268,2286,2.268]],["component/39",[3,0.415,4,0.422]],["keyword/39",[77,4.132,92,5.66,98,1.587,143,6.656]],["title/40-1",[148,27.777,1234,49.568]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["keyword/40-1",[]],["title/40-2",[197,33.072,249,39.299,267,24.53]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["keyword/40-2",[]],["title/40-3",[197,33.072,267,24.53,301,26.337]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["keyword/40-3",[]],["title/40",[92,31.244,1234,49.568]],["name/40",[2287,3.666]],["text/40",[16,1.747,70,0.968,77,2.62,80,2.903,90,1.228,98,0.37,108,3.201,114,1.737,119,1.29,132,1.644,140,2.721,147,1.71,148,3.436,165,1.644,167,4.472,197,2.719,210,1.747,215,1.272,217,4.093,230,1.88,236,1.461,245,1.816,265,1.71,267,2.578,299,1.996,331,3.778,363,1.018,364,0.973,381,1.552,391,1.605,420,1.385,470,1.52,487,2.789,497,3.621,498,4.606,501,5.553,506,1.31,522,5.156,528,5.676,535,2.217,541,2.566,544,1.362,571,2.044,578,1.397,590,1.552,634,1.552,707,3.372,716,1.954,721,1.71,747,2.387,791,2.654,799,1.71,817,5.113,818,3.839,819,2.393,833,2.094,834,1.76,870,4.389,909,3.521,919,1.788,920,2.623,926,1.624,927,1.665,940,2.387,983,3.3,1000,2.309,1050,1.954,1066,3.167,1199,2.151,1234,4.425,1235,1.605,1239,6.491,1240,2.658,1293,3.946,1322,1.788,1387,2.503,1391,1.996,1414,1.76,1424,1.434,1461,2.387,1548,2.217,1580,2.042,1784,2.503,1865,2.151,2090,5.634,2091,3.461,2092,6.527,2125,2.911,2288,2.658,2289,2.658,2290,2.894,2291,2.894,2292,2.894,2293,2.894,2294,2.894,2295,2.894,2296,2.894,2297,4.395,2298,7.869,2299,7.228,2300,4.784,2301,4.784,2302,4.395,2303,4.395,2304,2.894,2305,2.658,2306,4.784,2307,5.29,2308,2.894,2309,2.894,2310,2.658,2311,2.503,2312,2.894,2313,4.395,2314,2.151,2315,2.894]],["component/40",[3,0.415,4,0.422]],["keyword/40",[62,2.797,76,3.522,1234,11.106]],["title/41-1",[76,15.72,2316,37.149]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["keyword/41-1",[]],["title/41-2",[210,12.12,540,15.888,552,20.508,578,16.023,710,19.359,1716,24.68,2316,18,2317,33.198]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["keyword/41-2",[]],["title/41-3",[1557,44.188]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["keyword/41-3",[]],["title/41-4",[750,48.563]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["keyword/41-4",[]],["title/41-5",[131,14.439,219,17.235,470,14.877,480,12.631,490,18.407,684,19.994,710,16.52,1278,17.783,1337,16.52,2316,15.361]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["keyword/41-5",[]],["title/41-6",[1557,44.188]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["keyword/41-6",[]],["title/41-7",[750,48.563]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["keyword/41-7",[]],["title/41-8",[540,17.381,710,21.178,799,21.468,992,31.412,2316,19.692,2318,31.412,2319,27.828]],["name/41-8",[]],["text/41-8",[]],["component/41-8",[]],["keyword/41-8",[]],["title/41-9",[1557,44.188]],["name/41-9",[]],["text/41-9",[]],["component/41-9",[]],["keyword/41-9",[]],["title/41-10",[750,48.563]],["name/41-10",[]],["text/41-10",[]],["component/41-10",[]],["keyword/41-10",[]],["title/41-11",[76,7.014,340,21.088,449,17.595,515,13.338,540,14.631,710,17.827,826,20.238,1271,18.328,2316,16.576]],["name/41-11",[]],["text/41-11",[]],["component/41-11",[]],["keyword/41-11",[]],["title/41-12",[1557,44.188]],["name/41-12",[]],["text/41-12",[]],["component/41-12",[]],["keyword/41-12",[]],["title/41-13",[750,48.563]],["name/41-13",[]],["text/41-13",[]],["component/41-13",[]],["keyword/41-13",[]],["title/41-14",[]],["name/41-14",[]],["text/41-14",[]],["component/41-14",[]],["keyword/41-14",[]],["title/41-15",[70,11.106,415,16.604,486,22.9,540,15.888,710,19.359,1722,21.977,2316,18,2320,25.438]],["name/41-15",[]],["text/41-15",[]],["component/41-15",[]],["keyword/41-15",[]],["title/41-16",[1557,44.188]],["name/41-16",[]],["text/41-16",[]],["component/41-16",[]],["keyword/41-16",[]],["title/41-17",[750,48.563]],["name/41-17",[]],["text/41-17",[]],["component/41-17",[]],["keyword/41-17",[]],["title/41-18",[135,13.631,415,16.604,710,19.359,1820,24.68,2316,18,2320,25.438,2321,25.438,2322,28.714]],["name/41-18",[]],["text/41-18",[]],["component/41-18",[]],["keyword/41-18",[]],["title/41-19",[1557,44.188]],["name/41-19",[]],["text/41-19",[]],["component/41-19",[]],["keyword/41-19",[]],["title/41-20",[750,48.563]],["name/41-20",[]],["text/41-20",[]],["component/41-20",[]],["keyword/41-20",[]],["title/41-21",[245,13.786,247,24.042,710,21.178,1716,27,2316,19.692,2323,29.957,2324,33.361]],["name/41-21",[]],["text/41-21",[]],["component/41-21",[]],["keyword/41-21",[]],["title/41-22",[1557,44.188]],["name/41-22",[]],["text/41-22",[]],["component/41-22",[]],["keyword/41-22",[]],["title/41-23",[750,48.563]],["name/41-23",[]],["text/41-23",[]],["component/41-23",[]],["keyword/41-23",[]],["title/41-24",[10,30.495,11,18.866,540,15.888,710,31.21,2316,18,2325,24.68,2326,30.495]],["name/41-24",[]],["text/41-24",[]],["component/41-24",[]],["keyword/41-24",[]],["title/41-25",[1557,44.188]],["name/41-25",[]],["text/41-25",[]],["component/41-25",[]],["keyword/41-25",[]],["title/41-26",[750,48.563]],["name/41-26",[]],["text/41-26",[]],["component/41-26",[]],["keyword/41-26",[]],["title/41-27",[540,15.888,632,18.204,710,19.359,1716,24.68,2316,18,2327,30.495,2328,33.198,2329,30.495]],["name/41-27",[]],["text/41-27",[]],["component/41-27",[]],["keyword/41-27",[]],["title/41-28",[1557,44.188]],["name/41-28",[]],["text/41-28",[]],["component/41-28",[]],["keyword/41-28",[]],["title/41-29",[750,48.563]],["name/41-29",[]],["text/41-29",[]],["component/41-29",[]],["keyword/41-29",[]],["title/41-30",[150,10.893,154,13.211,245,12.601,246,19.359,506,15.024,912,27.384,1280,21.57,2316,18]],["name/41-30",[]],["text/41-30",[]],["component/41-30",[]],["keyword/41-30",[]],["title/41-31",[1557,44.188]],["name/41-31",[]],["text/41-31",[]],["component/41-31",[]],["keyword/41-31",[]],["title/41-32",[750,48.563]],["name/41-32",[]],["text/41-32",[]],["component/41-32",[]],["keyword/41-32",[]],["title/41-33",[3,6.407,4,6.523,128,13.062,149,12.394,219,18.598,710,17.827,2316,16.576,2330,26.442,2331,28.082]],["name/41-33",[]],["text/41-33",[]],["component/41-33",[]],["keyword/41-33",[]],["title/41-34",[1557,44.188]],["name/41-34",[]],["text/41-34",[]],["component/41-34",[]],["keyword/41-34",[]],["title/41-35",[750,48.563]],["name/41-35",[]],["text/41-35",[]],["component/41-35",[]],["keyword/41-35",[]],["title/41-36",[]],["name/41-36",[]],["text/41-36",[]],["component/41-36",[]],["keyword/41-36",[]],["title/41-37",[243,9.19,248,16.305,477,13.453,506,11.946,594,18.207,1108,27.375,2316,14.312,2319,20.225,2332,22.83,2333,24.246]],["name/41-37",[]],["text/41-37",[]],["component/41-37",[]],["keyword/41-37",[]],["title/41-38",[1557,44.188]],["name/41-38",[]],["text/41-38",[]],["component/41-38",[]],["keyword/41-38",[]],["title/41-39",[750,48.563]],["name/41-39",[]],["text/41-39",[]],["component/41-39",[]],["keyword/41-39",[]],["title/41-40",[477,14.439,506,12.821,710,16.52,920,15.535,2316,15.361,2318,24.504,2319,21.708,2334,28.33,2335,24.504,2336,28.33]],["name/41-40",[]],["text/41-40",[]],["component/41-40",[]],["keyword/41-40",[]],["title/41-41",[1557,44.188]],["name/41-41",[]],["text/41-41",[]],["component/41-41",[]],["keyword/41-41",[]],["title/41-42",[750,48.563]],["name/41-42",[]],["text/41-42",[]],["component/41-42",[]],["keyword/41-42",[]],["title/41-43",[]],["name/41-43",[]],["text/41-43",[]],["component/41-43",[]],["keyword/41-43",[]],["title/41-44",[76,7.014,140,8.552,343,16.222,506,13.836,532,16.053,710,17.827,2316,16.576,2337,30.572,2338,30.572]],["name/41-44",[]],["text/41-44",[]],["component/41-44",[]],["keyword/41-44",[]],["title/41-45",[1557,44.188]],["name/41-45",[]],["text/41-45",[]],["component/41-45",[]],["keyword/41-45",[]],["title/41-46",[750,48.563]],["name/41-46",[]],["text/41-46",[]],["component/41-46",[]],["keyword/41-46",[]],["title/41-47",[4,6.045,149,11.486,220,10.287,245,10.754,246,16.52,540,13.558,710,16.52,1255,19.131,1266,26.023,2316,15.361]],["name/41-47",[]],["text/41-47",[]],["component/41-47",[]],["keyword/41-47",[]],["title/41-48",[1557,44.188]],["name/41-48",[]],["text/41-48",[]],["component/41-48",[]],["keyword/41-48",[]],["title/41-49",[750,48.563]],["name/41-49",[]],["text/41-49",[]],["component/41-49",[]],["keyword/41-49",[]],["title/41-50",[4,5.272,51,11.355,246,14.408,363,8.692,540,11.824,710,14.408,752,20.38,1255,16.685,1787,21.37,1802,22.696,2316,13.397,2339,24.708]],["name/41-50",[]],["text/41-50",[]],["component/41-50",[]],["keyword/41-50",[]],["title/41-51",[1557,44.188]],["name/41-51",[]],["text/41-51",[]],["component/41-51",[]],["keyword/41-51",[]],["title/41-52",[3,5.532,135,10.838,220,9.584,246,15.392,415,13.202,540,12.632,710,15.392,1255,17.824,2316,14.312,2340,22.83,2341,24.246]],["name/41-52",[]],["text/41-52",[]],["component/41-52",[]],["keyword/41-52",[]],["title/41-53",[1557,44.188]],["name/41-53",[]],["text/41-53",[]],["component/41-53",[]],["keyword/41-53",[]],["title/41-54",[750,48.563]],["name/41-54",[]],["text/41-54",[]],["component/41-54",[]],["keyword/41-54",[]],["title/41-55",[3,5.178,85,9.273,98,3.159,140,6.911,151,16.053,162,12.716,691,17.043,710,14.408,909,12.245,2316,13.397,2342,24.708,2343,24.708]],["name/41-55",[]],["text/41-55",[]],["component/41-55",[]],["keyword/41-55",[]],["title/41-56",[1557,44.188]],["name/41-56",[]],["text/41-56",[]],["component/41-56",[]],["keyword/41-56",[]],["title/41-57",[750,48.563]],["name/41-57",[]],["text/41-57",[]],["component/41-57",[]],["keyword/41-57",[]],["title/41-58",[62,12.484,2316,37.149]],["name/41-58",[]],["text/41-58",[]],["component/41-58",[]],["keyword/41-58",[]],["title/41-59",[3,7.612,4,7.749,62,6.618,578,17.529,1057,24.042,2316,19.692,2344,36.318]],["name/41-59",[]],["text/41-59",[]],["component/41-59",[]],["keyword/41-59",[]],["title/41-60",[1557,44.188]],["name/41-60",[]],["text/41-60",[]],["component/41-60",[]],["keyword/41-60",[]],["title/41-61",[750,48.563]],["name/41-61",[]],["text/41-61",[]],["component/41-61",[]],["keyword/41-61",[]],["title/41",[2316,37.149,2345,54.323]],["name/41",[2316,1.201,2345,1.757]],["text/41",[0,2.782,3,1.855,4,2.034,5,1.49,8,0.669,11,1.432,16,0.506,23,1.431,26,0.707,28,0.752,29,2.18,37,0.87,51,1.158,54,0.87,55,1.286,56,1.099,58,2.996,62,1.709,66,1.144,70,0.464,72,0.901,76,1.671,77,1.844,79,3.865,80,1.196,84,1.077,85,1.856,90,0.588,92,1.149,95,0.979,98,1.219,100,1.48,102,1.378,108,0.473,128,0.592,130,1.265,131,1.284,132,0.788,134,0.562,135,3.245,139,0.581,140,2.418,141,2.261,142,1.668,144,0.664,146,2.19,148,0.562,149,2.455,150,1.817,151,1.637,154,0.552,157,0.788,162,0.714,168,2.193,176,1.432,180,1.48,184,1.274,199,0.985,202,0.769,203,1.297,207,2.075,210,0.506,214,0.778,219,4.209,220,0.503,224,0.936,227,0.632,231,2.14,232,1.144,243,1.206,244,1.778,245,1.877,246,3.229,247,4.311,248,1.557,250,2.255,263,0.901,266,0.548,270,1.582,274,1.199,281,0.901,305,0.918,309,0.736,315,0.87,329,2.079,331,0.857,340,4.177,343,2.624,347,0.669,363,2.291,366,0.523,369,1.099,370,0.956,377,1.199,378,0.614,392,0.592,412,2.555,415,3.642,429,2.112,430,2.429,437,2.367,438,1.469,439,1.003,444,1.49,447,2.057,449,0.798,455,0.769,457,1.199,475,2.309,476,0.857,477,0.707,480,0.618,487,0.632,490,2.25,500,0.714,502,1.533,503,1.701,506,3.131,515,0.605,525,0.979,532,3.995,540,4.489,541,2.286,542,1.196,545,1.432,550,0.885,552,0.857,553,0.798,571,1.077,590,0.744,594,0.956,611,0.918,614,0.798,617,1.382,628,0.714,632,1.382,638,0.658,642,0.979,643,0.885,646,0.778,684,0.979,691,1.738,696,1.31,697,1.272,698,2.18,705,1.998,710,5.47,714,0.979,715,1.003,731,0.82,737,2.575,743,0.918,751,1.274,771,0.87,775,0.669,815,2.339,816,0.831,826,0.918,830,0.798,834,2.107,844,1.144,893,0.936,901,4.712,902,1.557,909,0.687,916,1.931,920,0.76,922,0.728,992,1.199,1047,3.515,1057,2.293,1075,2.174,1146,0.857,1154,1.199,1165,1.062,1241,1.062,1254,2.746,1255,1.702,1276,1.199,1278,0.87,1283,2.18,1293,1.144,1294,1.274,1300,0.885,1337,0.809,1374,1.099,1433,0.788,1502,0.918,1512,1.062,1555,1.944,1564,1.199,1566,0.901,1638,3.686,1670,1.144,1673,1.062,1697,1.199,1716,3.677,1726,1.199,1787,2.996,1813,1.199,1820,1.031,1898,0.87,1919,0.956,1927,0.979,2063,1.199,2115,0.956,2222,1.099,2264,5.301,2316,3.003,2318,2.18,2319,2.654,2320,1.931,2322,2.18,2324,1.274,2326,1.274,2329,1.274,2331,1.274,2335,1.199,2341,1.274,2345,3.379,2346,2.52,2347,1.387,2348,1.274,2349,1.274,2350,1.387,2351,1.274,2352,3.464,2353,1.274,2354,1.387,2355,2.52,2356,2.52,2357,1.387,2358,3.182,2359,1.062,2360,1.003,2361,2.315,2362,1.387,2363,1.387,2364,1.274,2365,1.031,2366,1.387,2367,1.274,2368,1.099,2369,1.387,2370,0.918,2371,1.144]],["component/41",[3,0.415,4,0.422]],["keyword/41",[3,1.881,4,1.915,62,1.635,76,2.059,2316,4.865,2345,7.114]],["title/42-1",[62,10.604,168,29.951,447,28.089]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["keyword/42-1",[]],["title/42-2",[168,26.03,208,31.244,383,29.494,447,24.412]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["keyword/42-2",[]],["title/42-3",[429,28.842,430,28.584,447,28.089]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["keyword/42-3",[]],["title/42-4",[448,45.356,528,35.261]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["keyword/42-4",[]],["title/42-5",[448,45.356,1865,50.935]],["name/42-5",[]],["text/42-5",[]],["component/42-5",[]],["keyword/42-5",[]],["title/42-6",[2372,76.497]],["name/42-6",[]],["text/42-6",[]],["component/42-6",[]],["keyword/42-6",[]],["title/42-7",[98,8.76,681,35.977]],["name/42-7",[]],["text/42-7",[]],["component/42-7",[]],["keyword/42-7",[]],["title/42",[448,45.356,528,35.261]],["name/42",[448,1.467,528,1.14]],["text/42",[4,1.346,5,1.418,8,1.158,12,1.399,16,2.302,23,0.991,28,2.216,32,2.696,52,1.655,55,1.517,62,2.084,77,2.1,84,1.025,90,1.018,96,1.111,98,1.107,100,3.859,114,2.29,130,0.876,134,1.657,139,2.641,140,1.494,146,0.949,149,1.657,165,1.363,168,4.23,179,1.12,180,1.025,188,2.204,205,1.247,208,3.299,210,0.876,220,1.484,221,1.129,222,1.168,236,1.211,243,1.859,250,2.435,259,1.086,264,1.26,341,1.347,343,1.273,347,1.158,364,0.806,378,1.062,383,3.678,396,1.347,398,2.864,400,2.075,419,1.273,429,1.189,430,4.855,434,2.493,437,3.009,438,1.399,444,1.418,446,4.026,447,5.478,448,7.044,451,1.168,455,1.331,459,2.706,475,1.908,476,1.482,493,1.111,499,1.247,506,1.086,509,1.054,528,3.246,544,1.129,545,2.323,571,1.025,578,1.158,604,2.819,605,1.655,626,3.132,632,1.315,635,1.381,645,1.381,681,2.146,697,1.211,744,1.693,758,1.506,780,2.075,781,2.204,783,3.755,784,2.204,785,2.204,786,2.204,787,2.204,799,2.416,821,1.399,825,3.864,902,1.482,936,1.418,938,2.169,1000,4.179,1090,2.075,1123,1.459,1176,1.273,1210,2.075,1212,2.656,1218,1.838,1301,1.559,1381,4.405,1595,1.838,1722,1.588,2049,2.204,2110,6.499,2321,1.838,2322,2.075,2323,1.979,2371,1.979,2372,2.204,2373,5.34,2374,2.399,2375,4.087,2376,2.075,2377,4.087,2378,5.34,2379,4.905,2380,5.34,2381,2.399,2382,4.087,2383,4.087,2384,2.399,2385,2.399,2386,2.399,2387,2.399,2388,2.399,2389,2.399,2390,2.399,2391,4.087,2392,2.399,2393,4.087,2394,2.399,2395,4.087,2396,5.34,2397,2.399,2398,2.399,2399,2.399,2400,2.399,2401,4.087,2402,2.399,2403,4.087,2404,4.087,2405,2.399,2406,2.399,2407,4.087,2408,2.399,2409,2.204]],["component/42",[3,0.415,4,0.422]],["keyword/42",[100,6.559,448,10.162,528,7.9]],["title/43-1",[182,58.774]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["keyword/43-1",[]],["title/43-2",[167,47.327]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["keyword/43-2",[]],["title/43-3",[243,28.996]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["keyword/43-3",[]],["title/43-4",[92,26.539,363,20.472,982,29.38]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["keyword/43-4",[]],["title/43-5",[70,22.92,982,34.588]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["keyword/43-5",[]],["title/43-6",[68,37.811,70,19.468,819,29.107]],["name/43-6",[]],["text/43-6",[]],["component/43-6",[]],["keyword/43-6",[]],["title/43-7",[70,19.468,982,29.38,2410,42.103]],["name/43-7",[]],["text/43-7",[]],["component/43-7",[]],["keyword/43-7",[]],["title/43-8",[49,25.778,537,27.125,634,27.125,982,25.534]],["name/43-8",[]],["text/43-8",[]],["component/43-8",[]],["keyword/43-8",[]],["title/43-9",[70,19.468,489,27.851,982,29.38]],["name/43-9",[]],["text/43-9",[]],["component/43-9",[]],["keyword/43-9",[]],["title/43-10",[98,3.909,140,8.552,148,12.394,215,13.434,225,13.244,233,14.509,363,10.755,634,16.396,982,15.434]],["name/43-10",[]],["text/43-10",[]],["component/43-10",[]],["keyword/43-10",[]],["title/43",[167,33.072,363,20.472,634,31.21]],["name/43",[634,1.188,1223,1.369]],["text/43",[0,1.651,12,0.713,23,1.866,24,0.663,28,0.663,33,2.2,49,3.078,55,1.434,62,0.927,68,4.635,70,2.386,77,0.748,80,3.886,84,1.929,90,3.377,92,0.558,93,1.135,95,0.475,98,1.145,102,0.487,103,1.518,108,3.746,114,1.403,131,1.589,134,0.911,135,0.502,139,0.512,140,2.226,145,0.549,146,0.889,148,1.264,150,0.401,157,1.277,167,0.695,178,2.589,179,0.571,192,0.49,203,1.157,225,1.35,229,0.863,230,0.795,243,1.946,245,1.714,250,1.763,266,0.889,267,0.516,285,0.795,292,0.571,295,4.3,303,0.885,312,2.105,341,1.262,356,2.317,363,1.789,364,0.411,381,1.205,388,0.704,399,1.604,412,0.733,420,0.585,431,2.064,437,1.218,460,1.763,470,2.03,472,3.357,477,2.301,479,1.328,480,2.692,483,0.81,487,1.763,489,3.256,493,1.444,496,0.541,497,0.623,498,1.033,501,1.586,508,1.85,527,0.826,528,1.604,530,0.733,537,2.073,544,0.576,552,0.756,554,0.612,571,1.332,578,1.505,580,0.596,585,1.518,586,0.733,590,0.656,593,0.81,634,3.455,636,0.768,638,2.143,667,0.713,697,0.618,758,0.768,768,0.768,776,0.733,791,2.144,816,4.276,817,2.721,819,5.183,828,1.854,847,0.909,872,1.435,889,1.328,902,1.388,909,1.545,916,0.937,922,1.18,933,3.998,936,0.723,938,2.698,972,1.957,976,3.188,982,4.815,1000,3.443,1032,0.744,1057,2.989,1058,2.105,1059,0.937,1065,5.107,1066,2.559,1078,1.009,1136,5.438,1138,0.909,1170,1.626,1223,2.388,1262,1.944,1337,1.818,1346,0.885,1356,1.671,1400,6.984,1411,0.937,1414,0.744,1522,1.782,1551,1.944,1632,4.627,1673,0.937,1712,0.756,1753,1.944,1916,0.937,1928,3.343,2014,3.724,2038,1.058,2044,1.009,2069,1.671,2139,2.962,2140,5.525,2204,0.885,2368,0.97,2410,3.267,2411,2.064,2412,5.547,2413,1.722,2414,4.671,2415,2.863,2416,1.223,2417,1.223,2418,5.223,2419,1.944,2420,1.058,2421,1.223,2422,2.064,2423,7.078,2424,4.671,2425,1.124,2426,1.223,2427,4.148,2428,1.223,2429,1.223,2430,2.863,2431,2.863,2432,4.399,2433,1.223,2434,1.223,2435,1.223,2436,1.009,2437,0.937,2438,1.124,2439,1.124,2440,1.124,2441,2.064,2442,1.058,2443,1.124,2444,1.124,2445,1.223,2446,1.124,2447,2.064,2448,2.064,2449,1.124,2450,1.124,2451,1.058,2452,1.124,2453,1.124,2454,2.064,2455,1.124,2456,1.124,2457,1.46,2458,1.124,2459,2.064,2460,1.124,2461,2.064,2462,1.124]],["component/43",[3,0.415,4,0.422]],["keyword/43",[62,2.261,76,2.847,363,4.366,634,6.656]],["title/44-1",[93,29.38,668,44.592,1308,46.142]],["name/44-1",[]],["text/44-1",[]],["component/44-1",[]],["keyword/44-1",[]],["title/44-2",[315,43.006,1140,36.354]],["name/44-2",[]],["text/44-2",[]],["component/44-2",[]],["keyword/44-2",[]],["title/44-3",[233,24.004,865,34.155,1198,43.747,1902,34.155]],["name/44-3",[]],["text/44-3",[]],["component/44-3",[]],["keyword/44-3",[]],["title/44",[98,6.467,233,24.004,315,31.748,1902,34.155]],["name/44",[98,0.158,233,0.587,315,0.776,1902,0.835]],["text/44",[4,0.704,12,1.093,23,1.828,32,2.69,37,1.177,43,1.218,45,0.975,49,2.715,51,1.517,55,1.225,62,0.806,77,1.099,80,0.89,83,1.323,84,1.41,92,0.855,93,5.07,94,2.513,95,0.728,96,0.868,98,1.322,103,2.229,108,1.126,114,0.681,129,1.323,134,1.338,138,1.394,139,1.852,140,0.923,145,1.483,147,1.108,148,3.757,150,1.748,167,3.028,172,3.2,178,0.868,180,0.801,181,0.913,189,2.529,192,1.322,197,2.513,199,2.374,200,1.141,201,1.486,214,1.052,215,0.824,217,1.44,218,2.513,227,1.505,233,5.027,235,3.462,243,0.653,245,2.305,250,0.855,256,0.946,258,1.683,264,0.984,266,0.742,267,0.79,277,2.039,278,1.437,288,1.916,293,1.876,294,1.108,295,1.42,309,0.995,312,1.266,315,5.075,318,1.356,324,1.925,336,2.798,340,1.293,345,1.124,346,1.622,347,0.905,363,1.556,366,0.708,371,1.636,372,1.266,374,7.784,378,0.83,386,1.158,388,1.079,396,1.052,399,1.699,420,0.897,432,3.157,434,2.065,445,1.472,446,1.197,447,3.233,455,1.831,459,1.241,462,0.801,475,2.488,476,1.158,477,1.683,480,1.972,489,1.58,509,0.824,521,1.323,528,0.965,535,1.437,537,2.857,544,0.882,554,1.651,563,0.848,571,0.801,572,1.43,585,1.266,596,1.437,604,1.293,606,0.995,623,1.04,628,0.965,636,1.177,646,1.052,650,2.33,668,6.463,678,1.554,685,0.868,697,0.946,707,2.099,709,1.437,713,0.89,739,1.546,754,1.394,774,2.072,816,1.124,819,0.938,821,1.925,845,1.323,847,1.394,865,1.266,871,1.394,872,1.197,889,1.108,896,1.266,900,1.241,914,1.266,919,1.158,926,2.991,937,1.158,939,0.929,942,2.33,943,1.177,946,1.394,1000,2.135,1005,2.388,1032,2.008,1084,1.437,1091,1.437,1140,0.995,1158,1.241,1161,1.177,1168,2.855,1170,2.388,1176,0.995,1298,1.622,1313,2.617,1318,1.437,1340,2.617,1345,1.622,1427,1.667,1565,1.722,1569,1.177,1611,1.622,1704,1.241,1902,7.07,1908,2.529,2033,1.622,2109,1.546,2128,1.486,2155,1.197,2181,7.062,2222,1.486,2248,3.648,2253,1.622,2314,1.394,2463,3.301,2464,1.875,2465,1.875,2466,1.875,2467,1.875,2468,3.301,2469,1.622,2470,1.622,2471,7.23,2472,1.875,2473,4.082,2474,1.875,2475,1.875,2476,3.032,2477,1.875,2478,1.875,2479,1.486,2480,1.875,2481,3.301,2482,1.875,2483,1.875,2484,1.875,2485,1.722,2486,1.722]],["component/44",[3,0.415,4,0.422]],["keyword/44",[62,1.635,76,2.059,98,1.147,233,4.259,315,5.632,1902,6.059]],["title/45-1",[245,26.006,250,31.244]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["keyword/45-1",[]],["title/45-2",[429,33.955,430,33.652]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["keyword/45-2",[]],["title/45-3",[80,32.516,2487,50.935]],["name/45-3",[]],["text/45-3",[]],["component/45-3",[]],["keyword/45-3",[]],["title/45-4",[80,32.516,604,47.26]],["name/45-4",[]],["text/45-4",[]],["component/45-4",[]],["keyword/45-4",[]],["title/45-5",[114,30.239]],["name/45-5",[]],["text/45-5",[]],["component/45-5",[]],["keyword/45-5",[]],["title/45-6",[98,10.647]],["name/45-6",[]],["text/45-6",[]],["component/45-6",[]],["keyword/45-6",[]],["title/45",[62,12.484,80,32.516]],["name/45",[62,0.404,80,1.052]],["text/45",[0,1.866,3,0.245,4,0.796,5,2.581,9,1.012,16,2.844,17,1.522,20,0.825,28,0.634,32,2.205,38,2.595,49,1.099,51,0.537,52,0.807,55,1.621,62,1.419,70,1.248,77,0.389,80,4.971,84,0.921,92,0.533,93,1.883,94,2.12,95,0.838,96,0.999,98,0.276,100,0.921,102,0.858,108,3.398,110,0.869,114,2.132,131,0.596,132,0.665,139,0.903,140,2.413,141,1.592,143,1.609,144,1.032,145,0.525,148,3.253,156,1.412,165,0.665,166,0.807,168,1.11,176,0.665,178,0.542,179,0.546,199,0.843,213,0.691,214,1.21,215,2.385,216,0.734,217,2.562,218,1.225,221,2.056,222,2.4,225,1.892,228,1.865,229,2.632,230,2.423,231,1.332,232,0.965,233,3.305,241,0.79,243,1.299,245,2.957,250,3.757,258,1.529,267,1.265,268,0.682,269,0.641,272,0.825,285,2.837,287,0.927,288,1.3,299,2.573,301,1.358,303,0.846,312,1.456,315,1.353,317,0.896,338,0.807,341,0.657,345,0.701,347,2.108,366,0.814,371,1.069,372,1.456,376,1.832,382,0.869,383,1.257,412,0.701,419,0.621,420,1.785,422,2.205,426,1.981,429,4.083,430,3.567,431,0.774,433,0.896,437,0.843,442,2.026,445,0.961,447,0.564,451,1.461,454,1.575,467,2.23,476,0.722,477,0.596,487,1.701,493,1.39,499,0.608,518,2.955,521,2.117,522,0.711,527,2.026,528,1.11,544,1.015,554,0.585,562,1.684,572,0.507,586,1.293,590,0.627,603,0.711,623,0.649,628,1.544,632,1.182,634,2.342,636,2.341,646,1.684,652,0.722,696,0.608,713,1.023,725,0.807,768,0.734,774,0.734,776,0.701,799,1.275,814,0.869,816,4.519,817,4.634,839,1.92,870,2.304,885,0.896,893,1.456,902,0.722,919,1.332,926,1.21,927,0.673,935,2.756,938,0.621,972,0.734,982,2.488,1010,0.747,1032,0.711,1046,1.012,1053,0.734,1057,1.986,1062,1.779,1110,0.747,1143,1.012,1176,1.144,1212,0.76,1235,1.196,1237,0.79,1314,0.846,1319,1.074,1329,0.965,1330,1.074,1374,0.927,1400,3.777,1410,1.012,1424,2.69,1433,0.665,1482,1.012,1484,1.71,1485,1.074,1486,1.074,1690,1.012,1704,0.774,1712,1.853,1733,1.012,1865,0.869,1907,0.896,2069,0.869,2131,1.012,2139,3.346,2140,4.663,2172,1.012,2177,0.927,2216,1.074,2307,4.263,2319,0.896,2367,1.074,2368,6.362,2410,2.17,2411,5.762,2419,1.865,2420,1.012,2432,3.777,2442,4.263,2487,1.603,2488,8.502,2489,1.169,2490,6.273,2491,1.169,2492,1.169,2493,1.169,2494,1.169,2495,1.169,2496,4.367,2497,3.602,2498,0.965,2499,1.169,2500,1.074,2501,1.169,2502,1.169,2503,0.927,2504,2.156,2505,4.527,2506,3,2507,2.756,2508,1.169,2509,1.169,2510,1.981,2511,1.169,2512,4.011,2513,1.169,2514,1.169,2515,1.169,2516,1.169,2517,2.156,2518,2.519,2519,1.169,2520,1.169,2521,1.169,2522,1.169,2523,2.156,2524,2.156,2525,1.074,2526,1.074,2527,0.965,2528,2.156,2529,1.169,2530,1.169,2531,1.169,2532,0.846,2533,1.074,2534,1.169,2535,1.169,2536,1.169,2537,1.169,2538,1.169,2539,1.169,2540,2.156]],["component/45",[3,0.415,4,0.422]],["keyword/45",[0,5.303,62,2.261,76,2.847,634,6.656]],["title/46-1",[207,28.333,221,27.393,222,28.333]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["keyword/46-1",[]],["title/46-2",[98,10.647]],["name/46-2",[]],["text/46-2",[]],["component/46-2",[]],["keyword/46-2",[]],["title/46-3",[485,54.323,1500,47.26]],["name/46-3",[]],["text/46-3",[]],["component/46-3",[]],["keyword/46-3",[]],["title/46",[221,32.249,222,33.356]],["name/46",[221,1.043,222,1.079]],["text/46",[3,0.876,4,0.525,16,0.899,23,1.727,24,2.951,32,2.109,39,3.603,46,2.265,62,1.596,76,1.91,77,1.391,80,1.168,84,1.052,85,2.696,90,1.045,94,1.399,95,1.623,98,1.405,100,1.052,102,1.663,118,1.737,128,1.052,129,1.737,130,3.333,132,1.399,135,3.418,137,1.967,138,3.106,139,1.031,140,1.169,144,1.999,145,1.106,149,2.912,150,2.357,151,1.599,166,1.698,180,1.785,199,1.633,202,1.365,206,0.904,207,1.198,210,1.525,214,2.345,216,1.545,219,1.497,220,1.517,221,5.228,222,5.055,225,1.066,226,1.599,227,1.123,231,1.521,245,1.586,246,2.436,251,3.106,259,1.891,266,1.652,270,2.622,275,1.417,301,1.114,343,2.217,347,2.016,363,1.915,364,1.404,366,1.577,371,1.22,373,3.614,376,1.209,383,1.435,392,3.336,394,1.435,397,1.365,398,1.32,415,3.593,419,2.217,434,1.149,437,2.127,445,1.097,447,1.188,454,1.293,475,1.149,480,1.097,485,3.313,489,2.605,493,1.14,496,3.179,497,1.255,498,1.131,500,1.267,502,1.497,514,2.882,544,1.159,545,1.399,552,1.521,553,2.405,554,1.231,561,1.178,572,1.066,585,1.662,586,1.476,614,1.417,621,1.662,628,1.267,636,1.545,637,1.781,639,1.952,659,1.662,662,1.781,664,1.737,673,1.83,677,1.63,713,1.168,731,1.455,771,2.622,775,2.016,777,2.882,778,3.446,779,2.03,824,3.106,830,3.133,853,1.545,861,1.781,865,1.662,879,1.781,883,2.129,887,1.662,894,1.63,900,1.63,901,1.781,909,2.697,910,1.781,938,1.306,941,1.599,972,1.545,980,3.614,1000,1.188,1021,1.737,1055,1.737,1058,2.821,1059,4.915,1093,2.03,1173,1.599,1211,1.952,1242,2.03,1300,1.571,1301,1.599,1391,1.698,1450,1.83,1451,1.952,1452,1.83,1500,2.882,1557,1.306,1569,1.545,2155,1.571,2409,2.261,2541,4.178,2542,2.462,2543,2.462,2544,2.462,2545,2.261,2546,2.462,2547,2.462,2548,2.261,2549,5.443,2550,2.462]],["component/46",[3,0.415,4,0.422]],["keyword/46",[62,2.261,76,2.847,221,5.842,222,6.042]],["title/47-1",[100,24.865,498,26.745,728,39.299]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["keyword/47-1",[]],["title/47-2",[23,25.674,84,17.127,98,5.125,922,21.049,2551,29.801]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["keyword/47-2",[]],["title/47-3",[98,6.467,691,34.889,909,25.067,2551,37.602]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["keyword/47-3",[]],["title/47-4",[98,7.441,108,19.857,658,34.4]],["name/47-4",[]],["text/47-4",[]],["component/47-4",[]],["keyword/47-4",[]],["title/47",[221,27.393,222,28.333,256,29.38]],["name/47",[256,1.851]],["text/47",[3,0.959,16,1.671,23,2.841,32,2.311,34,4.205,41,3.231,72,2.974,76,1.05,84,1.956,85,2.58,98,1.409,100,1.956,108,2.346,109,2.455,111,2.137,130,3.351,137,2.155,140,2.567,141,2.429,150,2.709,178,3.185,179,2.137,191,3.158,210,1.671,221,5.044,222,5.03,225,2.978,288,1.983,347,2.21,363,1.61,378,2.026,392,2.937,434,4.285,449,3.957,451,2.229,460,3.135,466,2.173,475,3.21,477,2.333,479,2.706,480,2.041,485,3.63,490,2.974,493,2.12,496,2.026,506,2.072,507,3.687,508,2.191,515,1.997,539,4.247,562,2.57,590,2.455,617,2.51,652,2.828,691,4.742,697,2.311,713,2.173,720,3.091,721,2.706,728,7.237,776,2.744,909,3.407,922,3.61,924,3.63,1000,3.318,1091,3.508,1210,3.959,1687,3.959,1853,3.959,2359,3.508,2551,3.403,2552,5.671,2553,4.205,2554,3.776,2555,6.875,2556,6.875]],["component/47",[3,0.415,4,0.422]],["keyword/47",[62,2.261,76,2.847,221,5.842,222,6.042]],["title/48-1",[46,37.149,1711,40.499]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["keyword/48-1",[]],["title/48-2",[118,48.353,243,23.855]],["name/48-2",[]],["text/48-2",[]],["component/48-2",[]],["keyword/48-2",[]],["title/48-3",[112,54.323,243,23.855]],["name/48-3",[]],["text/48-3",[]],["component/48-3",[]],["keyword/48-3",[]],["title/48-4",[46,31.554,98,7.441,379,33.494]],["name/48-4",[]],["text/48-4",[]],["component/48-4",[]],["keyword/48-4",[]],["title/48",[46,27.424,98,6.467,221,23.807,222,24.625]],["name/48",[46,1.201,98,0.283]],["text/48",[4,0.313,11,0.834,16,1.624,32,0.741,40,0.787,45,0.762,46,4.065,51,0.674,57,1.422,62,1.226,70,1.722,76,0.337,84,1.901,90,0.622,92,0.669,93,0.741,95,1.728,96,0.679,98,1.277,102,1.055,104,1.035,108,1.756,109,0.787,111,0.685,112,4.557,118,5.035,128,3.581,129,2.561,130,2.856,134,0.595,135,1.089,136,1.886,137,3.682,138,3.826,140,1.608,141,0.778,142,2.945,143,0.787,145,1.63,147,1.568,149,2.086,150,0.481,180,0.627,192,3.249,196,0.674,197,2.062,199,0.573,200,0.892,210,0.536,221,2.705,222,2.506,225,0.635,236,0.741,243,0.923,258,0.748,265,0.867,266,1.049,281,0.953,282,0.936,295,2.895,338,2.503,341,2.497,343,0.778,347,0.708,362,1.21,366,0.554,378,0.649,379,2.089,392,1.551,394,0.855,398,2.76,437,2.788,447,2.484,460,2.621,462,1.133,470,0.77,487,1.209,489,2.463,496,1.606,500,1.365,508,1.269,509,1.955,515,1.157,531,0.921,538,2.246,541,3.826,544,0.69,549,3.188,556,2.987,567,1.163,571,0.627,572,1.149,576,2.103,577,0.991,578,2.484,592,1.665,611,3.805,623,0.814,628,1.365,648,0.834,655,1.21,664,1.872,667,0.855,771,0.921,775,1.28,777,1.012,799,2.145,871,1.091,907,1.972,922,1.393,933,1.756,1039,3.004,1108,0.906,1136,1.035,1146,0.906,1212,0.953,1219,1.21,1237,1.791,1271,2.176,1280,0.953,1322,0.906,1336,3.334,1337,3.001,1345,2.294,1354,6.288,1372,2.103,1379,2.294,1391,3.55,1414,0.892,1502,2.945,1558,1.347,1569,2.278,1711,1.568,1722,0.971,1768,5.279,1896,4.454,1903,1.012,1906,1.347,2321,1.124,2327,1.347,2365,1.091,2436,1.21,2545,1.347,2557,2.652,2558,1.269,2559,2.877,2560,2.652,2561,5.146,2562,5.146,2563,5.146,2564,5.146,2565,5.146,2566,4.449,2567,1.467,2568,1.467,2569,1.467,2570,1.467,2571,1.467,2572,1.467,2573,1.467,2574,1.467,2575,1.467,2576,1.467,2577,1.467,2578,1.467,2579,1.467,2580,1.467,2581,1.467,2582,1.467,2583,1.467,2584,2.652,2585,5.146,2586,5.146,2587,5.146,2588,5.146,2589,5.146,2590,1.467,2591,1.467,2592,1.467,2593,1.467,2594,1.467,2595,1.467,2596,1.467,2597,1.467,2598,1.467,2599,1.467,2600,1.467,2601,1.467,2602,1.467,2603,1.467,2604,2.652,2605,2.436,2606,1.693,2607,1.467,2608,2.652,2609,2.652,2610,2.652,2611,2.652,2612,4.087,2613,1.467,2614,1.467,2615,1.467,2616,1.467,2617,1.467,2618,1.467,2619,1.21,2620,1.163,2621,1.467,2622,1.467,2623,1.467,2624,1.467,2625,1.467,2626,1.467,2627,2.652,2628,2.652,2629,2.652,2630,2.652,2631,1.467,2632,1.467,2633,1.467,2634,1.467,2635,1.467,2636,1.467,2637,1.467,2638,1.467,2639,1.467,2640,1.467,2641,1.467,2642,1.467,2643,1.467,2644,1.467,2645,1.124,2646,1.467,2647,1.467,2648,1.467,2649,1.467,2650,1.467]],["component/48",[3,0.415,4,0.422]],["keyword/48",[62,2.261,76,2.847,221,5.842,222,6.042]],["title/49-1",[98,8.76,498,31.487]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["keyword/49-1",[]],["title/49-2",[98,8.76,206,25.149]],["name/49-2",[]],["text/49-2",[]],["component/49-2",[]],["keyword/49-2",[]],["title/49-3",[685,31.735,686,33.652]],["name/49-3",[]],["text/49-3",[]],["component/49-3",[]],["keyword/49-3",[]],["title/49-4",[76,15.72,269,37.569]],["name/49-4",[]],["text/49-4",[]],["component/49-4",[]],["keyword/49-4",[]],["title/49-5",[98,8.76,181,33.356]],["name/49-5",[]],["text/49-5",[]],["component/49-5",[]],["keyword/49-5",[]],["title/49-6",[269,37.569,2651,56.514]],["name/49-6",[]],["text/49-6",[]],["component/49-6",[]],["keyword/49-6",[]],["title/49-7",[98,7.441,202,32.282,580,28.333]],["name/49-7",[]],["text/49-7",[]],["component/49-7",[]],["keyword/49-7",[]],["title/49-8",[149,27.777,580,33.356]],["name/49-8",[]],["text/49-8",[]],["component/49-8",[]],["keyword/49-8",[]],["title/49-9",[225,29.681,273,50.935]],["name/49-9",[]],["text/49-9",[]],["component/49-9",[]],["keyword/49-9",[]],["title/49",[62,9.216,1304,27.125,1306,27.424,2652,50.579]],["name/49",[1306,1.201,1321,1.647]],["text/49",[8,1.464,12,0.691,16,0.432,23,0.489,26,0.604,32,0.598,41,0.836,42,0.857,45,0.616,46,1.644,51,2.026,52,1.505,54,0.743,55,0.81,62,1.741,65,0.732,69,0.649,70,1.663,76,1.901,77,1.822,80,0.562,83,0.836,84,0.932,85,0.819,93,0.598,94,0.673,95,0.847,96,2.303,98,1.491,100,0.506,102,0.868,108,2.392,109,1.626,114,0.792,119,1.68,128,1.883,129,2.14,130,3.287,131,0.604,133,0.604,134,2.218,135,3.114,136,0.616,137,1.027,139,1.27,140,2.738,143,1.17,144,2.832,146,2.773,147,1.289,148,1.229,149,2.842,150,0.995,154,1.754,156,0.557,157,1.24,158,0.587,160,1.157,162,0.609,168,0.609,180,0.506,181,1.476,183,0.836,189,0.907,192,0.474,196,2.285,197,3.363,202,1.21,204,0.691,205,2.584,206,2.172,208,0.732,210,0.796,215,0.52,216,1.369,217,1.643,218,1.24,220,0.792,222,1.476,225,0.513,227,0.54,231,1.347,233,0.562,236,1.531,243,0.759,245,2.077,246,0.691,248,0.732,250,1.383,258,1.112,263,0.769,266,0.863,269,1.196,270,3.435,272,0.836,273,1.622,275,0.682,280,0.665,288,2.564,293,1.24,294,0.7,295,0.938,300,2.004,301,0.987,303,2.725,309,0.628,333,0.817,343,0.628,347,1.053,351,1.729,352,0.939,357,0.907,363,0.417,364,0.398,368,1.347,370,2.092,378,2.957,392,2.338,397,1.21,398,1.17,399,1.561,415,2.205,419,1.609,432,0.616,451,1.834,453,0.682,459,1.444,465,0.88,469,1.369,470,0.622,475,0.553,480,1.352,490,0.769,494,2.007,497,0.604,498,1.731,500,1.123,506,0.536,515,0.517,530,0.71,542,1.035,544,2.34,545,1.723,550,1.392,553,0.682,554,0.592,566,0.691,567,0.939,571,0.932,572,0.945,578,0.572,580,1.476,586,0.71,588,1.768,590,3.389,600,0.71,602,0.857,608,4.033,617,1.196,619,2.254,628,0.609,632,0.649,635,0.682,643,1.392,646,0.665,656,0.8,659,0.8,661,1.024,662,0.857,668,0.907,673,0.88,674,2.258,678,1.427,679,1.682,685,1.01,686,1.071,697,0.598,707,0.562,713,1.035,731,0.7,758,0.743,775,0.572,777,2.092,799,0.7,816,0.71,820,0.7,825,0.857,830,1.745,841,2.004,845,2.14,861,0.857,866,0.977,901,0.857,903,0.836,909,2.185,913,1.369,919,1.347,922,0.622,926,1.224,936,1.289,938,1.157,941,0.769,961,0.939,969,0.939,995,0.939,1000,0.572,1011,0.977,1015,1.088,1091,0.907,1108,0.732,1110,0.756,1140,0.628,1193,1.392,1211,0.939,1253,1.578,1271,0.71,1275,1.088,1301,0.769,1304,4.986,1306,5.041,1310,0.939,1318,1.671,1321,0.88,1337,0.691,1370,1.768,1387,1.887,1395,1.845,1429,1.088,1502,2.007,1555,0.665,1557,0.628,1571,1.578,1578,1.088,1580,0.836,1667,0.784,1711,0.7,1712,0.732,1722,0.784,1735,1.024,1736,1.088,1757,1.024,1852,0.836,1948,0.977,1957,0.977,2071,1.671,2097,0.88,2152,4.068,2204,0.857,2321,0.907,2323,0.977,2359,0.907,2361,1.088,2368,0.939,2651,4.101,2653,1.184,2654,1.184,2655,1.088,2656,1.184,2657,1.887,2658,1.184,2659,1.184,2660,1.184,2661,1.088,2662,1.184,2663,1.184,2664,1.184,2665,1.088,2666,1.184,2667,1.088,2668,1.088,2669,1.184,2670,1.088,2671,1.184,2672,1.184,2673,1.184,2674,1.184,2675,1.184,2676,1.184,2677,1.184,2678,1.184,2679,1.184]],["component/49",[3,0.415,4,0.422]],["keyword/49",[62,1.898,76,2.39,1304,5.586,1306,5.647,1321,7.743]],["title/50",[62,7.304,366,23.448,480,17.872,1566,26.045,2370,26.536]],["name/50",[480,0.988,2680,1.44]],["text/50",[53,5.307,55,3.138,98,1.081,100,4.48,114,3.07,136,4.395,196,3.886,215,4.607,217,4.575,233,4.012,245,3.98,250,3.856,399,4.351,422,4.998,487,3.856,571,3.612,721,4.998,879,7.586,2681,8.455,2682,8.455]],["component/50",[3,0.415,4,0.422]],["keyword/50",[62,1.898,76,2.39,366,3.931,1566,6.767,2370,6.895]],["title/51-1",[245,19.199,250,23.065,941,32.862,2683,43.747]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["keyword/51-1",[]],["title/51-2",[98,7.441,941,37.811,2683,50.335]],["name/51-2",[]],["text/51-2",[]],["component/51-2",[]],["keyword/51-2",[]],["title/51-3",[429,33.955,430,33.652]],["name/51-3",[]],["text/51-3",[]],["component/51-3",[]],["keyword/51-3",[]],["title/51-4",[53,36.53,217,25.39,911,43.264]],["name/51-4",[]],["text/51-4",[]],["component/51-4",[]],["keyword/51-4",[]],["title/51-5",[62,12.484,366,25.859]],["name/51-5",[]],["text/51-5",[]],["component/51-5",[]],["keyword/51-5",[]],["title/51",[366,21.965,1566,37.811,2370,38.525]],["name/51",[366,0.836,2606,1.414]],["text/51",[4,0.99,16,1.386,23,0.641,32,1.407,39,1.026,46,3.229,50,1.047,53,4.612,55,2.577,58,1.341,62,2.171,65,0.958,76,0.356,77,0.516,80,0.736,84,0.662,90,0.658,92,2.439,93,2.341,95,1.083,98,1.365,100,0.662,105,1.546,108,3.578,111,0.724,114,1.942,119,1.243,125,0.823,130,1.018,131,1.421,134,1.13,135,1.144,136,1.449,140,2.468,148,2.815,150,0.915,154,0.617,157,0.881,158,0.768,168,0.798,178,1.759,192,1.116,196,0.712,197,0.881,199,1.484,203,1.954,207,0.755,210,0.566,213,0.916,215,2.617,216,0.973,217,4.375,233,2.538,243,0.97,245,2.635,246,0.904,250,4.122,258,1.935,261,0.929,264,0.814,266,0.613,267,1.601,281,1.007,292,1.773,295,1.199,301,0.702,309,0.823,324,0.904,341,0.87,363,2.095,364,2.7,366,3.329,371,0.768,378,0.686,379,0.892,391,3.851,396,0.87,398,1.495,412,2.78,415,0.775,420,1.817,422,2.245,429,4.124,430,2.627,432,1.449,437,2.533,438,0.904,440,3.623,441,3.253,442,2.564,444,0.916,445,1.243,451,0.755,460,1.732,461,1.604,462,1.191,463,1.188,464,0.85,465,1.152,466,1.323,468,1.341,469,0.973,470,0.814,471,1.229,475,0.724,480,1.243,487,2.716,496,1.234,497,0.79,499,0.806,500,1.954,501,1.094,506,0.702,507,0.831,508,0.742,518,3.57,528,0.798,544,0.73,554,0.775,556,0.806,557,0.929,558,1.779,560,1.341,561,0.742,571,1.191,595,1.026,613,1.229,621,1.047,644,1.152,697,0.783,721,0.916,725,1.069,758,0.973,815,1.047,816,0.929,817,1.357,821,0.904,845,1.094,894,1.026,927,1.604,941,3.87,943,0.973,982,0.783,1003,1.279,1066,1.026,1161,0.973,1199,1.152,1212,1.007,1216,1.188,1219,3.825,1220,1.341,1234,2.016,1235,2.967,1237,1.047,1271,0.929,1414,0.943,1487,1.188,1555,0.87,1566,3.475,2129,2.411,2177,1.229,2227,1.341,2370,3.54,2525,1.424,2526,1.424,2559,1.229,2683,1.341,2684,3.488,2685,5.348,2686,4.638,2687,1.55,2688,1.424,2689,4.638,2690,5.348,2691,3.797,2692,1.55,2693,2.787,2694,1.55,2695,1.55,2696,1.55,2697,2.787,2698,4.26,2699,1.424,2700,1.424,2701,1.424,2702,1.424,2703,1.424,2704,2.787,2705,2.787,2706,2.787,2707,1.55,2708,1.424,2709,1.424,2710,1.55]],["component/51",[3,0.415,4,0.422]],["keyword/51",[62,1.898,76,2.39,366,3.931,1566,6.767,2370,6.895]],["title/52-1",[32,18.335,258,18.51,429,17.999,430,17.838,518,21.773,1433,20.639,2487,27]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["keyword/52-1",[]],["title/52-2",[62,8.149,130,16.328,145,20.089,148,18.133,2177,35.461]],["name/52-2",[]],["text/52-2",[]],["component/52-2",[]],["keyword/52-2",[]],["title/52-3",[203,26.03,706,36.592,2177,40.102,2711,50.579]],["name/52-3",[]],["text/52-3",[]],["component/52-3",[]],["keyword/52-3",[]],["title/52-4",[53,36.53,217,25.39,911,43.264]],["name/52-4",[]],["text/52-4",[]],["component/52-4",[]],["keyword/52-4",[]],["title/52-5",[62,12.484,366,25.859]],["name/52-5",[]],["text/52-5",[]],["component/52-5",[]],["keyword/52-5",[]],["title/52",[366,19.09,1566,32.862,2370,33.483,2487,37.602]],["name/52",[2457,1.44,2487,1.647]],["text/52",[4,1.087,23,0.598,24,0.784,32,1.322,46,3.088,51,1.203,53,4.876,55,1.891,57,1.404,62,1.91,67,4.697,77,0.872,84,0.618,86,1.733,92,1.194,93,0.73,94,0.822,95,1.017,98,1.124,100,0.618,102,0.576,105,0.802,108,3.608,111,0.675,118,1.021,119,1.167,128,0.618,130,3.285,131,1.335,132,0.822,134,1.785,135,1.473,136,4.677,140,2.255,143,0.776,144,0.692,148,2.309,150,1.177,154,0.576,168,0.744,176,0.822,178,1.662,192,1.048,197,0.822,199,1.72,203,3.831,207,0.704,210,0.528,213,0.855,215,0.636,217,3.925,219,0.88,220,2.068,225,0.627,233,0.686,243,0.912,245,1.362,246,0.843,249,2.423,250,2.597,258,1.335,259,1.185,261,0.867,262,1.768,264,0.76,266,0.572,267,0.61,292,1.223,295,1.127,312,0.977,313,1.075,327,1.329,341,0.812,347,0.698,363,1.548,364,2.502,365,1.075,366,3.043,371,0.717,379,0.833,391,3.159,396,0.812,398,1.404,415,0.723,420,2.107,429,3.081,430,3.053,434,0.675,437,1.402,440,2.678,441,2.678,445,1.963,460,1.636,461,1.507,462,1.119,463,1.108,464,0.793,465,1.075,466,1.243,467,1.075,468,1.251,469,0.908,475,0.675,480,2.272,496,1.159,497,2.902,499,0.752,500,2.265,503,0.71,506,0.655,507,0.776,508,0.692,509,0.636,518,1.57,529,0.998,544,0.681,552,3.518,554,0.723,556,0.752,557,0.867,558,1.671,560,1.251,561,0.692,571,1.119,572,1.907,586,0.867,600,3.414,621,0.977,644,1.075,706,1.046,707,0.686,713,0.686,754,6.372,758,1.644,771,0.908,815,0.977,821,0.843,853,0.908,866,2.16,894,0.958,908,0.908,927,1.507,941,2.331,970,4.697,972,1.644,1050,0.977,1161,1.644,1198,1.251,1212,0.94,1216,1.108,1220,1.251,1223,0.894,1235,0.802,1305,1.147,1315,1.251,1340,4.04,1414,0.88,1433,2.501,1484,1.147,1487,2.006,1502,1.733,1566,3.7,1700,1.251,1774,1.193,1916,3.373,2214,1.329,2332,4.925,2370,3.77,2487,7.293,2533,1.329,2698,3.295,2699,1.329,2700,1.329,2701,1.329,2702,1.329,2703,1.329,2708,1.329,2709,1.329,2712,5.114,2713,1.446,2714,3.587,2715,1.446,2716,3.587,2717,1.446,2718,5.695,2719,5.695,2720,5.695,2721,5.695,2722,4.515,2723,2.618,2724,1.446,2725,1.446,2726,1.446,2727,1.446,2728,1.446,2729,1.446,2730,1.446,2731,1.446,2732,1.446,2733,1.446,2734,1.108,2735,1.329,2736,2.618,2737,1.446,2738,1.446,2739,1.446,2740,1.329,2741,1.329,2742,4.402]],["component/52",[3,0.415,4,0.422]],["keyword/52",[62,1.635,76,2.059,366,3.387,1566,5.83,2370,5.94,2487,6.671]],["title/53-1",[106,29.494,282,32.286,412,30.322,2155,32.286]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["keyword/53-1",[]],["title/53-2",[106,21.178,119,16.193,150,11.917,282,23.183,820,21.468,1235,20.146,2155,23.183]],["name/53-2",[]],["text/53-2",[]],["component/53-2",[]],["keyword/53-2",[]],["title/53-3",[119,19.941,140,12.511,180,19.109,363,15.734,820,26.437]],["name/53-3",[]],["text/53-3",[]],["component/53-3",[]],["keyword/53-3",[]],["title/53-4",[98,8.76,499,35.613]],["name/53-4",[]],["text/53-4",[]],["component/53-4",[]],["keyword/53-4",[]],["title/53",[80,21.226,106,26.081,250,20.396,282,28.549,2155,28.549]],["name/53",[80,0.753,250,0.724,2680,1.032]],["text/53",[16,1.836,21,1.466,53,1.39,55,1.417,62,1.439,68,3.268,70,0.741,71,1.088,77,1.674,80,3.201,98,1.116,100,0.946,106,1.291,108,3.894,109,1.188,111,1.782,119,3.72,128,3.15,130,2.183,135,0.909,140,1.887,146,0.876,149,2.039,150,2.973,154,0.881,160,1.175,178,1.768,192,0.887,199,0.866,200,1.347,206,0.813,210,2.183,211,1.496,215,0.973,217,2.942,220,0.804,223,1.528,225,1.654,227,1.01,233,1.051,245,1.449,250,4.582,267,0.934,282,6.282,292,1.034,295,0.953,324,1.291,336,1.163,363,2.373,364,2.267,366,0.836,396,1.243,412,1.328,415,1.909,416,3.301,422,5.356,429,2.493,430,2.47,434,2.792,437,3.411,440,2.322,441,2.322,442,1.496,448,1.466,451,2.449,460,3.076,461,1.275,462,0.946,466,1.051,489,1.06,493,1.026,496,2.226,499,2.614,506,1.727,507,3.207,508,2.862,509,2.21,518,1.328,556,3.832,557,2.288,558,2.436,565,1.697,566,1.291,572,0.959,580,1.078,582,1.414,592,1.39,614,1.275,623,1.229,634,2.047,640,1.697,646,1.243,713,1.051,744,1.563,776,1.328,791,1.229,795,4.149,814,3.739,816,1.328,819,2.516,820,4.358,879,1.602,900,1.466,908,1.39,982,3.987,1010,1.414,1032,1.347,1062,1.827,1064,1.916,1065,3.026,1066,1.466,1141,1.647,1158,1.466,1223,2.358,1235,2.79,1278,1.39,1280,1.439,1346,2.761,1599,1.916,1600,1.916,1601,1.916,1602,1.916,1603,1.756,1683,1.756,1758,2.034,2067,1.916,2087,1.916,2141,1.39,2155,6.282,2558,1.916,2743,3.817,2744,3.817,2745,3.817,2746,2.215,2747,2.034,2748,3.817,2749,2.215,2750,2.215,2751,2.215,2752,2.215,2753,2.215,2754,1.916,2755,2.215,2756,2.215,2757,2.215,2758,2.215,2759,2.215,2760,2.215,2761,2.215,2762,2.215,2763,2.215,2764,2.215,2765,2.215,2766,2.215,2767,2.215]],["component/53",[3,0.415,4,0.422]],["keyword/53",[80,3.74,106,4.596,282,5.031,634,4.227,982,3.979,2155,5.031,2768,7.882]],["title/54-1",[259,31.007,486,47.26]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["keyword/54-1",[]],["title/54",[3,10.601,4,10.792,199,19.767,1904,34.889]],["name/54",[1904,2.529]],["text/54",[3,1.868,4,1.901,26,3.353,46,3.567,49,3.353,85,3.344,87,5.427,89,7.35,93,4.498,140,1.84,145,2.955,150,2.159,176,5.064,180,3.807,196,3.024,199,4.232,241,6.823,336,4.679,381,3.529,454,3.455,475,3.072,713,3.123,773,5.427,896,4.443,1146,4.064,1235,4.943,1312,5.427,1375,6.044,1904,4.538,1913,5.691,1927,4.643,1934,5.041,2360,7.31,2425,6.044,2769,5.691,2770,6.044,2771,6.579,2772,6.044,2773,6.044,2774,6.579,2775,6.044,2776,6.579,2777,6.579,2778,6.579]],["component/54",[3,0.415,4,0.422]],["keyword/54",[62,2.797,199,5.999,1904,10.589]],["title/55",[261,41.074,1904,47.26]],["name/55",[261,1.328,1904,1.528]],["text/55",[3,2.076,4,2.114,89,8.172,180,4.233,896,6.69,2769,8.569,2770,9.1]],["component/55",[3,0.415,4,0.422]],["keyword/55",[62,3.666,1904,13.877]],["title/56-1",[26,34.919,196,31.487]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["keyword/56-1",[]],["title/56-2",[180,24.865,336,30.559,2360,42.103]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["keyword/56-2",[]],["title/56-3",[713,27.619,1723,53.457,1904,40.143]],["name/56-3",[]],["text/56-3",[]],["component/56-3",[]],["keyword/56-3",[]],["title/56",[199,22.744,241,39.299,2360,42.103]],["name/56",[241,1.496,2360,1.603]],["text/56",[3,1.573,4,1.601,5,3.85,8,3.985,16,1.156,23,1.309,25,2.613,26,6.229,33,2.235,40,3.493,46,3.531,48,2.613,49,4.208,50,2.139,65,1.957,79,3.289,85,3.099,89,2.613,92,1.444,93,1.599,95,2.002,102,1.26,108,1.081,129,2.235,139,1.326,140,0.886,142,4.967,148,2.089,150,1.691,178,1.467,180,3.528,186,2.909,196,2.993,199,3.645,223,2.185,225,2.821,241,4.398,243,1.103,256,1.599,258,2.626,261,1.899,266,1.253,267,1.335,284,2.427,287,2.511,314,2.74,316,4.085,323,3.479,336,3.94,344,2.427,360,1.872,371,2.553,386,1.957,387,2.909,396,3.656,415,1.584,440,1.927,454,4.336,455,2.858,459,2.097,476,3.183,480,2.904,538,2.601,628,1.63,650,2.235,685,1.467,729,2.74,731,3.046,738,2.511,764,2.355,775,1.529,812,2.74,819,1.584,825,2.292,853,1.988,900,2.097,919,1.957,967,2.74,1050,3.479,1051,4.456,1066,2.097,1091,2.427,1108,1.957,1145,2.139,1173,2.058,1235,3.613,1241,2.427,1263,2.613,1287,2.613,1331,4.456,1373,2.613,1414,1.927,1467,2.139,1731,2.909,1813,2.74,1904,3.554,2023,4.085,2142,2.613,2360,5.428,2532,2.292,2548,4.733,2769,2.74,2772,2.909,2773,4.733,2775,4.733,2779,3.167,2780,6.49,2781,2.909,2782,3.167,2783,3.167,2784,3.167,2785,2.909,2786,3.167,2787,3.167,2788,3.167,2789,3.167,2790,3.167,2791,3.167,2792,3.167,2793,2.909,2794,3.167,2795,3.167,2796,3.167]],["component/56",[3,0.415,4,0.422]],["keyword/56",[62,2.261,199,4.85,241,8.381,2360,8.979]],["title/57-1",[98,5.718,217,19.513,301,20.241,378,19.795,817,21.775]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["keyword/57-1",[]],["title/57-2",[197,38.936,249,46.266]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["keyword/57-2",[]],["title/57-3",[301,26.337,378,25.757,817,28.333]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["keyword/57-3",[]],["title/57",[140,14.148,301,22.89,378,22.386,817,24.625]],["name/57",[378,0.703,818,0.997,2680,1.032]],["text/57",[16,1.488,69,2.234,77,2.877,84,2.688,95,2.986,98,1.194,108,2.622,111,1.903,114,1.48,119,3.854,136,2.118,140,2.613,149,1.652,156,3.618,162,2.097,202,2.26,203,2.097,217,4.075,230,2.648,233,1.934,235,2.648,243,2.191,245,1.547,249,5.19,266,2.489,301,3.478,347,1.967,363,3.041,364,1.37,378,3.402,381,2.185,395,2.752,437,1.592,466,3.648,470,2.14,477,2.077,487,2.869,497,2.077,501,2.876,522,2.479,571,1.741,572,2.726,578,3.037,638,2.986,642,2.876,667,2.376,714,2.876,747,3.361,791,4.263,815,2.752,817,5.74,818,5.425,834,2.479,870,4.748,920,2.234,983,5.962,987,3.743,1000,4.509,1057,2.697,1066,5.088,1076,3.029,1235,2.26,1238,3.361,1239,3.361,1390,3.743,2088,3.743,2089,3.743,2090,6.853,2091,2.948,2243,5.779,2288,3.743,2289,3.743,2297,3.743,2299,5.779,2302,3.743,2303,3.743,2305,3.743,2310,3.743,2311,3.524,2740,3.743,2797,3.743]],["component/57",[3,0.415,4,0.422]],["keyword/57",[62,1.898,76,2.39,301,4.714,378,4.61,817,5.071]],["title/58-1",[150,22.481,820,40.499]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["keyword/58-1",[]],["title/58-2",[119,25.947,372,39.299,820,34.4]],["name/58-2",[]],["text/58-2",[]],["component/58-2",[]],["keyword/58-2",[]],["title/58-3",[372,34.155,429,25.067,430,24.843,820,29.897]],["name/58-3",[]],["text/58-3",[]],["component/58-3",[]],["keyword/58-3",[]],["title/58",[53,28.074,119,19.941,140,12.511,217,19.513,363,15.734]],["name/58",[53,0.997,217,0.693,2606,1.013]],["text/58",[8,1.639,12,1.98,16,1.99,39,2.248,47,2.097,53,5.734,62,0.993,68,2.206,70,1.136,76,0.779,77,1.814,80,1.611,84,1.451,95,1.319,98,1.276,100,1.451,102,1.351,108,3.117,119,4.979,128,2.328,130,1.24,132,3.097,134,1.377,140,2.186,148,1.377,149,1.377,150,3.378,178,2.524,179,1.585,192,2.733,199,1.327,207,1.653,215,2.395,217,4.609,220,1.979,231,2.097,233,1.611,243,2.377,245,2.591,246,1.98,250,2.485,293,3.097,295,1.461,363,3.01,364,1.832,415,2.726,420,1.625,422,6.244,429,2.701,430,2.677,437,2.668,460,1.548,461,1.954,462,1.451,464,1.862,466,1.611,467,2.524,469,2.131,471,2.692,489,1.625,498,2.505,503,2.677,518,3.267,532,2.862,543,1.451,544,2.565,556,2.833,561,1.625,571,2.328,572,1.471,578,1.639,659,2.293,666,2.524,667,1.98,681,2.862,703,2.206,707,2.586,712,2.937,758,2.131,820,6.692,823,1.883,919,2.097,982,1.714,1000,1.639,1007,3.119,2087,4.714,2320,5.231,2376,2.937,2747,3.119,2798,3.395,2799,3.395,2800,6.827,2801,3.395,2802,3.395,2803,3.395,2804,3.395,2805,3.395]],["component/58",[3,0.415,4,0.422]],["keyword/58",[53,6.538,62,1.898,76,2.39,119,4.644,217,4.544]],["title/59",[119,25.947,363,20.472,381,31.21]],["name/59",[149,0.644,381,0.851,2457,1.032]],["text/59",[65,6.062,92,4.475,119,4.375,149,3.978,199,3.835,267,4.136,363,3.452,381,5.263]],["component/59",[3,0.415,4,0.422]],["keyword/59",[62,1.28,76,1.612,119,3.133,256,3.547,381,3.768,1608,5.084,1614,5.084,1615,5.796]],["title/60-1",[1303,58.774]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["keyword/60-1",[]],["title/60-2",[98,8.76,816,41.074]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["keyword/60-2",[]],["title/60-3",[816,41.074,2410,49.568]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["keyword/60-3",[]],["title/60-4",[49,25.778,233,24.004,312,34.155,816,30.322]],["name/60-4",[]],["text/60-4",[]],["component/60-4",[]],["keyword/60-4",[]],["title/60-5",[98,7.441,487,26.539,982,29.38]],["name/60-5",[]],["text/60-5",[]],["component/60-5",[]],["keyword/60-5",[]],["title/60-6",[80,32.516,98,8.76]],["name/60-6",[]],["text/60-6",[]],["component/60-6",[]],["keyword/60-6",[]],["title/60-7",[77,13.345,98,7.943,225,17.366,363,14.101,982,20.237]],["name/60-7",[]],["text/60-7",[]],["component/60-7",[]],["keyword/60-7",[]],["title/60-8",[92,26.539,363,20.472,982,29.38]],["name/60-8",[]],["text/60-8",[]],["component/60-8",[]],["keyword/60-8",[]],["title/60-9",[70,22.92,982,34.588]],["name/60-9",[]],["text/60-9",[]],["component/60-9",[]],["keyword/60-9",[]],["title/60-10",[68,37.811,70,19.468,819,29.107]],["name/60-10",[]],["text/60-10",[]],["component/60-10",[]],["keyword/60-10",[]],["title/60-11",[70,19.468,982,29.38,2410,42.103]],["name/60-11",[]],["text/60-11",[]],["component/60-11",[]],["keyword/60-11",[]],["title/60-12",[49,25.778,537,27.125,634,27.125,982,25.534]],["name/60-12",[]],["text/60-12",[]],["component/60-12",[]],["keyword/60-12",[]],["title/60-13",[70,19.468,489,27.851,982,29.38]],["name/60-13",[]],["text/60-13",[]],["component/60-13",[]],["keyword/60-13",[]],["title/60-14",[98,3.909,140,8.552,148,12.394,215,13.434,225,13.244,233,14.509,363,10.755,634,16.396,982,15.434]],["name/60-14",[]],["text/60-14",[]],["component/60-14",[]],["keyword/60-14",[]],["title/60",[0,24.865,229,41.071,230,37.811]],["name/60",[0,0.678,229,1.12,230,1.032]],["text/60",[0,0.879,3,0.75,4,0.764,8,0.279,11,0.329,12,0.338,16,0.406,23,1.964,24,0.314,26,0.295,28,0.314,33,0.408,39,0.383,43,0.376,47,0.358,49,2.551,51,0.266,53,2.247,54,0.363,55,1.201,62,1.036,68,3.252,70,1.754,77,0.533,80,3.057,81,0.532,84,0.879,90,1.904,92,0.507,93,0.809,95,0.622,96,1.148,98,1.26,100,0.247,102,1.552,103,1.082,104,0.408,108,3.861,109,0.31,111,0.27,113,0.501,114,2.138,119,0.714,123,0.292,125,0.307,128,0.475,130,0.211,131,1.463,132,0.631,134,0.65,135,0.238,136,0.578,137,0.523,139,0.465,140,2.434,144,0.532,145,2.135,146,0.634,147,0.947,148,1.581,149,0.235,150,1.175,154,0.23,156,0.523,157,1.169,165,0.329,176,0.329,178,1.658,180,0.247,191,0.399,192,2.004,196,0.266,197,0.329,199,0.434,200,0.352,202,0.321,203,0.572,207,0.541,210,0.406,215,0.704,217,1.253,220,1.042,223,0.399,225,1.82,227,0.264,229,0.784,230,1.865,232,0.477,233,1.176,235,0.376,243,1.246,245,1.481,250,0.938,259,0.503,264,0.304,265,0.947,266,0.439,267,0.675,269,0.317,284,0.444,294,0.342,295,3.16,301,0.503,312,1.674,315,1.291,324,0.338,331,0.358,339,1.419,341,1.612,347,0.279,351,0.881,356,0.43,360,0.657,363,2.071,364,0.691,366,0.605,368,0.686,369,0.459,371,0.287,376,1.217,381,0.596,383,0.338,388,0.639,391,0.321,396,0.624,399,0.572,402,0.851,412,0.96,413,0.444,416,0.501,420,1.186,421,0.784,423,0.501,424,0.501,425,0.459,427,2.483,429,0.287,430,0.284,431,1.361,437,2.138,438,0.338,445,0.917,446,0.709,447,0.279,451,0.78,453,0.333,459,0.383,460,2.046,462,0.684,464,0.317,466,0.527,467,0.43,469,0.363,470,1.301,471,0.459,472,1.529,473,0.532,475,0.27,476,0.358,477,0.817,479,0.657,480,1.873,483,0.383,489,2.011,493,0.268,496,0.492,497,0.817,498,0.736,500,0.298,501,0.408,502,1.508,506,0.262,507,0.31,508,2.011,509,0.254,515,0.699,521,0.408,528,0.825,530,0.347,537,1.329,538,0.292,542,0.275,544,0.272,556,1.288,561,0.277,563,0.262,571,1.529,572,0.481,573,0.419,575,0.477,578,2.028,580,0.78,585,1.389,586,0.347,590,0.31,593,0.383,603,0.352,609,0.419,617,0.317,621,0.391,623,0.616,634,3.792,635,0.333,636,0.363,639,0.459,643,0.369,646,0.325,655,0.916,658,0.342,667,0.338,685,0.268,686,0.284,689,0.881,697,0.561,725,1.105,750,0.338,758,0.363,768,0.363,775,0.536,776,1.721,791,1.375,816,5.313,817,2.437,818,0.363,819,4.738,820,0.342,821,0.338,828,0.916,829,4.062,847,0.43,849,0.358,857,0.338,862,2.567,872,0.709,889,0.947,902,0.358,909,1.423,916,0.444,917,0.408,922,2.872,926,1.391,933,1.9,936,0.657,938,1.091,941,0.722,957,0.419,958,0.419,972,1.291,974,0.916,976,2.953,977,0.477,978,0.459,979,0.501,981,0.532,982,4.55,989,0.532,993,0.43,1000,2.64,1010,0.369,1016,0.419,1017,0.477,1039,1.082,1053,0.363,1057,2.582,1058,0.75,1059,0.444,1065,2.567,1066,1.9,1078,0.477,1136,4.012,1138,0.43,1140,0.85,1158,0.383,1170,0.804,1176,0.307,1180,0.43,1206,0.881,1223,4.083,1238,0.916,1253,0.419,1322,0.358,1337,0.648,1356,2.134,1361,1.021,1400,3.642,1406,0.419,1414,0.352,1424,0.287,1427,1.251,1433,0.329,1458,0.444,1459,0.784,1493,0.961,1517,0.408,1522,1.965,1551,2.8,1557,0.307,1612,0.501,1632,1.899,1672,0.532,1712,2.771,1753,3.374,1817,1.021,1896,0.736,1916,0.444,1917,0.532,1919,0.399,1928,1.779,1957,0.916,1979,0.501,2014,0.916,2044,0.477,2045,1.472,2069,0.43,2093,1.472,2125,0.352,2139,2.2,2140,2.407,2145,0.532,2152,0.43,2159,0.477,2172,0.501,2204,0.419,2248,1.321,2275,0.477,2307,1.386,2368,4.822,2410,2.822,2412,4.12,2414,2.973,2415,0.532,2418,3.634,2419,1.386,2422,0.532,2423,3.583,2424,1.889,2427,1.889,2430,1.021,2431,1.021,2432,1.779,2437,0.444,2438,0.532,2439,0.532,2440,0.532,2441,1.021,2442,0.501,2443,0.532,2444,0.532,2446,0.532,2447,1.021,2448,1.021,2449,0.532,2450,0.532,2451,0.501,2452,0.532,2453,0.532,2454,1.021,2455,0.532,2456,0.532,2457,1.61,2458,0.532,2459,1.472,2460,1.021,2461,1.889,2462,0.532,2505,0.532,2605,1.021,2612,1.021,2651,0.477,2661,1.021,2722,0.459,2806,0.579,2807,0.579,2808,0.477,2809,1.889,2810,1.602,2811,1.602,2812,0.579,2813,0.579,2814,0.579,2815,1.111,2816,0.579,2817,0.579,2818,0.579,2819,0.579,2820,0.579,2821,0.579,2822,0.579,2823,0.579,2824,0.391,2825,0.579,2826,0.579,2827,0.532,2828,0.579,2829,0.579,2830,0.579,2831,0.579,2832,0.579,2833,0.579,2834,0.579,2835,0.579,2836,0.579,2837,0.579,2838,0.579,2839,1.111,2840,0.579,2841,0.579,2842,0.579,2843,0.579,2844,0.579,2845,0.579,2846,0.579,2847,1.111,2848,0.579,2849,0.579,2850,0.579,2851,0.579,2852,0.579,2853,0.579,2854,0.579,2855,0.579,2856,0.579,2857,0.579,2858,0.579,2859,0.579,2860,0.579,2861,0.579,2862,0.579,2863,0.579,2864,0.579,2865,0.579,2866,0.579,2867,0.579,2868,0.579,2869,0.579,2870,0.579,2871,0.579,2872,0.579,2873,0.579,2874,0.579,2875,0.579,2876,0.579,2877,0.579,2878,0.579,2879,0.579,2880,0.579,2881,0.579,2882,0.579,2883,0.579,2884,0.579,2885,0.579,2886,0.579,2887,0.579,2888,0.579,2889,0.579,2890,0.579,2891,0.579,2892,0.579,2893,0.579,2894,0.579,2895,0.579,2896,0.579,2897,0.579,2898,0.579,2899,0.579,2900,0.579,2901,0.579,2902,0.579,2903,0.579,2904,0.579,2905,2.057,2906,1.021,2907,1.111,2908,1.111,2909,1.111,2910,0.579,2911,0.579,2912,0.579,2913,0.419,2914,0.579,2915,0.579,2916,0.579,2917,0.579,2918,0.579,2919,0.579,2920,0.579,2921,0.579,2922,0.579,2923,0.579,2924,0.579,2925,0.579,2926,0.579]],["component/60",[3,0.415,4,0.422]],["keyword/60",[0,3.834,62,1.635,76,2.059,229,6.333,230,5.83,862,7.114]],["title/61-1",[62,9.216,429,25.067,430,24.843,437,19.767]],["name/61-1",[]],["text/61-1",[]],["component/61-1",[]],["keyword/61-1",[]],["title/61-2",[3,10.601,4,10.792,80,24.004,233,24.004]],["name/61-2",[]],["text/61-2",[]],["component/61-2",[]],["keyword/61-2",[]],["title/61-3",[901,60.25]],["name/61-3",[]],["text/61-3",[]],["component/61-3",[]],["keyword/61-3",[]],["title/61-4",[98,7.441,654,40.143,1500,40.143]],["name/61-4",[]],["text/61-4",[]],["component/61-4",[]],["keyword/61-4",[]],["title/61-5",[219,41.681,2927,54.323]],["name/61-5",[]],["text/61-5",[]],["component/61-5",[]],["keyword/61-5",[]],["title/61-6",[0,24.865,3,12.197,496,25.757]],["name/61-6",[]],["text/61-6",[]],["component/61-6",[]],["keyword/61-6",[]],["title/61-7",[587,60.25]],["name/61-7",[]],["text/61-7",[]],["component/61-7",[]],["keyword/61-7",[]],["title/61",[0,29.273,242,48.353]],["name/61",[0,0.947,242,1.564]],["text/61",[0,3.786,3,2.168,4,2.207,8,1.533,12,1.853,17,2.242,20,2.242,21,2.103,22,2.434,23,1.313,51,1.46,55,1.917,62,1.884,65,1.963,71,1.56,76,0.729,77,2.502,80,1.508,84,1.357,92,2.355,94,1.806,95,2.007,98,1.286,102,1.264,108,2.227,119,1.417,128,3.533,132,1.806,140,0.889,149,2.094,168,2.658,178,1.472,199,1.242,200,1.933,207,1.547,210,2.744,213,1.878,218,1.806,219,3.142,220,1.875,221,1.495,222,1.547,227,1.449,236,1.604,242,3.645,244,3.645,266,1.257,267,2.177,268,1.853,272,2.242,277,1.963,309,1.686,324,1.853,343,2.741,363,3.117,364,1.736,366,2.463,373,2.748,382,2.362,396,1.783,429,4.392,430,4.062,432,1.651,437,3.932,438,3.012,440,1.933,441,1.933,442,2.145,487,1.449,496,3.66,497,1.619,544,1.495,549,2.865,556,2.685,571,1.357,572,1.376,580,1.547,587,2.299,590,1.704,611,2.103,614,2.973,623,2.865,632,2.832,654,3.563,685,2.392,686,2.537,688,2.064,716,3.488,717,2.242,761,2.748,768,1.994,775,1.533,823,1.762,833,3.737,900,3.419,901,2.299,910,2.299,1218,2.434,1247,2.918,1500,3.563,1505,2.918,1552,2.918,1759,4.744,2316,1.723,2345,2.519,2476,2.918,2927,2.519,2928,3.177,2929,2.918,2930,3.177,2931,3.177,2932,3.177,2933,2.748,2934,3.177,2935,3.177,2936,3.177,2937,2.748,2938,3.177,2939,3.177,2940,3.177,2941,3.177,2942,3.177,2943,3.177]],["component/61",[3,0.415,4,0.422]],["keyword/61",[0,6.559,62,2.797,76,3.522]],["title/62-1",[1303,58.774]],["name/62-1",[]],["text/62-1",[]],["component/62-1",[]],["keyword/62-1",[]],["title/62-2",[150,14.675,281,29.059,817,21.775,818,28.074,872,28.549]],["name/62-2",[]],["text/62-2",[]],["component/62-2",[]],["keyword/62-2",[]],["title/62-3",[76,11.605,148,20.506,150,16.596,363,17.793]],["name/62-3",[]],["text/62-3",[]],["component/62-3",[]],["keyword/62-3",[]],["title/62-4",[148,20.506,150,16.596,363,17.793,2734,38.756]],["name/62-4",[]],["text/62-4",[]],["component/62-4",[]],["keyword/62-4",[]],["title/62-5",[366,25.859,2734,52.498]],["name/62-5",[]],["text/62-5",[]],["component/62-5",[]],["keyword/62-5",[]],["title/62-6",[62,10.604,168,29.951,366,21.965]],["name/62-6",[]],["text/62-6",[]],["component/62-6",[]],["keyword/62-6",[]],["title/62-7",[1303,58.774]],["name/62-7",[]],["text/62-7",[]],["component/62-7",[]],["keyword/62-7",[]],["title/62-8",[62,10.604,168,29.951,366,21.965]],["name/62-8",[]],["text/62-8",[]],["component/62-8",[]],["keyword/62-8",[]],["title/62",[0,19.109,329,36.892,540,21.404,815,30.202,2734,34.27]],["name/62",[540,1.06,2264,1.698]],["text/62",[0,1.959,3,1.154,4,1.679,11,2.606,16,2.513,23,1.895,26,1.001,40,1.053,55,2.043,62,1.624,71,1.689,76,1.436,77,2.083,84,0.839,92,1.568,95,0.763,103,1.326,105,1.089,108,4.064,117,1.504,128,2.352,136,1.021,137,0.924,140,1.283,148,2.791,149,0.796,150,3.289,168,3.22,178,0.909,181,0.956,192,3.862,207,1.674,220,0.713,242,1.386,258,1.001,261,2.061,275,1.13,281,4.065,288,0.851,293,1.116,295,2.368,301,0.889,329,1.62,336,2.408,341,1.102,363,1.613,364,1.156,366,2.97,396,1.102,420,2.634,421,1.386,429,2.273,430,0.964,440,2.091,441,2.091,442,1.326,455,1.089,460,2.51,470,1.031,475,0.917,492,1.386,500,1.769,508,0.94,509,0.863,527,1.326,529,1.354,532,2.89,540,2.634,545,1.116,556,1.787,623,1.089,630,1.804,673,1.46,713,0.932,813,1.804,814,1.46,817,3.351,818,4.321,819,1.719,821,1.145,829,4.748,861,2.487,872,2.927,883,2.973,927,1.13,943,2.878,961,1.557,1140,1.824,1145,1.326,1155,1.421,1167,1.253,1223,3.865,1255,3.717,1356,1.46,1394,1.421,1474,1.557,1571,1.421,1603,2.726,2264,5.275,2420,3.966,2527,1.62,2712,1.504,2734,4.218,2944,4.586,2945,1.963,2946,1.963,2947,1.963,2948,5.747,2949,4.586,2950,3.438,2951,5.056,2952,1.963,2953,5.504,2954,1.963,2955,3.438,2956,1.963,2957,3.438,2958,1.963,2959,1.963,2960,1.963,2961,1.963,2962,1.963,2963,1.963,2964,1.963,2965,1.963,2966,1.963,2967,4.586,2968,1.963,2969,1.963,2970,1.963,2971,1.963,2972,1.963,2973,1.963,2974,1.963,2975,1.963,2976,1.963,2977,1.963,2978,1.963,2979,1.963,2980,1.963,2981,1.963,2982,3.438,2983,3.438,2984,3.438,2985,3.438,2986,5.504,2987,1.963,2988,3.438,2989,4.586,2990,1.963,2991,1.963,2992,1.963,2993,3.438,2994,1.963,2995,4.586,2996,1.963,2997,1.963,2998,1.963,2999,1.963,3000,1.963,3001,3.438,3002,4.212,3003,1.804,3004,1.804,3005,3.158,3006,3.158,3007,4.586,3008,1.804,3009,1.804,3010,1.963,3011,1.804,3012,1.963,3013,1.963,3014,3.438,3015,1.698,3016,1.963,3017,1.963,3018,1.963,3019,1.963,3020,1.963,3021,1.963,3022,1.698,3023,1.804,3024,1.963,3025,1.804,3026,1.804,3027,1.804,3028,1.804]],["component/62",[3,0.415,4,0.422]],["keyword/62",[0,6.559,62,2.797,76,3.522]],["title/63-1",[76,11.605,135,20.768,364,17.003,386,31.244]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["keyword/63-1",[]],["title/63-2",[366,25.859,647,41.074]],["name/63-2",[]],["text/63-2",[]],["component/63-2",[]],["keyword/63-2",[]],["title/63-3",[269,37.569,647,41.074]],["name/63-3",[]],["text/63-3",[]],["component/63-3",[]],["keyword/63-3",[]],["title/63",[196,23.245,259,22.89,260,35.696,703,32.862]],["name/63",[647,0.952,1280,1.032,3029,1.373]],["text/63",[3,1.29,4,1.657,16,1.973,22,1.466,23,0.79,24,1.037,26,0.975,46,1.037,55,0.71,71,0.94,76,1.677,77,0.637,80,1.595,84,0.817,86,1.266,98,0.245,102,0.761,108,3.999,119,0.853,128,2.629,130,0.698,134,0.775,135,3.002,139,0.801,140,2.612,145,0.859,146,0.757,149,2.191,150,2.019,151,2.183,160,1.015,166,1.319,168,0.984,170,1.319,179,0.893,189,1.466,196,2.065,199,0.748,206,1.649,207,3.781,208,2.076,210,2.475,220,1.22,227,2.049,236,4.121,250,2.464,259,2.033,261,2.014,266,1.777,267,1.894,269,1.842,277,1.182,282,2.145,293,1.087,324,1.115,333,1.319,347,0.923,362,1.578,363,1.901,364,1.13,366,2.322,378,0.847,383,2.62,386,1.182,388,1.101,394,1.115,419,1.015,420,1.608,422,1.131,429,4.046,430,3.815,431,2.224,432,2.335,437,1.756,440,2.044,445,2.003,446,2.868,447,2.97,464,1.049,480,0.853,495,1.319,496,1.487,506,0.866,525,1.35,534,1.384,540,1.608,556,0.994,562,1.886,563,1.521,571,1.436,572,0.829,580,0.931,603,1.164,606,1.015,610,1.517,632,2.464,645,1.101,646,1.074,647,6.234,648,3.071,649,3.541,667,1.959,681,1.004,683,1.578,697,0.966,703,2.183,728,1.292,737,1.422,739,2.771,763,1.654,817,0.931,819,0.957,821,1.115,823,1.061,857,1.115,870,4.516,901,1.384,909,1.665,913,4.589,917,1.35,1053,2.109,1055,1.35,1075,1.201,1140,1.783,1208,1.201,1255,1.292,1300,1.221,1308,1.517,1370,1.115,1372,2.664,1391,1.319,1465,1.757,1487,1.466,1522,1.517,1557,1.783,1595,1.466,1751,3.91,1793,2.906,1974,1.422,2111,1.654,2115,2.318,2203,1.757,2275,1.578,2330,2.906,2340,1.654,2551,1.422,2670,1.757,3030,1.578,3031,1.913,3032,5.435,3033,1.913,3034,2.269,3035,1.654,3036,8.511,3037,1.757,3038,4.493,3039,1.913,3040,1.913,3041,3.36,3042,1.913,3043,1.913,3044,1.913,3045,1.913,3046,1.913,3047,1.913,3048,1.913,3049,1.913,3050,1.913,3051,1.913,3052,1.913,3053,1.913,3054,1.913,3055,6.153,3056,1.913,3057,1.913,3058,4.493,3059,3.36,3060,3.36,3061,1.913,3062,1.913,3063,1.913,3064,1.757,3065,1.654,3066,1.913,3067,1.757,3068,1.757,3069,1.757,3070,1.757,3071,1.757,3072,3.086,3073,1.757,3074,1.757,3075,1.757,3076,1.757]],["component/63",[3,0.415,4,0.422]],["keyword/63",[62,1.635,76,2.059,196,4.124,647,5.379,703,5.83,1145,6.059]],["title/64-1",[366,25.859,3034,46.266]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["keyword/64-1",[]],["title/64-2",[3,12.197,4,12.417,366,21.965]],["name/64-2",[]],["text/64-2",[]],["component/64-2",[]],["keyword/64-2",[]],["title/64-3",[98,8.76,202,38.006]],["name/64-3",[]],["text/64-3",[]],["component/64-3",[]],["keyword/64-3",[]],["title/64-4",[379,33.494,3034,39.299,3077,50.335]],["name/64-4",[]],["text/64-4",[]],["component/64-4",[]],["keyword/64-4",[]],["title/64",[649,39.432,1145,46.266]],["name/64",[649,0.914,1249,1.373,3029,1.373]],["text/64",[3,1.059,4,1.414,5,3.646,8,0.69,16,0.945,26,0.728,39,0.946,40,0.766,45,0.743,55,0.961,56,1.133,62,1.348,69,1.947,71,0.702,77,1.182,86,0.946,93,0.721,98,1.09,100,0.61,105,0.792,108,2.735,111,1.209,119,2.518,128,4.05,130,2.062,134,1.05,136,0.743,140,1.58,144,0.684,145,0.642,148,0.579,149,3.63,150,2.63,154,0.568,160,0.758,168,0.735,178,2.02,180,1.106,192,3.209,196,2.004,199,1.704,202,1.436,203,2.244,206,0.524,207,1.729,208,1.599,210,2.252,214,0.802,220,0.519,223,1.786,224,0.965,227,0.651,236,1.792,245,2.144,248,0.882,249,0.965,250,1.619,259,0.647,266,0.565,267,1.838,277,2.193,292,0.667,293,0.812,295,2.654,331,0.882,336,0.75,341,0.802,364,0.87,366,2.501,371,1.283,378,0.632,379,2.044,381,2.709,383,0.833,388,0.822,392,0.61,397,0.792,398,1.904,401,1.034,415,0.714,419,0.758,420,0.684,421,1.008,429,3.827,430,3.03,431,1.714,432,1.846,433,1.095,434,0.667,437,2.207,440,3.436,441,0.869,442,2.398,444,0.844,445,1.154,447,1.25,448,0.946,455,0.792,460,3.022,461,0.822,462,3.16,464,2.391,466,3.145,469,2.229,474,0.965,480,1.154,487,0.651,489,0.684,496,0.632,497,0.728,499,3.206,506,0.647,507,0.766,508,1.699,509,1.56,515,1.13,531,0.897,544,0.672,545,0.812,549,4.73,553,2.044,556,3.844,557,3.698,558,5.443,561,0.684,567,1.133,571,0.61,572,1.538,576,1.133,580,0.696,582,5.287,583,2.815,585,0.965,606,0.758,611,1.714,614,1.49,623,0.792,635,0.822,645,1.49,647,2.614,649,3.814,659,1.748,678,0.672,697,0.721,703,3.282,713,0.678,716,0.965,717,1.008,728,1.748,771,1.625,775,0.69,777,0.985,809,1.034,815,0.965,819,0.714,830,0.822,851,1.178,870,1.599,907,2.64,908,3.872,913,1.625,917,1.008,919,0.882,938,0.758,998,2.378,1032,1.575,1123,0.869,1128,2.307,1133,1.312,1136,1.827,1140,0.758,1167,0.912,1176,1.884,1180,1.062,1208,2.737,1218,1.984,1222,1.178,1354,2.018,1509,2.449,1515,2.815,1516,2.721,1522,1.133,1563,1.178,1574,0.965,1575,1.133,1609,2.239,1711,1.53,1751,2.569,1774,1.178,1974,1.062,2014,2.929,2015,4.64,2119,1.236,2155,0.912,2204,1.034,2781,1.312,2797,1.312,3032,2.64,3034,6.292,3064,1.312,3078,1.312,3079,1.312,3080,1.312,3081,1.312,3082,1.312,3083,2.378,3084,1.312,3085,1.312,3086,1.312,3087,1.429,3088,1.236,3089,1.312,3090,1.312,3091,1.312,3092,1.429,3093,6.169,3094,1.429,3095,1.429,3096,1.429,3097,1.429,3098,1.312,3099,1.312,3100,1.312]],["component/64",[3,0.415,4,0.422]],["keyword/64",[62,2.261,76,2.847,649,7.143,1145,8.381]],["title/65-1",[366,25.859,2115,47.26]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["keyword/65-1",[]],["title/65-2",[3,12.197,4,12.417,366,21.965]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["keyword/65-2",[]],["title/65-3",[415,34.267,2115,47.26]],["name/65-3",[]],["text/65-3",[]],["component/65-3",[]],["keyword/65-3",[]],["title/65-4",[415,34.267,2365,50.935]],["name/65-4",[]],["text/65-4",[]],["component/65-4",[]],["keyword/65-4",[]],["title/65-5",[3,9.374,4,9.543,140,12.511,2365,33.25,2645,34.27]],["name/65-5",[]],["text/65-5",[]],["component/65-5",[]],["keyword/65-5",[]],["title/65",[648,38.936,1145,46.266]],["name/65",[648,0.902,1683,1.259,3029,1.373]],["text/65",[3,1.591,4,1.975,8,0.797,16,1.459,32,0.834,39,1.093,40,1.582,45,1.533,46,0.895,47,1.02,49,0.842,55,0.613,62,1.813,71,0.811,76,0.677,77,2.24,85,0.62,86,1.953,90,0.701,93,2.018,95,0.641,98,1.057,105,0.916,108,3.226,119,1.315,128,3.244,130,0.603,131,0.842,133,1.503,134,1.97,135,1.211,140,1.882,148,2.513,149,1.621,150,2.359,168,2.874,178,2.251,179,0.771,192,2.482,197,1.676,199,1.153,203,0.85,206,0.606,207,1.946,210,2.038,224,1.115,226,1.073,227,1.345,236,1.489,238,1.517,243,0.575,245,0.627,258,0.842,266,1.167,267,2.049,275,0.95,277,1.02,278,3.063,293,0.938,336,1.549,341,0.927,346,2.551,348,1.228,363,1.038,364,1.344,366,3.121,378,0.731,379,1.698,383,0.963,386,1.02,391,1.636,392,0.705,394,1.72,397,0.916,398,2.144,401,1.195,415,1.999,419,0.876,423,1.428,425,1.309,427,1.428,429,4.589,430,3.905,431,1.953,432,2.078,433,1.265,437,3.107,438,0.963,440,2.957,441,1.794,442,2.699,445,2.489,446,1.054,447,1.424,455,0.916,464,1.617,475,0.771,477,2.037,478,1.195,480,1.315,483,1.093,488,1.054,493,0.765,495,1.139,500,0.85,509,0.726,518,0.99,531,3.051,544,0.777,549,0.916,556,2.078,558,1.883,572,1.278,576,1.309,580,0.804,600,4.31,614,3.214,632,1.617,647,1.768,648,4.699,650,1.165,678,0.777,688,1.073,697,0.834,703,1.073,713,0.784,731,0.976,738,1.309,762,1.517,771,2.509,775,0.797,776,1.768,823,2.217,847,1.228,870,1.02,908,1.036,909,0.818,917,1.165,936,0.976,938,0.876,969,1.309,1000,0.797,1032,1.794,1053,1.036,1091,1.265,1123,1.005,1128,1.916,1130,2.433,1140,0.876,1155,1.195,1167,1.054,1208,4.223,1218,3.724,1280,1.916,1315,1.428,1340,2.339,1356,1.228,1424,2.409,1474,1.309,1509,2.035,1571,2.134,1574,1.992,1580,1.165,1711,0.976,1751,2.134,1814,1.362,1820,1.228,1908,3.063,2044,1.362,2097,1.228,2115,7.355,2116,1.428,2155,1.054,2188,1.428,2191,1.517,2260,2.551,2330,1.428,2340,1.428,2365,5.645,2500,1.517,2532,1.195,2645,6.092,2780,3.457,2933,1.428,3090,1.517,3091,1.517,3101,1.651,3102,2.551,3103,1.651,3104,1.517,3105,2.551,3106,2.551,3107,2.709,3108,1.517,3109,1.517,3110,1.517,3111,2.709,3112,2.709,3113,2.709,3114,1.651,3115,1.651,3116,1.651,3117,1.651,3118,1.651,3119,2.949,3120,2.949,3121,1.651]],["component/65",[3,0.415,4,0.422]],["keyword/65",[62,2.261,76,2.847,648,7.053,1145,8.381]],["title/66-1",[141,36.354,366,25.859]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["keyword/66-1",[]],["title/66-2",[236,25.534,366,19.09,647,30.322,870,31.244]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["keyword/66-2",[]],["title/66-3",[366,21.965,2115,40.143,3034,39.299]],["name/66-3",[]],["text/66-3",[]],["component/66-3",[]],["keyword/66-3",[]],["title/66-4",[366,21.965,647,34.888,3032,43.264]],["name/66-4",[]],["text/66-4",[]],["component/66-4",[]],["keyword/66-4",[]],["title/66-5",[3,10.601,4,10.792,168,26.03,366,19.09]],["name/66-5",[]],["text/66-5",[]],["component/66-5",[]],["keyword/66-5",[]],["title/66-6",[379,33.494,3034,39.299,3077,50.335]],["name/66-6",[]],["text/66-6",[]],["component/66-6",[]],["keyword/66-6",[]],["title/66-7",[379,33.494,2115,40.143,3077,50.335]],["name/66-7",[]],["text/66-7",[]],["component/66-7",[]],["keyword/66-7",[]],["title/66",[378,25.757,647,34.888,3032,43.264]],["name/66",[378,0.547,2114,1.07,3032,0.92,3122,1.237]],["text/66",[0,1.365,3,1.518,4,1.667,16,0.46,26,0.642,40,2.782,45,1.199,54,0.79,55,1.185,56,1.829,62,1.585,68,0.818,71,0.618,77,2.18,86,0.833,98,0.161,108,3.751,128,4.167,130,0.46,131,0.642,134,0.51,135,0.947,136,1.66,139,0.966,140,1.832,141,0.668,145,0.565,148,0.935,149,1.87,150,2.474,151,2.075,157,0.715,168,2.931,170,1.591,172,2.311,178,1.479,192,3.128,196,2.384,200,0.766,207,0.613,209,2.934,210,1.894,220,0.838,236,2.619,243,0.438,249,1.558,261,0.755,281,4.256,295,2.45,363,1.391,364,1.55,366,2.733,378,1.414,379,2.985,383,1.862,394,0.734,398,1.237,412,0.755,415,1.154,419,0.668,429,3.737,430,1.569,431,2.617,432,2.055,437,0.902,440,3.465,441,1.404,442,2.157,444,0.744,445,1.763,447,1.908,448,0.833,451,0.613,454,0.661,460,2.103,462,1.97,464,2.168,466,2.189,474,2.157,480,0.561,489,0.602,499,2.397,509,2.279,531,2.895,545,2.247,556,2.696,557,1.915,558,2.524,561,0.602,572,0.545,580,1.123,582,0.804,594,0.868,614,1.838,623,0.698,635,0.725,645,2.654,647,5.099,648,3.929,649,2.985,656,0.85,684,0.888,688,0.818,703,3.7,728,2.67,737,0.936,743,0.833,771,2.895,774,0.79,809,0.911,815,1.558,817,3.671,818,0.79,819,2.306,820,2.337,823,1.772,851,1.903,857,0.734,862,0.998,870,5.123,909,0.624,910,0.911,913,1.448,919,0.778,922,0.661,927,1.328,1055,0.888,1066,1.527,1097,0.965,1128,0.818,1161,0.79,1163,1.156,1165,0.965,1208,2.895,1218,3.029,1222,1.903,1223,0.778,1254,0.998,1280,0.818,1356,0.936,1433,1.311,1509,0.868,1571,1.669,1574,0.85,1711,0.744,1789,2.119,1814,1.038,1886,1.156,1887,2.119,2022,0.965,2096,2.119,2111,1.089,2114,1.996,2115,6.245,2116,1.089,2119,1.089,2140,3.856,2152,1.715,2155,1.473,2260,1.089,2261,1.156,2263,1.156,2264,2.447,2272,1.156,2275,2.634,2503,0.998,2712,2.447,2824,1.558,2933,1.089,3022,1.089,3032,6.958,3034,4.89,3067,1.156,3068,1.156,3069,1.156,3070,1.156,3071,1.156,3072,1.156,3073,1.156,3074,1.156,3075,1.156,3076,1.156,3078,1.156,3079,1.156,3080,1.156,3081,1.156,3084,1.156,3085,1.156,3088,1.089,3098,1.156,3099,1.156,3100,1.156,3104,1.156,3105,1.089,3106,1.089,3107,1.156,3108,1.156,3109,1.156,3110,1.156,3111,1.156,3112,1.156,3123,1.259,3124,1.156,3125,2.307,3126,3.194,3127,2.307,3128,1.259,3129,1.259,3130,2.307,3131,3.953,3132,3.953,3133,1.259,3134,1.259,3135,1.259,3136,1.259,3137,1.259,3138,2.307,3139,1.259,3140,1.259,3141,1.259,3142,4.612,3143,1.259,3144,1.259,3145,1.259,3146,1.259,3147,2.307,3148,1.259,3149,1.259,3150,1.259,3151,2.307,3152,2.307,3153,1.259,3154,1.259,3155,1.259]],["component/66",[3,0.415,4,0.422]],["keyword/66",[62,1.898,76,2.39,647,6.244,648,5.919,649,5.995]],["title/67-1",[3,9.374,4,9.543,285,29.059,366,16.88,379,25.741]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["keyword/67-1",[]],["title/67-2",[3,12.197,4,12.417,366,21.965]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["keyword/67-2",[]],["title/67-3",[356,50.935,366,25.859]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["keyword/67-3",[]],["title/67-4",[77,14.889,98,8.637,207,21.775,437,17.479]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["keyword/67-4",[]],["title/67-5",[98,8.76,150,22.481]],["name/67-5",[]],["text/67-5",[]],["component/67-5",[]],["keyword/67-5",[]],["title/67-6",[343,36.354,1054,52.498]],["name/67-6",[]],["text/67-6",[]],["component/67-6",[]],["keyword/67-6",[]],["title/67-7",[366,21.965,1566,37.811,2370,38.525]],["name/67-7",[]],["text/67-7",[]],["component/67-7",[]],["keyword/67-7",[]],["title/67-8",[366,25.859,1140,36.354]],["name/67-8",[]],["text/67-8",[]],["component/67-8",[]],["keyword/67-8",[]],["title/67",[106,29.494,285,32.862,379,29.11,1145,34.155]],["name/67",[366,0.836,2680,1.44]],["text/67",[3,2.137,4,2.129,5,1.458,11,1.402,16,1.991,22,1.891,27,3.112,47,2.586,48,2.035,50,1.666,62,0.45,77,2.395,84,1.054,86,2.771,90,1.776,92,1.125,93,2.753,94,1.402,98,1.371,102,1.666,105,2.322,106,5.112,128,1.054,130,0.901,131,1.258,135,3.21,142,1.633,145,1.108,148,1,150,2.565,162,1.27,166,1.702,180,1.789,192,2.183,207,2.038,217,2.379,236,2.753,243,0.859,245,0.937,250,3.565,258,4.247,261,1.479,267,1.04,277,2.586,285,6.864,292,1.152,293,2.379,316,3.319,337,5.008,340,1.702,344,1.891,357,1.891,358,5.093,366,4.15,378,1.853,379,4.499,386,1.524,391,1.369,394,1.439,396,1.385,399,1.27,415,2.094,429,2.075,430,3.533,432,2.176,437,2.131,438,1.439,445,1.866,464,1.353,480,1.866,487,1.125,500,1.27,506,1.117,530,1.479,567,1.956,568,2.134,571,1.054,600,2.51,603,2.547,621,1.666,628,2.154,649,1.42,650,1.741,673,3.112,713,1.171,721,1.458,731,4.62,775,2.021,820,3.223,834,1.501,839,1.27,871,1.834,889,1.458,891,2.134,908,1.549,910,3.945,927,1.42,936,2.475,1000,2.021,1005,3.029,1032,1.501,1140,3.409,1156,3.621,1167,1.575,1235,1.369,1303,1.741,1320,6.607,1512,1.891,1566,3.543,1630,1.956,1665,2.035,1667,1.633,1735,2.134,1907,6.718,1908,5.989,2097,1.834,2248,3.453,2370,3.609,2527,2.035,2645,4.922,2684,2.266,2735,2.266,2780,3.621,2793,2.266,3156,2.266,3157,2.467,3158,2.467,3159,2.467,3160,2.467,3161,2.467,3162,2.266,3163,2.467,3164,2.467]],["component/67",[3,0.415,4,0.422]],["keyword/67",[62,1.898,76,2.39,106,6.074,285,6.767,379,5.995]],["title/68-1",[1303,58.774]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["keyword/68-1",[]],["title/68-2",[366,31.432]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["keyword/68-2",[]],["title/68-3",[150,22.481,3102,59.259]],["name/68-3",[]],["text/68-3",[]],["component/68-3",[]],["keyword/68-3",[]],["title/68-4",[4,8.553,62,7.304,106,23.375,130,14.634,207,19.516,703,26.045]],["name/68-4",[]],["text/68-4",[]],["component/68-4",[]],["keyword/68-4",[]],["title/68-5",[77,12.091,98,7.352,150,11.917,829,25.052,2365,27,2645,27.828]],["name/68-5",[]],["text/68-5",[]],["component/68-5",[]],["keyword/68-5",[]],["title/68",[394,48.563]],["name/68",[648,1.259,2606,1.414]],["text/68",[3,1.403,4,1.924,16,1.944,48,2.721,55,3.129,62,1.857,77,3.001,80,1.565,98,1.338,106,3.105,108,2.284,128,3.283,130,2.805,135,2.186,140,0.923,144,3.204,147,1.95,149,1.337,150,1.747,162,4.339,166,3.672,180,2.275,192,2.132,207,1.606,210,1.204,219,2.006,258,2.713,266,1.305,269,1.809,295,2.29,316,4.221,318,2.386,347,1.592,366,3.182,379,3.064,391,1.83,394,4.481,434,1.54,437,1.289,460,2.428,462,2.275,466,2.527,491,2.143,497,1.681,509,2.339,530,3.192,537,2.855,545,1.874,553,1.898,580,1.606,600,1.977,636,2.07,648,5.948,687,2.452,703,4.35,728,2.227,731,3.147,771,3.342,775,2.57,829,3.672,850,2.452,891,2.853,908,4.202,910,6.1,1128,3.459,1130,2.721,1140,1.75,1199,2.452,1208,4.823,1271,1.977,1280,3.459,1282,2.721,1433,1.874,1493,2.853,1509,3.672,1566,2.143,1574,3.595,1751,3.852,1814,2.721,1891,2.853,1907,5.13,2115,4.618,2365,5.712,2370,2.183,2645,5.13,2808,2.721,3082,3.03,3102,5.79,3105,4.605,3106,4.605,3162,7.744,3165,3.298,3166,3.298,3167,5.324,3168,3.298,3169,3.298,3170,5.324,3171,3.298]],["component/68",[3,0.415,4,0.422]],["keyword/68",[23,3.257,62,1.436,76,1.808,163,5.218,285,5.121,394,4.596,648,4.479]],["title/69-1",[1303,58.774]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["keyword/69-1",[]],["title/69-2",[366,25.859,3034,46.266]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["keyword/69-2",[]],["title/69-3",[4,8.553,62,7.304,106,23.375,434,18.716,771,25.162,3034,27.069]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["keyword/69-3",[]],["title/69",[649,47.93]],["name/69",[649,1.275,2457,1.44]],["text/69",[3,1.347,4,1.669,16,2.347,26,2.135,40,2.247,51,1.926,55,2.386,56,3.322,62,0.763,77,1.395,85,1.572,86,2.774,94,2.381,95,1.628,98,1.276,106,2.443,128,1.79,130,2.855,136,2.178,140,2.188,141,2.223,144,2.005,149,2.606,150,1.375,166,2.89,196,4.348,199,1.637,210,2.347,236,3.245,249,2.829,258,2.135,266,1.657,293,2.381,318,3.031,363,1.474,366,2.952,379,3.7,381,2.247,392,1.79,432,2.178,445,1.868,464,2.297,474,2.829,487,1.911,499,2.178,509,2.825,530,2.512,541,2.247,545,2.381,571,1.79,572,1.815,580,2.04,614,4.501,623,4.338,645,2.411,646,2.352,647,4.689,649,5.982,703,6.487,716,2.829,717,2.957,728,2.829,771,5.938,775,3.103,815,2.829,830,2.411,850,3.115,851,3.456,870,3.971,910,5.658,1140,2.223,1145,2.829,1222,3.456,1359,3.624,1392,2.957,1563,3.456,1711,2.477,1751,4.651,2155,2.675,2469,3.624,3032,4.779,3034,7.426,3083,3.849,3086,3.849,3088,5.56,3089,3.849,3172,4.19,3173,4.19,3174,3.849]],["component/69",[3,0.415,4,0.422]],["keyword/69",[62,2.797,76,3.522,649,8.835]],["title/70",[26,22.795,77,14.889,98,5.718,817,21.775,868,34.27]],["name/70",[77,0.412,98,0.158,817,0.602,3175,1.136]],["text/70",[4,1.994,23,2.347,32,4.718,55,2.108,62,1.466,77,3.573,87,4.685,98,1.425,119,2.532,131,4.102,139,2.378,150,1.864,218,3.228,259,2.57,309,3.014,347,2.741,357,4.352,363,1.998,434,2.652,437,2.22,449,3.269,452,4.222,453,3.269,469,3.565,483,3.76,603,4.896,604,3.918,696,2.952,719,4.352,817,4.95,818,3.565,820,5.525,868,4.352,869,4.913,872,3.626,874,8.585,875,4.503,876,6.381,877,8.084,889,3.357,936,3.357,1193,3.626,1209,4.222,1217,4.503,1280,5.229,1402,4.913,1434,5.822,2252,4.913,3175,7.392,3176,8.047,3177,8.047,3178,8.047,3179,5.217]],["component/70",[3,0.415,4,0.422]],["keyword/70",[62,1.898,76,2.39,77,3.467,98,1.332,817,5.071]],["title/71-1",[98,5.125,140,11.213,247,26.536,248,24.762,691,27.651,1716,29.801]],["name/71-1",[]],["text/71-1",[]],["component/71-1",[]],["keyword/71-1",[]],["title/71-2",[3180,76.497]],["name/71-2",[]],["text/71-2",[]],["component/71-2",[]],["keyword/71-2",[]],["title/71-3",[3181,76.497]],["name/71-3",[]],["text/71-3",[]],["component/71-3",[]],["keyword/71-3",[]],["title/71-4",[76,9.197,77,13.345,412,24.031,480,17.872,532,21.049,540,19.184]],["name/71-4",[]],["text/71-4",[]],["component/71-4",[]],["keyword/71-4",[]],["title/71",[62,10.604,242,41.071,540,27.851]],["name/71",[242,1.564,540,1.06]],["text/71",[3,0.783,4,1.957,16,2.148,23,1.132,26,0.775,37,0.954,45,0.79,51,2.101,54,0.954,55,0.564,62,1.901,70,1.251,76,1.752,77,3.273,84,0.65,85,1.403,92,1.705,95,1.776,96,0.704,98,1.196,100,1.597,102,1.09,108,2.007,119,0.678,128,1.597,130,2.148,131,1.396,132,0.864,134,1.111,135,1.125,139,1.147,140,2.566,145,0.683,148,2.385,149,1.111,150,2.103,154,1.09,157,0.864,160,0.807,163,1.007,165,0.864,168,1.924,178,2.117,181,1.82,185,1.397,191,1.049,192,2.912,197,2.124,199,1.461,202,0.844,206,1.006,207,0.74,210,1.669,214,1.538,220,0.552,221,3.016,222,3.12,242,1.073,243,0.954,245,0.577,247,4.815,248,1.692,256,0.768,259,0.688,261,0.912,266,0.601,281,5.36,294,0.899,295,2.531,308,3.954,336,1.438,347,0.734,363,2.559,364,1.774,366,1.411,378,0.673,383,2.666,412,2.741,415,1.37,420,1.311,429,1.853,430,0.747,434,1.279,437,1.071,440,0.925,441,1.667,442,1.027,444,0.899,447,1.322,451,0.74,454,0.798,460,2.683,462,1.17,464,0.834,466,1.3,477,1.396,480,1.221,498,0.699,500,1.41,508,0.728,509,0.668,529,1.049,532,4.47,537,1.469,540,3.948,548,1.254,549,2.536,550,1.749,556,0.79,586,0.912,603,0.925,623,0.844,635,0.875,638,2.17,652,0.939,697,0.768,707,2.17,710,1.597,713,1.3,737,1.13,775,0.734,805,2.516,815,1.027,817,3.541,818,1.72,819,3.638,821,0.887,823,2.074,829,3.64,831,1.13,853,1.72,857,1.597,868,1.165,872,1.749,909,1.358,913,2.346,922,1.438,993,1.13,1048,0.971,1054,1.165,1121,1.254,1128,4.462,1130,2.26,1140,1.454,1167,0.971,1190,2.369,1212,0.988,1223,1.692,1255,1.027,1300,0.971,1368,1.315,1377,2.26,1411,1.165,1509,1.049,1528,1.397,1571,1.982,1574,1.027,1575,2.964,1609,2.369,1690,1.315,1716,2.779,1889,2.516,2147,1.165,2182,1.315,2264,3.503,2320,1.165,2351,1.397,2358,3.434,2376,1.315,2527,1.254,2734,1.165,2809,1.397,3002,3.434,3003,3.434,3004,2.516,3005,2.516,3006,2.516,3008,2.516,3009,2.516,3011,1.397,3015,2.369,3022,1.315,3023,1.397,3025,1.397,3026,1.397,3027,1.397,3028,1.397,3180,1.397,3181,1.397,3182,1.521,3183,1.521,3184,3.738,3185,1.521,3186,2.739,3187,5.883,3188,1.254,3189,1.521,3190,2.739,3191,1.521,3192,1.521,3193,2.739,3194,2.739,3195,2.739,3196,1.521,3197,1.521,3198,1.521,3199,1.521,3200,3.771,3201,1.521,3202,2.739,3203,1.521,3204,1.521,3205,1.521,3206,1.521]],["component/71",[3,0.415,4,0.422]],["keyword/71",[0,6.559,62,2.797,76,3.522]],["title/72",[40,31.21,98,7.441,266,23.018]],["name/72",[466,0.753,2680,1.032,3207,1.12]],["text/72",[12,5.096,40,4.687,62,1.592,77,2.909,98,1.541,114,3.173,134,3.543,140,2.994,199,3.415,267,3.684,392,3.734,395,5.902,532,5.62,677,5.785,707,4.148,1555,4.906]],["component/72",[3,0.415,4,0.422]],["keyword/72",[40,4.812,62,1.635,76,2.059,98,2.03,266,3.549]],["title/73-1",[70,22.92,364,23.033]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["keyword/73-1",[]],["title/73-2",[243,28.996]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["keyword/73-2",[]],["title/73-3",[3208,72.03]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["keyword/73-3",[]],["title/73",[98,8.76,364,23.033]],["name/73",[364,0.745,2606,1.414]],["text/73",[16,2.318,18,2.261,23,3.594,57,4.153,62,0.751,70,3.319,77,2.114,90,1.75,98,1.526,102,3.948,108,3.939,123,3.205,134,1.672,139,1.727,160,2.188,167,2.343,174,2.588,199,1.611,225,1.786,227,2.896,243,1.436,259,1.866,264,2.165,301,1.866,336,3.334,347,3.737,363,3.06,364,3.474,435,5.034,438,2.404,444,2.437,502,2.508,503,2.025,510,5.237,511,5.492,512,5.237,513,5.237,515,2.77,533,2.983,538,2.082,539,3.922,542,1.957,543,4.013,571,1.762,605,2.844,636,2.588,638,1.957,645,4.456,775,1.99,832,3.065,834,2.508,836,2.844,837,7.601,838,3.566,839,2.122,920,2.261,933,2.73,939,3.147,1086,3.566,1173,2.679,1322,3.922,1424,3.837,1555,2.315,1948,3.401,2068,3.566,2128,3.269,2271,3.566,3209,4.123,3210,4.123,3211,3.401,3212,5.237,3213,6.35,3214,6.35]],["component/73",[3,0.415,4,0.422]],["keyword/73",[62,1.635,76,2.059,98,2.03,266,3.549,364,3.017]],["title/74-1",[515,29.891,3215,46.266]],["name/74-1",[]],["text/74-1",[]],["component/74-1",[]],["keyword/74-1",[]],["title/74-2",[243,28.996]],["name/74-2",[]],["text/74-2",[]],["component/74-2",[]],["keyword/74-2",[]],["title/74-3",[515,29.891,3216,50.935]],["name/74-3",[]],["text/74-3",[]],["component/74-3",[]],["keyword/74-3",[]],["title/74",[70,22.92,98,8.76]],["name/74",[70,0.531,98,0.203,2457,1.032]],["text/74",[3,0.447,16,0.422,23,2.573,26,0.589,27,2.746,47,0.714,57,2.62,62,0.21,70,1.448,76,1.121,77,3.269,84,0.911,85,4.021,90,2.796,95,1.153,96,0.535,98,0.99,102,0.46,108,4.213,123,1.076,128,2.815,130,2.827,132,1.212,140,0.83,149,0.864,150,1.212,152,2.548,154,0.848,155,2.445,160,1.131,178,0.987,179,0.539,180,0.911,191,4.545,192,1.733,199,0.833,210,2.635,220,1.774,225,1.286,237,1.958,245,1.127,266,0.457,267,0.487,272,0.815,275,0.665,281,0.751,288,2.332,295,1.862,338,1.471,363,0.406,364,1.643,388,0.665,390,0.885,392,0.911,412,3.493,425,2.928,434,1.724,435,3.874,438,0.674,444,0.683,447,2.358,449,2.126,454,1.119,460,0.527,479,1.755,493,0.987,497,2.743,498,0.531,501,3.448,509,0.937,514,1.471,515,3.891,522,0.703,530,0.693,531,0.725,532,5.1,533,0.836,534,2.148,535,2.275,538,1.865,539,1.834,540,3.922,542,1.409,543,1.578,544,2.3,561,1.02,572,1.6,580,1.038,595,4.778,606,1.131,610,1.69,617,0.633,628,1.097,633,0.953,638,2.319,645,1.709,681,0.607,692,1.119,693,2.607,707,0.548,713,2.765,714,2.607,764,1.585,774,0.725,775,1.433,791,0.641,814,1.585,819,0.578,823,0.641,826,3.858,836,0.797,839,1.901,850,1.585,853,0.725,856,1.69,896,0.78,897,0.885,909,1.057,911,1.585,920,1.169,922,2.566,933,0.765,972,1.338,1000,0.558,1032,0.703,1050,1.44,1310,0.916,1311,3.874,1313,0.916,1322,0.714,1365,0.953,1411,0.885,1424,2.144,1633,1.958,1636,1.958,1667,0.765,1670,0.953,1677,0.953,1681,4.807,1763,4.03,1785,3.744,1820,2.746,1858,1.542,1896,3.858,1914,3.393,2034,4.488,2055,3.393,2065,4.488,2128,0.916,2182,3.194,2204,2.672,2436,1.759,2554,0.953,3215,2.494,3216,2.207,3217,1.061,3218,1.155,3219,0.999,3220,2.132,3221,2.132,3222,2.132,3223,2.132,3224,2.132,3225,2.132,3226,5.827,3227,5.827,3228,3.693,3229,3.693,3230,7.217,3231,1.958,3232,2.132,3233,2.132,3234,1.958,3235,2.132,3236,2.132,3237,2.132,3238,2.132,3239,3.693,3240,2.132,3241,2.132,3242,2.132,3243,2.132,3244,2.132,3245,2.132,3246,2.132,3247,2.132,3248,2.132,3249,2.132,3250,1.759,3251,1.155]],["component/74",[3,0.415,4,0.422]],["keyword/74",[62,1.635,70,3.002,76,2.059,98,2.03,266,3.549]],["title/75-1",[243,23.855,3252,62.934]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["keyword/75-1",[]],["title/75-2",[3208,72.03]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["keyword/75-2",[]],["title/75",[98,8.76,154,27.265]],["name/75",[98,0.203,154,0.632,2913,1.149]],["text/75",[0,2.762,16,0.909,40,1.336,57,2.263,70,2.42,76,0.572,85,3.142,90,2.33,98,1.28,108,4.388,123,2.131,135,1.023,139,1.043,140,1.536,145,1.119,150,2.373,154,2.572,155,1.649,192,3.673,210,0.909,243,0.867,245,3.178,250,2.948,267,1.05,288,1.079,295,2.781,331,1.539,361,2.288,363,1.485,364,1.419,432,3.36,435,1.975,438,2.461,445,1.111,451,2.055,460,2.948,462,2.762,466,3.068,494,1.649,496,3.705,503,3.553,508,3.093,509,1.854,513,5.332,515,3.841,532,1.308,533,3.053,539,3.392,542,2.003,543,2.346,545,1.416,563,1.127,572,1.079,587,4.676,594,1.718,600,1.493,606,2.914,638,4.353,645,1.434,685,2.994,696,1.295,707,1.182,821,1.453,837,3.234,839,1.282,887,1.682,909,1.235,920,2.314,933,2.794,939,1.235,1000,2.037,1060,4.562,1125,5.938,1271,5.278,1300,2.694,1322,1.539,1424,2.092,1512,4.207,1667,1.649,1677,2.055,1898,2.649,2199,2.155,3211,2.055,3215,1.682,3216,3.137,3217,2.288,3250,5.332,3253,6.464,3254,6.464,3255,6.464,3256,6.464,3257,6.464,3258,2.155,3259,5.491,3260,2.491,3261,2.491]],["component/75",[3,0.415,4,0.422]],["keyword/75",[62,1.635,76,2.059,98,2.03,154,3.571,266,3.549]],["title/76-1",[100,29.273,2105,56.514]],["name/76-1",[]],["text/76-1",[]],["component/76-1",[]],["keyword/76-1",[]],["title/76-2",[1110,53.16]],["name/76-2",[]],["text/76-2",[]],["component/76-2",[]],["keyword/76-2",[]],["title/76-3",[130,21.246,459,38.525,487,26.539]],["name/76-3",[]],["text/76-3",[]],["component/76-3",[]],["keyword/76-3",[]],["title/76-4",[130,21.246,266,23.018,894,38.525]],["name/76-4",[]],["text/76-4",[]],["component/76-4",[]],["keyword/76-4",[]],["title/76-5",[111,38.883]],["name/76-5",[]],["text/76-5",[]],["component/76-5",[]],["keyword/76-5",[]],["title/76-6",[98,5.718,146,17.69,685,20.716,686,21.967,927,25.741]],["name/76-6",[]],["text/76-6",[]],["component/76-6",[]],["keyword/76-6",[]],["title/76-7",[205,35.613,681,35.977]],["name/76-7",[]],["text/76-7",[]],["component/76-7",[]],["keyword/76-7",[]],["title/76-8",[679,46.196]],["name/76-8",[]],["text/76-8",[]],["component/76-8",[]],["keyword/76-8",[]],["title/76-9",[678,39.199]],["name/76-9",[]],["text/76-9",[]],["component/76-9",[]],["keyword/76-9",[]],["title/76-10",[98,8.76,608,35.261]],["name/76-10",[]],["text/76-10",[]],["component/76-10",[]],["keyword/76-10",[]],["title/76-11",[1304,44.663]],["name/76-11",[]],["text/76-11",[]],["component/76-11",[]],["keyword/76-11",[]],["title/76-12",[98,7.441,196,26.745,1370,33.936]],["name/76-12",[]],["text/76-12",[]],["component/76-12",[]],["keyword/76-12",[]],["title/76",[98,7.441,685,26.956,686,28.584]],["name/76",[98,0.158,685,0.573,686,0.608,3262,0.981]],["text/76",[3,0.599,4,0.34,16,1.417,18,0.873,23,0.658,24,1.549,28,0.864,31,1.184,32,1.96,37,1,42,1.152,51,1.313,55,1.757,62,1.284,69,0.873,71,0.782,76,1.992,77,3.274,79,1.017,84,2.328,85,1.776,92,1.771,95,2.117,98,1.447,100,1.22,102,1.137,108,3.043,111,0.744,114,1.719,117,1.221,123,0.804,124,1.017,128,2.022,130,3.335,131,0.812,134,1.574,135,3.061,136,1.485,137,0.75,139,0.667,140,1.524,141,1.516,143,0.854,146,1.536,148,1.158,149,1.158,150,1.553,151,1.035,157,2.206,180,0.681,192,1.144,199,1.517,204,0.929,205,1.485,210,0.582,214,0.894,220,1.979,225,0.69,227,1.303,231,0.984,243,0.994,245,0.605,256,1.442,264,1.5,266,0.63,275,0.917,288,0.69,295,0.685,301,1.293,303,1.152,309,1.516,310,1.152,313,1.184,347,0.769,363,0.56,364,0.536,371,0.789,372,1.929,391,2.625,392,1.22,395,3.196,413,2.189,415,2.725,429,0.789,430,0.782,434,0.744,437,2.368,441,1.738,444,0.942,445,0.71,449,0.917,451,0.776,452,1.184,453,0.917,454,0.836,455,0.884,459,1.055,475,1.334,477,0.812,479,1.688,483,1.891,487,1.303,489,1.367,490,1.035,491,1.035,493,0.738,496,2.916,498,1.784,499,0.828,500,0.82,503,2.325,506,0.721,508,0.762,509,0.7,515,1.246,530,0.955,532,3.182,543,2.589,544,0.75,549,0.884,550,1.017,554,1.942,556,1.485,572,1.237,575,1.314,592,2.437,593,1.055,608,0.82,614,1.644,617,0.873,623,1.584,631,1.463,632,1.566,645,0.917,654,1.099,658,0.942,659,2.622,665,1.221,678,1.344,679,0.884,681,2.861,685,2.524,686,2.325,688,1.035,691,1.099,697,0.804,707,1.843,713,1.843,715,2.066,725,1.099,729,1.378,732,3.358,736,1.221,743,3.133,775,0.769,791,2.625,819,1.429,821,0.929,823,2.625,834,0.969,865,1.076,886,1.263,889,0.942,894,4.012,900,1.055,901,1.152,909,3.003,911,2.123,913,1,927,0.917,938,2.06,965,1.793,993,1.184,1000,2.284,1010,1.017,1051,1.378,1108,1.764,1121,1.314,1173,1.035,1209,1.184,1237,1.076,1252,1.463,1270,5.434,1285,1.463,1304,0.854,1318,1.221,1354,0.905,1391,1.099,1406,2.066,1500,1.97,1512,1.221,1555,0.894,1571,1.152,1576,1.378,1603,1.263,1693,3.078,1711,4.618,1898,1,1935,2.624,2130,1.378,2141,4.424,2163,2.265,2164,5.567,2165,1.463,2359,1.221,2479,1.263,2507,1.463,2552,1.314,2657,1.378,2937,3.358,3263,2.624,3264,1.463,3265,1.593,3266,1.593,3267,1.593,3268,1.378,3269,1.593,3270,1.593,3271,1.593,3272,1.463,3273,1.593,3274,1.593,3275,1.593,3276,2.624,3277,1.463,3278,1.463,3279,1.593,3280,1.593,3281,4.733,3282,1.593,3283,1.463,3284,1.463,3285,1.593,3286,1.593,3287,1.593,3288,1.593,3289,2.856,3290,1.593,3291,2.856,3292,1.593]],["component/76",[3,0.415,4,0.422]],["keyword/76",[62,1.436,76,1.808,98,1.809,266,3.117,685,3.651,686,3.871]],["title/77-1",[146,23.018,791,45.413]],["name/77-1",[]],["text/77-1",[]],["component/77-1",[]],["keyword/77-1",[]],["title/77",[98,7.441,146,23.018,301,26.337]],["name/77",[98,0.203,301,0.719,2606,1.013]],["text/77",[3,0.588,16,1.025,49,1.431,51,1.29,55,1.042,62,1.091,69,1.54,70,1.561,76,0.644,77,0.935,80,1.332,85,3.134,92,1.28,95,1.091,98,1.33,108,4.071,114,3.214,125,3.7,135,1.153,139,1.176,140,2.592,143,1.506,144,2.865,146,4.266,147,1.66,148,3.138,149,1.138,156,2.196,157,1.596,158,1.391,162,1.445,165,3.963,174,1.762,176,1.596,199,1.097,203,2.401,204,2.721,206,2.56,210,1.025,213,2.758,215,1.234,217,2.036,220,3.214,225,1.216,243,1.625,245,1.066,265,3.539,267,1.183,280,1.576,288,1.216,290,2.579,294,1.66,295,1.208,301,1.271,305,1.859,310,2.031,333,1.937,357,2.151,364,2.975,368,1.734,391,2.588,399,1.445,400,2.428,420,1.344,421,1.981,428,1.981,437,1.097,470,1.474,489,1.344,502,1.708,509,2.05,515,2.036,518,1.683,522,1.708,523,2.316,528,3.983,529,1.937,537,1.506,541,1.506,563,4.005,578,1.355,586,1.683,596,2.151,600,1.683,606,1.49,632,3.283,635,1.616,638,1.332,678,1.322,679,1.557,694,1.981,776,1.683,791,2.588,836,1.937,913,3.758,914,4.043,926,1.576,927,1.616,928,2.316,965,1.762,1026,3.849,1104,1.708,1193,1.792,1235,1.557,1317,5.599,1337,1.637,1354,1.596,1394,3.376,1409,3.469,1414,1.708,1424,3.836,1474,2.226,1516,3.575,1517,1.981,1555,1.576,1803,2.428,1934,2.151,2125,1.708,2147,2.151,2152,2.087,2532,2.031,2668,2.579,2927,2.226,3216,2.087,3293,2.428,3294,2.808,3295,2.808,3296,4.666,3297,2.808,3298,4.666,3299,4.666,3300,2.808,3301,2.808]],["component/77",[3,0.415,4,0.422]],["keyword/77",[62,1.052,98,1.363,146,2.284,203,2.972,265,3.413,301,2.613,678,2.718,679,3.203,3302,5.304]],["title/78-1",[146,27.1,243,23.855]],["name/78-1",[]],["text/78-1",[]],["component/78-1",[]],["keyword/78-1",[]],["title/78-2",[85,21.841,150,19.095,152,40.143]],["name/78-2",[]],["text/78-2",[]],["component/78-2",[]],["keyword/78-2",[]],["title/78-3",[98,8.76,146,27.1]],["name/78-3",[]],["text/78-3",[]],["component/78-3",[]],["keyword/78-3",[]],["title/78-4",[1193,53.16]],["name/78-4",[]],["text/78-4",[]],["component/78-4",[]],["keyword/78-4",[]],["title/78",[135,23.896,146,23.018,210,21.246]],["name/78",[135,0.652,210,0.58,2457,1.032]],["text/78",[0,0.562,3,0.276,8,0.635,16,1.495,17,0.929,51,2.693,55,0.892,57,1.289,62,0.604,69,0.722,70,0.44,76,0.761,77,0.438,85,3.252,95,0.511,98,1.108,102,0.524,108,4.332,114,2.691,130,0.481,135,0.54,137,0.62,139,1.006,140,1.88,146,3.344,147,0.778,148,2.724,150,2.205,152,1.658,156,0.62,158,0.652,160,0.698,162,0.677,165,1.366,174,0.826,192,2.836,199,0.514,206,0.882,210,1.495,213,0.778,215,0.578,217,1.049,220,2.799,225,1.041,245,1.554,246,1.401,250,1.512,266,1.619,267,1.013,268,0.768,269,0.722,275,0.758,288,0.57,289,0.889,294,0.778,295,3.047,310,0.952,311,1.086,331,1.485,336,1.741,354,0.979,363,0.845,364,1.97,371,1.191,378,1.812,385,1.086,391,1.333,396,0.739,399,0.677,420,0.63,421,1.696,425,2.629,428,0.929,437,0.939,445,1.479,447,2.829,448,0.871,454,0.691,462,1.417,466,1.574,470,0.691,475,1.122,486,0.908,489,1.587,493,0.61,496,4.428,497,1.225,502,0.801,504,4.411,508,2.559,509,1.056,515,2.755,518,0.789,522,0.801,523,1.086,528,3.458,541,1.289,542,2.261,544,0.62,552,0.813,553,1.383,554,0.658,561,1.15,562,0.739,563,3.205,566,1.401,580,0.641,582,4.031,586,0.789,590,0.706,596,1.009,619,0.979,632,1.318,635,0.758,636,0.826,638,1.141,658,0.778,659,0.889,677,0.871,697,1.213,725,0.908,768,0.826,774,0.826,791,1.333,819,0.658,832,0.979,834,0.801,836,0.908,865,0.889,914,1.623,922,1.741,927,0.758,928,1.086,939,0.652,983,0.908,1000,0.635,1034,1.138,1058,3.611,1104,0.801,1140,0.698,1161,0.826,1167,0.84,1193,0.84,1317,2.962,1354,1.885,1392,1.696,1394,2.399,1409,1.787,1414,1.462,1416,1.982,1418,1.982,1424,2.029,1498,5.812,1517,2.889,1704,0.871,1803,8.223,1896,5.282,2097,0.979,2125,0.801,2152,0.979,2184,1.209,2335,1.138,2532,0.952,2554,1.086,2688,1.209,2951,7.08,3216,0.979,3231,3.046,3234,3.046,3293,1.138,3303,1.316,3304,1.209,3305,1.316,3306,1.316,3307,4.094,3308,4.646,3309,4.646,3310,4.646,3311,4.646,3312,4.646,3313,3.316,3314,1.316,3315,3.316,3316,2.403,3317,4.764,3318,4.764,3319,3.316,3320,5.347,3321,1.316,3322,1.086,3323,1.316,3324,1.316,3325,1.316,3326,1.209,3327,1.316]],["component/78",[3,0.415,4,0.422]],["keyword/78",[62,1.898,76,2.39,135,4.277,146,4.12,210,3.802]],["title/79-1",[98,7.441,146,23.018,359,41.071]],["name/79-1",[]],["text/79-1",[]],["component/79-1",[]],["keyword/79-1",[]],["title/79",[98,8.76,146,27.1]],["name/79",[2722,2.907]],["text/79",[43,4.503,45,3.603,62,2.015,98,1.546,135,2.846,146,4.555,149,2.81,199,2.709,206,2.544,210,2.53,263,4.503,265,4.097,267,3.889,270,4.35,288,3.003,323,4.68,341,3.891,359,6.512,364,3.102,371,5.141,388,3.989,455,3.845,635,3.989,713,3.289,833,5.014,865,4.68,938,3.678,1075,4.35,1167,4.424,1310,5.495,1467,4.68,1580,4.891,2152,5.153,2651,5.717]],["component/79",[3,0.415,4,0.422]],["keyword/79",[62,1.635,98,1.147,135,3.684,210,3.276,301,4.061,375,7.761]],["title/80-1",[275,39.432,309,36.354]],["name/80-1",[]],["text/80-1",[]],["component/80-1",[]],["keyword/80-1",[]],["title/80-2",[96,31.735,1176,36.354]],["name/80-2",[]],["text/80-2",[]],["component/80-2",[]],["keyword/80-2",[]],["title/80",[110,61.912]],["name/80",[3328,3.368]],["text/80",[8,2.867,16,2.168,26,3.027,54,5.213,55,2.204,62,1.513,65,3.669,70,1.987,76,1.363,96,3.847,98,1.446,100,2.538,102,2.364,110,4.416,124,5.301,130,2.168,131,3.027,140,2.323,154,2.364,158,2.944,170,4.097,196,2.73,206,3.515,207,2.892,220,2.157,243,2.892,256,2.999,263,3.859,288,2.573,299,4.097,301,2.688,306,3.791,309,4.407,324,3.464,364,1.997,366,2.242,439,4.297,491,6.222,515,3.623,543,2.538,571,2.538,590,3.185,667,3.464,681,5.028,754,4.416,768,3.728,1161,3.728,1176,3.152,1427,2.999,1460,5.456,1461,4.899,1673,4.551,3188,7.899,3328,5.456,3329,5.94,3330,5.94]],["component/80",[3,0.415,4,0.422]],["keyword/80",[62,1.635,76,2.059,98,1.147,110,6.671,206,3.294,3188,7.402]],["title/81-1",[204,33.936,205,30.25,480,25.947]],["name/81-1",[]],["text/81-1",[]],["component/81-1",[]],["keyword/81-1",[]],["title/81",[62,10.604,98,7.441,206,21.362]],["name/81",[2722,2.907]],["text/81",[3,1.186,5,2.103,11,2.022,12,4.107,18,1.951,23,1.47,40,1.908,45,1.85,47,2.198,62,1.905,70,2.685,76,1.841,77,2.672,85,3.012,96,2.621,98,1.495,100,2.417,102,2.803,123,2.856,131,2.883,133,1.813,134,2.855,137,2.663,139,2.949,140,2.45,154,2.251,158,4.341,165,2.022,174,2.233,176,2.022,179,1.661,204,5.107,205,3.661,206,2.585,210,1.299,229,2.511,256,2.856,258,1.813,267,1.5,277,2.198,280,1.997,301,1.61,303,4.093,308,6.091,309,1.888,345,2.133,364,1.902,369,2.821,383,2.075,391,1.974,432,3.661,478,2.574,487,1.623,493,2.621,498,1.635,500,1.831,503,2.779,515,1.552,525,4.97,532,2.971,534,2.574,542,2.685,543,3.009,545,2.022,550,2.271,628,1.831,638,2.685,645,2.048,681,1.868,684,2.511,697,2.856,707,1.689,715,2.574,736,2.726,757,2.198,778,2.935,823,3.907,839,1.831,856,4.486,896,2.403,909,4.622,939,3.49,1158,2.355,1211,2.821,1508,2.935,1537,2.574,1598,5.197,2253,3.078,3035,3.078,3200,4.667,3208,3.078,3331,3.558,3332,3.268,3333,3.558,3334,3.558,3335,3.558,3336,3.558,3337,3.268,3338,3.558]],["component/81",[3,0.415,4,0.422]],["keyword/81",[62,2.261,76,2.847,98,1.587,206,4.556]],["title/82-1",[207,24.625,221,23.807,225,21.912,273,37.602]],["name/82-1",[]],["text/82-1",[]],["component/82-1",[]],["keyword/82-1",[]],["title/82-2",[76,10.262,98,5.718,130,16.328,134,18.133,415,22.369]],["name/82-2",[]],["text/82-2",[]],["component/82-2",[]],["keyword/82-2",[]],["title/82-3",[98,5.718,154,26.884,497,22.795,619,33.25]],["name/82-3",[]],["text/82-3",[]],["component/82-3",[]],["keyword/82-3",[]],["title/82-4",[76,10.262,98,5.718,497,22.795,498,20.554,692,23.485]],["name/82-4",[]],["text/82-4",[]],["component/82-4",[]],["keyword/82-4",[]],["title/82-5",[130,18.465,133,25.778,134,20.506,498,23.245]],["name/82-5",[]],["text/82-5",[]],["component/82-5",[]],["keyword/82-5",[]],["title/82",[98,8.76,462,29.273]],["name/82",[462,1.566]],["text/82",[4,0.8,8,1.047,12,1.265,16,0.792,23,3.414,25,1.789,32,1.095,39,2.481,45,1.127,46,1.176,55,0.805,62,1.213,69,1.189,70,1.656,76,1.793,84,2.845,85,0.814,90,0.92,92,0.989,94,1.232,95,2.29,98,1.569,102,1.492,108,3.065,114,1.361,123,1.095,125,1.989,128,1.601,130,3.279,133,1.105,134,2.007,135,0.89,137,1.021,140,2.186,145,1.684,147,2.215,148,3.867,150,0.712,154,2.9,155,1.436,181,1.056,192,0.868,199,1.934,202,2.079,207,1.056,210,0.792,214,1.217,215,0.953,220,0.787,221,2.33,222,1.825,225,2.144,226,1.409,233,1.029,236,1.095,243,1.305,244,1.53,245,1.423,256,1.095,261,1.3,266,2.332,267,1.58,273,1.612,282,1.384,292,1.012,295,0.933,301,3.013,338,2.585,343,1.151,357,1.662,360,2.215,362,1.789,363,1.319,364,2.238,371,1.075,374,1.612,388,1.248,395,1.464,399,1.116,402,1.662,415,1.875,420,1.794,437,1.934,460,1.709,462,3.694,475,1.012,476,1.34,477,1.105,478,1.569,480,1.671,489,3.487,493,1.004,496,2.191,497,1.105,498,2.709,499,1.948,500,1.116,506,2.24,507,1.163,508,1.794,509,1.647,561,1.794,572,1.624,586,3.534,594,1.496,595,1.436,600,1.3,619,2.786,623,1.203,628,1.116,656,1.464,658,1.282,677,1.436,692,2.599,698,1.876,713,1.029,716,1.464,717,1.53,728,1.464,731,2.926,826,2.481,830,1.248,839,1.116,849,1.34,852,1.876,861,1.569,889,1.282,895,2.972,904,4.383,938,1.151,944,1.662,946,1.612,947,1.719,948,1.662,950,1.662,953,1.662,955,1.612,956,1.662,957,1.569,958,1.569,1000,2.845,1050,1.464,1141,2.786,1212,1.409,1237,1.464,1305,1.719,1424,1.075,1427,1.892,1430,1.992,1433,2.13,1439,1.662,1440,1.876,1441,1.876,1442,1.876,1443,1.876,1444,1.876,1450,1.612,1451,1.719,1452,1.612,1569,1.361,1704,1.436,1770,1.789,1857,1.662,1858,1.569,1859,2.872,1902,1.464,2071,1.662,2553,1.992,2559,2.972,3339,5.099,3340,2.168,3341,3.748,3342,1.992,3343,2.168,3344,2.168,3345,2.168,3346,3.748,3347,2.168,3348,2.168,3349,2.168,3350,2.168]],["component/82",[3,0.415,4,0.422]],["keyword/82",[62,1.635,76,2.059,98,2.03,265,5.304,462,3.834]],["title/83",[205,43.288]],["name/83",[205,1.906]],["text/83",[26,4.309,41,5.967,49,4.309,62,1.911,65,5.223,85,3.173,98,1.341,124,5.397,133,4.309,140,2.365,158,4.19,163,5.597,196,3.886,204,6.114,205,5.45,206,3.103,292,3.947,368,5.223,399,4.351,562,4.746,1235,4.69]],["component/83",[3,0.415,4,0.422]],["keyword/83",[62,1.898,76,2.39,98,1.332,205,5.414,206,3.823]],["title/84-1",[275,39.432,309,36.354]],["name/84-1",[]],["text/84-1",[]],["component/84-1",[]],["keyword/84-1",[]],["title/84-2",[95,26.618,243,23.855]],["name/84-2",[]],["text/84-2",[]],["component/84-2",[]],["keyword/84-2",[]],["title/84",[3351,68.694]],["name/84",[3351,3.024]],["text/84",[5,2.57,8,3.192,16,1.587,24,2.357,26,2.216,49,4.078,54,2.729,55,1.614,62,1.629,72,2.825,93,3.338,96,4.141,98,1.346,100,1.858,102,3.558,125,4.744,130,1.587,131,2.216,140,2.691,144,2.081,145,1.953,158,2.155,162,2.238,170,2.999,204,2.535,205,2.26,206,2.937,220,1.579,230,2.825,235,2.825,255,5.067,256,2.195,264,2.283,275,2.502,277,2.686,278,3.331,280,3.712,288,1.884,292,3.087,296,3.761,299,2.999,301,1.968,324,2.535,356,3.232,364,2.223,368,2.686,376,3.248,381,2.332,419,2.307,422,2.57,455,2.412,475,2.03,493,2.014,503,2.135,537,3.546,543,1.858,571,1.858,605,2.999,611,2.878,626,3.331,632,3.626,677,2.878,681,2.283,697,2.195,743,2.878,768,2.729,861,3.146,1094,3.232,1161,2.729,1176,4.744,1177,3.994,1193,2.775,1253,3.146,1427,2.195,1461,5.454,1537,3.146,1564,3.761,1569,2.729,1872,3.761,2379,3.994,2473,3.331,3351,9.169,3352,4.348,3353,4.348,3354,3.994,3355,4.348,3356,8.002,3357,3.761,3358,3.994,3359,3.146,3360,6.612]],["component/84",[3,0.415,4,0.422]],["keyword/84",[62,1.898,76,2.39,98,1.332,206,3.823,3351,8.591]],["title/85-1",[275,39.432,309,36.354]],["name/85-1",[]],["text/85-1",[]],["component/85-1",[]],["keyword/85-1",[]],["title/85-2",[243,28.996]],["name/85-2",[]],["text/85-2",[]],["component/85-2",[]],["keyword/85-2",[]],["title/85",[3361,68.694]],["name/85",[3361,3.024]],["text/85",[16,2.018,26,2.818,32,2.791,33,3.902,42,4,45,2.874,49,4.024,62,1.438,85,2.075,93,3.985,98,1.009,102,2.2,130,2.018,133,2.818,146,2.187,158,3.912,171,4,215,2.429,217,2.412,220,2.867,227,2.521,233,2.624,256,2.791,275,3.182,277,3.415,278,4.236,288,3.989,294,3.268,306,3.529,307,4.56,309,2.933,323,3.733,345,3.314,354,4.11,368,3.415,376,2.715,452,4.11,455,3.067,498,2.541,528,2.845,537,2.965,538,2.791,572,2.395,580,2.692,652,3.415,659,3.733,680,7.252,681,2.903,682,4.236,735,4.11,926,3.103,936,3.268,941,3.592,1193,3.529,1235,3.067,1301,5.983,1395,3.363,1424,3.912,1726,4.782,1927,3.902,2160,5.078,2473,6.049,3211,4.56,3302,9.757,3357,4.782,3361,8.285,3362,5.528,3363,5.528,3364,5.078,3365,4.56]],["component/85",[3,0.415,4,0.422]],["keyword/85",[62,2.797,76,3.522,3361,12.662]],["title/86",[266,23.018,503,28.584,707,27.619]],["name/86",[503,0.608,707,0.587,2680,0.804,3207,0.873]],["text/86",[18,3.846,26,2.397,37,4.403,50,3.175,57,2.522,62,1.695,72,3.055,85,2.633,98,1.421,102,2.791,104,4.95,123,3.541,140,2.783,156,2.213,167,3.986,192,2.809,203,4.318,204,2.742,205,2.444,210,2.561,235,3.055,248,2.905,272,3.319,288,3.039,303,3.402,324,2.742,343,2.495,347,2.27,392,2.009,415,2.352,440,2.861,493,2.178,498,2.161,503,5.125,538,4.235,543,2.009,563,2.128,645,4.037,696,2.444,707,5.64,720,3.175,774,2.952,775,2.27,823,2.608,836,3.244,838,4.067,875,3.728,889,2.78,893,3.175,920,2.578,939,2.33,1053,2.952,1084,3.603,1104,2.861,1365,5.786,1424,3.476,1667,3.113,1852,3.319,1898,4.403,2091,5.075,2166,6.92,2204,3.402,2325,3.496,2479,3.728,3258,4.067,3366,4.702,3367,6.067,3368,4.702,3369,4.702,3370,3.879,3371,4.067]],["component/86",[3,0.415,4,0.422]],["keyword/86",[62,1.635,76,2.059,98,1.147,266,3.549,503,4.407,707,4.259]],["title/87-1",[2141,52.274]],["name/87-1",[]],["text/87-1",[]],["component/87-1",[]],["keyword/87-1",[]],["title/87-2",[243,28.996]],["name/87-2",[]],["text/87-2",[]],["component/87-2",[]],["keyword/87-2",[]],["title/87-3",[123,29.38,857,33.936,3372,48.004]],["name/87-3",[]],["text/87-3",[]],["component/87-3",[]],["keyword/87-3",[]],["title/87-4",[123,29.38,543,24.865,3373,58.196]],["name/87-4",[]],["text/87-4",[]],["component/87-4",[]],["keyword/87-4",[]],["title/87-5",[939,33.955,3374,54.323]],["name/87-5",[]],["text/87-5",[]],["component/87-5",[]],["keyword/87-5",[]],["title/87-6",[563,31.007,3374,54.323]],["name/87-6",[]],["text/87-6",[]],["component/87-6",[]],["keyword/87-6",[]],["title/87-7",[939,33.955,3375,54.323]],["name/87-7",[]],["text/87-7",[]],["component/87-7",[]],["keyword/87-7",[]],["title/87-8",[563,31.007,3375,54.323]],["name/87-8",[]],["text/87-8",[]],["component/87-8",[]],["keyword/87-8",[]],["title/87-9",[939,33.955,3376,59.259]],["name/87-9",[]],["text/87-9",[]],["component/87-9",[]],["keyword/87-9",[]],["title/87-10",[563,31.007,3376,59.259]],["name/87-10",[]],["text/87-10",[]],["component/87-10",[]],["keyword/87-10",[]],["title/87-11",[939,33.955,3377,59.259]],["name/87-11",[]],["text/87-11",[]],["component/87-11",[]],["keyword/87-11",[]],["title/87-12",[563,31.007,3377,59.259]],["name/87-12",[]],["text/87-12",[]],["component/87-12",[]],["keyword/87-12",[]],["title/87-13",[939,33.955,3378,59.259]],["name/87-13",[]],["text/87-13",[]],["component/87-13",[]],["keyword/87-13",[]],["title/87-14",[563,31.007,3378,59.259]],["name/87-14",[]],["text/87-14",[]],["component/87-14",[]],["keyword/87-14",[]],["title/87-15",[123,29.38,543,24.865,3379,58.196]],["name/87-15",[]],["text/87-15",[]],["component/87-15",[]],["keyword/87-15",[]],["title/87-16",[939,33.955,3374,54.323]],["name/87-16",[]],["text/87-16",[]],["component/87-16",[]],["keyword/87-16",[]],["title/87-17",[563,31.007,3374,54.323]],["name/87-17",[]],["text/87-17",[]],["component/87-17",[]],["keyword/87-17",[]],["title/87-18",[939,33.955,3375,54.323]],["name/87-18",[]],["text/87-18",[]],["component/87-18",[]],["keyword/87-18",[]],["title/87-19",[563,31.007,3375,54.323]],["name/87-19",[]],["text/87-19",[]],["component/87-19",[]],["keyword/87-19",[]],["title/87",[80,27.619,98,7.441,982,29.38]],["name/87",[80,0.587,98,0.158,982,0.624,2606,0.79]],["text/87",[0,1.324,5,0.718,16,0.443,18,0.666,49,1.138,51,1.026,55,1.667,62,0.818,68,1.451,70,0.406,72,0.789,77,0.404,80,4.868,83,1.576,85,0.456,90,2.722,93,0.613,95,0.472,96,0.563,98,0.947,100,0.519,102,1.53,108,4.412,114,0.811,119,0.542,132,1.269,135,0.917,136,1.161,137,0.572,139,0.509,140,1.075,145,0.546,146,0.48,150,0.399,154,0.889,158,1.536,174,1.402,176,0.69,178,2.971,179,1.042,199,0.475,202,0.674,205,1.161,210,0.443,215,1.974,217,0.974,218,2.876,220,0.441,225,2.192,227,1.018,229,2.187,230,2.497,233,1.06,245,2.282,250,4.823,264,0.638,266,0.48,275,0.699,288,1.342,289,0.82,294,0.718,295,0.523,301,0.55,310,2.242,313,0.903,324,0.708,344,0.931,364,0.408,376,0.597,388,0.699,429,0.602,430,0.597,431,0.804,438,0.708,445,0.542,476,1.379,477,0.619,480,0.542,487,1.413,489,3.795,493,0.563,497,0.619,498,2.064,509,2.642,515,1.352,521,2.713,525,0.857,528,0.625,533,4.026,543,2.162,544,1.051,552,0.75,554,0.608,562,0.682,565,0.931,571,0.519,590,1.197,592,0.762,595,1.478,603,0.739,605,0.838,611,0.804,617,0.666,634,2.061,679,1.239,681,2.359,688,0.789,694,0.857,696,1.998,814,3.339,816,2.693,817,3.123,819,3.208,830,0.699,839,1.595,856,0.963,870,0.75,876,0.963,882,1.051,885,1.711,889,0.718,893,0.82,909,1.107,920,6.2,933,3.683,963,2.242,974,1.842,982,4.736,983,3.838,1008,0.879,1053,0.762,1057,0.804,1075,0.762,1110,0.775,1136,1.576,1146,0.75,1212,0.789,1216,0.931,1235,1.719,1283,1.051,1300,0.775,1346,1.615,1400,4.607,1555,0.682,1655,1.116,1667,0.804,1712,2.374,1919,5.914,2069,0.903,2090,3.561,2091,4.026,2139,2.374,2140,4.769,2141,1.945,2226,1.116,2311,1.931,2325,1.66,2353,1.116,2410,1.615,2413,0.931,2479,0.963,2510,2.051,2754,1.931,2824,0.82,3263,1.116,3371,1.931,3374,1.77,3375,1.77,3376,1.051,3377,1.051,3378,1.051,3380,1.215,3381,1.215,3382,2.233,3383,0.931,3384,1.116,3385,1.215,3386,2.233,3387,1.215,3388,1.215,3389,2.233,3390,2.233,3391,6.415,3392,2.233,3393,1.215,3394,1.215,3395,1.215,3396,1.215,3397,1.215,3398,2.233,3399,3.099,3400,1.215,3401,2.233,3402,1.615,3403,2.051,3404,2.051,3405,4.649,3406,1.215,3407,1.215,3408,1.215]],["component/87",[3,0.415,4,0.422]],["keyword/87",[62,1.635,76,2.059,80,4.259,98,1.147,266,3.549,982,4.53]],["title/88-1",[215,25.572,1433,33.072,1919,40.143]],["name/88-1",[]],["text/88-1",[]],["component/88-1",[]],["keyword/88-1",[]],["title/88-2",[2141,52.274]],["name/88-2",[]],["text/88-2",[]],["component/88-2",[]],["keyword/88-2",[]],["title/88-3",[412,49.925]],["name/88-3",[]],["text/88-3",[]],["component/88-3",[]],["keyword/88-3",[]],["title/88-4",[40,36.744,857,39.953]],["name/88-4",[]],["text/88-4",[]],["component/88-4",[]],["keyword/88-4",[]],["title/88-5",[123,25.534,543,21.61,939,25.067,3409,46.46]],["name/88-5",[]],["text/88-5",[]],["component/88-5",[]],["keyword/88-5",[]],["title/88-6",[123,25.534,543,21.61,563,22.89,3409,46.46]],["name/88-6",[]],["text/88-6",[]],["component/88-6",[]],["keyword/88-6",[]],["title/88-7",[215,30.106,1433,38.936]],["name/88-7",[]],["text/88-7",[]],["component/88-7",[]],["keyword/88-7",[]],["title/88-8",[2141,52.274]],["name/88-8",[]],["text/88-8",[]],["component/88-8",[]],["keyword/88-8",[]],["title/88-9",[412,49.925]],["name/88-9",[]],["text/88-9",[]],["component/88-9",[]],["keyword/88-9",[]],["title/88-10",[40,36.744,857,39.953]],["name/88-10",[]],["text/88-10",[]],["component/88-10",[]],["keyword/88-10",[]],["title/88-11",[123,25.534,543,21.61,939,25.067,3410,46.46]],["name/88-11",[]],["text/88-11",[]],["component/88-11",[]],["keyword/88-11",[]],["title/88-12",[123,25.534,543,21.61,563,22.89,3410,46.46]],["name/88-12",[]],["text/88-12",[]],["component/88-12",[]],["keyword/88-12",[]],["title/88-13",[215,25.572,1223,35.95,1433,33.072]],["name/88-13",[]],["text/88-13",[]],["component/88-13",[]],["keyword/88-13",[]],["title/88-14",[2141,52.274]],["name/88-14",[]],["text/88-14",[]],["component/88-14",[]],["keyword/88-14",[]],["title/88-15",[412,49.925]],["name/88-15",[]],["text/88-15",[]],["component/88-15",[]],["keyword/88-15",[]],["title/88-16",[40,36.744,857,39.953]],["name/88-16",[]],["text/88-16",[]],["component/88-16",[]],["keyword/88-16",[]],["title/88-17",[123,25.534,543,21.61,939,25.067,3411,46.46]],["name/88-17",[]],["text/88-17",[]],["component/88-17",[]],["keyword/88-17",[]],["title/88-18",[123,25.534,543,21.61,563,22.89,3411,46.46]],["name/88-18",[]],["text/88-18",[]],["component/88-18",[]],["keyword/88-18",[]],["title/88",[217,25.39,245,22.09,503,28.584]],["name/88",[217,0.693,245,0.603,2457,1.032]],["text/88",[12,0.795,18,1.36,23,1.025,45,0.708,53,2.143,62,1.175,77,1.4,84,2.087,85,2.055,95,0.964,98,1.148,108,4.308,123,1.724,136,1.29,137,1.607,139,0.571,140,2.4,141,0.723,145,0.612,150,2.115,157,1.94,174,0.856,181,0.664,210,1.247,214,0.765,215,3.77,217,3.995,220,0.495,227,1.557,233,1.177,243,1.189,245,2.078,247,2.26,250,4.008,262,3.299,266,0.539,299,2.355,354,1.013,360,2.018,363,1.479,364,1.148,395,2.84,412,2.047,429,0.675,430,0.669,432,0.708,439,0.986,451,1.662,467,3.127,470,1.793,472,1.013,475,0.636,476,0.842,480,1.522,489,1.634,495,0.94,498,1.14,500,0.701,503,2.066,509,1.5,514,1.711,515,2.131,525,1.751,545,1.94,563,1.545,578,1.648,688,1.612,707,3.424,754,3.632,775,0.658,814,2.538,823,2.71,825,0.986,831,5.094,857,1.991,894,3.966,920,3.285,939,1.692,983,2.355,1107,2.707,1216,2.616,1223,2.598,1253,5.866,1312,2.816,1340,2.707,1365,2.046,1372,5.111,1424,1.692,1433,4.876,1478,1.252,1484,1.081,1898,4.301,1919,6.728,1974,4.793,2063,3.638,2091,2.47,2141,2.143,2320,2.616,2479,1.967,2488,2.279,2512,2.279,2722,1.081,2906,4.487,3384,3.136,3412,1.363,3413,1.363,3414,1.252,3415,2.279,3416,1.363,3417,3.414,3418,8.788,3419,1.363,3420,5.474,3421,2.481,3422,2.481,3423,2.481,3424,1.363,3425,2.481,3426,2.481,3427,2.481,3428,1.363,3429,2.481,3430,1.363,3431,1.363,3432,5.991,3433,1.363,3434,1.363,3435,1.363,3436,1.363,3437,1.363,3438,1.363,3439,1.363,3440,1.363,3441,1.363,3442,1.363,3443,2.481,3444,1.363,3445,1.363,3446,1.363,3447,1.363,3448,1.363,3449,1.363,3450,1.363,3451,1.363,3452,1.363,3453,1.363,3454,1.363,3455,4.885,3456,2.481,3457,1.363,3458,1.363,3459,1.363,3460,2.046,3461,1.363,3462,1.363,3463,1.363,3464,1.363,3465,1.363,3466,1.363,3467,1.363,3468,1.363,3469,1.363,3470,5.991,3471,2.481,3472,4.206,3473,5.181,3474,5.991,3475,1.363,3476,2.481,3477,1.363,3478,1.363,3479,2.481,3480,3.414,3481,1.363,3482,2.481]],["component/88",[3,0.415,4,0.422]],["keyword/88",[62,1.635,76,2.059,98,1.147,217,3.915,266,3.549,503,4.407]],["title/89-1",[707,27.619,2168,50.335,3483,53.457]],["name/89-1",[]],["text/89-1",[]],["component/89-1",[]],["keyword/89-1",[]],["title/89-2",[2141,52.274]],["name/89-2",[]],["text/89-2",[]],["component/89-2",[]],["keyword/89-2",[]],["title/89-3",[40,36.744,857,39.953]],["name/89-3",[]],["text/89-3",[]],["component/89-3",[]],["keyword/89-3",[]],["title/89-4",[123,25.534,543,21.61,939,25.067,3484,46.46]],["name/89-4",[]],["text/89-4",[]],["component/89-4",[]],["keyword/89-4",[]],["title/89-5",[123,25.534,543,21.61,563,22.89,3484,46.46]],["name/89-5",[]],["text/89-5",[]],["component/89-5",[]],["keyword/89-5",[]],["title/89",[247,45.356,503,33.652]],["name/89",[2913,1.603,3188,1.828]],["text/89",[18,4.482,62,1.058,85,3.068,86,3.844,98,1.045,108,3.692,123,2.931,137,2.733,140,1.624,156,2.733,158,2.878,210,2.12,243,2.022,247,5.411,250,2.648,259,2.628,324,3.386,354,4.317,360,3.432,451,2.827,487,2.648,493,2.69,503,4.015,530,4.9,543,2.481,563,2.628,578,2.803,590,3.114,617,3.184,678,2.733,685,2.69,707,2.756,713,2.756,731,3.432,764,4.317,823,4.534,839,4.207,857,3.386,920,5.63,939,2.878,1216,4.449,1424,2.878,1433,3.3,1700,5.022,1774,8.469,1891,5.022,1898,5.938,1919,4.005,2091,4.201,2141,3.645,2168,5.022,2824,3.921,3415,5.334,3483,7.508,3485,8.174,3486,5.807,3487,5.807,3488,5.807,3489,5.807]],["component/89",[3,0.415,4,0.422]],["keyword/89",[62,1.635,76,2.059,98,1.147,247,5.94,266,3.549,503,4.407]],["title/90-1",[834,50.663]],["name/90-1",[]],["text/90-1",[]],["component/90-1",[]],["keyword/90-1",[]],["title/90-2",[123,29.38,857,33.936,3372,48.004]],["name/90-2",[]],["text/90-2",[]],["component/90-2",[]],["keyword/90-2",[]],["title/90-3",[123,25.534,543,21.61,939,25.067,3490,46.46]],["name/90-3",[]],["text/90-3",[]],["component/90-3",[]],["keyword/90-3",[]],["title/90-4",[123,25.534,543,21.61,563,22.89,3490,46.46]],["name/90-4",[]],["text/90-4",[]],["component/90-4",[]],["keyword/90-4",[]],["title/90",[503,33.652,3383,52.498]],["name/90",[3262,1.757,3491,2.216]],["text/90",[27,2.601,28,1.897,37,3.504,55,1.298,62,0.637,65,2.161,66,2.886,70,2.33,71,1.718,80,2.649,90,1.484,98,0.447,102,2.771,108,4.261,125,3.695,132,1.988,137,1.647,140,2.223,157,1.988,167,1.988,176,1.988,179,1.633,205,1.818,206,1.284,224,2.362,225,3.017,227,3.176,230,4.525,235,2.273,280,1.964,288,1.515,306,3.563,323,2.362,353,3.213,392,1.495,445,1.56,487,1.595,493,2.585,509,2.453,533,2.531,543,2.385,544,1.647,638,1.66,641,2.774,645,2.013,652,2.161,658,4.116,681,1.837,696,2.901,707,3.305,817,5.674,818,4.989,819,2.792,823,1.941,870,3.448,871,2.601,872,3.563,876,6.302,878,2.68,902,2.161,909,1.734,919,2.161,920,5.076,933,3.695,1057,4.61,1075,2.196,1107,2.774,1108,2.161,1110,2.233,1170,2.531,1173,2.273,1238,2.886,1346,2.531,1569,2.196,1812,3.026,1865,2.601,2022,2.68,2090,4.425,2091,6.283,2262,3.213,2313,3.213,2314,2.601,2325,2.601,2451,3.026,2551,2.601,2754,3.026,3124,3.213,3358,3.213,3371,3.026,3383,5.336,3402,2.531,3403,3.213,3404,3.213,3405,5.127,3492,3.498,3493,5.582,3494,3.498,3495,5.582,3496,3.498,3497,3.498,3498,3.498,3499,3.498,3500,3.498,3501,3.498]],["component/90",[3,0.415,4,0.422]],["keyword/90",[62,1.635,76,2.059,98,1.147,266,3.549,503,4.407,3383,6.876]],["title/91-1",[123,29.38,857,33.936,3372,48.004]],["name/91-1",[]],["text/91-1",[]],["component/91-1",[]],["keyword/91-1",[]],["title/91-2",[210,25.013,3502,62.934]],["name/91-2",[]],["text/91-2",[]],["component/91-2",[]],["keyword/91-2",[]],["title/91-3",[939,41.273]],["name/91-3",[]],["text/91-3",[]],["component/91-3",[]],["keyword/91-3",[]],["title/91-4",[563,37.689]],["name/91-4",[]],["text/91-4",[]],["component/91-4",[]],["keyword/91-4",[]],["title/91-5",[210,25.013,3503,62.934]],["name/91-5",[]],["text/91-5",[]],["component/91-5",[]],["keyword/91-5",[]],["title/91-6",[939,41.273]],["name/91-6",[]],["text/91-6",[]],["component/91-6",[]],["keyword/91-6",[]],["title/91-7",[563,37.689]],["name/91-7",[]],["text/91-7",[]],["component/91-7",[]],["keyword/91-7",[]],["title/91-8",[210,25.013,3504,62.934]],["name/91-8",[]],["text/91-8",[]],["component/91-8",[]],["keyword/91-8",[]],["title/91-9",[2141,52.274]],["name/91-9",[]],["text/91-9",[]],["component/91-9",[]],["keyword/91-9",[]],["title/91-10",[939,41.273]],["name/91-10",[]],["text/91-10",[]],["component/91-10",[]],["keyword/91-10",[]],["title/91-11",[563,37.689]],["name/91-11",[]],["text/91-11",[]],["component/91-11",[]],["keyword/91-11",[]],["title/91",[76,15.72,503,33.652]],["name/91",[76,0.508,1974,1.647]],["text/91",[16,1.55,40,2.277,45,1.304,50,2.867,62,1.006,73,2.305,76,2.111,77,1.414,84,1.814,85,1.594,90,1.065,94,1.426,98,0.706,108,3.878,123,3.279,128,4.184,129,5.126,130,4.149,134,1.722,135,3.778,137,2.598,140,2.74,142,1.661,160,2.929,162,1.291,192,2.6,203,1.291,210,1.55,213,1.483,220,0.911,241,1.694,243,0.874,295,3.125,317,1.923,365,1.865,391,1.392,413,1.923,415,1.255,436,1.602,437,0.981,447,2.664,451,2.067,480,1.893,487,3.596,491,3.587,493,2.557,498,3.86,508,2.642,514,2.929,515,1.853,530,3.893,532,4.411,538,1.267,543,3.103,549,2.355,554,1.255,563,1.136,572,1.84,592,1.575,633,2.07,681,2.23,685,1.162,686,1.232,688,1.63,696,1.304,707,3.987,743,1.661,823,2.355,824,1.865,839,3.342,856,4.377,857,1.463,894,2.811,909,2.104,920,5.621,922,4.831,939,1.244,963,1.815,1000,2.664,1008,1.815,1092,2.305,1128,4.219,1414,2.583,1622,2.17,1673,1.923,1898,4.076,1903,4.48,1957,2.07,2024,5.071,2025,2.305,2026,2.305,2125,1.526,2141,3.465,2155,2.71,2319,1.923,2503,1.989,2551,1.865,3276,2.305,3277,2.305,3283,5.071,3284,3.9,3372,2.07,3502,5.071,3503,3.9,3504,5.071,3505,2.509,3506,2.509,3507,4.246,3508,4.246,3509,2.509]],["component/91",[3,0.415,4,0.422]],["keyword/91",[62,1.635,76,3.644,98,1.147,266,3.549,503,4.407]],["title/92-1",[76,15.72,674,41.074]],["name/92-1",[]],["text/92-1",[]],["component/92-1",[]],["keyword/92-1",[]],["title/92-2",[76,13.352,306,37.148,543,24.865]],["name/92-2",[]],["text/92-2",[]],["component/92-2",[]],["keyword/92-2",[]],["title/92-3",[62,9.216,98,6.467,674,44.379]],["name/92-3",[]],["text/92-3",[]],["component/92-3",[]],["keyword/92-3",[]],["title/92-4",[98,5.125,177,30.715,674,24.031,702,27.069,1321,29.801,1555,22.502]],["name/92-4",[]],["text/92-4",[]],["component/92-4",[]],["keyword/92-4",[]],["title/92",[182,48.353,674,41.074]],["name/92",[674,0.952,2680,1.032,3207,1.12]],["text/92",[11,1.622,17,2.014,23,1.179,27,2.122,28,2.565,55,1.755,62,1.284,70,2.026,76,2.289,82,2.622,90,1.211,95,1.838,98,1.237,100,1.219,102,1.136,108,0.974,114,1.036,130,1.042,135,1.942,139,1.98,140,1.694,145,2.124,146,1.129,149,1.918,150,1.552,156,1.343,171,2.065,177,2.187,204,1.664,205,3.662,208,2.922,210,1.042,211,1.927,213,2.796,214,1.602,215,1.254,221,1.343,222,1.389,225,2.049,227,1.301,247,1.889,265,1.687,279,2.468,280,3.4,285,3.073,288,1.236,301,1.292,306,4.985,343,2.51,368,1.763,376,2.323,378,1.263,395,1.927,397,1.583,398,2.537,399,1.469,415,2.366,434,2.208,484,2.263,486,1.969,487,2.157,492,2.014,498,3.238,500,1.469,503,1.402,506,2.741,521,2.014,532,1.499,534,2.065,543,3.337,544,1.343,571,2.021,572,1.236,611,3.131,628,1.469,634,1.531,636,1.791,644,2.122,649,1.643,671,2.468,674,7.277,677,1.889,678,1.343,685,2.191,686,2.323,697,1.441,702,4.757,703,1.854,707,1.354,713,2.245,714,2.014,716,1.927,717,2.014,735,3.516,769,2.263,823,1.583,824,2.122,827,2.065,849,1.763,885,3.624,900,1.889,902,1.763,920,1.565,936,1.687,972,1.791,1048,4.985,1054,2.187,1094,2.122,1146,1.763,1206,2.263,1221,2.354,1237,1.927,1270,2.354,1301,1.854,1321,2.122,1337,1.664,1343,2.354,1381,3.901,1500,1.969,1555,3.955,1569,1.791,1580,2.014,1664,2.622,1712,1.763,1756,2.622,1915,2.468,1967,2.354,2225,2.468,2227,2.468,2240,2.622,2349,2.622,3015,2.468,3030,2.354,3293,2.468,3322,2.354,3383,2.187,3510,2.854,3511,2.854,3512,2.854,3513,2.854,3514,2.468,3515,2.854,3516,2.854,3517,2.854,3518,2.622,3519,2.854,3520,2.854,3521,4.73,3522,2.854,3523,2.854,3524,2.622,3525,2.854,3526,7.045,3527,4.73,3528,2.854,3529,2.854]],["component/92",[3,0.415,4,0.422]],["keyword/92",[62,1.898,76,2.39,98,1.332,182,7.351,206,3.823]],["title/93-1",[702,56.237]],["name/93-1",[]],["text/93-1",[]],["component/93-1",[]],["keyword/93-1",[]],["title/93-2",[98,7.441,674,34.888,1555,32.669]],["name/93-2",[]],["text/93-2",[]],["component/93-2",[]],["keyword/93-2",[]],["title/93-3",[696,35.613,1785,52.498]],["name/93-3",[]],["text/93-3",[]],["component/93-3",[]],["keyword/93-3",[]],["title/93-4",[98,8.76,499,35.613]],["name/93-4",[]],["text/93-4",[]],["component/93-4",[]],["keyword/93-4",[]],["title/93",[211,46.266,702,46.266]],["name/93",[211,1.072,1950,1.18,2606,1.013]],["text/93",[3,0.382,16,1.175,21,3.456,42,1.318,45,0.947,51,0.837,62,1.086,65,1.126,70,2.203,72,1.184,76,0.739,77,1.072,84,1.375,85,0.684,90,1.366,95,0.708,98,1.311,108,3.728,111,0.851,114,0.662,118,2.272,128,1.848,130,2.598,134,1.753,135,0.748,140,0.901,142,1.206,144,0.872,145,0.818,146,2.815,147,1.077,149,2.885,150,1.713,192,3.193,203,2.687,210,1.175,211,1.23,221,3.1,222,1.567,225,0.789,243,1.506,245,0.692,250,0.831,256,0.92,268,1.063,287,1.445,292,0.851,295,2.833,301,0.825,306,1.163,343,2.77,360,1.077,364,1.755,370,1.257,394,1.063,396,1.807,399,0.938,401,1.318,419,0.967,428,1.286,434,1.503,437,1.69,451,0.887,456,1.576,460,3.246,461,1.049,462,2.814,466,2.83,469,4.134,470,2.271,483,3.947,488,3.333,489,2.07,499,2.248,506,1.457,507,1.727,508,2.07,509,1.415,527,1.23,531,1.144,536,4.139,538,2.183,540,0.872,541,2.319,549,2.399,555,2.272,556,1.673,557,1.93,558,2.055,565,2.467,572,1.873,577,1.23,578,2.087,580,2.105,582,3.333,588,1.877,590,2.319,602,1.318,606,0.967,638,1.528,658,1.077,664,1.286,674,4.992,687,2.393,696,0.947,701,1.989,702,4.026,736,1.396,757,1.126,799,2.556,812,1.576,824,1.355,832,2.393,906,1.503,907,1.355,908,3.277,1000,2.087,1048,4.543,1075,2.021,1110,2.055,1128,2.092,1141,2.393,1146,1.126,1165,1.396,1176,0.967,1271,2.593,1278,1.144,1366,1.503,1433,1.829,1450,1.355,1452,1.355,1509,2.983,1510,1.674,1555,3.995,1569,1.144,1574,3.525,1632,4,1722,4.36,1785,3.314,1812,1.576,1897,1.674,1950,5.291,1956,2.957,1962,2.957,1963,1.674,1965,2.784,1967,4.918,1968,1.674,1969,2.957,1970,2.957,2029,1.674,2033,1.576,2043,3.74,2046,2.784,2232,1.674,2321,4,2323,4.918,2325,1.355,2436,1.503,2559,1.445,2619,1.503,2929,1.674,3252,1.674,3473,1.576,3524,1.674,3530,3.219,3531,5.221,3532,4.325,3533,3.219,3534,3.219,3535,3.219,3536,3.219,3537,3.219,3538,3.219,3539,3.219,3540,1.822,3541,1.576,3542,1.822,3543,3.219,3544,2.957,3545,2.655,3546,1.822,3547,1.822,3548,1.822,3549,1.822,3550,1.674,3551,1.822,3552,1.822]],["component/93",[3,0.415,4,0.422]],["keyword/93",[62,1.898,76,2.39,98,1.332,206,3.823,702,7.033]],["title/94-1",[243,20.263,850,43.264,913,36.53]],["name/94-1",[]],["text/94-1",[]],["component/94-1",[]],["keyword/94-1",[]],["title/94-2",[98,8.76,149,27.777]],["name/94-2",[]],["text/94-2",[]],["component/94-2",[]],["keyword/94-2",[]],["title/94",[98,6.467,674,30.322,685,23.428,686,24.843]],["name/94",[685,0.735,686,0.78,2457,1.032]],["text/94",[3,0.633,16,0.62,17,2.133,20,2.133,24,0.92,28,0.92,46,0.92,51,1.389,55,1.84,57,1.621,62,0.309,70,1.011,71,0.834,76,0.389,77,0.565,84,0.725,85,1.534,98,1.07,100,0.725,108,3.515,111,1.908,114,1.097,130,2.496,132,1.718,133,0.865,135,2.036,137,1.423,139,1.711,140,1.591,142,1.123,146,0.671,149,0.688,150,1.341,157,0.964,160,2.168,179,0.792,192,3.568,205,0.882,206,1.109,210,1.81,211,2.759,221,0.799,222,0.826,225,1.309,256,0.857,259,0.768,264,1.587,266,0.671,285,2.655,288,1.309,292,1.411,295,2.713,306,2.608,309,2.631,318,1.228,343,0.9,358,1.346,364,1.016,376,0.834,392,0.725,399,0.873,428,1.198,434,2.656,439,1.228,445,1.348,453,0.977,454,1.587,459,2.705,460,3.511,461,1.74,462,2.119,466,2.353,470,1.587,483,2.001,484,1.346,487,2.261,488,4.364,489,1.446,494,2.001,499,2.124,500,0.873,503,2.436,506,2.574,507,1.621,508,1.446,515,2.751,522,1.839,528,2.552,536,2.396,538,1.526,540,0.812,541,1.621,542,1.434,543,2.119,545,0.964,553,0.977,555,1.198,556,2.124,557,2.45,558,3.165,565,2.316,572,0.735,577,1.146,578,1.972,588,0.99,592,1.065,595,1.123,605,1.171,606,1.604,614,1.74,628,0.873,632,0.931,654,1.171,664,2.133,666,2.247,674,5.189,685,1.893,686,2.007,697,0.857,707,4.614,716,1.146,717,1.198,768,1.065,774,1.065,830,1.74,839,2.552,850,3.687,853,1.065,894,1.123,904,2.247,906,3.371,913,6.74,917,2.884,919,1.048,941,1.103,966,1.198,993,1.262,1003,1.4,1010,1.083,1034,1.468,1048,5.142,1138,1.262,1146,1.048,1165,1.3,1208,1.897,1209,1.262,1221,1.4,1226,2.776,1301,1.964,1314,1.228,1324,1.262,1346,2.956,1427,0.857,1433,1.718,1450,2.247,1452,2.247,1500,1.171,1516,2.316,1555,1.697,1569,1.065,1576,1.468,1595,1.3,1665,1.4,1704,1.123,1711,1.003,1903,1.171,1978,2.493,2069,2.247,2147,1.3,2150,1.346,2359,1.3,2437,1.3,2808,3.371,2937,1.468,3037,2.776,3278,1.559,3541,1.468,3550,1.559,3553,1.697,3554,1.697,3555,3.022,3556,4.959,3557,1.697,3558,1.697,3559,1.697,3560,1.697,3561,3.022,3562,1.697,3563,1.697,3564,1.697,3565,1.697,3566,1.697,3567,1.697,3568,3.022,3569,3.022,3570,4.086,3571,1.697,3572,4.086,3573,5.688,3574,3.022,3575,3.022,3576,3.022,3577,3.022,3578,3.022,3579,3.022,3580,3.022,3581,3.022,3582,3.022,3583,1.468,3584,1.697,3585,3.022,3586,3.022,3587,1.697,3588,3.022,3589,3.022,3590,1.697,3591,1.697,3592,1.697]],["component/94",[3,0.415,4,0.422]],["keyword/94",[62,1.155,76,1.454,98,0.81,206,2.327,685,5.379,686,5.703,913,3.979]],["title/95-1",[98,6.467,243,17.611,634,27.125,1712,31.244]],["name/95-1",[]],["text/95-1",[]],["component/95-1",[]],["keyword/95-1",[]],["title/95",[503,28.584,707,27.619,1712,35.95]],["name/95",[243,0.553,1712,0.981,2913,1.149]],["text/95",[3,0.465,37,1.393,41,1.566,43,1.442,49,3.442,55,0.824,62,0.918,70,2.003,77,0.739,80,2.842,85,0.833,95,0.862,98,0.944,103,4.56,108,4.011,111,2.796,114,1.389,130,1.839,140,0.621,149,1.55,150,2.422,179,1.785,192,3.748,210,2.186,225,2.594,243,1.331,245,3.316,250,4.386,259,1.004,285,1.442,292,2.352,295,2.576,306,1.417,307,1.831,309,1.178,315,1.393,318,1.606,331,1.371,364,1.286,392,1.634,399,1.142,402,1.701,428,1.566,432,1.988,434,2.352,437,1.969,440,1.35,445,1.705,460,3.606,461,2.9,462,2.559,466,2.842,477,1.131,487,1.012,488,3.216,493,1.028,496,3.866,498,1.02,499,1.154,503,2.474,506,2.28,507,2.702,508,2.866,515,0.968,537,1.19,538,1.93,540,1.062,541,1.19,543,0.948,548,4.156,555,3.556,556,1.154,557,1.331,558,2.441,577,1.499,582,1.417,588,1.294,617,2.097,623,2.121,634,3.212,650,1.566,658,1.312,666,1.65,674,5.237,688,1.442,707,2.391,780,1.92,816,3.59,817,1.081,830,1.277,906,4.94,919,1.371,982,3.409,1003,1.831,1048,5.576,1057,1.469,1085,2.039,1104,1.35,1107,1.76,1123,2.326,1208,1.393,1288,1.92,1324,1.65,1354,2.863,1427,1.12,1433,1.261,1509,3.475,1515,1.76,1516,1.701,1555,2.147,1569,1.393,1574,3.402,1704,1.469,1712,5.16,1965,4.357,1978,4.156,2139,1.701,2140,1.65,2333,2.039,2364,2.039,2410,5.72,2418,1.92,2485,2.039,3174,2.039,3383,1.701,3541,1.92,3545,1.831,3593,2.039,3594,2.219,3595,3.824,3596,3.824,3597,5.038,3598,3.824,3599,3.824,3600,5.038,3601,3.824,3602,3.824,3603,2.219,3604,2.219,3605,2.219,3606,2.219,3607,2.219,3608,2.219,3609,2.219,3610,2.219,3611,2.219,3612,3.824,3613,3.824,3614,2.219]],["component/95",[3,0.415,4,0.422]],["keyword/95",[62,1.436,76,1.808,98,1.008,206,2.893,634,4.227,982,3.979,1712,4.869]],["title/96-1",[256,34.588,3615,50.935]],["name/96-1",[]],["text/96-1",[]],["component/96-1",[]],["keyword/96-1",[]],["title/96-2",[144,39.855]],["name/96-2",[]],["text/96-2",[]],["component/96-2",[]],["keyword/96-2",[]],["title/96-3",[141,30.879,486,40.143,3615,43.264]],["name/96-3",[]],["text/96-3",[]],["component/96-3",[]],["keyword/96-3",[]],["title/96-4",[268,39.953,1303,48.353]],["name/96-4",[]],["text/96-4",[]],["component/96-4",[]],["keyword/96-4",[]],["title/96",[98,7.441,206,21.362,678,27.393]],["name/96",[678,0.747,2680,1.032,3207,1.12]],["text/96",[12,1.386,20,1.678,24,1.289,28,1.289,32,1.2,44,2.183,45,2.108,54,1.492,55,1.968,62,1.75,70,0.795,76,1.758,77,0.791,84,1.016,85,0.892,95,0.923,96,3.259,98,1.192,100,3.496,102,3.431,114,0.863,123,1.2,124,1.517,125,1.261,131,1.211,137,1.909,140,2.687,143,1.275,144,1.941,146,1.604,150,1.331,156,1.909,158,3.798,162,2.087,163,2.685,165,3.014,170,1.64,172,2.934,174,2.546,180,1.016,183,1.678,199,1.585,203,1.223,204,3.093,205,2.757,206,2.583,210,1.481,214,2.977,220,1.473,226,1.544,245,2.013,250,1.849,256,2.678,258,2.703,259,1.076,260,1.678,265,2.397,267,1.002,268,1.386,277,4.347,280,4.84,284,3.107,288,2.298,289,2.739,292,1.11,306,3.386,309,3.326,316,1.885,331,1.468,343,1.261,364,1.783,376,2.605,380,1.767,399,2.087,413,1.821,422,1.405,446,1.517,447,2.56,480,1.06,486,1.64,492,1.678,498,2.881,525,1.678,532,1.248,537,1.275,538,1.2,543,1.733,544,1.909,547,2.056,562,2.277,566,1.386,571,2.266,572,1.757,593,1.574,594,1.64,603,1.446,645,1.368,652,1.468,678,4.743,681,1.248,696,1.236,697,2.047,743,2.685,758,1.492,889,1.405,893,1.605,902,1.468,909,2.629,926,1.334,937,2.505,938,1.261,967,2.056,969,1.885,1008,1.72,1075,1.492,1094,1.767,1123,2.467,1169,2.183,1170,1.72,1176,1.261,1193,1.517,1211,1.885,1221,1.961,1237,1.605,1250,2.183,1253,1.72,1298,2.056,1301,1.544,1317,1.72,1322,2.505,1371,2.183,1377,1.961,1392,1.678,1424,2.01,1562,2.056,1681,1.961,1693,3.215,1711,1.405,1757,2.056,1823,2.183,1857,1.821,2071,1.821,2225,2.056,2229,2.056,2360,1.72,2473,1.821,2712,1.821,3354,2.183,3583,2.056,3615,7.638,3616,4.055,3617,2.377,3618,4.055,3619,2.377,3620,2.377,3621,2.377,3622,2.377,3623,2.377,3624,2.377,3625,2.377,3626,2.377,3627,2.377,3628,2.377,3629,2.377,3630,3.508,3631,2.377,3632,4.055,3633,2.377,3634,2.377,3635,2.056,3636,1.961,3637,2.377,3638,1.961,3639,2.377]],["component/96",[3,0.415,4,0.422]],["keyword/96",[62,1.898,76,2.39,98,1.332,206,3.823,678,4.903]],["title/97-1",[96,23.428,98,6.467,180,21.61,1427,25.534]],["name/97-1",[]],["text/97-1",[]],["component/97-1",[]],["keyword/97-1",[]],["title/97-2",[146,32.94]],["name/97-2",[]],["text/97-2",[]],["component/97-2",[]],["keyword/97-2",[]],["title/97",[70,16.92,98,6.467,150,16.596,180,21.61]],["name/97",[1427,1.119,2606,1.414]],["text/97",[16,0.812,23,1.583,31,1.654,62,0.405,70,1.688,93,3.028,94,1.264,95,0.864,96,1.03,98,1.198,102,1.525,105,4.391,108,3.897,120,2.489,122,1.924,133,1.134,134,1.553,135,0.913,139,0.931,140,2.621,144,1.833,146,3.59,148,0.902,150,1.257,178,1.03,180,0.95,192,2.959,200,2.331,220,3.296,225,0.964,245,1.454,250,3.084,258,1.134,266,0.88,268,2.234,280,1.249,292,1.789,295,1.648,305,2.536,336,1.168,344,1.704,364,1.696,376,2.478,420,3.236,422,2.265,437,0.869,460,1.747,462,1.637,466,1.818,474,1.502,487,3.084,496,4.26,508,1.833,515,0.97,518,1.333,528,1.972,542,2.846,549,5.035,553,2.205,563,1.007,566,1.297,569,1.704,582,3.828,583,3.038,588,3.497,605,1.534,606,2.033,615,1.654,638,1.818,678,2.375,713,3.757,715,1.609,731,1.315,758,1.396,795,1.835,799,1.315,927,2.205,933,1.472,965,2.405,966,1.57,1039,1.502,1048,2.445,1075,1.396,1104,1.353,1138,2.848,1176,3.921,1235,4.85,1242,1.835,1243,1.835,1317,2.772,1325,1.704,1332,1.654,1337,4.616,1354,1.264,1396,2.848,1409,2.848,1411,1.704,1471,3.519,1907,1.704,1908,1.704,1919,1.534,2022,1.704,2097,1.654,2244,2.043,2252,1.924,2437,1.704,2518,1.502,2619,3.16,2620,3.038,3030,5.578,3156,2.043,3268,1.924,3304,2.043,3364,2.043,3593,2.043,3615,2.848,3640,2.224,3641,1.924,3642,3.314,3643,2.043,3644,3.16,3645,2.043,3646,2.224,3647,2.224,3648,2.224,3649,3.16,3650,2.043,3651,2.043,3652,2.224,3653,2.224,3654,2.043,3655,4.635,3656,2.043,3657,2.224,3658,2.224,3659,2.224,3660,2.224,3661,2.224,3662,2.224,3663,2.224,3664,2.224,3665,2.224,3666,2.224,3667,3.519,3668,5.215,3669,3.314,3670,3.831,3671,5.509,3672,6.211,3673,5.509,3674,3.831,3675,3.831,3676,3.831,3677,2.224,3678,2.224,3679,2.224]],["component/97",[3,0.415,4,0.422]],["keyword/97",[62,1.28,70,2.351,76,1.612,98,1.631,180,3.002,206,2.579,678,3.308]],["title/98-1",[364,19.564,376,28.584,464,31.911]],["name/98-1",[]],["text/98-1",[]],["component/98-1",[]],["keyword/98-1",[]],["title/98-2",[70,19.468,364,19.564,696,30.25]],["name/98-2",[]],["text/98-2",[]],["component/98-2",[]],["keyword/98-2",[]],["title/98-3",[146,23.018,288,25.211,364,19.564]],["name/98-3",[]],["text/98-3",[]],["component/98-3",[]],["keyword/98-3",[]],["title/98",[98,7.441,134,23.594,364,19.564]],["name/98",[98,0.203,364,0.534,2457,1.032]],["text/98",[16,0.963,18,2.43,23,0.777,26,0.514,28,0.547,43,1.221,55,1.821,57,1.415,62,0.603,70,2.878,71,0.495,72,0.655,76,0.231,92,0.46,94,0.573,95,0.73,98,0.682,102,1.953,108,4.387,120,4.538,134,1.989,136,0.524,140,1.493,145,0.453,146,2.406,148,1.07,150,0.866,156,0.475,158,0.931,160,0.535,163,1.244,178,0.467,180,0.431,200,0.613,206,0.969,213,0.596,218,1.068,220,1.609,225,1.69,227,0.857,259,0.85,264,0.529,267,0.792,277,0.623,288,1.92,305,2.19,336,0.529,340,0.695,354,0.75,364,3.501,378,0.446,380,1.397,388,1.082,391,0.559,419,0.997,420,0.899,432,0.977,444,0.596,445,1.177,447,0.487,449,0.58,451,0.915,453,0.58,464,1.447,475,1.232,477,0.514,480,0.838,487,0.46,498,1.213,509,0.443,515,2.328,538,3.989,542,0.478,543,2.984,544,0.475,549,2.458,561,0.483,563,0.456,565,0.773,571,0.431,572,0.814,588,1.929,600,1.983,606,0.997,615,1.962,616,0.695,617,1.03,628,0.519,635,1.082,637,1.36,643,0.644,645,1.082,657,2.535,658,0.596,678,1.557,681,1.737,682,0.773,696,0.977,697,0.949,720,2.234,768,0.633,774,0.633,775,0.487,821,1.096,823,0.559,825,0.729,826,0.667,834,1.143,837,1.44,839,3.726,843,2.177,853,0.633,890,0.695,893,0.681,914,0.681,920,0.553,927,0.58,936,0.596,937,1.161,938,1.4,939,0.931,963,0.729,1021,1.326,1048,2.112,1075,0.633,1076,0.75,1108,0.623,1138,2.9,1176,0.535,1233,3.206,1322,2.043,1337,2.861,1354,0.573,1395,1.143,1406,1.36,1424,0.5,1427,0.949,1459,1.326,1467,0.681,1555,0.566,1638,0.872,1898,0.633,2023,0.799,2125,0.613,2199,0.872,2204,0.729,2273,0.872,2314,0.75,2413,1.44,2437,3.395,2497,2.729,2498,2.177,2518,0.681,2558,0.872,2619,3.655,2620,4.231,2808,3.218,2824,0.681,2927,0.799,3212,0.832,3215,1.269,3359,2.393,3365,1.55,3367,0.872,3402,4.401,3545,0.832,3583,0.872,3630,0.872,3636,1.55,3638,0.832,3641,3.374,3642,3.374,3644,3.218,3668,2.753,3669,0.872,3680,0.832,3681,2.729,3682,3.308,3683,0.872,3684,0.872,3685,1.625,3686,1.625,3687,1.726,3688,0.926,3689,1.879,3690,2.283,3691,1.726,3692,1.879,3693,1.879,3694,1.879,3695,1.008,3696,2.424,3697,2.424,3698,0.926,3699,0.729,3700,1.008,3701,1.879,3702,1.008,3703,4.911,3704,1.008,3705,1.879,3706,8.148,3707,1.008,3708,6.695,3709,1.879,3710,1.879,3711,1.008,3712,1.008,3713,1.008,3714,1.008,3715,1.879,3716,1.008,3717,1.008,3718,1.008,3719,1.879,3720,1.008,3721,1.008,3722,0.872,3723,1.008,3724,1.008,3725,1.008,3726,1.008,3727,0.926,3728,1.008,3729,1.879,3730,1.008,3731,1.008,3732,1.008,3733,1.008,3734,2.283,3735,0.926,3736,0.832,3737,1.879,3738,1.879,3739,0.926,3740,0.926,3741,1.008,3742,3.583,3743,3.901,3744,1.879,3745,5.261,3746,1.879,3747,1.008,3748,0.926,3749,1.879,3750,1.008,3751,1.008,3752,1.008,3753,1.008,3754,2.639,3755,1.879,3756,1.879,3757,0.872,3758,1.008,3759,1.008,3760,1.008,3761,2.424,3762,2.639,3763,2.092,3764,2.639,3765,2.424,3766,2.639,3767,3.583,3768,1.008,3769,1.879,3770,0.872,3771,1.008,3772,1.008,3773,0.832,3774,1.625,3775,1.625,3776,1.625,3777,1.625,3778,1.625,3779,0.872]],["component/98",[3,0.415,4,0.422]],["keyword/98",[62,1.635,76,2.059,98,1.147,134,3.638,364,3.017,678,4.224]],["title/99-1",[70,22.92,543,29.273]],["name/99-1",[]],["text/99-1",[]],["component/99-1",[]],["keyword/99-1",[]],["title/99-2",[70,19.468,146,23.018,288,25.211]],["name/99-2",[]],["text/99-2",[]],["component/99-2",[]],["keyword/99-2",[]],["title/99-3",[33,35.696,146,20.006,1395,30.77,3757,43.747]],["name/99-3",[]],["text/99-3",[]],["component/99-3",[]],["keyword/99-3",[]],["title/99",[70,19.468,206,21.362,757,35.95]],["name/99",[70,0.741,2913,1.603]],["text/99",[5,1.554,16,0.96,18,1.135,23,0.601,24,0.416,33,1.026,43,2.038,45,0.755,55,0.976,62,0.805,70,1.71,71,1.017,76,0.603,77,0.255,84,0.328,85,0.288,95,0.298,98,0.73,102,0.578,105,0.425,108,4.305,114,0.278,120,3.523,128,0.328,134,1.632,137,0.361,139,1.686,140,1.673,145,0.344,146,3.442,148,1.272,150,1.449,155,1.371,156,0.975,158,0.72,160,0.407,178,1.865,179,1.88,180,0.885,192,0.307,199,0.568,206,0.533,220,2.645,225,0.897,226,1.345,227,1.199,235,1.345,243,0.267,248,0.474,259,0.937,264,1.087,267,1.108,268,0.447,288,1.914,289,0.518,292,0.358,305,0.508,309,0.407,317,0.588,331,0.474,336,0.403,339,0.529,340,0.529,343,0.771,345,0.46,347,0.37,360,0.453,364,2.175,380,0.57,386,0.474,388,0.836,392,0.621,396,1.162,399,0.395,415,0.727,419,0.407,432,0.399,437,0.3,444,0.859,445,0.923,462,0.328,464,1.442,470,1.381,475,0.678,477,0.391,487,0.35,491,0.498,493,0.673,494,0.508,496,4.287,497,0.741,498,0.668,509,1.155,514,0.529,515,3.011,538,1.818,541,1.111,542,1.489,543,2.041,544,0.361,549,5.053,554,0.384,561,0.991,562,0.816,563,1.63,566,0.447,571,0.328,572,0.897,578,1.738,588,2.576,592,1.3,600,0.46,602,0.555,615,2.993,617,0.421,621,0.518,628,0.395,638,1.709,643,0.928,647,0.46,657,2.759,658,0.453,678,1.238,681,1.087,685,0.673,692,1.087,697,1.045,699,0.529,709,0.588,713,2.426,714,0.541,728,0.518,757,1.279,774,0.481,777,1.002,791,0.806,799,0.453,819,0.384,821,0.847,827,0.555,836,0.529,839,2.791,849,0.474,875,0.608,879,1.051,887,0.518,889,0.453,909,1.303,919,0.474,920,0.421,937,0.474,938,0.407,939,1.026,963,1.051,1010,3.263,1021,1.856,1048,0.49,1053,0.481,1083,1.152,1086,0.663,1094,0.57,1110,2.003,1122,0.704,1136,0.541,1140,0.407,1167,0.49,1173,0.498,1176,1.099,1180,0.57,1199,1.08,1206,0.608,1233,2.27,1241,0.588,1243,1.199,1249,0.663,1253,0.555,1268,0.704,1269,0.704,1271,0.46,1276,1.257,1301,0.498,1313,0.608,1314,0.555,1337,4.248,1349,0.608,1395,1.6,1424,1.995,1427,0.734,1434,0.555,1459,1.461,1467,0.518,1487,0.588,1517,1.026,1537,0.555,1557,0.771,1569,0.481,1580,0.541,1667,1.371,1703,0.663,1704,0.508,1711,0.859,1715,0.704,1722,0.508,1852,0.541,1898,2.26,1926,0.704,1932,1.199,1977,1.335,2023,0.608,2050,0.57,2141,0.481,2156,0.704,2271,0.663,2413,0.588,2470,1.791,2497,2.588,2498,1.199,2518,0.518,2551,0.57,2620,2.855,3030,4.934,3179,0.704,3215,2.432,3359,1.498,3367,0.663,3370,0.633,3402,1.051,3544,0.704,3635,0.663,3636,0.633,3638,0.633,3643,0.704,3644,2.97,3645,1.335,3649,1.199,3667,2.415,3668,4.723,3669,2.274,3671,5.494,3672,5.494,3673,5.494,3681,0.633,3683,0.663,3684,0.663,3685,0.663,3686,0.663,3687,4.696,3688,1.335,3690,4.422,3691,4.389,3696,0.704,3699,1.498,3703,1.587,3706,5.776,3708,3.788,3722,1.257,3736,0.633,3742,0.704,3745,2.882,3748,1.335,3757,0.663,3761,0.704,3763,0.608,3765,0.704,3767,0.704,3774,2.274,3775,2.274,3776,2.274,3777,2.274,3778,2.274,3780,2.274,3781,0.767,3782,0.767,3783,1.051,3784,3.115,3785,2.274,3786,1.791,3787,0.704,3788,0.704,3789,0.704,3790,1.453,3791,0.767,3792,0.767,3793,0.767,3794,0.704,3795,0.767,3796,0.767,3797,0.704,3798,0.704,3799,0.767,3800,0.704,3801,0.767,3802,0.767,3803,1.453,3804,1.902,3805,1.902,3806,0.663,3807,1.335,3808,0.767,3809,0.767,3810,0.767,3811,0.767,3812,0.767,3813,1.453,3814,0.767,3815,1.453,3816,0.767,3817,0.767,3818,0.767,3819,0.767,3820,0.767,3821,0.767,3822,4.778,3823,4.778,3824,4.778,3825,2.071,3826,2.629,3827,2.071,3828,1.791,3829,2.071,3830,2.071,3831,0.767,3832,2.071,3833,0.767,3834,0.767,3835,1.453,3836,1.453,3837,0.767,3838,0.767,3839,0.767,3840,1.453,3841,0.767,3842,2.882,3843,1.453,3844,1.453,3845,1.453,3846,1.453,3847,1.453,3848,1.453,3849,0.767,3850,0.767,3851,1.08,3852,1.335,3853,1.335,3854,0.767,3855,0.767]],["component/99",[3,0.415,4,0.422]],["keyword/99",[62,1.635,76,2.059,98,1.147,206,3.294,678,4.224,3856,7.761]],["title/100-1",[1303,58.774]],["name/100-1",[]],["text/100-1",[]],["component/100-1",[]],["keyword/100-1",[]],["title/100-2",[146,27.1,206,25.149]],["name/100-2",[]],["text/100-2",[]],["component/100-2",[]],["keyword/100-2",[]],["title/100-3",[1045,76.497]],["name/100-3",[]],["text/100-3",[]],["component/100-3",[]],["keyword/100-3",[]],["title/100",[146,23.018,791,45.413]],["name/100",[146,0.628,1396,1.18,3262,1.259]],["text/100",[5,0.786,8,1.171,16,1.506,23,1.382,43,1.576,47,0.821,55,0.9,62,0.242,70,2.382,71,0.653,76,0.305,85,2.021,96,1.124,98,0.614,102,2.528,103,1.638,108,4.316,114,2.705,134,0.983,139,3.119,140,1.89,143,0.713,144,1.161,146,4.191,148,1.356,156,1.142,157,1.379,158,1.202,160,0.706,165,0.756,170,0.917,178,0.616,183,0.938,199,0.52,206,1.762,218,1.901,220,3.411,225,3.085,227,0.606,231,0.821,241,0.898,243,0.463,245,0.921,250,0.606,265,0.786,267,1.022,268,0.775,277,0.821,280,0.746,289,0.898,336,1.756,341,0.746,347,0.642,364,3.207,371,0.659,376,0.653,388,0.765,419,0.706,420,0.636,421,4.484,422,0.786,445,1.082,450,2.098,451,1.181,453,0.765,475,0.621,487,2.69,489,1.975,493,0.616,496,0.589,537,0.713,538,0.671,541,4.554,542,3.015,549,5.125,554,0.665,562,1.878,563,4.983,566,2.406,571,0.568,578,0.642,588,3.705,615,3.068,628,0.684,638,3.207,657,3.677,678,1.574,697,0.671,699,0.917,713,1.587,731,0.786,791,3.95,890,1.673,914,0.898,917,0.938,936,0.786,965,3.988,1075,0.835,1104,1.476,1108,1.498,1110,4.314,1123,0.809,1136,1.712,1138,2.487,1140,0.706,1167,0.849,1193,1.548,1199,0.989,1237,0.898,1317,2.985,1337,0.775,1354,5.054,1392,1.712,1394,4.596,1395,1.476,1396,1.803,1406,4.596,1409,3.568,1414,4.111,1415,3.569,1416,6.145,1417,1.15,1418,6.145,1420,3.072,1424,2.923,1427,1.225,1580,0.938,1932,1.097,2050,0.989,2314,0.989,2325,0.989,2332,1.15,2413,3.677,2437,1.019,2497,1.097,2532,0.962,2620,4.677,2927,1.923,3326,2.228,3615,1.803,3630,1.15,3641,2.893,3642,4.151,3644,5.24,3770,1.15,3773,1.097,3857,1.33,3858,1.15,3859,1.221,3860,2.098,3861,6.353,3862,1.33,3863,1.33]],["component/100",[3,0.415,4,0.422]],["keyword/100",[62,1.155,76,1.454,98,0.81,146,2.507,206,2.327,678,2.984,791,6.441,3856,5.483]],["title/101-1",[721,40.499,3851,50.935]],["name/101-1",[]],["text/101-1",[]],["component/101-1",[]],["keyword/101-1",[]],["title/101-2",[372,46.266,3851,50.935]],["name/101-2",[]],["text/101-2",[]],["component/101-2",[]],["keyword/101-2",[]],["title/101",[646,46.749]],["name/101",[646,1.244,1974,1.647]],["text/101",[8,2.153,11,2.535,50,3.012,55,1.655,70,1.492,77,1.485,84,1.906,85,1.674,92,2.034,95,1.733,96,3.122,98,1.308,100,1.906,102,1.775,108,4.262,114,1.619,133,2.273,140,1.886,158,3.341,165,2.535,178,3.122,181,2.171,199,1.743,207,2.171,214,2.504,243,1.553,269,2.446,280,2.504,306,2.847,345,4.041,348,3.316,383,2.601,392,1.906,432,2.318,445,1.988,480,1.988,488,2.847,493,3.122,515,1.946,538,3.403,600,2.674,618,3.316,646,5.963,649,2.567,652,2.755,678,2.099,681,2.342,721,4.804,761,3.857,837,3.417,853,2.799,914,3.012,937,2.755,938,2.366,1123,2.713,1322,5.02,1630,3.536,1852,3.148,2824,3.012,3034,3.012,3322,3.679,3370,3.679,3402,6.553,3703,5.165,3763,3.536,3783,4.877,3797,4.097,3798,4.097,3851,6.734,3864,6.741,3865,4.097,3866,4.46,3867,6.741,3868,4.46,3869,4.46,3870,4.46,3871,4.46,3872,4.46,3873,4.46,3874,4.097,3875,4.46,3876,4.46,3877,4.46,3878,4.46]],["component/101",[3,0.415,4,0.422]],["keyword/101",[62,1.436,76,1.808,98,1.008,206,2.893,646,4.424,678,3.71,3856,6.817]],["title/102-1",[1193,53.16]],["name/102-1",[]],["text/102-1",[]],["component/102-1",[]],["keyword/102-1",[]],["title/102-2",[146,32.94]],["name/102-2",[]],["text/102-2",[]],["component/102-2",[]],["keyword/102-2",[]],["title/102-3",[32,42.042]],["name/102-3",[]],["text/102-3",[]],["component/102-3",[]],["keyword/102-3",[]],["title/102-4",[243,28.996]],["name/102-4",[]],["text/102-4",[]],["component/102-4",[]],["keyword/102-4",[]],["title/102",[49,29.661,269,31.911,537,31.21]],["name/102",[1193,1.414,3065,1.916]],["text/102",[8,1.741,11,2.05,16,2.088,24,1.956,32,5.432,49,4.782,55,2.123,94,2.05,96,2.649,98,1.304,120,2.344,133,1.839,134,1.463,140,1.988,146,2.262,148,2.881,150,2.654,156,1.698,158,3.522,160,4.291,162,1.857,165,2.05,180,1.541,192,3.757,196,1.658,197,3.251,207,1.756,215,4.32,217,2.496,220,1.31,233,3.373,245,1.369,267,2.411,288,3.079,304,5.254,305,2.388,310,2.61,312,2.436,315,3.59,323,2.436,336,1.894,348,2.682,376,1.772,396,2.025,419,1.914,444,2.132,446,2.303,472,2.682,476,4.39,477,1.839,493,1.671,527,2.436,537,4.337,544,2.692,549,3.942,553,4.655,606,1.914,611,2.388,628,3.658,712,3.12,721,2.132,791,3.173,887,4.799,926,3.99,939,1.788,965,3.59,1140,1.914,1158,6.211,1168,6.147,1193,3.651,1209,2.682,1217,2.86,1300,2.303,1305,2.86,1395,2.195,1427,2.888,1482,3.12,1595,2.764,2129,3.12,2314,2.682,2785,3.314,2827,3.314,3879,5.72,3880,5.72,3881,3.608,3882,3.608,3883,3.314,3884,3.608,3885,3.608,3886,5.72,3887,7.107,3888,3.608,3889,3.608,3890,3.608,3891,3.608,3892,3.608,3893,4.718,3894,3.608,3895,3.608]],["component/102",[3,0.415,4,0.422]],["keyword/102",[49,6.325,62,2.261,76,2.847,269,6.805]],["title/103",[98,8.76,181,33.356]],["name/103",[181,1.079,970,1.828]],["text/103",[16,2.582,47,4.369,49,3.605,72,4.595,98,1.482,108,2.413,134,2.867,140,1.978,181,5.101,199,2.764,261,4.24,267,2.981,268,5.454,315,4.439,419,3.753,537,3.793,547,6.117,549,3.923,571,3.022,610,5.608,611,4.682,678,3.329,694,4.991,889,4.181,1075,4.439,1084,5.419,1170,5.117,1301,4.595,1302,5.834,1310,5.608,1555,3.97,2222,5.608,2469,6.117,3773,5.834,3883,6.497,3896,7.072,3897,7.072,3898,7.072,3899,7.072,3900,7.072,3901,6.497,3902,7.072]],["component/103",[3,0.415,4,0.422]],["keyword/103",[62,3.298,76,2.39,98,1.332,181,5.071]],["title/104-1",[70,22.92,543,29.273]],["name/104-1",[]],["text/104-1",[]],["component/104-1",[]],["keyword/104-1",[]],["title/104-2",[70,19.468,146,23.018,288,25.211]],["name/104-2",[]],["text/104-2",[]],["component/104-2",[]],["keyword/104-2",[]],["title/104",[70,16.92,140,14.148,1424,25.067,1711,29.897]],["name/104",[70,0.531,1711,0.938,3903,1.588]],["text/104",[8,0.962,43,2.264,45,1.036,54,1.251,55,1.293,62,0.363,70,3.001,71,0.979,76,1.065,85,0.748,90,0.846,98,0.711,102,1.386,108,4.227,120,1.295,134,1.412,137,1.64,140,2.509,146,2.957,150,1.523,155,1.32,176,1.133,178,1.614,199,1.362,200,1.213,206,1.279,220,2.714,225,0.864,226,2.264,235,1.295,264,1.047,267,1.469,288,2.01,306,1.273,341,1.119,364,2.335,380,1.482,396,1.956,415,0.997,450,1.724,455,3.086,464,1.91,470,1.047,475,3.243,480,0.889,487,1.589,496,2.054,497,1.016,498,2.133,515,3.46,529,2.403,538,2.809,541,1.868,542,2.64,543,2.699,549,5.126,554,1.742,562,1.119,571,0.852,578,0.962,588,2.032,600,1.195,606,2.462,616,1.375,617,1.093,635,1.147,638,2.202,643,2.224,657,1.528,678,2.974,681,1.829,692,1.829,696,1.036,713,2.202,757,1.232,791,1.933,799,1.178,827,1.442,839,3.847,849,1.232,865,1.346,890,1.375,909,2.3,911,1.482,936,2.059,963,1.442,1010,4.033,1021,1.407,1053,1.251,1076,1.482,1104,1.213,1108,1.232,1110,2.962,1123,1.213,1128,1.295,1176,1.058,1233,1.442,1271,1.195,1314,2.521,1317,1.442,1337,4.359,1354,1.133,1395,1.213,1396,1.482,1409,2.59,1424,3.131,1434,2.521,1467,1.346,1517,1.407,1627,1.831,1673,1.528,1704,1.32,1711,3.289,1722,1.32,1898,2.187,1948,1.644,2005,1.724,2071,1.528,2273,1.724,2325,1.482,2413,2.67,2470,4.013,2498,2.874,2518,1.346,2655,1.831,3215,3.757,3258,1.724,3402,2.521,3635,4.013,3636,1.644,3638,1.644,3649,1.644,3668,4.902,3680,1.644,3683,1.724,3684,1.724,3685,1.724,3686,1.724,3690,1.724,3697,3.2,3699,1.442,3703,1.528,3706,4.411,3708,4.411,3722,1.724,3727,1.831,3736,1.644,3763,1.581,3774,3.013,3775,3.013,3776,3.013,3777,3.013,3778,3.013,3779,1.724,3783,1.442,3784,4.812,3785,3.013,3786,3.013,3787,1.831,3788,3.2,3789,1.831,3804,1.831,3805,3.2,3806,1.724,3807,1.831,3842,3.2,3852,1.831,3853,3.2,3904,1.994,3905,1.994,3906,1.994,3907,1.994,3908,1.994,3909,5.563,3910,1.994,3911,1.994,3912,1.994,3913,1.994,3914,1.994,3915,1.994,3916,1.994,3917,1.994,3918,1.994,3919,1.831]],["component/104",[3,0.415,4,0.422]],["keyword/104",[62,1.635,70,3.002,76,2.059,140,2.51,1424,4.447,1711,5.304]],["title/105-1",[243,28.996]],["name/105-1",[]],["text/105-1",[]],["component/105-1",[]],["keyword/105-1",[]],["title/105-2",[70,27.86]],["name/105-2",[]],["text/105-2",[]],["component/105-2",[]],["keyword/105-2",[]],["title/105-3",[154,33.141]],["name/105-3",[]],["text/105-3",[]],["component/105-3",[]],["keyword/105-3",[]],["title/105",[98,7.441,206,21.362,692,30.559]],["name/105",[98,0.203,692,0.834,1280,1.032]],["text/105",[16,0.725,23,1.687,32,1.002,46,0.58,51,0.492,55,1.288,62,0.506,65,1.226,69,0.586,70,3.305,77,0.356,84,0.848,85,3.306,90,0.454,92,0.905,95,1.079,98,1.145,102,0.426,105,0.593,108,4.356,114,0.721,115,0.882,120,2.255,122,0.925,123,0.54,130,1.866,133,0.545,134,1.126,137,0.503,138,0.795,139,0.831,140,1.142,145,0.892,146,2.35,148,0.434,150,0.651,154,1.84,167,0.608,180,0.457,192,1.852,199,0.418,200,0.651,206,0.393,210,0.39,215,0.872,220,2.158,221,1.634,222,0.521,225,0.86,233,0.508,243,0.691,245,0.754,256,1.002,258,0.545,259,0.484,266,1.099,267,0.451,268,0.624,273,1.476,301,0.898,312,0.722,338,1.369,343,1.053,360,0.632,363,0.376,364,3.352,371,0.53,374,0.795,376,0.525,378,0.473,381,0.574,386,0.661,388,0.616,390,2.66,392,0.457,399,0.55,402,0.82,421,0.755,422,0.632,434,0.499,437,0.418,444,0.632,449,0.616,460,0.488,462,0.457,464,1.089,474,0.722,475,0.499,476,0.661,477,1.012,487,1.267,489,1.954,494,0.708,496,1.23,498,2.731,506,0.484,507,0.574,508,0.512,509,2.032,537,2.189,538,2.061,541,0.574,542,1.318,543,1.976,550,0.683,561,3.448,563,2.093,566,0.624,572,0.86,578,0.516,606,0.567,638,1.937,643,1.267,662,0.774,664,0.755,678,0.934,681,0.562,692,2.683,699,0.738,713,2.99,809,0.774,821,0.624,839,4.68,849,0.661,861,1.436,920,3.799,938,0.567,942,1.961,944,0.82,946,0.795,947,0.848,948,0.82,950,0.82,953,0.82,955,0.795,956,0.82,957,0.774,958,0.774,963,1.436,965,2.179,972,0.671,1000,0.958,1010,0.683,1039,1.341,1058,0.722,1104,0.651,1141,0.795,1146,0.661,1161,0.671,1167,0.683,1173,0.695,1176,1.053,1233,2.01,1317,1.436,1322,1.226,1325,0.82,1332,0.795,1337,2.98,1354,3.377,1391,0.738,1394,0.774,1396,2.065,1406,0.774,1409,2.58,1410,0.925,1412,0.982,1414,0.651,1415,0.925,1416,0.882,1417,0.925,1418,0.882,1424,0.53,1427,0.54,1434,0.774,1438,0.882,1439,0.82,1440,0.925,1441,0.925,1442,0.925,1443,0.925,1444,0.925,1445,0.982,1448,0.982,1449,1.824,1450,0.795,1451,1.574,1452,0.795,1569,0.671,1720,0.882,1858,0.774,1859,2.129,1862,1.717,1863,1.717,1864,1.717,1870,0.925,1898,3.208,1902,0.722,1934,0.82,2022,4.553,2131,0.925,2518,0.722,2559,1.574,3215,2.757,3342,1.824,3359,2.511,3402,3.346,3545,0.882,3615,0.795,3649,0.882,3650,0.982,3651,0.982,3654,0.982,3655,0.982,3656,0.982,3668,3.264,3680,0.882,3681,1.637,3699,1.436,3703,3.128,3706,4.996,3708,3.667,3734,2.403,3735,0.982,3736,2.291,3739,0.982,3779,0.925,3780,1.717,3783,1.436,3784,2.403,3785,1.717,3786,2.403,3806,1.717,3874,1.824,3920,1.07,3921,1.07,3922,1.07,3923,4.798,3924,1.07,3925,0.982,3926,0.982,3927,0.982,3928,0.982,3929,0.982,3930,1.824,3931,1.824,3932,1.824,3933,1.985,3934,1.985,3935,1.985,3936,1.985,3937,1.985,3938,1.985,3939,1.985,3940,1.07,3941,1.07,3942,1.824,3943,1.824,3944,2.552,3945,3.002,3946,2.552,3947,3.002,3948,2.552,3949,3.002,3950,1.07,3951,1.07,3952,1.07,3953,1.07,3954,1.985,3955,1.985,3956,1.985,3957,1.985,3958,1.985,3959,1.985,3960,1.07,3961,1.717,3962,1.717,3963,0.925,3964,0.982,3965,0.982,3966,0.982,3967,1.07,3968,1.985,3969,1.07,3970,1.07,3971,1.07,3972,1.07,3973,0.982,3974,0.982,3975,0.982,3976,1.07]],["component/105",[3,0.415,4,0.422]],["keyword/105",[62,1.635,76,2.059,98,1.147,206,3.294,678,4.224,692,4.712]],["title/106-1",[139,21.178,205,26.291,333,34.889,938,26.837]],["name/106-1",[]],["text/106-1",[]],["component/106-1",[]],["keyword/106-1",[]],["title/106-2",[98,6.467,196,23.245,1306,27.424,1370,29.494]],["name/106-2",[]],["text/106-2",[]],["component/106-2",[]],["keyword/106-2",[]],["title/106-3",[1304,44.663]],["name/106-3",[]],["text/106-3",[]],["component/106-3",[]],["keyword/106-3",[]],["title/106-4",[544,32.249,606,36.354]],["name/106-4",[]],["text/106-4",[]],["component/106-4",[]],["keyword/106-4",[]],["title/106-5",[853,43.006,2824,46.266]],["name/106-5",[]],["text/106-5",[]],["component/106-5",[]],["keyword/106-5",[]],["title/106-6",[256,34.588,309,36.354]],["name/106-6",[]],["text/106-6",[]],["component/106-6",[]],["keyword/106-6",[]],["title/106-7",[98,7.441,685,26.956,686,28.584]],["name/106-7",[]],["text/106-7",[]],["component/106-7",[]],["keyword/106-7",[]],["title/106-8",[98,8.76,154,27.265]],["name/106-8",[]],["text/106-8",[]],["component/106-8",[]],["keyword/106-8",[]],["title/106",[608,42.86]],["name/106",[608,0.817,2680,1.032,3207,1.12]],["text/106",[3,0.564,12,1.569,24,2.442,32,2.932,45,1.399,47,1.662,51,1.237,54,1.689,55,0.999,62,1.49,72,1.749,76,2.241,77,1.499,85,2.18,90,1.142,95,2.257,96,2.69,98,1.568,100,2.902,114,0.977,128,1.924,130,3.169,132,1.529,134,1.091,140,2.732,149,1.091,154,2.703,156,1.267,174,1.689,179,1.257,192,1.078,196,2.669,199,1.052,205,3.53,206,2.493,207,1.31,208,1.662,220,1.635,225,1.166,243,1.568,258,1.372,259,1.218,263,1.749,264,3.05,266,1.782,267,1.899,269,1.476,282,1.718,288,2.942,309,2.39,312,1.817,333,3.107,341,1.511,347,1.299,351,2.134,363,1.584,368,1.662,371,1.334,378,1.993,388,2.592,392,3.493,396,1.511,399,1.385,403,2.22,451,1.31,454,1.413,487,1.227,489,1.288,500,1.385,506,2.038,515,1.174,540,1.288,544,2.12,554,1.346,571,1.924,590,2.416,608,5.027,609,1.947,618,2.001,642,1.899,652,1.662,667,2.626,673,2.001,681,1.413,685,3.787,686,3.713,696,3.53,706,1.947,713,2.138,731,1.591,735,2.001,738,2.134,775,1.299,829,1.856,830,1.549,836,1.856,853,1.689,900,1.782,909,1.334,913,2.827,937,1.662,938,2.39,939,1.334,966,1.899,1046,2.328,1123,1.637,1304,4.882,1306,5.13,1313,2.134,1370,3.387,1414,1.637,1467,1.817,1571,1.947,1611,2.328,1703,2.328,1749,2.472,1751,1.947,1770,2.22,1852,1.899,2359,3.451,2371,2.22,2657,2.328,2667,2.472,2824,1.817,3113,2.472,3264,4.137,3272,2.472,3740,2.472,3977,3.896,3978,2.691,3979,2.691,3980,2.691,3981,2.691,3982,2.691]],["component/106",[3,0.415,4,0.422]],["keyword/106",[62,1.898,76,2.39,98,1.332,206,3.823,608,5.36]],["title/107-1",[98,5.718,156,21.052,294,26.437,1108,27.628,3200,36.892]],["name/107-1",[]],["text/107-1",[]],["component/107-1",[]],["keyword/107-1",[]],["title/107",[100,29.273,3983,59.259]],["name/107",[100,0.678,2606,1.013,3983,1.373]],["text/107",[5,2.755,8,2.249,23,1.926,24,2.527,26,2.375,35,3.844,46,2.527,49,2.375,55,2.586,62,1.27,76,1.069,77,1.551,98,1.475,100,2.977,102,2.773,114,1.692,125,3.697,133,2.375,139,2.917,140,2.334,141,4.428,148,1.889,156,2.193,158,3.453,174,2.925,176,2.648,179,3.253,180,1.991,196,3.202,204,2.717,220,2.53,225,3.018,258,3.551,292,3.253,294,6.923,351,3.695,370,3.214,376,3.422,382,3.464,392,1.991,419,2.473,454,2.447,487,2.125,534,3.371,538,2.353,543,1.991,593,4.612,602,3.371,608,3.586,646,2.616,656,3.147,681,2.447,696,3.622,707,2.212,776,2.794,823,2.585,849,4.304,865,3.147,966,3.289,1108,4.304,1293,3.844,1304,2.499,1306,3.778,1370,2.717,1612,4.031,2109,3.844,2741,4.281,3035,4.031,3200,9.142,3268,4.031,3473,4.031,3984,4.66,3985,4.66,3986,4.66,3987,4.66]],["component/107",[3,0.415,4,0.422]],["keyword/107",[62,1.898,76,2.39,100,4.45,125,5.527,3983,9.009]],["title/108-1",[141,30.879,486,40.143,679,32.282]],["name/108-1",[]],["text/108-1",[]],["component/108-1",[]],["keyword/108-1",[]],["title/108-2",[141,36.354,3988,68.514]],["name/108-2",[]],["text/108-2",[]],["component/108-2",[]],["keyword/108-2",[]],["title/108",[679,46.196]],["name/108",[679,0.881,2680,1.032,3207,1.12]],["text/108",[8,2.521,11,2.968,16,1.907,47,3.226,55,2.812,62,1.381,71,2.565,92,2.382,96,4.131,98,1.14,102,3.015,124,3.334,131,2.662,133,3.862,140,2.906,141,2.771,144,4.268,145,4.006,158,4.42,162,2.688,163,3.457,199,3.485,204,3.045,205,2.715,206,2.781,239,4.517,280,2.932,292,2.438,293,2.968,341,2.932,348,3.883,364,1.756,366,3.921,420,2.499,432,4.636,444,3.087,495,3.602,679,6.2,681,3.979,682,4.002,697,2.637,725,3.602,768,3.278,775,3.657,1075,3.278,1176,2.771,1243,4.308,1427,2.637,1555,2.932,1907,4.002,2532,3.778,3989,5.223,3990,5.223,3991,6.96,3992,6.008,3993,9.783,3994,5.223,3995,5.223,3996,8.918]],["component/108",[3,0.415,4,0.422]],["keyword/108",[62,1.898,76,2.39,98,1.332,182,7.351,206,3.823]],["title/109-1",[96,23.428,98,6.467,180,21.61,1427,25.534]],["name/109-1",[]],["text/109-1",[]],["component/109-1",[]],["keyword/109-1",[]],["title/109-2",[146,32.94]],["name/109-2",[]],["text/109-2",[]],["component/109-2",[]],["keyword/109-2",[]],["title/109",[98,8.76,150,22.481]],["name/109",[98,0.203,150,0.521,2606,1.013]],["text/109",[11,2.043,16,2.082,23,1.486,49,1.832,55,1.334,57,1.928,70,1.203,71,1.766,85,1.349,96,4.339,98,1.302,100,1.536,108,3.476,131,1.832,137,1.692,139,1.505,140,1.596,145,3.954,146,4.029,150,2.888,160,1.908,180,3.03,192,3.931,200,2.187,207,1.75,217,1.568,220,1.305,241,2.428,243,1.252,245,3.064,250,2.601,280,2.018,295,2.454,324,2.096,331,2.221,345,2.155,354,2.673,363,1.265,364,1.209,366,2.153,420,1.721,445,1.603,460,2.601,462,2.437,466,2.707,479,2.125,480,1.603,487,1.639,496,4.346,508,2.73,528,1.85,539,2.221,541,1.928,542,2.707,543,1.536,553,4.081,562,2.018,563,2.582,571,1.536,572,1.557,582,4.526,583,4.523,606,3.027,638,1.706,668,2.755,683,2.965,694,2.537,713,1.706,791,3.164,890,3.935,917,2.537,943,2.257,1060,5.697,1155,2.601,1161,2.257,1176,3.027,1271,3.42,1337,2.096,1354,4.587,1392,2.537,1397,3.302,1427,2.88,1852,2.537,1903,2.48,1916,2.755,2153,2.85,2473,2.755,2518,5.944,2948,3.302,3668,2.537,3992,7.428,3997,3.302,3998,2.965,3999,5.704,4000,3.595,4001,3.595,4002,3.595,4003,3.595,4004,3.595,4005,2.965,4006,2.965,4007,2.965]],["component/109",[3,0.415,4,0.422]],["keyword/109",[62,2.261,76,2.847,98,1.587,553,7.143]],["title/110-1",[98,7.441,364,19.564,1322,35.95]],["name/110-1",[]],["text/110-1",[]],["component/110-1",[]],["keyword/110-1",[]],["title/110-2",[70,19.468,364,19.564,543,24.865]],["name/110-2",[]],["text/110-2",[]],["component/110-2",[]],["keyword/110-2",[]],["title/110-3",[146,23.018,432,30.25,1395,35.404]],["name/110-3",[]],["text/110-3",[]],["component/110-3",[]],["keyword/110-3",[]],["title/110",[98,7.441,134,23.594,364,19.564]],["name/110",[98,0.158,134,0.501,364,0.416,2457,0.804]],["text/110",[8,1.582,11,1.862,16,1.196,37,2.057,45,1.704,70,1.772,98,0.677,108,4.313,134,2.147,137,3.603,139,2.218,140,1.482,145,1.472,146,4.496,148,2.147,192,3.065,196,1.506,206,1.944,220,2.78,280,1.84,288,1.42,352,2.599,364,3.591,388,1.886,397,1.818,419,1.739,437,1.281,445,2.362,475,3.112,477,1.67,487,1.495,497,2.7,539,2.025,541,1.758,543,1.4,562,1.84,563,1.483,603,3.222,606,3.537,621,2.213,679,1.818,696,2.753,699,2.261,709,2.511,713,2.514,774,2.057,890,5.281,919,2.025,920,1.797,1053,2.057,1060,2.313,1155,3.832,1167,3.381,1322,2.025,1337,1.911,1354,4.35,1395,3.222,1427,1.655,1722,3.506,1903,2.261,2147,2.511,2153,2.599,2155,2.092,2518,6.869,3359,3.832,3668,2.313,3680,2.703,3893,2.703,3992,2.599,3998,6.932,4005,2.703,4006,2.703,4007,2.703,4008,3.277,4009,3.01,4010,3.277,4011,3.277,4012,3.01,4013,3.01,4014,5.297,4015,3.01,4016,3.01,4017,5.285,4018,3.01,4019,3.277,4020,3.277,4021,3.01,4022,3.01,4023,3.01,4024,3.277,4025,3.277,4026,2.703,4027,2.835,4028,2.835,4029,3.277,4030,3.277,4031,3.277,4032,3.277,4033,3.277,4034,3.01,4035,2.835,4036,2.835,4037,2.835,4038,3.277,4039,3.01,4040,2.835,4041,3.01,4042,3.277,4043,2.835,4044,2.835]],["component/110",[3,0.415,4,0.422]],["keyword/110",[62,1.436,76,1.808,98,1.809,206,2.893,364,2.65,679,4.372]],["title/111-1",[146,27.1,1395,41.681]],["name/111-1",[]],["text/111-1",[]],["component/111-1",[]],["keyword/111-1",[]],["title/111",[70,19.468,206,21.362,757,35.95]],["name/111",[70,0.414,206,0.454,757,0.764,2913,0.895]],["text/111",[3,0.317,8,0.73,11,0.859,23,1.126,41,1.067,47,0.934,54,1.71,55,0.561,70,2.752,76,0.625,85,2.721,94,0.859,96,0.7,98,0.749,102,1.811,108,4.395,130,1.919,134,1.508,137,2.142,139,1.141,140,1.47,146,4.077,148,1.845,150,0.496,154,1.48,155,1.001,160,0.802,178,1.723,179,1.737,192,3.048,206,1.366,220,1.351,225,0.655,227,0.689,245,0.574,259,1.233,263,0.982,267,0.637,280,0.849,288,2.766,295,1.172,336,0.794,352,1.199,364,2.766,371,0.749,380,1.124,392,0.646,399,0.778,419,1.974,437,0.591,445,0.674,453,0.87,458,1.199,464,1.494,470,0.794,475,0.706,477,1.389,480,0.674,487,0.689,496,3.512,498,0.695,509,1.197,515,2.293,531,1.71,532,0.794,539,0.934,541,0.811,542,1.293,543,1.589,553,2.141,554,0.756,561,0.723,571,1.164,572,1.181,578,0.73,603,0.92,606,0.802,616,2.566,632,0.829,635,0.87,638,3.766,678,0.712,679,0.839,681,0.794,683,1.247,692,0.794,696,0.786,697,0.763,699,1.043,709,1.158,720,1.021,757,0.934,791,0.839,799,0.894,821,0.882,832,1.124,839,1.402,849,2.812,890,2.566,893,1.021,911,1.124,943,0.949,972,0.949,1060,1.067,1121,1.247,1155,1.971,1180,1.124,1237,1.021,1271,0.906,1311,1.199,1337,0.882,1354,2.586,1395,2.769,1424,0.749,1427,1.878,1459,3.212,1537,1.971,1555,0.849,1632,1.158,1687,2.357,1722,1.804,1852,2.626,1898,0.949,1903,1.043,1927,1.923,2050,4.357,2071,1.158,2153,1.199,2163,1.199,2314,1.124,2486,1.389,2518,4.897,3215,1.021,3359,1.094,3370,1.247,3668,1.067,3699,3.293,3770,1.308,3783,1.971,3800,1.389,3828,3.218,3858,3.218,3859,1.389,3860,1.308,3893,1.247,3992,1.199,3997,1.389,3998,5.267,4005,1.247,4006,1.247,4007,1.247,4017,4.167,4021,1.389,4022,1.389,4023,1.389,4026,3.069,4027,3.218,4028,1.308,4035,1.308,4036,1.308,4037,1.308,4040,3.218,4041,1.389,4043,1.308,4044,1.308,4045,2.248,4046,2.248,4047,3.218,4048,3.417,4049,2.503,4050,3.069,4051,4.181,4052,2.503,4053,3.417,4054,5.069,4055,3.72,4056,2.503,4057,2.725,4058,1.512,4059,1.512,4060,5.383,4061,1.512,4062,1.389,4063,2.357,4064,2.503,4065,2.503,4066,1.512,4067,1.512,4068,1.512,4069,1.389,4070,2.503,4071,1.512,4072,1.512,4073,1.512,4074,2.503,4075,3.417,4076,2.503,4077,3.417,4078,2.503,4079,3.417,4080,3.417,4081,3.417,4082,3.417,4083,3.72,4084,3.72,4085,2.725,4086,1.512,4087,2.725,4088,1.512,4089,1.512,4090,1.512,4091,1.512,4092,1.512,4093,1.512]],["component/111",[3,0.415,4,0.422]],["keyword/111",[62,1.436,70,2.637,76,1.808,98,1.008,206,2.893,679,4.372,757,4.869]],["title/112-1",[154,23.159,206,21.362,288,25.211]],["name/112-1",[]],["text/112-1",[]],["component/112-1",[]],["keyword/112-1",[]],["title/112-2",[146,23.018,434,27.172,1395,35.404]],["name/112-2",[]],["text/112-2",[]],["component/112-2",[]],["keyword/112-2",[]],["title/112",[98,6.467,150,16.596,154,20.128,180,21.61]],["name/112",[98,0.203,154,0.632,3262,1.259]],["text/112",[8,0.822,11,1.723,18,2.247,55,1.125,62,0.31,69,0.934,70,2.699,71,0.836,85,2.371,98,0.876,108,4.251,130,0.622,134,1.229,137,1.928,139,1.715,140,1.146,145,0.765,146,4.17,150,1.344,154,3.643,155,2.712,179,0.795,180,0.727,191,1.174,192,3.088,203,0.876,206,0.625,220,2.487,227,1.382,245,1.555,250,1.382,259,1.372,264,0.894,267,0.718,280,1.702,288,2.153,295,1.763,324,0.993,340,1.174,364,1.671,432,1.576,434,1.415,451,0.829,454,0.894,455,0.944,458,1.35,460,1.382,462,1.295,464,1.662,466,1.439,470,1.592,475,3.198,477,0.868,479,1.006,488,1.087,489,2.379,496,3.949,508,1.451,509,1.332,515,3.658,531,1.069,539,1.873,541,3.057,542,0.808,543,1.75,553,2.861,571,0.727,572,1.775,578,1.977,582,3.173,583,2.403,593,1.127,606,2.174,616,1.174,617,0.934,621,1.15,628,0.876,635,0.98,638,3.25,643,1.087,694,1.202,735,1.266,757,1.052,799,1.006,821,0.993,839,1.56,843,1.404,887,1.15,903,1.202,938,0.903,1005,1.232,1010,4.033,1032,1.844,1053,1.069,1060,2.139,1083,1.35,1084,1.305,1104,1.844,1155,3.596,1180,2.254,1271,1.021,1337,2.389,1354,3.892,1364,1.564,1392,1.202,1395,1.036,1496,1.473,1537,1.232,1722,2.712,1771,1.564,1852,1.202,1857,1.305,1903,2.091,1927,1.202,2050,3.046,2128,1.35,2142,1.404,2147,1.305,2150,2.403,2153,2.403,2269,1.473,2518,5.662,3211,1.404,3250,1.404,3414,1.564,3668,2.139,3699,1.232,3783,1.232,3828,1.473,3858,3.544,3860,1.473,3893,2.5,3992,2.403,3998,3.379,4005,2.5,4006,4.702,4007,2.5,4017,2.403,4026,3.379,4027,1.473,4028,1.473,4034,2.784,4035,2.622,4036,2.622,4037,2.622,4039,2.784,4040,2.622,4043,2.622,4044,2.622,4045,1.404,4046,1.404,4047,2.622,4048,1.564,4049,1.564,4050,1.404,4051,2.784,4052,1.564,4053,1.564,4054,2.622,4056,1.564,4060,2.784,4063,1.473,4064,1.564,4065,1.564,4069,1.564,4070,2.784,4074,3.763,4075,1.564,4076,1.564,4077,1.564,4078,1.564,4079,1.564,4080,1.564,4081,1.564,4082,1.564,4094,1.703,4095,1.703,4096,1.703,4097,1.703,4098,1.703,4099,1.703,4100,1.703,4101,1.703,4102,1.703,4103,3.031,4104,3.031,4105,1.703,4106,1.703,4107,1.703,4108,1.703,4109,3.031,4110,1.703,4111,1.703,4112,3.031,4113,3.031,4114,1.703,4115,1.703,4116,1.703,4117,1.703,4118,1.703,4119,1.703,4120,1.703,4121,1.703,4122,1.703,4123,1.703,4124,1.703,4125,1.703,4126,1.703,4127,1.703]],["component/112",[3,0.415,4,0.422]],["keyword/112",[62,1.155,76,1.454,98,1.485,150,2.08,154,4.621,180,2.709,679,3.516]],["title/113-1",[721,40.499,3851,50.935]],["name/113-1",[]],["text/113-1",[]],["component/113-1",[]],["keyword/113-1",[]],["title/113-2",[372,46.266,3851,50.935]],["name/113-2",[]],["text/113-2",[]],["component/113-2",[]],["keyword/113-2",[]],["title/113",[646,46.749]],["name/113",[646,1.244,1974,1.647]],["text/113",[12,2.601,55,1.655,62,0.813,70,2.255,76,1.023,77,2.244,83,3.148,84,3.87,85,1.674,95,1.733,96,2.066,98,1.398,100,1.906,104,3.148,108,4.164,114,2.448,132,2.535,140,2.534,150,1.463,151,2.898,156,2.099,199,1.743,214,2.504,231,2.755,259,2.018,269,2.446,306,4.303,347,2.153,392,2.88,438,2.601,439,4.877,445,1.988,477,2.273,488,2.847,493,2.066,531,2.799,543,1.906,571,1.906,646,6.405,679,2.474,681,2.342,721,2.636,731,2.636,837,3.417,866,3.679,936,2.636,1039,3.012,1225,4.097,1322,2.755,1502,4.463,1630,5.345,1896,2.952,1913,3.857,2159,3.679,2712,3.417,2824,3.012,3322,3.679,3518,6.192,3783,3.227,3851,6.042,3865,4.097,3991,6.192,4017,3.536,4045,3.679,4046,3.679,4050,3.679,4062,6.192,4128,9.058,4129,4.46,4130,4.46,4131,6.741,4132,4.46,4133,4.46,4134,4.46,4135,4.46,4136,4.46,4137,4.46,4138,6.741,4139,4.46,4140,4.46]],["component/113",[3,0.415,4,0.422]],["keyword/113",[62,2.797,76,3.522,646,8.617]],["title/114-1",[98,8.76,376,33.652]],["name/114-1",[]],["text/114-1",[]],["component/114-1",[]],["keyword/114-1",[]],["title/114-2",[98,8.76,181,33.356]],["name/114-2",[]],["text/114-2",[]],["component/114-2",[]],["keyword/114-2",[]],["title/114-3",[95,26.618,243,23.855]],["name/114-3",[]],["text/114-3",[]],["component/114-3",[]],["keyword/114-3",[]],["title/114",[98,7.441,181,28.333,376,28.584]],["name/114",[181,0.773,376,0.78,3065,1.373]],["text/114",[16,1.956,32,3.897,49,3.934,62,1.649,85,2.011,93,2.705,94,4.386,95,2.081,98,1.44,108,1.828,125,4.095,133,3.934,140,1.499,146,2.119,148,3.668,158,4.484,162,2.757,165,4.386,170,3.695,176,3.045,181,3.758,199,2.094,210,1.956,215,2.354,217,2.337,220,1.945,227,2.443,233,2.543,262,3.618,265,3.167,267,2.258,280,4.333,288,3.92,292,2.501,294,3.167,307,4.419,323,3.618,345,3.212,376,4.862,420,3.694,445,2.389,447,2.586,451,2.608,537,2.873,562,3.007,571,2.289,580,3.758,609,3.876,679,2.972,713,2.543,746,4.634,926,3.007,965,6.214,1193,3.42,1235,2.972,1395,3.259,1555,3.007,1711,4.562,2473,4.105,3357,4.634,3773,4.419,3901,4.921,4141,4.921,4142,4.921,4143,5.357]],["component/114",[3,0.415,4,0.422]],["keyword/114",[62,1.436,76,1.808,98,1.008,181,3.837,206,2.893,376,3.871,679,4.372]],["title/115-1",[243,28.996]],["name/115-1",[]],["text/115-1",[]],["component/115-1",[]],["keyword/115-1",[]],["title/115-2",[70,27.86]],["name/115-2",[]],["text/115-2",[]],["component/115-2",[]],["keyword/115-2",[]],["title/115-3",[154,33.141]],["name/115-3",[]],["text/115-3",[]],["component/115-3",[]],["keyword/115-3",[]],["title/115",[98,8.76,692,35.977]],["name/115",[98,0.203,692,0.834,970,1.31]],["text/115",[16,1.188,23,2.484,55,1.208,65,2.01,70,3.081,71,0.906,77,0.614,84,1.391,85,3.862,92,1.484,95,1.264,98,1.11,102,0.734,105,1.023,108,4.399,130,2.422,134,1.77,137,1.532,140,1.473,154,2.096,167,1.048,179,0.861,180,0.788,199,0.721,206,0.677,243,1.133,245,1.235,258,1.659,259,2.72,266,0.73,268,1.076,363,0.649,364,3.411,378,0.817,381,0.989,390,4.605,392,0.788,434,0.861,437,1.272,449,1.062,462,0.788,474,2.198,487,1.991,494,1.221,498,2.762,537,3.223,542,0.876,543,1.866,550,1.178,555,2.297,606,0.979,638,2.073,643,2.078,679,1.023,681,0.969,692,2.766,696,0.959,809,1.335,821,1.076,826,1.221,839,4.612,849,1.14,920,4.181,942,1.302,1000,1.571,1032,1.122,1058,1.246,1176,0.979,1424,0.914,1427,0.931,1720,1.522,1858,1.335,1859,1.414,1898,2.043,1934,1.414,2050,5.965,2518,2.198,3215,1.246,3359,3.811,3365,3.602,3699,2.355,3783,2.355,3923,5.198,3945,1.596,3947,1.596,3949,1.596,3961,1.596,3962,1.596,3963,1.596,4009,9.321,4012,1.695,4013,1.695,4015,2.99,4016,2.99,4017,4.176,4018,2.99,4026,1.522,4045,2.685,4046,2.685,4047,4.556,4050,5.911,4054,2.815,4063,3.777,4144,1.845,4145,4.367,4146,3.255,4147,3.255,4148,3.255,4149,3.255,4150,6.635,4151,3.255,4152,3.255,4153,3.255,4154,3.255,4155,8.023,4156,3.255,4157,3.255,4158,3.255,4159,3.255,4160,3.255,4161,3.255,4162,3.255,4163,3.255,4164,3.255,4165,3.255,4166,4.367,4167,4.367,4168,4.367,4169,1.845,4170,1.845,4171,1.845,4172,1.845,4173,1.845,4174,1.845,4175,1.845,4176,1.845,4177,1.845,4178,1.845,4179,1.845,4180,1.845,4181,1.845,4182,1.845,4183,1.845,4184,1.845,4185,1.845]],["component/115",[3,0.415,4,0.422]],["keyword/115",[62,1.898,76,2.39,98,1.332,679,5.778,692,5.469]],["title/116-1",[256,42.042]],["name/116-1",[]],["text/116-1",[]],["component/116-1",[]],["keyword/116-1",[]],["title/116-2",[140,19.165,179,31.989]],["name/116-2",[]],["text/116-2",[]],["component/116-2",[]],["keyword/116-2",[]],["title/116-3",[40,36.744,857,39.953]],["name/116-3",[]],["text/116-3",[]],["component/116-3",[]],["keyword/116-3",[]],["title/116-4",[70,27.86]],["name/116-4",[]],["text/116-4",[]],["component/116-4",[]],["keyword/116-4",[]],["title/116-5",[154,33.141]],["name/116-5",[]],["text/116-5",[]],["component/116-5",[]],["keyword/116-5",[]],["title/116-6",[685,31.735,686,33.652]],["name/116-6",[]],["text/116-6",[]],["component/116-6",[]],["keyword/116-6",[]],["title/116-7",[70,22.92,364,23.033]],["name/116-7",[]],["text/116-7",[]],["component/116-7",[]],["keyword/116-7",[]],["title/116-8",[98,8.76,462,29.273]],["name/116-8",[]],["text/116-8",[]],["component/116-8",[]],["keyword/116-8",[]],["title/116-9",[96,31.735,1176,36.354]],["name/116-9",[]],["text/116-9",[]],["component/116-9",[]],["keyword/116-9",[]],["title/116",[124,53.16]],["name/116",[124,1.013,2680,1.032,3207,1.12]],["text/116",[3,0.387,5,1.092,8,0.892,16,1.597,23,1.347,24,2.859,26,0.942,32,1.646,35,1.524,40,2.828,45,0.961,47,1.142,49,0.942,50,1.248,51,0.849,52,1.275,55,1.21,57,0.991,62,1.527,65,1.142,70,3,77,0.615,84,0.79,85,1.223,93,0.933,95,1.266,96,2.026,98,1.475,100,1.393,102,2.855,114,1.184,123,2.662,124,6.382,125,0.981,131,1.661,133,1.661,139,0.774,140,2.84,143,2.345,146,0.731,150,0.606,154,1.297,156,0.87,158,3.782,162,2.251,163,4.397,167,1.05,174,2.046,176,1.05,178,0.856,179,1.522,183,2.301,192,0.74,199,2.061,203,0.951,204,3.509,206,3.076,213,1.092,227,0.843,231,1.142,243,1.135,245,2.521,256,1.646,258,0.942,259,0.836,263,1.201,264,0.97,267,0.779,277,2.701,280,4.284,284,1.416,287,1.465,288,1.895,289,1.248,292,2.81,301,1.475,305,2.895,309,1.73,347,0.892,364,2.411,371,0.916,392,1.393,395,1.248,396,4.508,399,3.692,420,3.652,428,4.247,445,0.824,451,0.9,462,0.79,474,1.248,488,1.18,489,1.56,493,0.856,495,1.275,500,0.951,503,2.59,515,3.656,531,1.16,538,0.933,543,0.79,545,1.05,552,1.142,562,2.455,572,1.895,590,2.345,602,1.337,623,1.025,628,0.951,632,2.892,645,1.064,652,3.258,658,1.092,664,1.304,674,1.108,678,4.338,681,2.769,684,1.304,685,2.443,686,2.59,696,0.961,707,1.547,715,2.358,754,1.374,774,1.16,819,0.924,823,1.808,836,3.638,845,1.304,857,2.55,893,1.248,902,2.014,909,0.916,914,1.248,919,1.142,923,1.698,966,1.304,969,1.465,980,1.598,1010,1.18,1176,0.981,1333,1.698,1424,2.982,1439,1.416,1667,1.223,1916,4.041,2005,1.598,2109,1.524,2150,1.465,2166,1.524,2222,1.465,2229,1.598,2268,2.994,2269,5.205,2348,4.017,2371,1.524,2665,1.698,2712,1.416,3212,2.689,3215,3.561,3216,4.473,3250,1.524,3337,2.994,3615,2.423,4186,5.274,4187,1.848,4188,1.848,4189,1.848,4190,1.848,4191,1.848,4192,1.848,4193,1.848,4194,1.848,4195,1.848,4196,1.848]],["component/116",[3,0.415,4,0.422]],["keyword/116",[62,2.797,76,3.522,124,9.799]],["title/117-1",[243,28.996]],["name/117-1",[]],["text/117-1",[]],["component/117-1",[]],["keyword/117-1",[]],["title/117-2",[70,27.86]],["name/117-2",[]],["text/117-2",[]],["component/117-2",[]],["keyword/117-2",[]],["title/117-3",[154,33.141]],["name/117-3",[]],["text/117-3",[]],["component/117-3",[]],["keyword/117-3",[]],["title/117",[98,7.441,206,21.362,692,30.559]],["name/117",[98,0.203,692,0.834,2606,1.013]],["text/117",[16,0.542,18,3.175,23,2.799,55,1.36,57,0.796,62,0.27,65,2.263,70,3.213,71,0.729,76,0.34,77,0.494,84,1.145,85,3.806,90,1.555,92,1.671,95,1.041,98,1.077,102,0.59,108,4.384,120,2.916,124,2.338,130,2.473,134,1.485,139,2.424,140,1.62,148,0.602,154,1.786,156,0.698,167,0.843,179,0.693,180,0.634,182,1.047,199,0.58,206,0.545,243,0.933,245,1.017,258,0.756,259,0.671,266,1.06,288,0.643,293,0.843,363,0.522,364,3.368,378,0.657,381,0.796,390,3.975,392,1.145,434,2.095,437,1.432,444,0.877,445,0.662,449,0.854,453,0.854,462,0.634,475,0.693,478,1.073,487,1.671,494,0.982,497,3.659,498,3.749,509,0.652,515,0.647,530,1.606,537,3.632,539,1.655,542,0.704,543,1.917,580,0.722,606,0.787,638,3.214,643,2.338,678,0.698,692,2.724,757,0.917,809,1.073,821,0.865,839,5.019,849,0.917,920,4.618,942,1.047,963,1.073,1000,1.293,1058,1.002,1176,0.787,1354,3.29,1424,0.735,1427,0.749,1434,1.073,1858,1.073,1859,1.137,1862,2.317,1863,2.317,1864,2.317,1870,1.283,1898,1.682,3212,3.022,3215,1.809,3216,5.035,3359,4.189,3365,1.224,3402,3.753,3681,1.224,3698,2.461,3699,1.073,3703,5.189,3706,6.468,3708,3.558,3734,1.283,3763,2.124,3780,1.283,3794,1.363,3923,3.881,3925,1.363,3926,1.363,3927,1.363,3928,1.363,3929,1.363,3930,2.461,3931,2.461,3932,2.461,3942,1.363,3943,1.363,3944,3.365,3945,3.881,3946,3.365,3947,3.881,3948,3.365,3949,3.881,3961,2.317,3962,2.317,3963,1.283,3964,1.363,3965,1.363,3966,1.363,3973,2.461,3974,2.461,3975,2.461,4197,2.679,4198,1.484,4199,1.484,4200,1.484,4201,3.663,4202,4.487,4203,2.679,4204,1.484,4205,2.679,4206,7.179,4207,2.679,4208,2.679,4209,2.679,4210,1.484,4211,1.484,4212,1.484,4213,1.484,4214,2.679,4215,2.679,4216,1.484,4217,1.484,4218,1.484,4219,1.484,4220,1.484,4221,2.679,4222,2.679,4223,1.484,4224,1.484,4225,2.679,4226,1.484,4227,1.484,4228,1.484,4229,1.484,4230,4.487,4231,1.484,4232,1.484,4233,1.484]],["component/117",[3,0.415,4,0.422]],["keyword/117",[62,2.261,76,2.847,98,1.587,692,6.517]],["title/118-1",[98,7.441,208,35.95,454,30.559]],["name/118-1",[]],["text/118-1",[]],["component/118-1",[]],["keyword/118-1",[]],["title/118",[100,29.273,1304,36.744]],["name/118",[2680,1.44,3207,1.564]],["text/118",[8,3.323,11,3.913,32,3.476,46,3.733,55,2.555,62,1.884,76,1.58,77,2.292,94,3.913,95,2.675,96,3.189,98,1.543,100,3.925,114,2.5,125,3.653,133,4.682,143,3.692,156,3.241,196,3.164,208,4.253,218,3.913,220,2.5,259,3.116,269,3.775,280,3.865,294,4.07,343,3.653,348,5.118,454,3.615,509,3.025,610,5.459,830,3.963,1055,4.859,1304,6.163,1306,3.733,1370,4.015,1402,5.955,3977,7.946]],["component/118",[3,0.415,4,0.422]],["keyword/118",[62,2.261,76,2.847,608,6.387,1304,6.656]],["title/119-1",[480,37.13]],["name/119-1",[]],["text/119-1",[]],["component/119-1",[]],["keyword/119-1",[]],["title/119-2",[98,10.647]],["name/119-2",[]],["text/119-2",[]],["component/119-2",[]],["keyword/119-2",[]],["title/119",[98,5.718,150,14.675,180,19.109,608,23.018,1304,23.986]],["name/119",[98,0.203,150,0.521,2606,1.013]],["text/119",[8,1.484,16,2.691,18,1.685,24,1.667,46,2.726,55,1.141,71,1.51,79,3.209,85,3.275,93,1.552,95,1.953,98,1.339,102,1.223,108,4.009,114,1.116,128,3.935,130,1.122,133,3.251,139,3.086,140,1.406,144,1.471,148,2.586,150,3.022,152,5.084,160,1.631,179,1.435,180,1.313,192,3.254,196,2.311,210,1.835,216,1.929,227,2.293,264,1.614,267,2.119,268,1.792,295,3.171,336,3.35,368,1.899,376,1.51,388,1.769,392,1.313,437,3.599,445,2.242,451,1.496,454,1.614,460,3.361,462,2.148,479,2.972,496,2.823,508,2.406,515,4.192,542,2.386,544,2.366,553,1.769,554,1.537,571,1.313,572,1.332,578,1.484,580,1.496,582,3.209,594,2.12,608,2.587,623,1.705,638,1.459,655,2.535,696,1.598,777,5.606,839,3.283,897,3.852,909,1.523,937,1.899,939,1.523,940,2.535,943,1.929,1123,3.059,1176,1.631,1208,1.929,1304,2.696,1306,1.667,1326,2.658,1328,2.355,1348,2.823,1349,3.986,1354,1.747,1370,2.932,1392,2.169,1527,2.437,1896,4.879,2050,2.285,2150,2.437,2503,2.437,2552,2.535,2554,2.535,3219,4.348,3308,3.986,3309,3.986,3310,3.986,3311,3.986,3312,3.986,3460,2.535,3919,2.823,4234,2.823,4235,3.074,4236,3.074,4237,3.074,4238,3.074,4239,4.147,4240,4.618,4241,4.618,4242,4.618,4243,4.618,4244,4.618]],["component/119",[3,0.415,4,0.422]],["keyword/119",[62,1.898,76,2.39,98,1.332,608,5.36,1304,5.586]],["title/120-1",[376,40.904]],["name/120-1",[]],["text/120-1",[]],["component/120-1",[]],["keyword/120-1",[]],["title/120-2",[220,30.239]],["name/120-2",[]],["text/120-2",[]],["component/120-2",[]],["keyword/120-2",[]],["title/120",[98,6.467,220,18.366,376,24.843,1304,27.125]],["name/120",[220,0.576,376,0.78,2457,1.032]],["text/120",[16,2.141,45,1.936,51,2.696,57,1.997,85,2.723,96,2.717,98,1.416,108,4.294,114,2.635,125,4.368,128,2.506,130,2.141,133,3.698,140,1.641,145,1.673,148,3.337,150,1.222,156,1.753,160,1.976,196,1.711,220,3.454,292,1.739,371,1.846,376,4.672,420,2.807,437,2.836,445,2.615,451,1.813,506,1.685,509,1.636,528,3.019,542,2.784,554,1.863,561,1.782,566,2.172,571,1.591,572,1.613,578,2.831,606,1.976,608,3.019,628,1.917,635,2.143,638,1.767,777,2.569,799,2.201,853,2.338,909,2.907,937,2.3,943,3.682,965,5.167,1304,3.891,1306,3.18,1314,2.694,1322,2.3,1324,2.769,1325,5.56,1326,5.073,1327,6.276,1328,6.861,1329,3.072,1370,2.172,1434,2.694,1517,4.139,1527,2.953,1722,2.465,1896,3.883,2038,3.221,2824,2.515,3308,4.65,3309,4.65,3310,4.65,3311,4.65,3312,4.65,3460,3.072,4239,7.845,4245,3.421,4246,3.221,4247,3.421,4248,3.421]],["component/120",[3,0.415,4,0.422]],["keyword/120",[62,1.898,76,2.39,98,1.332,608,5.36,1304,5.586]],["title/121-1",[98,8.76,489,32.789]],["name/121-1",[]],["text/121-1",[]],["component/121-1",[]],["keyword/121-1",[]],["title/121-2",[98,8.76,926,38.461]],["name/121-2",[]],["text/121-2",[]],["component/121-2",[]],["keyword/121-2",[]],["title/121-3",[76,15.72,149,27.777]],["name/121-3",[]],["text/121-3",[]],["component/121-3",[]],["keyword/121-3",[]],["title/121",[62,9.216,98,6.467,181,24.625,1304,27.125]],["name/121",[181,1.079,2913,1.603]],["text/121",[62,1.031,71,1.748,76,1.298,77,1.185,98,1.521,108,3.855,111,3.747,114,3.18,128,3.985,130,3.197,135,2.323,136,1.85,139,1.49,140,0.995,145,1.598,148,1.443,149,1.443,150,2.633,154,2.251,156,1.675,181,2.754,192,1.425,196,2.6,206,2.077,210,2.065,215,2.486,217,1.552,243,1.239,263,2.312,292,1.661,295,1.531,301,1.61,336,1.868,360,2.103,364,1.196,399,1.831,437,3.645,445,2.522,447,1.717,451,1.732,460,3.212,462,3.009,466,1.689,476,2.198,477,1.813,489,4.68,498,1.635,506,2.56,507,3.034,528,2.912,542,1.689,554,1.78,561,3.37,563,1.61,572,1.541,585,2.403,678,2.663,926,4.505,927,2.048,943,2.233,944,2.726,946,2.645,947,2.821,948,2.726,950,2.726,953,2.726,955,2.645,956,2.726,957,2.574,958,2.574,959,3.078,965,4.421,1016,2.574,1053,2.233,1161,2.233,1166,3.078,1235,3.907,1304,3.777,1370,3.299,1427,2.856,1433,2.022,1438,2.935,1439,4.335,1467,2.403,3339,4.893,3514,3.078,4249,3.558,4250,5.197,4251,3.268,4252,3.268,4253,7.372,4254,8.025,4255,6.469]],["component/121",[3,0.415,4,0.422]],["keyword/121",[62,2.261,76,2.847,608,6.387,1304,6.656]],["title/122-1",[182,58.774]],["name/122-1",[]],["text/122-1",[]],["component/122-1",[]],["keyword/122-1",[]],["title/122-2",[98,7.441,208,35.95,454,30.559]],["name/122-2",[]],["text/122-2",[]],["component/122-2",[]],["keyword/122-2",[]],["title/122",[98,6.467,182,35.696,196,23.245,1370,29.494]],["name/122",[2680,1.44,3207,1.564]],["text/122",[3,1.153,8,2.654,18,3.015,32,2.776,62,1.002,70,1.84,76,2.106,77,2.618,79,3.51,85,2.064,95,2.136,98,1.552,100,3.36,114,1.997,125,2.918,133,4.008,137,2.588,140,1.538,143,2.949,144,3.764,145,2.47,152,5.425,156,2.588,158,2.725,167,3.125,196,3.614,205,2.858,206,2.887,259,2.489,266,3.111,277,3.397,280,3.087,294,3.251,333,3.793,363,1.935,392,3.36,515,3.431,550,3.51,562,4.415,563,3.559,608,4.047,645,5.766,677,3.64,696,2.858,722,4.756,830,3.165,839,2.83,939,3.898,1306,5.979,1370,4.586,1424,4.55,3977,6.802,4256,5.499]],["component/122",[3,0.415,4,0.422]],["keyword/122",[62,1.436,76,1.808,98,1.008,196,3.622,608,4.056,1306,4.273,1370,4.596]],["title/123-1",[480,37.13]],["name/123-1",[]],["text/123-1",[]],["component/123-1",[]],["keyword/123-1",[]],["title/123-2",[98,10.647]],["name/123-2",[]],["text/123-2",[]],["component/123-2",[]],["keyword/123-2",[]],["title/123",[98,7.441,150,19.095,180,24.865]],["name/123",[98,0.203,150,0.521,2606,1.013]],["text/123",[12,1.204,16,1.312,18,3.126,28,1.12,39,1.367,51,2.62,55,1.333,57,1.107,71,1.014,76,0.474,77,0.687,85,2.66,98,1.374,105,1.145,108,4.191,114,1.304,125,1.096,128,3.447,130,1.312,133,1.831,139,0.865,140,1.807,141,1.096,143,1.107,144,0.988,148,2.619,150,2.887,152,4.455,156,1.691,160,2.53,171,1.494,176,1.174,179,1.677,192,2.586,196,0.949,206,1.319,210,1.741,211,1.394,225,0.895,227,0.942,243,1.251,248,2.945,259,1.626,267,0.87,268,1.204,278,1.582,280,1.159,288,2.066,294,1.221,295,3.049,321,1.897,336,2.504,345,1.238,376,1.014,382,1.535,392,3.447,399,1.063,437,3.153,445,1.602,454,1.084,460,2.946,462,1.535,492,1.457,496,2.523,508,1.719,509,3.545,515,2.818,532,1.084,544,0.972,553,2.744,554,2.851,561,1.719,566,1.204,572,0.895,578,0.997,582,2.293,588,2.78,592,1.296,600,2.858,606,1.096,608,2.454,617,1.97,620,1.637,623,1.145,638,2.263,644,1.535,656,1.394,678,2.244,725,2.478,731,1.221,743,1.367,768,1.296,770,1.786,775,0.997,776,1.238,839,1.063,853,1.296,887,1.394,896,1.394,902,2.945,909,2.825,937,2.945,939,1.023,940,6.655,943,2.993,1005,1.494,1083,4.52,1123,2.901,1161,1.296,1176,1.096,1208,1.296,1263,1.703,1271,1.238,1306,4.13,1328,2.753,1349,1.637,1370,1.204,1374,1.637,1392,4.023,1458,1.582,1467,1.394,1527,1.637,1563,1.703,1711,1.221,1770,2.963,1822,1.897,1896,4.692,1927,1.457,2068,3.107,2159,1.703,2163,1.637,2552,2.963,3219,4.124,3308,2.848,3309,2.848,3310,2.848,3311,2.848,3312,2.848,4239,4.702,4240,3.3,4241,3.3,4242,3.3,4243,3.3,4244,3.3,4246,1.786,4251,1.897,4257,2.065,4258,2.065,4259,2.065,4260,3.3,4261,2.065,4262,2.065,4263,3.592,4264,3.3,4265,1.897,4266,2.065,4267,2.065,4268,2.065,4269,1.897,4270,2.065,4271,2.065,4272,2.065]],["component/123",[3,0.415,4,0.422]],["keyword/123",[62,1.155,76,1.454,98,1.485,150,2.08,196,2.913,608,3.263,1306,3.437,1370,3.697]],["title/124-1",[376,40.904]],["name/124-1",[]],["text/124-1",[]],["component/124-1",[]],["keyword/124-1",[]],["title/124-2",[220,30.239]],["name/124-2",[]],["text/124-2",[]],["component/124-2",[]],["keyword/124-2",[]],["title/124",[62,8.149,98,5.718,220,16.24,376,21.967,1306,24.25]],["name/124",[220,0.576,376,0.78,2457,1.032]],["text/124",[16,1.167,23,1.321,51,2.386,57,1.714,77,1.064,85,3.661,98,1.356,105,1.773,108,4.254,114,3.012,125,4.003,128,2.8,133,3.34,140,1.452,145,1.436,148,3.796,150,1.049,151,2.077,156,1.505,158,1.584,165,1.817,196,1.469,220,3.012,267,1.347,292,1.493,295,1.375,331,1.975,339,2.205,345,1.916,371,1.584,372,2.159,376,4.791,392,2.218,437,2.948,445,2.922,447,1.543,496,1.415,506,1.447,509,1.405,528,3.373,532,2.726,542,1.517,554,2.596,561,1.53,566,1.864,578,2.505,580,1.556,606,2.754,608,3.373,628,2.671,638,1.517,839,1.645,853,3.258,902,1.975,909,2.573,937,1.975,943,3.258,965,5.877,1005,2.313,1032,1.945,1271,1.916,1304,1.714,1306,4.498,1314,2.313,1322,1.975,1324,2.376,1325,5.022,1327,5.669,1328,6.357,1329,2.637,1370,1.864,1467,2.159,1517,3.663,1527,2.535,1537,2.313,1896,3.436,2163,2.535,2321,2.449,2532,2.313,2824,2.159,3308,4.116,3309,4.116,3310,4.116,3311,4.116,3312,4.116,3332,2.936,3460,2.637,4141,2.936,4142,2.936,4234,2.936,4239,7.331,4245,2.936,4246,2.765,4247,2.936,4248,2.936,4260,7.621,4273,5.191]],["component/124",[3,0.415,4,0.422]],["keyword/124",[62,1.155,76,1.454,98,0.81,196,2.913,220,2.302,376,3.114,608,3.263,1306,3.437,1370,3.697]],["title/125-1",[98,8.76,489,32.789]],["name/125-1",[]],["text/125-1",[]],["component/125-1",[]],["keyword/125-1",[]],["title/125-2",[98,8.76,926,38.461]],["name/125-2",[]],["text/125-2",[]],["component/125-2",[]],["keyword/125-2",[]],["title/125",[62,9.216,98,6.467,181,24.625,1306,27.424]],["name/125",[181,1.079,2913,1.603]],["text/125",[12,1.633,24,1.518,55,2.218,62,0.51,70,0.937,71,1.375,76,1.068,77,1.55,84,1.989,85,1.051,98,1.56,108,3.616,111,3.608,114,3.028,128,1.989,130,3.045,131,1.427,133,3.045,135,1.912,136,2.42,140,0.783,145,1.258,148,1.135,149,1.887,150,2.536,152,1.931,154,2.771,156,2.813,179,1.307,181,1.363,192,1.121,197,1.591,206,1.709,210,2.181,215,2.046,217,1.222,220,2.528,227,1.277,243,0.975,263,1.819,264,1.47,288,1.213,292,1.307,294,1.655,295,2.003,301,1.267,333,1.931,339,1.931,360,1.655,364,0.941,368,2.876,371,1.388,381,1.502,382,2.082,392,1.989,396,1.572,399,1.441,437,3.259,445,3.104,460,2.725,462,3.302,466,1.329,476,1.73,477,1.427,480,1.248,489,4.866,497,1.427,498,1.287,506,3.151,507,2.497,515,1.222,528,2.396,542,1.329,554,1.4,561,2.86,563,1.267,571,1.989,572,1.213,580,2.267,585,1.891,608,3.075,617,1.535,635,1.612,678,1.318,685,2.156,686,1.375,775,1.351,776,2.791,839,1.441,896,3.144,900,1.854,926,3.354,927,1.612,933,1.854,944,2.146,946,2.082,947,2.22,948,2.146,950,2.146,953,2.146,955,2.082,956,2.146,957,2.026,958,2.026,959,2.422,965,4.37,978,2.22,1016,2.026,1161,1.758,1235,3.315,1304,1.502,1306,3.775,1308,2.22,1433,1.591,1438,2.31,1439,2.146,1569,1.758,1704,1.854,1927,1.976,2503,2.22,3339,4.027,3514,2.422,4250,4.276,4252,2.572,4253,6.395,4255,5.489,4274,2.8,4275,2.8,4276,2.8,4277,6.962]],["component/125",[3,0.415,4,0.422]],["keyword/125",[62,1.28,76,1.612,98,0.898,181,3.421,196,3.229,608,3.616,1306,3.81,1370,4.098]],["title/126-1",[243,28.996]],["name/126-1",[]],["text/126-1",[]],["component/126-1",[]],["keyword/126-1",[]],["title/126-2",[70,27.86]],["name/126-2",[]],["text/126-2",[]],["component/126-2",[]],["keyword/126-2",[]],["title/126",[98,7.441,206,21.362,692,30.559]],["name/126",[98,0.203,692,0.834,3262,1.259]],["text/126",[16,2.229,18,4.643,23,2.524,51,3.447,55,2.784,57,2.103,65,3.772,70,2.509,71,1.926,76,0.9,84,2.609,85,2.815,92,2.785,95,2.372,98,1.409,105,2.175,108,4.355,120,2.548,130,2.738,140,1.708,148,1.59,167,2.228,199,1.532,206,1.439,243,1.365,245,1.488,258,3.112,259,1.774,266,2.415,268,2.286,288,1.699,292,1.831,345,2.351,363,1.379,364,2.053,381,2.103,392,1.675,437,1.532,449,4.317,453,2.257,462,1.675,475,1.831,509,2.683,537,2.103,561,1.876,566,2.286,600,2.351,606,3.24,638,1.861,678,1.846,692,4.446,752,3.234,830,2.257,849,2.422,902,4.633,920,2.15,937,3.772,942,2.767,1000,2.948,1058,2.648,1176,2.08,1306,3.311,1328,3.004,1349,3.109,1424,1.943,1427,1.979,1467,2.648,1720,3.234,1820,4.54,1858,2.837,1859,3.004,1896,6.948,1932,3.234,1934,3.004,2022,3.004,4264,3.602,4265,3.602,4269,3.602,4278,3.921,4279,6.107,4280,3.921,4281,3.921,4282,3.921,4283,3.921]],["component/126",[3,0.415,4,0.422]],["keyword/126",[62,1.155,76,1.454,98,1.485,196,2.913,608,3.263,692,3.329,1306,3.437,1370,3.697]]],"invertedIndex":[["",{"_index":108,"title":{"26-8":{},"26-9":{},"47-4":{}},"name":{},"text":{"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"45":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"56":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"71":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"82":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"117":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{"2":{}}}],["0",{"_index":1354,"title":{},"name":{},"text":{"21":{},"23":{},"27":{},"30":{},"31":{},"48":{},"64":{},"76":{},"77":{},"78":{},"95":{},"97":{},"98":{},"100":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{},"117":{},"119":{}},"component":{},"keyword":{}}],["0\",<br",{"_index":2012,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["0.0.0.0",{"_index":2260,"title":{},"name":{},"text":{"39":{},"65":{},"66":{}},"component":{},"keyword":{}}],["0.0.1",{"_index":1446,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["0.00",{"_index":3668,"title":{},"name":{},"text":{"97":{},"98":{},"99":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["0.002",{"_index":3779,"title":{},"name":{},"text":{"98":{},"104":{},"105":{}},"component":{},"keyword":{}}],["0.003",{"_index":3848,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["0.004",{"_index":3679,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["0.1.0",{"_index":947,"title":{},"name":{},"text":{"12":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["0.1.9",{"_index":1931,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["0.104",{"_index":2112,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["0.2.5",{"_index":1917,"title":{},"name":{},"text":{"29":{},"60":{}},"component":{},"keyword":{}}],["0.30.0",{"_index":3657,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["0.59",{"_index":4038,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["0.65.0",{"_index":3072,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["0.90.0",{"_index":2113,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["0.95",{"_index":4111,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["0/1",{"_index":1534,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["009805e4",{"_index":2561,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["01",{"_index":2680,"title":{},"name":{"50":{},"53":{},"57":{},"67":{},"72":{},"86":{},"92":{},"96":{},"106":{},"108":{},"116":{},"118":{},"122":{}},"text":{},"component":{},"keyword":{}}],["011e8ca7",{"_index":2567,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["014fbff9a07c",{"_index":3235,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["01ba28116afb",{"_index":3665,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["02",{"_index":2606,"title":{},"name":{"51":{},"58":{},"68":{},"73":{},"77":{},"87":{},"93":{},"97":{},"107":{},"109":{},"117":{},"119":{},"123":{}},"text":{"48":{}},"component":{},"keyword":{}}],["02c28ab7",{"_index":2572,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["03",{"_index":2457,"title":{},"name":{"52":{},"59":{},"69":{},"74":{},"78":{},"88":{},"94":{},"98":{},"110":{},"120":{},"124":{}},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["04",{"_index":2913,"title":{},"name":{"75":{},"89":{},"95":{},"99":{},"111":{},"121":{},"125":{}},"text":{"60":{}},"component":{},"keyword":{}}],["04937b2b",{"_index":2578,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["04dc7a5e",{"_index":4240,"title":{},"name":{},"text":{"119":{},"123":{}},"component":{},"keyword":{}}],["05",{"_index":3262,"title":{},"name":{"76":{},"90":{},"100":{},"112":{},"126":{}},"text":{},"component":{},"keyword":{}}],["05t13:48:00.432722149z",{"_index":3469,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["05t13:48:00.469118621z",{"_index":3475,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["05t13:48:01.653480931z",{"_index":3477,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["05t13:48:01.671482413z",{"_index":3455,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["06",{"_index":1974,"title":{},"name":{"91":{},"101":{},"113":{}},"text":{"30":{},"63":{},"64":{},"88":{}},"component":{},"keyword":{}}],["07",{"_index":3065,"title":{},"name":{"102":{},"114":{}},"text":{"63":{}},"component":{},"keyword":{}}],["07t11:54:27z",{"_index":2914,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["08",{"_index":970,"title":{},"name":{"103":{},"115":{}},"text":{"12":{},"52":{}},"component":{},"keyword":{}}],["08t19:14:05z\",\"meta\":{\"snapshot.json\":{\"length\":1655,\"hashes\":{\"sha256\":\"36cf063d0717f6dc03e23027721adcd69b684d293956d3a1a7db7b0848f711d7\",\"sha512\":\"f90946d0a2dc58dae4505cfb91517a40299adf9e8719f52af187e2025aad69fcdeaeded271ec25db24869841c16fbe24f3fc56f56af8fdbb8808dccec4636b64\"},\"version\":15",{"_index":2873,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["09",{"_index":3903,"title":{},"name":{"104":{}},"text":{},"component":{},"keyword":{}}],["0x1",{"_index":4141,"title":{},"name":{},"text":{"114":{},"124":{}},"component":{},"keyword":{}}],["1",{"_index":578,"title":{"21-3":{},"41-2":{},"41-59":{}},"name":{},"text":{"7":{},"9":{},"12":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"31":{},"36":{},"38":{},"40":{},"42":{},"43":{},"48":{},"49":{},"57":{},"58":{},"60":{},"77":{},"88":{},"89":{},"93":{},"94":{},"99":{},"100":{},"104":{},"105":{},"111":{},"112":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["1\"<br",{"_index":2013,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["1.0.0(1.0.0",{"_index":2387,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.0.1",{"_index":2389,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.0.1(1.0.1",{"_index":2388,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.0.19",{"_index":2821,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["1.0.2",{"_index":2391,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.0.2(1.0.2",{"_index":2390,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.0",{"_index":2393,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.0(1.1.0",{"_index":2392,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.1",{"_index":2395,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.10",{"_index":2380,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.2",{"_index":2396,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.2(1.1.2",{"_index":2394,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.nn",{"_index":2381,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.1.x",{"_index":2377,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.10.0",{"_index":3265,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["1.13.0",{"_index":1189,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["1.14.0",{"_index":1954,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["1.15",{"_index":1624,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["1.15.1",{"_index":3070,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["1.2.0",{"_index":2383,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.2.1",{"_index":2400,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.2.1(1.2.1",{"_index":2399,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.21",{"_index":4194,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["1.21.0",{"_index":546,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["1.23",{"_index":2476,"title":{},"name":{},"text":{"44":{},"61":{}},"component":{},"keyword":{}}],["1.23.0",{"_index":3190,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["1.25",{"_index":1496,"title":{},"name":{},"text":{"23":{},"26":{},"112":{}},"component":{},"keyword":{}}],["1.28",{"_index":1503,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["1.3.0",{"_index":2384,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.3.1",{"_index":2681,"title":{},"name":{},"text":{"50":{}},"component":{},"keyword":{}}],["1.30",{"_index":3517,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["1.4.0",{"_index":2385,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.49",{"_index":2120,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["1.5",{"_index":3781,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["1.5.0",{"_index":2382,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["1.7.0",{"_index":980,"title":{},"name":{},"text":{"12":{},"46":{},"116":{}},"component":{},"keyword":{}}],["1.9",{"_index":3264,"title":{},"name":{},"text":{"76":{},"106":{}},"component":{},"keyword":{}}],["1.9.0",{"_index":2215,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["1.der",{"_index":2315,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["1.pem",{"_index":2300,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["10",{"_index":1280,"title":{"41-30":{}},"name":{"63":{},"105":{}},"text":{"19":{},"23":{},"31":{},"38":{},"48":{},"53":{},"65":{},"66":{},"68":{},"70":{}},"component":{},"keyword":{}}],["10,000",{"_index":1257,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["100",{"_index":1649,"title":{},"name":{},"text":{"26":{},"34":{}},"component":{},"keyword":{}}],["1000",{"_index":1023,"title":{},"name":{},"text":{"13":{},"19":{},"23":{},"27":{}},"component":{},"keyword":{}}],["10000",{"_index":1760,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["1000000",{"_index":1661,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["1000—​2000",{"_index":1549,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["10279",{"_index":2899,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["1048",{"_index":3422,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["11",{"_index":2330,"title":{"41-33":{}},"name":{},"text":{"63":{},"65":{}},"component":{},"keyword":{}}],["11e8",{"_index":3223,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["12",{"_index":2332,"title":{"41-37":{}},"name":{},"text":{"52":{},"100":{}},"component":{},"keyword":{}}],["12,000",{"_index":1260,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["123",{"_index":3643,"title":{},"name":{},"text":{"97":{},"99":{}},"component":{},"keyword":{}}],["127.0.0.1",{"_index":3489,"title":{},"name":{},"text":{"89":{}},"component":{},"keyword":{}}],["1299d386",{"_index":3308,"title":{},"name":{},"text":{"78":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["13",{"_index":2334,"title":{"41-40":{}},"name":{},"text":{},"component":{},"keyword":{}}],["13,000",{"_index":1259,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["1317",{"_index":2915,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["14",{"_index":2337,"title":{"41-44":{}},"name":{},"text":{},"component":{},"keyword":{}}],["15",{"_index":1266,"title":{"41-47":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["15.3",{"_index":3044,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["1592",{"_index":3445,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["15h",{"_index":2603,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["16",{"_index":2339,"title":{"41-50":{}},"name":{},"text":{},"component":{},"keyword":{}}],["16686",{"_index":3099,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["16:32:43.647601",{"_index":1587,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["16:32:43.662550",{"_index":1590,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["17",{"_index":2340,"title":{"41-52":{}},"name":{},"text":{"63":{},"65":{}},"component":{},"keyword":{}}],["1709294251",{"_index":2630,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["1775",{"_index":3431,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["18",{"_index":2342,"title":{"41-55":{}},"name":{},"text":{},"component":{},"keyword":{}}],["1819248",{"_index":2825,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["188411978",{"_index":3436,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["18:29:40.251332",{"_index":1101,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["18:55:54",{"_index":2719,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["192.168.42.0/24",{"_index":3189,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["1949f69f9cfc",{"_index":3312,"title":{},"name":{},"text":{"78":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["19f7a",{"_index":1847,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["1b83fd6330cb",{"_index":2618,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["1fee",{"_index":2901,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["1gi",{"_index":1708,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["1h",{"_index":1768,"title":{},"name":{},"text":{"27":{},"48":{}},"component":{},"keyword":{}}],["1{{\"polici",{"_index":796,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["2",{"_index":470,"title":{"21-4":{},"41-5":{}},"name":{},"text":{"7":{},"9":{},"15":{},"21":{},"26":{},"29":{},"31":{},"33":{},"38":{},"39":{},"40":{},"43":{},"48":{},"49":{},"51":{},"57":{},"60":{},"62":{},"77":{},"78":{},"88":{},"93":{},"94":{},"99":{},"104":{},"111":{},"112":{}},"component":{},"keyword":{}}],["2.0",{"_index":958,"title":{},"name":{},"text":{"12":{},"21":{},"29":{},"60":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["2.49.0",{"_index":3080,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["2.5",{"_index":1279,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["2.57.0",{"_index":2121,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["2.7.0",{"_index":2207,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["2.8.0",{"_index":1205,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["2.der",{"_index":2301,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["2/2",{"_index":1338,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["20",{"_index":1249,"title":{},"name":{"64":{}},"text":{"19":{},"99":{}},"component":{},"keyword":{}}],["20.10.8",{"_index":3050,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["2000",{"_index":1025,"title":{},"name":{},"text":{"13":{},"23":{}},"component":{},"keyword":{}}],["2022",{"_index":1522,"title":{},"name":{},"text":{"23":{},"43":{},"60":{},"63":{},"64":{}},"component":{},"keyword":{}}],["2023",{"_index":969,"title":{},"name":{},"text":{"12":{},"49":{},"65":{},"96":{},"116":{}},"component":{},"keyword":{}}],["2024",{"_index":1372,"title":{},"name":{},"text":{"21":{},"30":{},"48":{},"63":{},"88":{}},"component":{},"keyword":{}}],["2025",{"_index":2718,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["20a3d00",{"_index":2633,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["21",{"_index":3064,"title":{},"name":{},"text":{"63":{},"64":{}},"component":{},"keyword":{}}],["21.86",{"_index":1925,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["22",{"_index":1264,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["22357278",{"_index":3451,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["2396437",{"_index":2638,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["2403034",{"_index":2632,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["24670dd6a538fd72",{"_index":4093,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["24ab7ca26e01",{"_index":3660,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["24t12:06:27.986401z",{"_index":971,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["24t12:06:27.986449z",{"_index":975,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["24t16:00:16.516062z",{"_index":1975,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["256",{"_index":1923,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["258",{"_index":2851,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["261c9492",{"_index":2585,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["2684810",{"_index":2621,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["2685996",{"_index":2613,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["28t14:44:37z",{"_index":2631,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["28t19:09:56z",{"_index":1523,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["28t19:22:04z",{"_index":1560,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["29t06:55:37z",{"_index":2607,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["29t14:49:31.878180z",{"_index":2890,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["29t17:34:37.847169z",{"_index":2458,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["29t18:07:39.062292z",{"_index":2462,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["29t18:27:20z",{"_index":2898,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["2c9337a43e64",{"_index":4244,"title":{},"name":{},"text":{"119":{},"123":{}},"component":{},"keyword":{}}],["2fd34",{"_index":1840,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["2m96l",{"_index":1526,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["2{{\"polici",{"_index":797,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["3",{"_index":799,"title":{"21-7":{},"41-8":{}},"name":{},"text":{"9":{},"15":{},"26":{},"31":{},"38":{},"40":{},"42":{},"45":{},"48":{},"49":{},"93":{},"97":{},"99":{},"104":{},"111":{},"112":{},"120":{}},"component":{},"keyword":{}}],["3.45",{"_index":4092,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["3.8.0",{"_index":2522,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["30",{"_index":1683,"title":{},"name":{"65":{}},"text":{"26":{},"31":{},"38":{},"53":{}},"component":{},"keyword":{}}],["300",{"_index":1268,"title":{},"name":{},"text":{"19":{},"99":{}},"component":{},"keyword":{}}],["3000",{"_index":1026,"title":{},"name":{},"text":{"13":{},"28":{},"39":{},"77":{}},"component":{},"keyword":{}}],["3000/tcp",{"_index":3458,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["3000:3000",{"_index":1876,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["317d40f3f052",{"_index":2637,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["3339",{"_index":3500,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["338b",{"_index":2598,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["340fe",{"_index":1844,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["34d7c",{"_index":1836,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["34d8e",{"_index":1828,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["35ca342f",{"_index":2591,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["3650",{"_index":2982,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["37",{"_index":2644,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["37415",{"_index":3453,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["3a8f8a88",{"_index":2597,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["3b08e",{"_index":1831,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["3d23",{"_index":1544,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["3m7",{"_index":3091,"title":{},"name":{},"text":{"64":{},"65":{}},"component":{},"keyword":{}}],["3ptcgfxyyvijorz9wx08bsndkhdwffobu+pztbxx78an43yw9/fhto93o4ib5jcc",{"_index":2857,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["3rd",{"_index":994,"title":{"13-4":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3{{\"polici",{"_index":798,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["4",{"_index":1271,"title":{"21-8":{},"41-11":{}},"name":{},"text":{"19":{},"25":{},"33":{},"48":{},"49":{},"51":{},"68":{},"75":{},"93":{},"99":{},"104":{},"109":{},"111":{},"112":{},"123":{},"124":{}},"component":{},"keyword":{}}],["4,000",{"_index":1256,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["4.1.0",{"_index":1196,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["40",{"_index":3122,"title":{},"name":{"66":{}},"text":{},"component":{},"keyword":{}}],["400",{"_index":1120,"title":{},"name":{},"text":{"14":{},"19":{},"24":{},"25":{}},"component":{},"keyword":{}}],["4000",{"_index":1027,"title":{},"name":{},"text":{"13":{},"23":{}},"component":{},"keyword":{}}],["4000—​5000",{"_index":1550,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["4032",{"_index":3310,"title":{},"name":{},"text":{"78":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["408e",{"_index":2624,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["40d5",{"_index":2568,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["41314",{"_index":1838,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["4162",{"_index":2593,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["42010a800002",{"_index":3225,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["422",{"_index":3449,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["428",{"_index":3447,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["4330",{"_index":1102,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["43d0",{"_index":1545,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["443",{"_index":1737,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["451fac2e52226302ff449bfe053b3831fd93409b4dad24581b6121cc24daa2c2.json",{"_index":2521,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["455f278bf9bf",{"_index":2626,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["45b0",{"_index":1944,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["45de",{"_index":2902,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["46780d6e",{"_index":2639,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["47",{"_index":1536,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["4733",{"_index":2616,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["47a2",{"_index":2574,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["47d5",{"_index":2580,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["48424",{"_index":1588,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["4905",{"_index":2599,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["49f8",{"_index":1938,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["4a09",{"_index":2587,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["4b4b",{"_index":2918,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["4b70",{"_index":2563,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["4d65",{"_index":2641,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["4e34",{"_index":4242,"title":{},"name":{},"text":{"119":{},"123":{}},"component":{},"keyword":{}}],["4e76",{"_index":2569,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["4f21",{"_index":2635,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["4f4fb700ef54",{"_index":3663,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["5",{"_index":1722,"title":{"41-15":{}},"name":{},"text":{"26":{},"42":{},"48":{},"49":{},"93":{},"99":{},"104":{},"110":{},"111":{},"112":{},"120":{}},"component":{},"keyword":{}}],["50",{"_index":1656,"title":{},"name":{},"text":{"26":{},"34":{}},"component":{},"keyword":{}}],["5000",{"_index":1553,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["500m",{"_index":1277,"title":{},"name":{},"text":{"19":{},"26":{}},"component":{},"keyword":{}}],["50380d0859d2",{"_index":3662,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["51.5.3",{"_index":3107,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{},"keyword":{}}],["52337",{"_index":1848,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["525b",{"_index":3309,"title":{},"name":{},"text":{"78":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["566",{"_index":3425,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["57033795",{"_index":3434,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["57d8568bbb",{"_index":1532,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["59e34f482b40",{"_index":1924,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["5f98b4db8c",{"_index":1525,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["5figur",{"_index":2406,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["6",{"_index":2321,"title":{"41-18":{}},"name":{},"text":{"42":{},"48":{},"49":{},"93":{},"124":{}},"component":{},"keyword":{}}],["60",{"_index":882,"title":{},"name":{},"text":{"10":{},"17":{},"87":{}},"component":{},"keyword":{}}],["634b88b0dcb6e707",{"_index":4113,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["6393",{"_index":3222,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["64",{"_index":2047,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["65533:65533",{"_index":3456,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["65535",{"_index":1741,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["685b",{"_index":2592,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["6e16",{"_index":2562,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["6e78f887a53f",{"_index":1547,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["6f11b",{"_index":1851,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["6f820e24f895",{"_index":2571,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["7",{"_index":2323,"title":{"41-21":{}},"name":{},"text":{"42":{},"49":{},"93":{}},"component":{},"keyword":{}}],["7000",{"_index":1559,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["70078992",{"_index":3438,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["700c816f685a",{"_index":2920,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["705ab4f5",{"_index":3221,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["74dec846",{"_index":2916,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["75.17.1",{"_index":2118,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["7f84c5961fde\",\"allowed\":true,\"status\":{\"messag",{"_index":1940,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["7fcd",{"_index":2917,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["8",{"_index":2325,"title":{"41-24":{}},"name":{},"text":{"86":{},"87":{},"90":{},"93":{},"100":{},"104":{}},"component":{},"keyword":{}}],["8,000",{"_index":1261,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["80",{"_index":1516,"title":{},"name":{},"text":{"23":{},"27":{},"64":{},"77":{},"94":{},"95":{}},"component":{},"keyword":{}}],["8080",{"_index":1814,"title":{},"name":{},"text":{"27":{},"65":{},"66":{},"68":{}},"component":{},"keyword":{}}],["8080:80",{"_index":3114,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["8081",{"_index":2282,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["8082:8080",{"_index":1229,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["80c9",{"_index":2564,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["8120",{"_index":2617,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["8184",{"_index":2919,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["826dd4ef",{"_index":2622,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["82bf2",{"_index":1824,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["8572",{"_index":2642,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["878b0",{"_index":1830,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["8aa9",{"_index":2588,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["8c89",{"_index":2570,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["8d65",{"_index":4243,"title":{},"name":{},"text":{"119":{},"123":{}},"component":{},"keyword":{}}],["8d7a52a61749",{"_index":2595,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["8ee6af8c",{"_index":1942,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["8mvkc_mi",{"_index":1542,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["9",{"_index":2327,"title":{"41-27":{}},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["9090",{"_index":3112,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{},"keyword":{}}],["909d",{"_index":2581,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["92f5",{"_index":2903,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["94",{"_index":3620,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["9482",{"_index":2625,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["94e9",{"_index":1546,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["98ae",{"_index":3311,"title":{},"name":{},"text":{"78":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["9a86",{"_index":1945,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["9aaefb8797c4",{"_index":3659,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["9bd73b8cead4",{"_index":2904,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["9cc2",{"_index":2575,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["9db5",{"_index":2623,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["9s",{"_index":579,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["_",{"_index":3748,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["a25a2",{"_index":1826,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["a342",{"_index":2594,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["a6af01380aa7",{"_index":2643,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["a789",{"_index":1937,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["a887",{"_index":2636,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["aarch64.zip",{"_index":1481,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["abbrevi",{"_index":194,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["abil",{"_index":1857,"title":{},"name":{},"text":{"28":{},"29":{},"31":{},"82":{},"96":{},"112":{}},"component":{},"keyword":{}}],["abov",{"_index":1206,"title":{},"name":{},"text":{"16":{},"34":{},"60":{},"92":{},"99":{}},"component":{},"keyword":{}}],["absolut",{"_index":2079,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["abstract",{"_index":2676,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["abus",{"_index":912,"title":{"41-30":{}},"name":{},"text":{"11":{},"13":{},"34":{}},"component":{},"keyword":{}}],["accdescr",{"_index":786,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{},"keyword":{}}],["accept",{"_index":638,"title":{},"name":{},"text":{"8":{},"11":{},"12":{},"14":{},"21":{},"25":{},"26":{},"28":{},"31":{},"35":{},"36":{},"38":{},"39":{},"41":{},"43":{},"57":{},"71":{},"73":{},"74":{},"75":{},"77":{},"78":{},"81":{},"90":{},"93":{},"97":{},"99":{},"100":{},"104":{},"105":{},"109":{},"111":{},"112":{},"115":{},"117":{},"119":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["accept_deploy_request.json",{"_index":1422,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["accept_pod_with_valid_nam",{"_index":4074,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["accept_request",{"_index":4097,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["accept_request_with_non_pod_resourc",{"_index":4087,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["accept_settings_with_a_list_of_invalid_nam",{"_index":4025,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["accepted\".to_str",{"_index":4170,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["acceptrequest",{"_index":4222,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["acceptset",{"_index":4209,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["access",{"_index":415,"title":{"41-15":{},"41-18":{},"41-52":{},"65-3":{},"65-4":{},"82-2":{}},"name":{},"text":{"7":{},"11":{},"14":{},"27":{},"28":{},"29":{},"31":{},"34":{},"41":{},"46":{},"49":{},"51":{},"52":{},"53":{},"56":{},"58":{},"64":{},"65":{},"66":{},"67":{},"71":{},"76":{},"82":{},"86":{},"91":{},"92":{},"99":{},"104":{}},"component":{},"keyword":{}}],["accomplish",{"_index":1184,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["accord",{"_index":766,"title":{},"name":{},"text":{"9":{},"13":{},"38":{}},"component":{},"keyword":{}}],["accordingli",{"_index":3369,"title":{},"name":{},"text":{"86":{}},"component":{},"keyword":{}}],["account",{"_index":900,"title":{},"name":{},"text":{"11":{},"28":{},"31":{},"44":{},"46":{},"53":{},"56":{},"61":{},"76":{},"92":{},"106":{},"125":{}},"component":{},"keyword":{}}],["acctitl",{"_index":785,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{},"keyword":{}}],["accur",{"_index":3347,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["achiev",{"_index":666,"title":{},"name":{},"text":{"8":{},"24":{},"26":{},"27":{},"58":{},"94":{},"95":{}},"component":{},"keyword":{}}],["acknowledg",{"_index":3171,"title":{},"name":{},"text":{"68":{}},"component":{},"keyword":{}}],["act",{"_index":2785,"title":{},"name":{},"text":{"56":{},"102":{}},"component":{},"keyword":{}}],["action",{"_index":537,"title":{"102":{},"9-15":{},"43-8":{},"60-12":{}},"name":{},"text":{"7":{},"20":{},"23":{},"28":{},"36":{},"43":{},"44":{},"60":{},"68":{},"71":{},"77":{},"84":{},"85":{},"95":{},"96":{},"100":{},"102":{},"103":{},"105":{},"114":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["action@v1",{"_index":2829,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["activ",{"_index":223,"title":{},"name":{},"text":{"4":{},"7":{},"9":{},"23":{},"25":{},"31":{},"53":{},"56":{},"60":{},"64":{}},"component":{},"keyword":{}}],["actual",{"_index":2314,"title":{},"name":{},"text":{"40":{},"44":{},"90":{},"98":{},"100":{},"102":{},"111":{}},"component":{},"keyword":{}}],["actuat",{"_index":3246,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["ad",{"_index":936,"title":{},"name":{},"text":{"12":{},"13":{},"16":{},"27":{},"31":{},"35":{},"42":{},"43":{},"49":{},"60":{},"65":{},"67":{},"70":{},"85":{},"92":{},"98":{},"100":{},"104":{},"113":{}},"component":{},"keyword":{}}],["adapt",{"_index":1305,"title":{"21-5":{}},"name":{},"text":{"21":{},"52":{},"82":{},"102":{}},"component":{},"keyword":{}}],["add",{"_index":432,"title":{"110-3":{}},"name":{},"text":{"7":{},"8":{},"15":{},"21":{},"27":{},"28":{},"29":{},"34":{},"37":{},"38":{},"44":{},"49":{},"51":{},"61":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"75":{},"81":{},"88":{},"95":{},"98":{},"99":{},"101":{},"108":{},"112":{}},"component":{},"keyword":{}}],["add/chang",{"_index":3305,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["addext",{"_index":2990,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["addit",{"_index":1054,"title":{"67-6":{}},"name":{},"text":{"14":{},"27":{},"35":{},"71":{},"92":{}},"component":{},"keyword":{}}],["addition",{"_index":2741,"title":{},"name":{},"text":{"52":{},"107":{}},"component":{},"keyword":{}}],["additionalservicemonitor",{"_index":3104,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{},"keyword":{}}],["addon",{"_index":3055,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["addr",{"_index":2258,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["address",{"_index":86,"title":{},"name":{},"text":{"1":{},"20":{},"38":{},"39":{},"52":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"89":{}},"component":{},"keyword":{}}],["adher",{"_index":779,"title":{},"name":{},"text":{"9":{},"17":{},"21":{},"46":{}},"component":{},"keyword":{}}],["adjust",{"_index":1217,"title":{},"name":{},"text":{"17":{},"21":{},"33":{},"70":{},"102":{}},"component":{},"keyword":{}}],["admin",{"_index":1820,"title":{"41-18":{}},"name":{},"text":{"27":{},"29":{},"41":{},"65":{},"74":{},"126":{}},"component":{},"keyword":{}}],["administr",{"_index":270,"title":{},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"11":{},"13":{},"17":{},"27":{},"29":{},"35":{},"41":{},"46":{},"49":{},"79":{}},"component":{},"keyword":{"11":{}}}],["administrator’",{"_index":393,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["admiss",{"_index":3,"title":{"4":{},"8":{},"9":{},"23":{},"54":{},"4-1":{},"4-4":{},"6-1":{},"8-4":{},"9-6":{},"9-9":{},"9-10":{},"9-16":{},"34-41":{},"38-6":{},"41-33":{},"41-52":{},"41-55":{},"41-59":{},"61-2":{},"61-6":{},"64-2":{},"65-2":{},"65-5":{},"66-5":{},"67-1":{},"67-2":{}},"name":{"23":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"13":{},"14":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"34":{},"38":{},"39":{},"41":{},"45":{},"46":{},"47":{},"54":{},"55":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"74":{},"76":{},"77":{},"78":{},"81":{},"93":{},"94":{},"95":{},"106":{},"111":{},"116":{},"122":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{}},"keyword":{"4":{},"5":{},"7":{},"23":{},"41":{}}}],["admission.deni",{"_index":4266,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["admission.k8s.gatekeeper.sh",{"_index":1347,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["admission.k8s.io/v1",{"_index":3219,"title":{},"name":{},"text":{"74":{},"119":{},"123":{}},"component":{},"keyword":{}}],["admission.yaml",{"_index":3201,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["admission\\nrequest",{"_index":808,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["admissionconfigur",{"_index":3003,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["admissionpolici",{"_index":109,"title":{"3-2":{},"7-5":{},"31-3":{},"31-32":{}},"name":{},"text":{"3":{},"7":{},"8":{},"9":{},"11":{},"14":{},"19":{},"24":{},"31":{},"34":{},"36":{},"38":{},"47":{},"48":{},"49":{},"53":{},"60":{}},"component":{},"keyword":{"7":{},"11":{},"13":{},"20":{},"24":{},"29":{}}}],["admissionpolicygroup",{"_index":407,"title":{"31-4":{}},"name":{},"text":{"7":{},"8":{},"14":{},"24":{},"25":{},"31":{}},"component":{},"keyword":{"14":{},"25":{}}}],["admissionpolicygrouplist",{"_index":1981,"title":{"31-5":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["admissionpolicygroupspec",{"_index":1982,"title":{"31-6":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["admissionpolicylist",{"_index":1983,"title":{"31-7":{},"31-33":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["admissionpolicyspec",{"_index":1984,"title":{"31-8":{},"31-34":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["admissionregistration.k8s.io",{"_index":1202,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["admissionregistration.k8s.io/v1",{"_index":1956,"title":{},"name":{},"text":{"30":{},"93":{}},"component":{},"keyword":{}}],["admissionrequest",{"_index":897,"title":{},"name":{},"text":{"11":{},"21":{},"34":{},"74":{},"119":{}},"component":{},"keyword":{"11":{}}}],["admissionrespons",{"_index":1095,"title":{},"name":{},"text":{"14":{},"31":{}},"component":{},"keyword":{}}],["admissionreview",{"_index":152,"title":{"78-2":{}},"name":{},"text":{"3":{},"9":{},"39":{},"74":{},"78":{},"119":{},"122":{},"123":{},"125":{}},"component":{},"keyword":{}}],["admissionreview.request",{"_index":3217,"title":{},"name":{},"text":{"74":{},"75":{}},"component":{},"keyword":{}}],["admissionwebhookmatchcondit",{"_index":2054,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["admit",{"_index":2182,"title":{},"name":{},"text":{"34":{},"71":{},"74":{}},"component":{},"keyword":{}}],["adopt",{"_index":2665,"title":{},"name":{},"text":{"49":{},"116":{}},"component":{},"keyword":{}}],["adpat",{"_index":3166,"title":{},"name":{},"text":{"68":{}},"component":{},"keyword":{}}],["advanc",{"_index":3185,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["advantag",{"_index":3740,"title":{},"name":{},"text":{"98":{},"106":{}},"component":{},"keyword":{}}],["advers",{"_index":859,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["advis",{"_index":4195,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["aeiwdgydvr0paqh/baqdageambmga1udjqqmmaogccsgaqufbwmdmawga1udeweb",{"_index":2858,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["affect",{"_index":42,"title":{},"name":{},"text":{"1":{},"9":{},"21":{},"38":{},"49":{},"76":{},"85":{},"93":{}},"component":{},"keyword":{}}],["affin",{"_index":1614,"title":{"26-1":{},"26-3":{},"26-8":{},"26-9":{}},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{"26":{},"59":{}}}],["affinity/anti",{"_index":1613,"title":{"26-1":{},"26-3":{}},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["ag",{"_index":576,"title":{},"name":{},"text":{"7":{},"23":{},"48":{},"64":{},"65":{}},"component":{},"keyword":{}}],["again",{"_index":1180,"title":{},"name":{},"text":{"16":{},"28":{},"60":{},"64":{},"99":{},"111":{},"112":{}},"component":{},"keyword":{}}],["against",{"_index":157,"title":{},"name":{},"text":{"3":{},"7":{},"13":{},"26":{},"28":{},"29":{},"31":{},"33":{},"39":{},"41":{},"43":{},"49":{},"51":{},"60":{},"66":{},"71":{},"76":{},"77":{},"88":{},"90":{},"94":{},"100":{}},"component":{},"keyword":{}}],["agent",{"_index":1370,"title":{"122":{},"76-12":{},"106-2":{}},"name":{},"text":{"21":{},"49":{},"63":{},"106":{},"107":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{}},"component":{},"keyword":{"122":{},"123":{},"124":{},"125":{},"126":{}}}],["aggreg",{"_index":2465,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["aggress",{"_index":1729,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["ahead",{"_index":3514,"title":{},"name":{},"text":{"92":{},"121":{},"125":{}},"component":{},"keyword":{}}],["aid",{"_index":2367,"title":{},"name":{},"text":{"41":{},"45":{}},"component":{},"keyword":{}}],["aim",{"_index":184,"title":{},"name":{},"text":{"4":{},"41":{}},"component":{},"keyword":{}}],["air",{"_index":2370,"title":{"50":{},"51":{},"52":{},"67-7":{}},"name":{},"text":{"41":{},"51":{},"52":{},"67":{},"68":{}},"component":{},"keyword":{"50":{},"51":{},"52":{}}}],["airgap",{"_index":2104,"title":{},"name":{},"text":{},"component":{},"keyword":{"32":{}}}],["aka",{"_index":3333,"title":{},"name":{},"text":{"81":{}},"component":{},"keyword":{}}],["alic",{"_index":1058,"title":{},"name":{},"text":{"14":{},"25":{},"28":{},"43":{},"46":{},"60":{},"78":{},"105":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["alice@example.com",{"_index":2431,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["align",{"_index":3348,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["alloc",{"_index":1267,"title":{"26-15":{}},"name":{},"text":{"19":{},"26":{}},"component":{},"keyword":{}}],["allof",{"_index":2412,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["allow",{"_index":51,"title":{"41-50":{}},"name":{},"text":{"1":{},"4":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"38":{},"41":{},"44":{},"45":{},"48":{},"49":{},"52":{},"60":{},"61":{},"69":{},"71":{},"76":{},"77":{},"78":{},"87":{},"93":{},"94":{},"105":{},"106":{},"116":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["allow_host_ipc",{"_index":1778,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allow_host_network",{"_index":1781,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allow_host_pid",{"_index":1779,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allow_host_port",{"_index":1780,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allowed\":fals",{"_index":3327,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["allowed\":tru",{"_index":3326,"title":{},"name":{},"text":{"78":{},"100":{}},"component":{},"keyword":{}}],["allowed.*fals",{"_index":1420,"title":{},"name":{},"text":{"21":{},"100":{}},"component":{},"keyword":{}}],["allowed.*tru",{"_index":1417,"title":{},"name":{},"text":{"21":{},"100":{},"105":{}},"component":{},"keyword":{}}],["allowed_cap",{"_index":510,"title":{},"name":{},"text":{"7":{},"27":{},"36":{},"73":{}},"component":{},"keyword":{}}],["allowed_priority_class",{"_index":1607,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["allowed_profil",{"_index":3323,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["allowedcap",{"_index":1796,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allowedflexvolum",{"_index":1791,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allowedhostpath",{"_index":1786,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allowedprocmounttyp",{"_index":1800,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allowedtomut",{"_index":1866,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["allowedtyp",{"_index":1843,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allowedunsafesysctl",{"_index":1807,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["allowlist",{"_index":1593,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["allowport",{"_index":3298,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["allowprivilegeescal",{"_index":1511,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{},"keyword":{}}],["along",{"_index":655,"title":{},"name":{},"text":{"8":{},"48":{},"60":{},"119":{}},"component":{},"keyword":{}}],["alongsid",{"_index":1143,"title":{},"name":{},"text":{"14":{},"37":{},"45":{}},"component":{},"keyword":{}}],["alpha",{"_index":3093,"title":{},"name":{},"text":{"64":{}},"component":{},"keyword":{}}],["alpin",{"_index":1767,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["alreadi",{"_index":419,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"16":{},"17":{},"21":{},"24":{},"26":{},"31":{},"34":{},"42":{},"45":{},"46":{},"49":{},"63":{},"64":{},"65":{},"66":{},"84":{},"93":{},"98":{},"99":{},"100":{},"102":{},"103":{},"107":{},"110":{},"111":{}},"component":{},"keyword":{}}],["alter",{"_index":3260,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["altern",{"_index":58,"title":{},"name":{},"text":{"1":{},"41":{},"51":{}},"component":{},"keyword":{}}],["although",{"_index":2219,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["alway",{"_index":37,"title":{},"name":{},"text":{"1":{},"5":{},"10":{},"14":{},"26":{},"38":{},"39":{},"41":{},"44":{},"71":{},"76":{},"86":{},"90":{},"95":{},"110":{}},"component":{},"keyword":{}}],["amazon",{"_index":930,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{},"keyword":{}}],["amd64",{"_index":2512,"title":{},"name":{},"text":{"45":{},"88":{}},"component":{},"keyword":{}}],["amd64.tar.gz",{"_index":2511,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["amd64/intel64",{"_index":298,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["amount",{"_index":1693,"title":{},"name":{},"text":{"26":{},"31":{},"38":{},"76":{},"96":{}},"component":{},"keyword":{}}],["analog",{"_index":3331,"title":{},"name":{},"text":{"81":{}},"component":{},"keyword":{}}],["analyz",{"_index":2547,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["and/or",{"_index":82,"title":{},"name":{},"text":{"1":{},"92":{}},"component":{},"keyword":{}}],["and\\nmutatingwebhook",{"_index":801,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["annot",{"_index":489,"title":{"12-2":{},"34-5":{},"43-9":{},"60-13":{},"121-1":{},"125-1":{}},"name":{},"text":{"7":{},"11":{},"12":{},"21":{},"29":{},"31":{},"34":{},"38":{},"39":{},"43":{},"44":{},"46":{},"48":{},"53":{},"58":{},"60":{},"64":{},"66":{},"76":{},"77":{},"78":{},"82":{},"87":{},"88":{},"93":{},"94":{},"100":{},"105":{},"106":{},"112":{},"116":{},"121":{},"125":{}},"component":{},"keyword":{}}],["annotations:v0.2.9",{"_index":1134,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["announc",{"_index":2218,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["anoth",{"_index":1123,"title":{},"name":{},"text":{"14":{},"15":{},"21":{},"24":{},"26":{},"31":{},"42":{},"64":{},"65":{},"95":{},"96":{},"100":{},"101":{},"104":{},"106":{},"119":{},"123":{}},"component":{},"keyword":{}}],["answer",{"_index":2166,"title":{},"name":{},"text":{"34":{},"38":{},"86":{},"116":{}},"component":{},"keyword":{}}],["antarctica",{"_index":1688,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["anti",{"_index":1618,"title":{"26-8":{},"26-9":{}},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["antora",{"_index":2777,"title":{},"name":{},"text":{"54":{}},"component":{},"keyword":{}}],["anymor",{"_index":1160,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["anyof",{"_index":2414,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["anyof.minimummatch",{"_index":2415,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["anyth",{"_index":4261,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["ap",{"_index":405,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["apach",{"_index":957,"title":{},"name":{},"text":{"12":{},"21":{},"29":{},"60":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["apart",{"_index":3544,"title":{},"name":{},"text":{"93":{},"99":{}},"component":{},"keyword":{}}],["apg",{"_index":408,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["api",{"_index":532,"title":{"31-1":{},"41-44":{},"71-4":{}},"name":{},"text":{"7":{},"9":{},"10":{},"11":{},"13":{},"19":{},"26":{},"29":{},"31":{},"35":{},"38":{},"41":{},"58":{},"62":{},"71":{},"72":{},"74":{},"75":{},"76":{},"81":{},"91":{},"92":{},"96":{},"111":{},"123":{},"124":{}},"component":{},"keyword":{}}],["api/api",{"_index":3248,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["api>/<vers",{"_index":921,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["api_vers",{"_index":3283,"title":{},"name":{},"text":{"76":{},"91":{}},"component":{},"keyword":{}}],["apicore::pod::kind",{"_index":4052,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["apiextens",{"_index":3522,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["apigroup",{"_index":507,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"36":{},"38":{},"47":{},"51":{},"52":{},"53":{},"60":{},"64":{},"82":{},"93":{},"94":{},"95":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["apigroups:[\"app",{"_index":2041,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["apis/$api_version/namespaces/$namespace/$kind/$nam",{"_index":3509,"title":{},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["apiserv",{"_index":3015,"title":{},"name":{},"text":{"62":{},"71":{},"92":{}},"component":{},"keyword":{}}],["apiserver.config.k8s.io/v1",{"_index":3002,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["apivers",{"_index":460,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"38":{},"43":{},"47":{},"48":{},"51":{},"52":{},"53":{},"58":{},"60":{},"62":{},"64":{},"66":{},"68":{},"71":{},"74":{},"75":{},"82":{},"93":{},"94":{},"95":{},"97":{},"105":{},"109":{},"112":{},"119":{},"121":{},"123":{},"125":{}},"component":{},"keyword":{}}],["apiversion\":\"\",\"kind\":\"pod",{"_index":3285,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["apiversion\":\"autoscaling/v1\",\"kind\":\"scal",{"_index":3239,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["apiversion\":\"meta.k8s.io/v1\",\"kind\":\"updateopt",{"_index":3244,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["apiversions:[\"v1",{"_index":2042,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["app",{"_index":908,"title":{},"name":{},"text":{"11":{},"17":{},"21":{},"23":{},"24":{},"28":{},"30":{},"38":{},"52":{},"53":{},"64":{},"65":{},"67":{},"68":{},"93":{}},"component":{},"keyword":{}}],["app.kubernetes.io/compon",{"_index":3187,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["app.kubernetes.io/inst",{"_index":3135,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["app.kubernetes.io/manag",{"_index":2608,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["app.kubernetes.io/nam",{"_index":1130,"title":{},"name":{},"text":{"14":{},"65":{},"68":{},"71":{}},"component":{},"keyword":{}}],["app.kubernetes.io/part",{"_index":1296,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["app=kubewarden",{"_index":3103,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["apparmor",{"_index":1803,"title":{},"name":{},"text":{"27":{},"77":{},"78":{}},"component":{},"keyword":{}}],["apparmor:v0.1.4",{"_index":3320,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["appco",{"_index":2768,"title":{},"name":{},"text":{},"component":{},"keyword":{"53":{}}}],["appcollect",{"_index":2752,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["appear",{"_index":1156,"title":{},"name":{},"text":{"15":{},"31":{},"67":{}},"component":{},"keyword":{}}],["append",{"_index":3396,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["appl",{"_index":296,"title":{},"name":{},"text":{"4":{},"22":{},"84":{}},"component":{},"keyword":{}}],["appli",{"_index":499,"title":{"53-4":{},"93-4":{}},"name":{},"text":{"7":{},"8":{},"9":{},"13":{},"14":{},"15":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"34":{},"42":{},"45":{},"51":{},"52":{},"53":{},"64":{},"66":{},"69":{},"76":{},"82":{},"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["applic",{"_index":282,"title":{"53":{},"9-8":{},"53-1":{},"53-2":{}},"name":{},"text":{"4":{},"9":{},"16":{},"23":{},"48":{},"53":{},"63":{},"82":{},"106":{}},"component":{},"keyword":{"53":{}}}],["application/json",{"_index":1895,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["application/vnd.dev.cosign.simplesigning.v1+json",{"_index":2850,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["application/vnd.oci.image.config.v1+json",{"_index":3429,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["application/vnd.oci.image.index.v1+json",{"_index":3419,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["application/vnd.oci.image.layer.v1.tar+gzip",{"_index":3432,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["application/vnd.oci.image.manifest.v1+json",{"_index":3420,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["appreci",{"_index":6,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["approach",{"_index":235,"title":{},"name":{},"text":{"4":{},"15":{},"26":{},"36":{},"38":{},"44":{},"57":{},"60":{},"84":{},"86":{},"90":{},"99":{},"104":{}},"component":{},"keyword":{}}],["appropri",{"_index":1225,"title":{},"name":{},"text":{"17":{},"113":{}},"component":{},"keyword":{}}],["approv",{"_index":3860,"title":{},"name":{},"text":{"100":{},"111":{},"112":{}},"component":{},"keyword":{}}],["approxim",{"_index":1248,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["apps/v1",{"_index":907,"title":{},"name":{},"text":{"11":{},"23":{},"28":{},"31":{},"48":{},"64":{},"93":{}},"component":{},"keyword":{}}],["apps/v1beta1",{"_index":2039,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["appvers",{"_index":2110,"title":{},"name":{},"text":{"33":{},"42":{}},"component":{},"keyword":{}}],["appvia",{"_index":1808,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{"27":{}}}],["arbitrari",{"_index":1858,"title":{},"name":{},"text":{"28":{},"31":{},"74":{},"82":{},"105":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["arch",{"_index":1468,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["architectur",{"_index":262,"title":{"9":{},"9-4":{}},"name":{"9":{}},"text":{"4":{},"8":{},"9":{},"19":{},"52":{},"88":{},"114":{}},"component":{},"keyword":{"9":{}}}],["archiv",{"_index":2692,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["arduino",{"_index":3625,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["aren’t",{"_index":602,"title":{},"name":{},"text":{"7":{},"14":{},"21":{},"49":{},"93":{},"99":{},"107":{},"116":{}},"component":{},"keyword":{}}],["arg",{"_index":3016,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["argo",{"_index":1014,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["argocd",{"_index":1172,"title":{"16":{}},"name":{"16":{}},"text":{"16":{}},"component":{},"keyword":{"16":{}}}],["argoproj.io/v1alpha1",{"_index":1186,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["argument",{"_index":2125,"title":{"34-6":{},"34-9":{},"34-14":{},"34-20":{},"34-26":{},"34-29":{},"34-32":{},"34-34":{},"34-37":{},"34-46":{},"34-52":{}},"name":{},"text":{"40":{},"60":{},"77":{},"78":{},"91":{},"98":{}},"component":{},"keyword":{}}],["arm",{"_index":2717,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["arm64",{"_index":1478,"title":{},"name":{},"text":{"22":{},"88":{}},"component":{},"keyword":{}}],["around",{"_index":1276,"title":{},"name":{},"text":{"19":{},"41":{},"99":{}},"component":{},"keyword":{}}],["array",{"_index":1346,"title":{},"name":{},"text":{"21":{},"26":{},"31":{},"43":{},"53":{},"87":{},"90":{},"94":{}},"component":{},"keyword":{}}],["articl",{"_index":1504,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["artifact",{"_index":233,"title":{"32":{},"44":{},"9-7":{},"29-2":{},"32-3":{},"43-10":{},"44-3":{},"60-4":{},"60-14":{},"61-2":{}},"name":{"32":{},"44":{}},"text":{"4":{},"7":{},"9":{},"12":{},"29":{},"31":{},"32":{},"34":{},"37":{},"44":{},"45":{},"49":{},"50":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"82":{},"85":{},"87":{},"88":{},"102":{},"105":{},"114":{}},"component":{},"keyword":{"32":{},"44":{}}}],["artifacthub",{"_index":374,"title":{"34-43":{}},"name":{},"text":{"6":{},"7":{},"34":{},"44":{},"82":{},"105":{}},"component":{},"keyword":{}}],["artifacthub.io",{"_index":607,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["artifacthub/pkg",{"_index":2749,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["artifactori",{"_index":2213,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["ascertain",{"_index":2492,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["asciidoc",{"_index":2778,"title":{},"name":{},"text":{"54":{}},"component":{},"keyword":{}}],["ask",{"_index":3505,"title":{},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["aspect",{"_index":1207,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["assembl",{"_index":858,"title":{},"name":{},"text":{"9":{},"21":{}},"component":{},"keyword":{}}],["assemblyscript",{"_index":3302,"title":{},"name":{},"text":{"85":{}},"component":{},"keyword":{"77":{}}}],["assert",{"_index":3858,"title":{},"name":{},"text":{"100":{},"111":{},"112":{}},"component":{},"keyword":{}}],["assert!(settings.validate().is_err",{"_index":4033,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["assert!(settings.validate().is_ok",{"_index":4030,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["assert_eq",{"_index":4125,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["assess",{"_index":1933,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["asset",{"_index":3886,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["assign",{"_index":2023,"title":{},"name":{},"text":{"31":{},"38":{},"56":{},"98":{},"99":{}},"component":{},"keyword":{}}],["associ",{"_index":764,"title":{},"name":{},"text":{"9":{},"21":{},"26":{},"31":{},"56":{},"74":{},"89":{}},"component":{},"keyword":{}}],["assum",{"_index":1300,"title":{},"name":{},"text":{"20":{},"21":{},"24":{},"27":{},"34":{},"36":{},"38":{},"41":{},"46":{},"63":{},"71":{},"75":{},"87":{},"102":{}},"component":{},"keyword":{}}],["assur",{"_index":2489,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["attach",{"_index":2509,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["attack",{"_index":710,"title":{"41-2":{},"41-5":{},"41-8":{},"41-11":{},"41-15":{},"41-18":{},"41-21":{},"41-24":{},"41-27":{},"41-33":{},"41-40":{},"41-44":{},"41-47":{},"41-50":{},"41-52":{},"41-55":{}},"name":{},"text":{"8":{},"38":{},"41":{},"71":{}},"component":{},"keyword":{}}],["attempt",{"_index":903,"title":{},"name":{},"text":{"11":{},"12":{},"13":{},"16":{},"21":{},"23":{},"27":{},"49":{},"112":{}},"component":{},"keyword":{}}],["attest",{"_index":2488,"title":{},"name":{},"text":{"45":{},"88":{}},"component":{},"keyword":{}}],["attribut",{"_index":479,"title":{"14-2":{},"14-3":{},"14-4":{}},"name":{},"text":{"7":{},"14":{},"23":{},"31":{},"34":{},"35":{},"36":{},"38":{},"43":{},"47":{},"60":{},"74":{},"76":{},"109":{},"112":{},"119":{}},"component":{},"keyword":{}}],["audienc",{"_index":2464,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["audit",{"_index":221,"title":{"17":{},"46":{},"47":{},"48":{},"14-7":{},"19-4":{},"26-16":{},"46-1":{},"82-1":{}},"name":{"17":{},"46":{}},"text":{"4":{},"7":{},"8":{},"9":{},"12":{},"14":{},"16":{},"17":{},"19":{},"23":{},"26":{},"31":{},"32":{},"33":{},"42":{},"45":{},"46":{},"47":{},"48":{},"61":{},"71":{},"82":{},"92":{},"93":{},"94":{},"105":{}},"component":{},"keyword":{"17":{},"46":{},"47":{},"48":{}}}],["audit\\nadmiss",{"_index":810,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["auditannot",{"_index":1897,"title":{},"name":{},"text":{"28":{},"93":{}},"component":{},"keyword":{}}],["auditscann",{"_index":1224,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["auditscanner.enable=fals",{"_index":1215,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["auditscanner.policyreport",{"_index":2703,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["auditscanner.policyreporter=tru",{"_index":1220,"title":{},"name":{},"text":{"17":{},"51":{},"52":{}},"component":{},"keyword":{}}],["august",{"_index":2653,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["aur",{"_index":1466,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["authent",{"_index":412,"title":{"53-1":{},"71-4":{},"88-3":{},"88-9":{},"88-15":{}},"name":{},"text":{"7":{},"34":{},"39":{},"41":{},"43":{},"45":{},"51":{},"53":{},"60":{},"66":{},"71":{},"74":{},"88":{}},"component":{},"keyword":{}}],["author",{"_index":301,"title":{"18":{},"57":{},"77":{},"8-3":{},"40-3":{},"57-1":{},"57-3":{}},"name":{"18":{},"77":{}},"text":{"4":{},"8":{},"9":{},"11":{},"12":{},"18":{},"21":{},"24":{},"28":{},"29":{},"31":{},"38":{},"45":{},"46":{},"49":{},"51":{},"57":{},"60":{},"62":{},"73":{},"76":{},"77":{},"80":{},"81":{},"82":{},"84":{},"87":{},"92":{},"93":{},"105":{},"116":{},"121":{},"125":{}},"component":{},"keyword":{"18":{},"57":{},"77":{},"79":{}}}],["authoritykeyidentifi",{"_index":2973,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["authorship",{"_index":4275,"title":{},"name":{},"text":{"125":{}},"component":{},"keyword":{}}],["auto",{"_index":2066,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["autom",{"_index":1193,"title":{"78-4":{},"102-1":{}},"name":{"102":{}},"text":{"16":{},"49":{},"70":{},"77":{},"78":{},"84":{},"85":{},"96":{},"100":{},"102":{},"114":{}},"component":{},"keyword":{}}],["automat",{"_index":603,"title":{},"name":{},"text":{"7":{},"10":{},"15":{},"16":{},"21":{},"34":{},"39":{},"45":{},"60":{},"63":{},"67":{},"70":{},"71":{},"87":{},"96":{},"110":{},"111":{}},"component":{},"keyword":{}}],["avail",{"_index":500,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"16":{},"17":{},"19":{},"21":{},"26":{},"27":{},"29":{},"31":{},"38":{},"41":{},"46":{},"48":{},"49":{},"51":{},"52":{},"60":{},"62":{},"65":{},"67":{},"71":{},"76":{},"81":{},"82":{},"88":{},"92":{},"94":{},"106":{},"116":{}},"component":{},"keyword":{}}],["avoid",{"_index":1050,"title":{},"name":{},"text":{"14":{},"16":{},"23":{},"26":{},"30":{},"34":{},"40":{},"52":{},"56":{},"74":{},"82":{}},"component":{},"keyword":{}}],["aw+r6burv8yoke37a8s/7ioquw0tlqtnt11okhiiz9+e5l3ed2h1ymkqo3dgresi",{"_index":2759,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["awar",{"_index":686,"title":{"11":{},"76":{},"94":{},"9-14":{},"14-5":{},"49-3":{},"76-6":{},"106-7":{},"116-6":{}},"name":{"11":{},"76":{},"94":{}},"text":{"8":{},"9":{},"11":{},"12":{},"14":{},"19":{},"26":{},"28":{},"29":{},"34":{},"39":{},"49":{},"60":{},"61":{},"76":{},"91":{},"92":{},"94":{},"106":{},"116":{},"125":{}},"component":{},"keyword":{"11":{},"76":{},"94":{}}}],["awarecap",{"_index":1882,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["axrodwj1c2vyy29udgvudc5jb20whgykkwybbagdvzabbgqqcmvmcy90ywdzl3yw",{"_index":2867,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["azur",{"_index":929,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{},"keyword":{}}],["b",{"_index":612,"title":{"8-2":{}},"name":{},"text":{"30":{},"34":{}},"component":{},"keyword":{}}],["b0c9",{"_index":1939,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["b4a55",{"_index":1825,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["b7cc",{"_index":3224,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["b7e87",{"_index":1832,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["b9e4",{"_index":2600,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["back",{"_index":1005,"title":{},"name":{},"text":{"13":{},"20":{},"34":{},"44":{},"67":{},"112":{},"123":{},"124":{}},"component":{},"keyword":{}}],["backend",{"_index":3037,"title":{},"name":{},"text":{"63":{},"94":{}},"component":{},"keyword":{}}],["background",{"_index":273,"title":{"49-9":{},"82-1":{}},"name":{},"text":{"4":{},"12":{},"49":{},"82":{},"105":{}},"component":{},"keyword":{}}],["backgroundaudit",{"_index":1141,"title":{},"name":{},"text":{"14":{},"21":{},"31":{},"53":{},"82":{},"93":{},"105":{}},"component":{},"keyword":{}}],["backtrac",{"_index":4119,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["backward",{"_index":1381,"title":{},"name":{},"text":{"21":{},"33":{},"42":{},"92":{}},"component":{},"keyword":{}}],["bad",{"_index":2335,"title":{"41-40":{}},"name":{},"text":{"41":{},"78":{}},"component":{},"keyword":{}}],["bad_name1",{"_index":3999,"title":{},"name":{},"text":{"109":{}},"component":{},"keyword":{}}],["bad_name2",{"_index":4000,"title":{},"name":{},"text":{"109":{}},"component":{},"keyword":{}}],["badg",{"_index":2484,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["baggag",{"_index":2189,"title":{"35-4":{}},"name":{},"text":{"35":{},"36":{}},"component":{},"keyword":{}}],["balanc",{"_index":1725,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["bar",{"_index":2437,"title":{},"name":{},"text":{"43":{},"60":{},"94":{},"97":{},"98":{},"100":{}},"component":{},"keyword":{}}],["base",{"_index":24,"title":{"9-7":{}},"name":{},"text":{"1":{},"3":{},"4":{},"9":{},"21":{},"22":{},"24":{},"31":{},"38":{},"43":{},"46":{},"52":{},"60":{},"63":{},"76":{},"84":{},"94":{},"96":{},"99":{},"102":{},"106":{},"107":{},"116":{},"119":{},"125":{}},"component":{},"keyword":{}}],["baselin",{"_index":651,"title":{},"name":{},"text":{"8":{},"23":{},"26":{}},"component":{},"keyword":{}}],["bash",{"_index":2172,"title":{},"name":{},"text":{"34":{},"45":{},"60":{}},"component":{},"keyword":{}}],["bash|elvish|fish|powershell|zsh",{"_index":1495,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["basi",{"_index":2230,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["basic",{"_index":1315,"title":{},"name":{},"text":{"21":{},"52":{},"65":{}},"component":{},"keyword":{}}],["basicconstraint",{"_index":2975,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["basicset",{"_index":3840,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["bat",{"_index":1317,"title":{},"name":{},"text":{"21":{},"77":{},"78":{},"96":{},"97":{},"100":{},"104":{},"105":{}},"component":{},"keyword":{}}],["batch",{"_index":1603,"title":{},"name":{},"text":{"24":{},"38":{},"53":{},"62":{},"76":{}},"component":{},"keyword":{}}],["batstest",{"_index":3325,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["bbc",{"_index":3623,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["be",{"_index":595,"title":{},"name":{},"text":{"7":{},"13":{},"15":{},"21":{},"26":{},"27":{},"34":{},"51":{},"74":{},"82":{},"87":{},"94":{}},"component":{},"keyword":{}}],["bea8e11b21717093",{"_index":4042,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["becom",{"_index":567,"title":{},"name":{},"text":{"7":{},"48":{},"49":{},"64":{},"67":{}},"component":{},"keyword":{}}],["befor",{"_index":455,"title":{"21-2":{}},"name":{},"text":{"7":{},"10":{},"15":{},"21":{},"23":{},"25":{},"26":{},"27":{},"29":{},"38":{},"41":{},"42":{},"44":{},"56":{},"62":{},"64":{},"65":{},"76":{},"79":{},"84":{},"85":{},"104":{},"112":{}},"component":{},"keyword":{}}],["begin",{"_index":1066,"title":{},"name":{},"text":{"14":{},"17":{},"21":{},"25":{},"40":{},"43":{},"51":{},"53":{},"56":{},"57":{},"60":{},"66":{}},"component":{},"keyword":{}}],["behalf",{"_index":3878,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["behav",{"_index":1580,"title":{},"name":{},"text":{"24":{},"29":{},"40":{},"49":{},"65":{},"79":{},"92":{},"99":{},"100":{}},"component":{},"keyword":{}}],["behavior",{"_index":834,"title":{"90-1":{}},"name":{},"text":{"9":{},"12":{},"13":{},"16":{},"18":{},"30":{},"34":{},"38":{},"40":{},"41":{},"57":{},"67":{},"73":{},"76":{},"78":{},"98":{}},"component":{},"keyword":{}}],["behaviour",{"_index":2033,"title":{},"name":{},"text":{"31":{},"44":{},"93":{}},"component":{},"keyword":{}}],["behind",{"_index":2677,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["belong",{"_index":1091,"title":{},"name":{},"text":{"14":{},"44":{},"47":{},"49":{},"56":{},"65":{}},"component":{},"keyword":{}}],["below",{"_index":1414,"title":{},"name":{},"text":{"21":{},"22":{},"27":{},"29":{},"40":{},"43":{},"48":{},"51":{},"52":{},"56":{},"60":{},"77":{},"78":{},"91":{},"100":{},"105":{},"106":{}},"component":{},"keyword":{}}],["below](#comparison",{"_index":2234,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["bench",{"_index":2126,"title":{"34-8":{}},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["bench/label",{"_index":2149,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["benchmark",{"_index":2127,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["benefici",{"_index":934,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["benefit",{"_index":177,"title":{"4-2":{},"92-4":{}},"name":{},"text":{"8":{},"9":{},"30":{},"92":{}},"component":{},"keyword":{}}],["besid",{"_index":1576,"title":{},"name":{},"text":{"24":{},"76":{},"94":{}},"component":{},"keyword":{}}],["best",{"_index":20,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"8":{},"38":{},"45":{},"61":{},"94":{},"96":{}},"component":{},"keyword":{}}],["beta.3",{"_index":3062,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["better",{"_index":314,"title":{},"name":{},"text":{"4":{},"38":{},"56":{}},"component":{},"keyword":{}}],["between",{"_index":545,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"21":{},"26":{},"31":{},"36":{},"38":{},"41":{},"42":{},"46":{},"49":{},"62":{},"64":{},"66":{},"68":{},"69":{},"75":{},"81":{},"88":{},"94":{},"116":{}},"component":{},"keyword":{}}],["beyond",{"_index":1454,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["bi",{"_index":3337,"title":{},"name":{},"text":{"81":{},"116":{}},"component":{},"keyword":{}}],["big",{"_index":1731,"title":{},"name":{},"text":{"26":{},"56":{}},"component":{},"keyword":{}}],["bigger",{"_index":1715,"title":{},"name":{},"text":{"26":{},"99":{}},"component":{},"keyword":{}}],["bill",{"_index":2366,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["binari",{"_index":165,"title":{"32-2":{}},"name":{},"text":{"3":{},"4":{},"7":{},"9":{},"12":{},"22":{},"29":{},"40":{},"42":{},"45":{},"60":{},"71":{},"77":{},"78":{},"81":{},"96":{},"100":{},"101":{},"102":{},"114":{},"124":{}},"component":{},"keyword":{}}],["bind",{"_index":824,"title":{},"name":{},"text":{"9":{},"34":{},"39":{},"46":{},"91":{},"92":{},"93":{}},"component":{},"keyword":{}}],["bind_address",{"_index":2259,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["binding.yaml",{"_index":2186,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["binding.yml",{"_index":1973,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["bit",{"_index":4251,"title":{},"name":{},"text":{"121":{},"123":{}},"component":{},"keyword":{}}],["bleed",{"_index":4188,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["blob",{"_index":935,"title":{},"name":{},"text":{"12":{},"45":{}},"component":{},"keyword":{}}],["block",{"_index":248,"title":{"27-2":{},"41-37":{},"71-1":{}},"name":{},"text":{"4":{},"8":{},"11":{},"20":{},"26":{},"27":{},"41":{},"49":{},"64":{},"71":{},"86":{},"99":{},"123":{}},"component":{},"keyword":{}}],["blocklist",{"_index":2336,"title":{"41-40":{}},"name":{},"text":{},"component":{},"keyword":{}}],["blog",{"_index":355,"title":{},"name":{},"text":{"5":{},"29":{}},"component":{},"keyword":{}}],["board",{"_index":3622,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["bob",{"_index":1059,"title":{},"name":{},"text":{"14":{},"25":{},"28":{},"43":{},"46":{},"60":{}},"component":{},"keyword":{}}],["bodi",{"_index":1365,"title":{},"name":{},"text":{"21":{},"74":{},"86":{},"88":{}},"component":{},"keyword":{}}],["book",{"_index":3101,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["bool",{"_index":963,"title":{},"name":{},"text":{"12":{},"87":{},"91":{},"98":{},"99":{},"104":{},"105":{},"117":{}},"component":{},"keyword":{}}],["boolean",{"_index":533,"title":{},"name":{},"text":{"7":{},"14":{},"31":{},"73":{},"74":{},"75":{},"87":{},"90":{}},"component":{},"keyword":{}}],["boot",{"_index":3051,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["bootstrap",{"_index":2344,"title":{"41-59":{}},"name":{},"text":{},"component":{},"keyword":{}}],["bot",{"_index":2674,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["both",{"_index":590,"title":{},"name":{},"text":{"7":{},"9":{},"10":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"21":{},"31":{},"38":{},"40":{},"41":{},"43":{},"45":{},"47":{},"49":{},"60":{},"61":{},"78":{},"80":{},"87":{},"89":{},"93":{},"106":{},"116":{}},"component":{},"keyword":{}}],["bottleneck",{"_index":1713,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["bottom",{"_index":352,"title":{},"name":{},"text":{"5":{},"37":{},"49":{},"110":{},"111":{}},"component":{},"keyword":{}}],["bound",{"_index":456,"title":{},"name":{},"text":{"7":{},"9":{},"93":{}},"component":{},"keyword":{}}],["box",{"_index":348,"title":{},"name":{},"text":{"5":{},"9":{},"65":{},"101":{},"102":{},"108":{},"118":{}},"component":{},"keyword":{}}],["bpf",{"_index":3259,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["br",{"_index":2009,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["br/><br",{"_index":2006,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["bracket",{"_index":1089,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["branch",{"_index":2473,"title":{},"name":{},"text":{"44":{},"84":{},"85":{},"96":{},"109":{},"114":{}},"component":{},"keyword":{}}],["breadcrumb",{"_index":342,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["break",{"_index":1373,"title":{},"name":{},"text":{"21":{},"30":{},"39":{},"56":{}},"component":{},"keyword":{}}],["brew",{"_index":1463,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["bring",{"_index":1298,"title":{},"name":{},"text":{"20":{},"44":{},"96":{}},"component":{},"keyword":{}}],["broken",{"_index":3757,"title":{"99-3":{}},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["browser",{"_index":284,"title":{},"name":{},"text":{"4":{},"22":{},"56":{},"60":{},"96":{},"116":{}},"component":{},"keyword":{}}],["bug",{"_index":87,"title":{},"name":{},"text":{"1":{},"38":{},"54":{},"70":{}},"component":{},"keyword":{}}],["buggi",{"_index":2249,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["build",{"_index":376,"title":{"114":{},"120":{},"124":{},"98-1":{},"114-1":{},"120-1":{},"124-1":{}},"name":{"114":{},"120":{},"124":{}},"text":{"6":{},"13":{},"21":{},"22":{},"29":{},"45":{},"46":{},"60":{},"84":{},"85":{},"87":{},"92":{},"94":{},"96":{},"97":{},"100":{},"102":{},"105":{},"107":{},"114":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{"114":{},"124":{}}}],["builder",{"_index":3564,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["buildkit",{"_index":3472,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["buildkit.dockerfile.v0",{"_index":3474,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["buildvcs=fals",{"_index":3651,"title":{},"name":{},"text":{"97":{},"105":{}},"component":{},"keyword":{}}],["built",{"_index":294,"title":{"107-1":{}},"name":{},"text":{"4":{},"8":{},"9":{},"19":{},"44":{},"49":{},"60":{},"71":{},"77":{},"78":{},"85":{},"87":{},"107":{},"114":{},"118":{},"122":{},"123":{},"125":{}},"component":{},"keyword":{}}],["builtin",{"_index":3983,"title":{"107":{}},"name":{"107":{}},"text":{},"component":{},"keyword":{"107":{}}}],["bump",{"_index":2407,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["bundl",{"_index":885,"title":{},"name":{},"text":{"10":{},"15":{},"21":{},"45":{},"87":{},"92":{}},"component":{},"keyword":{}}],["bundle(",{"_index":1152,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["bundle.tar.gz",{"_index":1327,"title":{},"name":{},"text":{"21":{},"120":{},"124":{}},"component":{},"keyword":{}}],["burden",{"_index":2308,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["busi",{"_index":3334,"title":{},"name":{},"text":{"81":{}},"component":{},"keyword":{}}],["busybox:latest",{"_index":3415,"title":{},"name":{},"text":{"88":{},"89":{}},"component":{},"keyword":{}}],["button",{"_index":1908,"title":{},"name":{},"text":{"29":{},"37":{},"44":{},"65":{},"67":{},"97":{}},"component":{},"keyword":{}}],["bvdf6skfsf87aasuspkqsn3fo4iywodcy5j3o0cdijd/kjhdjfhdfiu6sa",{"_index":2448,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["bylgh2ijpnqn0uio/9pzotp/csjmxounshfptuhd3oxghgz/6adtf2nbwq",{"_index":2429,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["bypass",{"_index":2319,"title":{"41-8":{},"41-37":{},"41-40":{}},"name":{},"text":{"41":{},"45":{},"91":{}},"component":{},"keyword":{}}],["byproduct",{"_index":2826,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["byte",{"_index":3402,"title":{},"name":{},"text":{"87":{},"90":{},"98":{},"99":{},"101":{},"104":{},"105":{},"117":{}},"component":{},"keyword":{}}],["byte(int",{"_index":3405,"title":{},"name":{},"text":{"87":{},"90":{}},"component":{},"keyword":{}}],["byte(r.regexp.str",{"_index":3712,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["c",{"_index":110,"title":{"80":{},"3-3":{},"8-3":{}},"name":{},"text":{"8":{},"45":{},"80":{}},"component":{},"keyword":{"80":{}}}],["c.imag",{"_index":3597,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["c.name",{"_index":1961,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["c3b80a10f9c3",{"_index":2134,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["c5a88847",{"_index":2614,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["c8c8",{"_index":1943,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["ca",{"_index":818,"title":{"62-2":{}},"name":{"57":{}},"text":{"9":{},"10":{},"16":{},"18":{},"39":{},"40":{},"57":{},"60":{},"62":{},"66":{},"70":{},"71":{},"90":{}},"component":{},"keyword":{}}],["ca.crt",{"_index":3022,"title":{},"name":{},"text":{"62":{},"66":{},"71":{}},"component":{},"keyword":{}}],["ca.crt=/etc/k8s/admission/certs/rootca.crt",{"_index":3206,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["ca.crt=/etc/rancher/k3s/admission/certs/rootca.crt",{"_index":3024,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["ca4ea8be6361",{"_index":3661,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["ca:tru",{"_index":2976,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["cabundl",{"_index":1183,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["cach",{"_index":2141,"title":{"87-1":{},"88-2":{},"88-8":{},"88-14":{},"89-2":{},"91-9":{}},"name":{},"text":{"34":{},"39":{},"53":{},"76":{},"87":{},"88":{},"89":{},"91":{},"99":{}},"component":{},"keyword":{}}],["cacreateseri",{"_index":2996,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["cakey",{"_index":2994,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["calico",{"_index":3180,"title":{"71-2":{}},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["call",{"_index":160,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"9":{},"14":{},"17":{},"21":{},"31":{},"38":{},"49":{},"53":{},"63":{},"64":{},"71":{},"73":{},"74":{},"78":{},"91":{},"94":{},"98":{},"99":{},"100":{},"102":{},"109":{},"111":{},"119":{},"120":{},"123":{}},"component":{},"keyword":{}}],["callback",{"_index":1107,"title":{},"name":{},"text":{"14":{},"25":{},"88":{},"90":{},"95":{}},"component":{},"keyword":{}}],["caller",{"_index":2351,"title":{},"name":{},"text":{"41":{},"71":{}},"component":{},"keyword":{}}],["callresult",{"_index":4046,"title":{},"name":{},"text":{"111":{},"112":{},"113":{},"115":{}},"component":{},"keyword":{}}],["came",{"_index":2460,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["camelcas",{"_index":4148,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["candid",{"_index":1664,"title":{},"name":{},"text":{"26":{},"92":{}},"component":{},"keyword":{}}],["canon",{"_index":2480,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["can’t",{"_index":652,"title":{},"name":{},"text":{"8":{},"9":{},"11":{},"21":{},"23":{},"36":{},"37":{},"45":{},"47":{},"71":{},"85":{},"90":{},"96":{},"101":{},"106":{},"116":{}},"component":{},"keyword":{}}],["cap",{"_index":406,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["capabilities:v0.1.3",{"_index":2200,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["capabilities:v0.1.9",{"_index":505,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["capabl",{"_index":503,"title":{"86":{},"88":{},"89":{},"90":{},"91":{},"95":{}},"name":{"86":{}},"text":{"7":{},"9":{},"14":{},"23":{},"27":{},"30":{},"34":{},"36":{},"38":{},"41":{},"52":{},"58":{},"73":{},"75":{},"76":{},"81":{},"84":{},"86":{},"88":{},"89":{},"92":{},"94":{},"95":{},"116":{}},"component":{},"keyword":{"86":{},"88":{},"89":{},"90":{},"91":{}}}],["capg",{"_index":410,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["care",{"_index":605,"title":{},"name":{},"text":{"7":{},"10":{},"16":{},"31":{},"42":{},"73":{},"84":{},"87":{},"94":{},"97":{}},"component":{},"keyword":{}}],["carefulli",{"_index":2138,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["cargo",{"_index":3992,"title":{},"name":{},"text":{"108":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["cargo.lock",{"_index":3479,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["carri",{"_index":10,"title":{"41-24":{}},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["case",{"_index":179,"title":{"8":{},"4-3":{},"8-1":{},"8-2":{},"8-3":{},"8-4":{},"29-4":{},"116-2":{}},"name":{"8":{}},"text":{"4":{},"8":{},"17":{},"23":{},"26":{},"31":{},"34":{},"38":{},"42":{},"43":{},"45":{},"47":{},"58":{},"63":{},"65":{},"74":{},"81":{},"87":{},"90":{},"94":{},"95":{},"99":{},"106":{},"107":{},"111":{},"112":{},"115":{},"116":{},"117":{},"119":{},"123":{},"125":{}},"component":{},"keyword":{"8":{}}}],["castelli",{"_index":1929,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["cat",{"_index":1356,"title":{},"name":{},"text":{"21":{},"27":{},"43":{},"60":{},"62":{},"65":{},"66":{}},"component":{},"keyword":{}}],["catalog",{"_index":1320,"title":{},"name":{},"text":{"21":{},"67":{}},"component":{},"keyword":{}}],["catch",{"_index":1726,"title":{},"name":{},"text":{"26":{},"41":{},"85":{}},"component":{},"keyword":{}}],["categor",{"_index":2548,"title":{},"name":{},"text":{"46":{},"56":{}},"component":{},"keyword":{}}],["categori",{"_index":2559,"title":{},"name":{},"text":{"48":{},"51":{},"82":{},"93":{},"105":{}},"component":{},"keyword":{}}],["cattl",{"_index":3162,"title":{},"name":{},"text":{"67":{},"68":{}},"component":{},"keyword":{}}],["caus",{"_index":490,"title":{"41-5":{}},"name":{},"text":{"7":{},"14":{},"24":{},"25":{},"26":{},"31":{},"38":{},"39":{},"41":{},"47":{},"49":{},"76":{}},"component":{},"keyword":{}}],["caution",{"_index":1810,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["ca’",{"_index":2169,"title":{},"name":{},"text":{"34":{},"39":{}},"component":{},"keyword":{}}],["cb33b6734c82",{"_index":2565,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["cb52a70ec50d",{"_index":1946,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["cc",{"_index":3644,"title":{},"name":{},"text":{"97":{},"98":{},"99":{},"100":{}},"component":{},"keyword":{}}],["cd",{"_index":311,"title":{},"name":{},"text":{"4":{},"22":{},"34":{},"78":{}},"component":{},"keyword":{}}],["cd464bb4b8d1",{"_index":2589,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["cee05",{"_index":1827,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["cel",{"_index":674,"title":{"92":{},"94":{},"92-1":{},"92-3":{},"92-4":{},"93-2":{}},"name":{"92":{}},"text":{"8":{},"30":{},"31":{},"34":{},"49":{},"92":{},"93":{},"94":{},"95":{},"116":{}},"component":{},"keyword":{"30":{}}}],["cel.dev",{"_index":3511,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["center",{"_index":2620,"title":{},"name":{},"text":{"48":{},"97":{},"98":{},"99":{},"100":{}},"component":{},"keyword":{}}],["center:team",{"_index":3847,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["central",{"_index":3033,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["ceratin",{"_index":3984,"title":{},"name":{},"text":{"107":{}},"component":{},"keyword":{}}],["cert",{"_index":870,"title":{"66-2":{}},"name":{},"text":{"10":{},"12":{},"16":{},"34":{},"39":{},"40":{},"45":{},"57":{},"63":{},"64":{},"65":{},"66":{},"69":{},"87":{},"90":{}},"component":{},"keyword":{}}],["cert/ca.crt",{"_index":3146,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["cert/tls.crt",{"_index":3144,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["cert/tls.key",{"_index":3145,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["cert_chain",{"_index":3498,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["cert_fil",{"_index":2261,"title":{},"name":{},"text":{"39":{},"66":{}},"component":{},"keyword":{}}],["cert_rotation.go:137",{"_index":1589,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["certain",{"_index":966,"title":{},"name":{},"text":{"12":{},"16":{},"26":{},"38":{},"94":{},"97":{},"106":{},"107":{},"116":{}},"component":{},"keyword":{}}],["certgen:v1.0",{"_index":3060,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["certif",{"_index":817,"title":{"10":{},"18":{},"57":{},"70":{},"57-1":{},"57-3":{},"62-2":{}},"name":{"10":{},"18":{},"70":{}},"text":{"9":{},"10":{},"16":{},"18":{},"22":{},"24":{},"31":{},"34":{},"39":{},"40":{},"43":{},"45":{},"51":{},"57":{},"60":{},"62":{},"63":{},"66":{},"70":{},"71":{},"87":{},"90":{},"95":{}},"component":{},"keyword":{"10":{},"18":{},"57":{},"70":{}}}],["certificate_chain",{"_index":3406,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["certificate’",{"_index":2451,"title":{},"name":{},"text":{"43":{},"60":{},"90":{}},"component":{},"keyword":{}}],["cfg(test",{"_index":4021,"title":{},"name":{},"text":{"110":{},"111":{}},"component":{},"keyword":{}}],["chain",{"_index":230,"title":{"60":{}},"name":{"60":{}},"text":{"4":{},"18":{},"40":{},"43":{},"45":{},"57":{},"60":{},"84":{},"87":{},"90":{}},"component":{},"keyword":{"60":{}}}],["challeng",{"_index":2815,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["chanc",{"_index":2254,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["chang",{"_index":475,"title":{"36-1":{}},"name":{},"text":{"7":{},"8":{},"10":{},"15":{},"16":{},"17":{},"21":{},"26":{},"27":{},"28":{},"30":{},"31":{},"33":{},"36":{},"41":{},"42":{},"44":{},"46":{},"47":{},"49":{},"51":{},"52":{},"54":{},"60":{},"62":{},"65":{},"76":{},"78":{},"82":{},"84":{},"88":{},"98":{},"99":{},"100":{},"104":{},"105":{},"110":{},"111":{},"112":{},"117":{},"126":{}},"component":{},"keyword":{}}],["channel",{"_index":3338,"title":{},"name":{},"text":{"81":{}},"component":{},"keyword":{}}],["chapter",{"_index":610,"title":{},"name":{},"text":{"7":{},"63":{},"74":{},"103":{},"118":{}},"component":{},"keyword":{}}],["charact",{"_index":2494,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["character",{"_index":1251,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["characterist",{"_index":3515,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["chart",{"_index":430,"title":{"32-4":{},"42-3":{},"45-2":{},"51-3":{},"52-1":{},"58-3":{},"61-1":{}},"name":{},"text":{"7":{},"8":{},"10":{},"15":{},"16":{},"17":{},"26":{},"32":{},"33":{},"41":{},"42":{},"45":{},"51":{},"52":{},"53":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"71":{},"76":{},"87":{},"88":{}},"component":{},"keyword":{"33":{}}}],["chat",{"_index":2649,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["check",{"_index":225,"title":{"43-10":{},"49-9":{},"60-7":{},"60-14":{},"82-1":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"26":{},"31":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"52":{},"53":{},"56":{},"60":{},"73":{},"74":{},"76":{},"77":{},"78":{},"82":{},"87":{},"90":{},"92":{},"93":{},"94":{},"95":{},"97":{},"98":{},"99":{},"100":{},"104":{},"105":{},"106":{},"107":{},"111":{},"123":{}},"component":{},"keyword":{}}],["checkout",{"_index":3881,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["checksum",{"_index":2510,"title":{},"name":{},"text":{"45":{},"87":{}},"component":{},"keyword":{}}],["checksum.txt",{"_index":2517,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["chmod=0755",{"_index":3478,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["choic",{"_index":2253,"title":{},"name":{},"text":{"38":{},"44":{},"81":{}},"component":{},"keyword":{}}],["choos",{"_index":650,"title":{},"name":{},"text":{"8":{},"9":{},"36":{},"38":{},"44":{},"56":{},"65":{},"67":{},"95":{}},"component":{},"keyword":{}}],["chosen",{"_index":3322,"title":{},"name":{},"text":{"78":{},"92":{},"101":{},"113":{}},"component":{},"keyword":{}}],["chown",{"_index":511,"title":{},"name":{},"text":{"7":{},"36":{},"73":{}},"component":{},"keyword":{}}],["ci",{"_index":310,"title":{},"name":{},"text":{"4":{},"8":{},"21":{},"76":{},"77":{},"78":{},"87":{},"102":{}},"component":{},"keyword":{}}],["ci.yml",{"_index":3890,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["ci/cd",{"_index":2651,"title":{"49-6":{}},"name":{},"text":{"49":{},"60":{},"79":{}},"component":{},"keyword":{}}],["cilium",{"_index":3181,"title":{"71-3":{}},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["cilium.io/v2",{"_index":3194,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["ciliumnetworkpolici",{"_index":3193,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["circuit",{"_index":3610,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["circumst",{"_index":2348,"title":{},"name":{},"text":{"41":{},"116":{}},"component":{},"keyword":{}}],["citi",{"_index":2968,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["citizen",{"_index":3990,"title":{},"name":{},"text":{"108":{}},"component":{},"keyword":{}}],["claim",{"_index":2505,"title":{},"name":{},"text":{"45":{},"60":{}},"component":{},"keyword":{}}],["clap",{"_index":2187,"title":{},"name":{},"text":{"34":{},"39":{}},"component":{},"keyword":{}}],["clarif",{"_index":2784,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["clarifi",{"_index":2446,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["clash",{"_index":2660,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["class",{"_index":682,"title":{},"name":{},"text":{"8":{},"24":{},"26":{},"85":{},"98":{},"108":{}},"component":{},"keyword":{}}],["cleanli",{"_index":4129,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["clear",{"_index":2788,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["clearli",{"_index":1240,"title":{},"name":{},"text":{"18":{},"40":{}},"component":{},"keyword":{}}],["cli",{"_index":143,"title":{"34":{},"39":{},"29-3":{}},"name":{"34":{},"39":{}},"text":{"3":{},"7":{},"12":{},"21":{},"22":{},"29":{},"32":{},"37":{},"45":{},"48":{},"49":{},"52":{},"76":{},"77":{},"96":{},"100":{},"116":{},"118":{},"122":{},"123":{}},"component":{},"keyword":{"34":{},"39":{}}}],["click",{"_index":2780,"title":{},"name":{},"text":{"56":{},"65":{},"67":{}},"component":{},"keyword":{}}],["client",{"_index":281,"title":{"62-2":{}},"name":{},"text":{"4":{},"16":{},"18":{},"24":{},"39":{},"41":{},"48":{},"51":{},"62":{},"66":{},"71":{},"74":{}},"component":{},"keyword":{}}],["client.crt",{"_index":2995,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["client.csr",{"_index":2989,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["client.go:196",{"_index":2819,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["client.key",{"_index":2988,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["client_ca_fil",{"_index":2263,"title":{},"name":{},"text":{"39":{},"66":{}},"component":{},"keyword":{}}],["clientbuild",{"_index":3566,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["clientbuilder>.kind",{"_index":3567,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["clone",{"_index":1471,"title":{},"name":{},"text":{"22":{},"97":{}},"component":{},"keyword":{}}],["close",{"_index":1638,"title":{},"name":{},"text":{"26":{},"41":{},"98":{}},"component":{},"keyword":{}}],["closer",{"_index":2797,"title":{},"name":{},"text":{"57":{},"64":{}},"component":{},"keyword":{}}],["cloud",{"_index":763,"title":{},"name":{},"text":{"9":{},"37":{},"63":{}},"component":{},"keyword":{}}],["cluster",{"_index":135,"title":{"78":{},"8-1":{},"41-18":{},"41-52":{},"63-1":{}},"name":{"78":{}},"text":{"3":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"35":{},"41":{},"43":{},"46":{},"48":{},"49":{},"51":{},"52":{},"53":{},"60":{},"63":{},"65":{},"66":{},"67":{},"68":{},"71":{},"75":{},"76":{},"77":{},"78":{},"79":{},"82":{},"87":{},"91":{},"92":{},"93":{},"94":{},"97":{},"121":{},"125":{}},"component":{},"keyword":{"11":{},"78":{},"79":{}}}],["cluster)admissionpolici",{"_index":3526,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["clusteradmissionpolici",{"_index":111,"title":{"3-4":{},"7-4":{},"31-9":{},"31-35":{},"76-5":{}},"name":{},"text":{"7":{},"8":{},"9":{},"11":{},"13":{},"14":{},"19":{},"21":{},"23":{},"24":{},"27":{},"29":{},"30":{},"31":{},"34":{},"36":{},"38":{},"47":{},"48":{},"51":{},"52":{},"53":{},"57":{},"60":{},"64":{},"76":{},"93":{},"94":{},"95":{},"121":{},"125":{}},"component":{},"keyword":{"7":{},"11":{},"13":{},"20":{},"24":{},"29":{}}}],["clusteradmissionpolicy.mut",{"_index":999,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["clusteradmissionpolicy.policies.kubewarden.io/privileg",{"_index":564,"title":{},"name":{},"text":{"7":{},"29":{}},"component":{},"keyword":{}}],["clusteradmissionpolicy.policies.kubewarden.io/psp",{"_index":1031,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{},"keyword":{}}],["clusteradmissionpolicy.policies.kubewarden.io/us",{"_index":1554,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["clusteradmissionpolicy/saf",{"_index":3097,"title":{},"name":{},"text":{"64":{}},"component":{},"keyword":{}}],["clusteradmissionpolicygroup",{"_index":409,"title":{"31-10":{}},"name":{},"text":{"7":{},"8":{},"14":{},"24":{},"25":{},"31":{}},"component":{},"keyword":{"14":{},"25":{}}}],["clusteradmissionpolicygrouplist",{"_index":1985,"title":{"31-11":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["clusteradmissionpolicygroupspec",{"_index":1986,"title":{"31-12":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["clusteradmissionpolicylist",{"_index":1987,"title":{"31-13":{},"31-36":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["clusteradmissionpolicyspec",{"_index":1988,"title":{"31-14":{},"31-37":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["clusterip",{"_index":822,"title":{},"name":{},"text":{"9":{},"17":{}},"component":{},"keyword":{}}],["clusterpolicygroupspec",{"_index":1989,"title":{"31-15":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["clusterpolicyreport",{"_index":112,"title":{"3-5":{},"48-3":{}},"name":{},"text":{"3":{},"17":{},"48":{}},"component":{},"keyword":{}}],["clusterrol",{"_index":2549,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["clusterroles,rol",{"_index":2935,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["clusterwid",{"_index":577,"title":{},"name":{},"text":{"7":{},"14":{},"21":{},"23":{},"24":{},"25":{},"27":{},"48":{},"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["cluster’",{"_index":1721,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["cncf",{"_index":189,"title":{},"name":{},"text":{"4":{},"29":{},"44":{},"49":{},"63":{}},"component":{},"keyword":{"4":{}}}],["cni",{"_index":2358,"title":{},"name":{},"text":{"41":{},"71":{}},"component":{},"keyword":{}}],["code",{"_index":288,"title":{"21-4":{},"21-5":{},"21-6":{},"98-3":{},"99-2":{},"104-2":{},"112-1":{}},"name":{},"text":{"4":{},"6":{},"9":{},"14":{},"15":{},"21":{},"24":{},"25":{},"34":{},"35":{},"38":{},"44":{},"45":{},"47":{},"49":{},"62":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"96":{},"98":{},"99":{},"102":{},"104":{},"106":{},"110":{},"111":{},"112":{},"114":{},"116":{},"117":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{}}],["code(400",{"_index":4217,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["code(403",{"_index":4224,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["code.engin",{"_index":1385,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["collabor",{"_index":240,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["collaps",{"_index":3839,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["collect",{"_index":2155,"title":{"53":{},"53-1":{},"53-2":{}},"name":{},"text":{"34":{},"44":{},"46":{},"53":{},"64":{},"65":{},"66":{},"69":{},"91":{},"110":{}},"component":{},"keyword":{"53":{}}}],["collector",{"_index":3032,"title":{"66":{},"66-4":{}},"name":{"66":{}},"text":{"63":{},"64":{},"66":{},"69":{}},"component":{},"keyword":{}}],["collector.jaeger.svc.cluster.loc",{"_index":3086,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{},"keyword":{}}],["collector.jaeger.svc.cluster.local:4317",{"_index":3088,"title":{},"name":{},"text":{"64":{},"66":{},"69":{}},"component":{},"keyword":{}}],["collector.kubewarden.svc",{"_index":3133,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["collector.kubewarden.svc.cluster.loc",{"_index":3134,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["collector.kubewarden.svc:4317",{"_index":3150,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["collector.yaml",{"_index":3138,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["color",{"_index":2130,"title":{},"name":{},"text":{"34":{},"39":{},"76":{}},"component":{},"keyword":{}}],["color:brown,strok",{"_index":2402,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["color:red,strok",{"_index":2405,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["color=green",{"_index":3273,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["column\":5,\"file\":\"src/lib.rs\",\"level\":\"info\",\"line\":34,\"message\":\"start",{"_index":4114,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["combin",{"_index":726,"title":{},"name":{},"text":{"9":{},"14":{},"34":{}},"component":{},"keyword":{}}],["come",{"_index":72,"title":{},"name":{},"text":{"1":{},"17":{},"26":{},"38":{},"41":{},"47":{},"84":{},"86":{},"87":{},"93":{},"98":{},"103":{},"106":{}},"component":{},"keyword":{}}],["command",{"_index":420,"title":{"34-1":{},"39-1":{}},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"17":{},"21":{},"22":{},"23":{},"25":{},"27":{},"29":{},"30":{},"34":{},"39":{},"40":{},"43":{},"44":{},"45":{},"51":{},"52":{},"58":{},"60":{},"62":{},"63":{},"64":{},"71":{},"77":{},"78":{},"82":{},"97":{},"98":{},"100":{},"108":{},"109":{},"114":{},"116":{},"120":{}},"component":{},"keyword":{}}],["commenc",{"_index":2779,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["comment",{"_index":3473,"title":{},"name":{},"text":{"88":{},"93":{},"107":{}},"component":{},"keyword":{}}],["commit",{"_index":1168,"title":{},"name":{},"text":{"15":{},"44":{},"102":{}},"component":{},"keyword":{}}],["common",{"_index":492,"title":{"29":{}},"name":{},"text":{"7":{},"24":{},"26":{},"30":{},"62":{},"92":{},"96":{},"123":{}},"component":{},"keyword":{}}],["commonnam",{"_index":2970,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["commun",{"_index":40,"title":{"72":{},"88-4":{},"88-10":{},"88-16":{},"89-3":{},"116-3":{}},"name":{},"text":{"1":{},"4":{},"5":{},"9":{},"10":{},"26":{},"29":{},"34":{},"48":{},"56":{},"62":{},"64":{},"65":{},"66":{},"69":{},"72":{},"75":{},"81":{},"91":{},"116":{}},"component":{},"keyword":{"72":{}}}],["community.github.io/helm",{"_index":3109,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{},"keyword":{}}],["community/kub",{"_index":2116,"title":{},"name":{},"text":{"33":{},"65":{},"66":{}},"component":{},"keyword":{}}],["compact",{"_index":3628,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["compani",{"_index":630,"title":{},"name":{},"text":{"8":{},"62":{}},"component":{},"keyword":{}}],["company.com/kubewarden/no",{"_index":4253,"title":{},"name":{},"text":{"121":{},"125":{}},"component":{},"keyword":{}}],["compar",{"_index":2150,"title":{},"name":{},"text":{"34":{},"94":{},"112":{},"116":{},"119":{}},"component":{},"keyword":{}}],["comparison",{"_index":1321,"title":{"38-6":{},"92-4":{}},"name":{"49":{}},"text":{"21":{},"49":{},"92":{}},"component":{},"keyword":{"49":{}}}],["compat",{"_index":208,"title":{"21-6":{},"42-2":{},"118-1":{},"122-2":{}},"name":{},"text":{"4":{},"9":{},"21":{},"31":{},"34":{},"42":{},"49":{},"63":{},"64":{},"92":{},"106":{},"118":{}},"component":{},"keyword":{}}],["compil",{"_index":280,"title":{},"name":{},"text":{"4":{},"8":{},"21":{},"49":{},"77":{},"81":{},"84":{},"90":{},"92":{},"96":{},"97":{},"100":{},"101":{},"108":{},"109":{},"110":{},"111":{},"112":{},"114":{},"116":{},"118":{},"122":{},"123":{}},"component":{},"keyword":{}}],["complement",{"_index":700,"title":{},"name":{},"text":{"8":{},"23":{}},"component":{},"keyword":{}}],["complet",{"_index":105,"title":{"22-1":{},"34-11":{}},"name":{},"text":{"2":{},"7":{},"9":{},"16":{},"19":{},"22":{},"29":{},"34":{},"38":{},"51":{},"52":{},"62":{},"64":{},"65":{},"67":{},"97":{},"99":{},"105":{},"115":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["complex",{"_index":684,"title":{"41-5":{}},"name":{},"text":{"8":{},"13":{},"14":{},"29":{},"41":{},"66":{},"81":{},"116":{}},"component":{},"keyword":{}}],["compli",{"_index":252,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["complianc",{"_index":251,"title":{"8-4":{}},"name":{},"text":{"4":{},"8":{},"9":{},"17":{},"19":{},"46":{}},"component":{},"keyword":{}}],["compliant",{"_index":216,"title":{"8-1":{},"12-1":{}},"name":{},"text":{"4":{},"7":{},"8":{},"12":{},"17":{},"21":{},"25":{},"29":{},"45":{},"46":{},"49":{},"51":{},"119":{}},"component":{},"keyword":{}}],["complic",{"_index":2813,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["compon",{"_index":383,"title":{"7-2":{},"42-2":{}},"name":{},"text":{"7":{},"8":{},"9":{},"10":{},"17":{},"26":{},"35":{},"42":{},"45":{},"46":{},"60":{},"63":{},"64":{},"65":{},"66":{},"71":{},"81":{},"101":{}},"component":{},"keyword":{}}],["comprehens",{"_index":234,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["compress",{"_index":3895,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["compris",{"_index":389,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["compromis",{"_index":1283,"title":{},"name":{},"text":{"19":{},"41":{},"87":{}},"component":{},"keyword":{}}],["comput",{"_index":525,"title":{},"name":{},"text":{"7":{},"31":{},"38":{},"41":{},"63":{},"81":{},"87":{},"88":{},"96":{}},"component":{},"keyword":{}}],["computation",{"_index":2226,"title":{},"name":{},"text":{"38":{},"87":{}},"component":{},"keyword":{}}],["concat",{"_index":4265,"title":{},"name":{},"text":{"123":{},"126":{}},"component":{},"keyword":{}}],["conceiv",{"_index":283,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["concept",{"_index":321,"title":{},"name":{},"text":{"5":{},"123":{}},"component":{},"keyword":{}}],["concepts/#mak",{"_index":3249,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["concern",{"_index":2553,"title":{},"name":{},"text":{"47":{},"82":{}},"component":{},"keyword":{}}],["concis",{"_index":1426,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["conclus",{"_index":1045,"title":{"100-3":{}},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["concret",{"_index":3252,"title":{"75-1":{}},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["concurr",{"_index":3726,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["condit",{"_index":2044,"title":{},"name":{},"text":{"31":{},"43":{},"60":{},"65":{}},"component":{},"keyword":{}}],["conduct",{"_index":2550,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["confidenti",{"_index":2343,"title":{"41-55":{}},"name":{},"text":{},"component":{},"keyword":{}}],["config",{"_index":1223,"title":{"34-50":{},"88-13":{}},"name":{"43":{}},"text":{"17":{},"28":{},"31":{},"34":{},"39":{},"43":{},"52":{},"53":{},"60":{},"62":{},"66":{},"71":{},"88":{}},"component":{},"keyword":{}}],["config.json",{"_index":2143,"title":{},"name":{},"text":{"34":{},"39":{}},"component":{},"keyword":{}}],["config.yml",{"_index":2908,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["config=kubewarden_signatures.yaml",{"_index":2897,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["configmap",{"_index":829,"title":{"68-5":{}},"name":{},"text":{"9":{},"27":{},"28":{},"31":{},"60":{},"62":{},"68":{},"71":{},"106":{}},"component":{},"keyword":{}}],["configmap/mi",{"_index":2912,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["configur",{"_index":363,"title":{"24":{},"26":{},"43":{},"58":{},"59":{},"14-1":{},"19-2":{},"26-1":{},"26-4":{},"26-5":{},"26-7":{},"26-9":{},"26-11":{},"26-13":{},"27-3":{},"27-4":{},"27-5":{},"38-3":{},"41-50":{},"43-4":{},"43-10":{},"53-3":{},"60-7":{},"60-8":{},"60-14":{},"62-3":{},"62-4":{}},"name":{},"text":{"6":{},"7":{},"8":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"38":{},"40":{},"41":{},"43":{},"44":{},"46":{},"47":{},"49":{},"51":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"76":{},"78":{},"82":{},"88":{},"105":{},"106":{},"109":{},"115":{},"117":{},"122":{},"126":{}},"component":{},"keyword":{"20":{},"24":{},"43":{}}}],["confimap",{"_index":2922,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["confirm",{"_index":81,"title":{},"name":{},"text":{"1":{},"60":{}},"component":{},"keyword":{}}],["conflict",{"_index":450,"title":{},"name":{},"text":{"7":{},"100":{},"104":{}},"component":{},"keyword":{}}],["confus",{"_index":2232,"title":{},"name":{},"text":{"38":{},"93":{}},"component":{},"keyword":{}}],["congratul",{"_index":3900,"title":{},"name":{},"text":{"103":{}},"component":{},"keyword":{}}],["conjunct",{"_index":2938,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["connect",{"_index":501,"title":{},"name":{},"text":{"7":{},"28":{},"39":{},"40":{},"43":{},"51":{},"57":{},"60":{},"74":{}},"component":{},"keyword":{}}],["consciou",{"_index":2940,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["consequ",{"_index":1178,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["consid",{"_index":1173,"title":{},"name":{},"text":{"16":{},"21":{},"26":{},"27":{},"31":{},"38":{},"46":{},"56":{},"73":{},"76":{},"90":{},"99":{},"105":{}},"component":{},"keyword":{}}],["consider",{"_index":968,"title":{},"name":{},"text":{"12":{},"16":{}},"component":{},"keyword":{}}],["consist",{"_index":736,"title":{},"name":{},"text":{"9":{},"17":{},"19":{},"76":{},"81":{},"93":{}},"component":{},"keyword":{}}],["consol",{"_index":1833,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["constantli",{"_index":778,"title":{},"name":{},"text":{"9":{},"17":{},"46":{},"81":{}},"component":{},"keyword":{}}],["constitut",{"_index":2756,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["constrain",{"_index":657,"title":{},"name":{},"text":{"8":{},"26":{},"98":{},"99":{},"100":{},"104":{}},"component":{},"keyword":{}}],["constrained_annot",{"_index":1137,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["constrained_label",{"_index":3642,"title":{},"name":{},"text":{"97":{},"98":{},"100":{}},"component":{},"keyword":{}}],["constrainedanddeni",{"_index":3729,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["constrainedanddenied.cardin",{"_index":3731,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["constrainedlabel",{"_index":3690,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["constrainedlabels.add(label",{"_index":3728,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["constrainedlabels.intersect(s.deniedlabel",{"_index":3730,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["constraint",{"_index":1110,"title":{"76-2":{}},"name":{},"text":{"14":{},"21":{},"25":{},"26":{},"33":{},"45":{},"49":{},"87":{},"90":{},"93":{},"99":{},"100":{},"104":{}},"component":{},"keyword":{}}],["constraints.gatekeeper.sh/v1beta",{"_index":1435,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["constrainttempl",{"_index":1339,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["consult",{"_index":1609,"title":{},"name":{},"text":{"25":{},"64":{},"71":{}},"component":{},"keyword":{}}],["consum",{"_index":372,"title":{"58-2":{},"58-3":{},"101-2":{},"113-2":{}},"name":{},"text":{"6":{},"8":{},"26":{},"44":{},"45":{},"76":{},"124":{}},"component":{},"keyword":{}}],["contact",{"_index":1812,"title":{},"name":{},"text":{"27":{},"90":{},"93":{}},"component":{},"keyword":{}}],["contain",{"_index":245,"title":{"88":{},"27-2":{},"27-4":{},"41-21":{},"41-30":{},"41-47":{},"45-1":{},"51-1":{}},"name":{"88":{}},"text":{"4":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"18":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"45":{},"46":{},"49":{},"50":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"64":{},"65":{},"67":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"82":{},"87":{},"88":{},"93":{},"95":{},"96":{},"97":{},"100":{},"102":{},"105":{},"109":{},"111":{},"112":{},"115":{},"116":{},"117":{},"126":{}},"component":{},"keyword":{}}],["container.apparmor.security.beta.kubernetes.io/<contain",{"_index":3314,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["container.apparmor.security.beta.kubernetes.io/nginx",{"_index":3316,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["containerimag",{"_index":3595,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["containerimagesnotverifi",{"_index":3598,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["containerport",{"_index":1515,"title":{},"name":{},"text":{"23":{},"27":{},"28":{},"64":{},"95":{}},"component":{},"keyword":{}}],["containers_without_liveness_prob",{"_index":1958,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["container’",{"_index":1038,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["contains(&pod_nam",{"_index":4069,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["content",{"_index":336,"title":{"56-2":{}},"name":{},"text":{"5":{},"16":{},"21":{},"26":{},"27":{},"28":{},"31":{},"34":{},"39":{},"44":{},"53":{},"54":{},"56":{},"62":{},"64":{},"65":{},"71":{},"73":{},"78":{},"97":{},"98":{},"99":{},"100":{},"102":{},"111":{},"119":{},"121":{},"123":{}},"component":{},"keyword":{}}],["context",{"_index":685,"title":{"11":{},"76":{},"94":{},"14-5":{},"49-3":{},"76-6":{},"106-7":{},"116-6":{}},"name":{"11":{},"76":{},"94":{}},"text":{"8":{},"9":{},"11":{},"12":{},"14":{},"16":{},"19":{},"21":{},"26":{},"27":{},"28":{},"29":{},"34":{},"39":{},"44":{},"49":{},"56":{},"60":{},"61":{},"75":{},"76":{},"89":{},"91":{},"92":{},"94":{},"99":{},"106":{},"116":{},"125":{}},"component":{},"keyword":{"11":{},"76":{},"94":{}}}],["contextawar",{"_index":1438,"title":{},"name":{},"text":{"21":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["contextawareresourc",{"_index":904,"title":{"31-16":{}},"name":{},"text":{"11":{},"14":{},"31":{},"34":{},"82":{},"94":{}},"component":{},"keyword":{}}],["contextu",{"_index":4140,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["continu",{"_index":224,"title":{},"name":{},"text":{"4":{},"7":{},"10":{},"19":{},"23":{},"26":{},"31":{},"41":{},"64":{},"65":{},"90":{}},"component":{},"keyword":{}}],["contract",{"_index":3372,"title":{"87-3":{},"90-2":{},"91-1":{}},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["contrari",{"_index":3528,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["contrib",{"_index":3076,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["contribut",{"_index":1904,"title":{"54":{},"55":{},"56-3":{}},"name":{"54":{},"55":{}},"text":{"29":{},"54":{},"56":{}},"component":{},"keyword":{"54":{},"55":{}}}],["contributor",{"_index":2769,"title":{},"name":{},"text":{"54":{},"55":{},"56":{}},"component":{},"keyword":{}}],["control",{"_index":4,"title":{"4":{},"8":{},"9":{},"54":{},"4-1":{},"4-4":{},"6-1":{},"8-4":{},"9-6":{},"9-9":{},"9-10":{},"9-16":{},"13-4":{},"28-2":{},"38-6":{},"41-33":{},"41-47":{},"41-50":{},"41-59":{},"61-2":{},"64-2":{},"65-2":{},"65-5":{},"66-5":{},"67-1":{},"67-2":{},"68-4":{},"69-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"31":{},"32":{},"33":{},"38":{},"41":{},"42":{},"44":{},"45":{},"46":{},"48":{},"51":{},"52":{},"54":{},"55":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"76":{},"82":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{}},"keyword":{"7":{},"10":{},"41":{}}}],["controller(\"`**kw",{"_index":793,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["controller.tgz",{"_index":2697,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["controller:v0.5.5",{"_index":2534,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["controller:v1.27.0",{"_index":2731,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["controller`",{"_index":599,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["controller’",{"_index":22,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"61":{},"63":{},"67":{}},"component":{},"keyword":{}}],["conveni",{"_index":4271,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["convent",{"_index":633,"title":{},"name":{},"text":{"8":{},"9":{},"74":{},"91":{}},"component":{},"keyword":{}}],["convers",{"_index":300,"title":{},"name":{},"text":{"4":{},"49":{}},"component":{},"keyword":{}}],["convert",{"_index":1311,"title":{},"name":{},"text":{"21":{},"31":{},"34":{},"74":{},"111":{}},"component":{},"keyword":{}}],["cool",{"_index":1443,"title":{},"name":{},"text":{"21":{},"82":{},"105":{}},"component":{},"keyword":{}}],["copi",{"_index":1340,"title":{},"name":{},"text":{"21":{},"44":{},"52":{},"65":{},"88":{}},"component":{},"keyword":{}}],["core",{"_index":491,"title":{"9-3":{}},"name":{},"text":{"7":{},"9":{},"11":{},"19":{},"21":{},"27":{},"31":{},"68":{},"76":{},"80":{},"91":{},"99":{}},"component":{},"keyword":{}}],["core/v1",{"_index":925,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["corev1",{"_index":3814,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["corev1.pod",{"_index":3790,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["correct",{"_index":636,"title":{},"name":{},"text":{"8":{},"9":{},"10":{},"15":{},"26":{},"37":{},"43":{},"44":{},"45":{},"46":{},"60":{},"68":{},"73":{},"78":{},"92":{}},"component":{},"keyword":{}}],["correctli",{"_index":917,"title":{},"name":{},"text":{"11":{},"12":{},"60":{},"63":{},"64":{},"65":{},"94":{},"100":{},"109":{}},"component":{},"keyword":{}}],["correspond",{"_index":1784,"title":{},"name":{},"text":{"27":{},"31":{},"40":{}},"component":{},"keyword":{}}],["cosign",{"_index":2368,"title":{},"name":{},"text":{"41":{},"43":{},"45":{},"49":{},"60":{}},"component":{},"keyword":{}}],["cosign.bundl",{"_index":2513,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["cosign.key",{"_index":2810,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["cosign.pub",{"_index":2811,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["cosign_experiment",{"_index":2834,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["cost",{"_index":2619,"title":{},"name":{},"text":{"48":{},"93":{},"97":{},"98":{}},"component":{},"keyword":{}}],["count",{"_index":1723,"title":{"56-3":{}},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["count(miss",{"_index":1353,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["count(r",{"_index":1407,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["counter",{"_index":2190,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["countri",{"_index":2961,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["countrynam",{"_index":2960,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["countryname_default",{"_index":2963,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["coupl",{"_index":2667,"title":{},"name":{},"text":{"49":{},"106":{}},"component":{},"keyword":{}}],["cours",{"_index":2353,"title":{},"name":{},"text":{"41":{},"87":{}},"component":{},"keyword":{}}],["cover",{"_index":1075,"title":{},"name":{},"text":{"14":{},"21":{},"22":{},"41":{},"63":{},"79":{},"87":{},"90":{},"93":{},"96":{},"97":{},"98":{},"100":{},"103":{},"108":{}},"component":{},"keyword":{}}],["coverag",{"_index":2927,"title":{"61-5":{}},"name":{},"text":{"61":{},"77":{},"98":{},"100":{}},"component":{},"keyword":{}}],["cpolr",{"_index":2584,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["cpu",{"_index":1272,"title":{},"name":{},"text":{"19":{},"26":{}},"component":{},"keyword":{}}],["cpus=2",{"_index":3046,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["cr",{"_index":1387,"title":{},"name":{},"text":{"21":{},"40":{},"49":{}},"component":{},"keyword":{}}],["craft",{"_index":1911,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["crane",{"_index":2216,"title":{},"name":{},"text":{"37":{},"45":{}},"component":{},"keyword":{}}],["crash",{"_index":2350,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["crate",{"_index":3991,"title":{},"name":{},"text":{"108":{},"113":{}},"component":{},"keyword":{}}],["crawl",{"_index":2467,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["crd",{"_index":398,"title":{"31":{}},"name":{"31":{}},"text":{"7":{},"8":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"21":{},"24":{},"33":{},"34":{},"42":{},"46":{},"48":{},"49":{},"51":{},"52":{},"64":{},"65":{},"66":{},"92":{}},"component":{},"keyword":{"31":{},"33":{}}}],["crd.projectcalico.org/v1",{"_index":3186,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["crds.enabled=tru",{"_index":3069,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["crds.tgz",{"_index":2696,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["creat",{"_index":150,"title":{"97":{},"109":{},"112":{},"119":{},"123":{},"41-30":{},"53-2":{},"58-1":{},"62-2":{},"62-3":{},"62-4":{},"67-5":{},"68-3":{},"68-5":{},"78-2":{}},"name":{"109":{},"119":{},"123":{}},"text":{"3":{},"4":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"36":{},"38":{},"39":{},"41":{},"43":{},"44":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"56":{},"58":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"74":{},"75":{},"76":{},"78":{},"82":{},"87":{},"88":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"102":{},"104":{},"105":{},"109":{},"111":{},"112":{},"113":{},"116":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{"112":{},"123":{}}}],["createcontainerconfigerror",{"_index":1535,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["created_bi",{"_index":3470,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["createdat",{"_index":2477,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["createopt",{"_index":3241,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["creates\\npolici",{"_index":806,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["creation",{"_index":553,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"23":{},"25":{},"29":{},"41":{},"46":{},"49":{},"64":{},"68":{},"78":{},"94":{},"97":{},"102":{},"109":{},"111":{},"112":{},"119":{},"123":{}},"component":{},"keyword":{"109":{}}}],["creationtimestamp",{"_index":2605,"title":{},"name":{},"text":{"48":{},"60":{}},"component":{},"keyword":{}}],["credenti",{"_index":2320,"title":{"41-15":{},"41-18":{}},"name":{},"text":{"41":{},"58":{},"71":{},"88":{}},"component":{},"keyword":{}}],["criteria",{"_index":3269,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["criterion",{"_index":2444,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["critic",{"_index":861,"title":{},"name":{},"text":{"9":{},"26":{},"46":{},"49":{},"62":{},"82":{},"84":{},"105":{}},"component":{},"keyword":{}}],["critical\":{\"identity\":{\"dock",{"_index":2891,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["crlsign",{"_index":2980,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["cronjob",{"_index":640,"title":{},"name":{},"text":{"8":{},"17":{},"24":{},"26":{},"38":{},"53":{}},"component":{},"keyword":{}}],["cronjob/audit",{"_index":1231,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["cross",{"_index":753,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["crosscheck",{"_index":2796,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["crt",{"_index":2993,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["crucial",{"_index":1430,"title":{},"name":{},"text":{"21":{},"82":{}},"component":{},"keyword":{}}],["crypto",{"_index":3491,"title":{},"name":{"90":{}},"text":{},"component":{},"keyword":{}}],["cryptograph",{"_index":3383,"title":{"90":{}},"name":{},"text":{"87":{},"90":{},"92":{},"95":{}},"component":{},"keyword":{"90":{}}}],["cryptographi",{"_index":2417,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["csi",{"_index":1818,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["csr",{"_index":2987,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["ctx",{"_index":1125,"title":{},"name":{},"text":{"14":{},"75":{}},"component":{},"keyword":{}}],["cujcbg5lur0kpebfdk10gccs9shveqeo3zsoxhursgoadawqdptsyhsgczgejz9w",{"_index":2758,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["curat",{"_index":3159,"title":{},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["curl",{"_index":1474,"title":{},"name":{},"text":{"22":{},"28":{},"62":{},"65":{},"77":{}},"component":{},"keyword":{}}],["current",{"_index":309,"title":{"80-1":{},"84-1":{},"85-1":{},"106-6":{}},"name":{},"text":{"4":{},"5":{},"12":{},"13":{},"24":{},"34":{},"37":{},"38":{},"41":{},"44":{},"49":{},"51":{},"61":{},"70":{},"76":{},"80":{},"81":{},"85":{},"94":{},"95":{},"96":{},"99":{},"106":{},"116":{}},"component":{},"keyword":{}}],["custodi",{"_index":2806,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["custom",{"_index":378,"title":{"18":{},"31":{},"57":{},"66":{},"24-2":{},"57-1":{},"57-3":{}},"name":{"18":{},"57":{},"66":{}},"text":{"6":{},"7":{},"9":{},"12":{},"14":{},"17":{},"21":{},"24":{},"26":{},"28":{},"30":{},"31":{},"34":{},"38":{},"39":{},"41":{},"42":{},"44":{},"47":{},"48":{},"49":{},"51":{},"57":{},"63":{},"64":{},"65":{},"66":{},"67":{},"71":{},"78":{},"92":{},"98":{},"105":{},"106":{},"115":{},"117":{}},"component":{},"keyword":{"18":{},"31":{},"57":{}}}],["custom.json",{"_index":3318,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["d",{"_index":615,"title":{"8-4":{}},"name":{},"text":{"17":{},"28":{},"97":{},"98":{},"99":{},"100":{}},"component":{},"keyword":{}}],["d0ae75527f07",{"_index":2582,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["d53e1c56",{"_index":2900,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["d678",{"_index":2615,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["daemon",{"_index":2265,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["daemonset",{"_index":1602,"title":{},"name":{},"text":{"24":{},"38":{},"53":{}},"component":{},"keyword":{}}],["danger",{"_index":990,"title":{"13-1":{}},"name":{},"text":{},"component":{},"keyword":{}}],["darwin",{"_index":1489,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["dasharray",{"_index":2404,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["dashboard",{"_index":2645,"title":{"65-5":{},"68-5":{}},"name":{},"text":{"48":{},"65":{},"67":{},"68":{}},"component":{},"keyword":{}}],["dashboard.json",{"_index":3117,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["dashboard/import",{"_index":3118,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["data",{"_index":909,"title":{"41-55":{},"47-3":{}},"name":{},"text":{"11":{},"16":{},"21":{},"28":{},"29":{},"39":{},"40":{},"41":{},"43":{},"46":{},"47":{},"49":{},"60":{},"63":{},"65":{},"66":{},"71":{},"74":{},"75":{},"76":{},"81":{},"87":{},"90":{},"91":{},"96":{},"99":{},"104":{},"106":{},"116":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["data\",\"data\":\"pem",{"_index":2306,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["data.foreach(func(key",{"_index":3910,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["data.inventori",{"_index":3290,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["data.kubernet",{"_index":3292,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["data.kubernetes.admiss",{"_index":4263,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["data.kubernetes.admission.deni",{"_index":4267,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["data.valid",{"_index":4282,"title":{},"name":{},"text":{"126":{}},"component":{},"keyword":{}}],["data/default",{"_index":4248,"title":{},"name":{},"text":{"120":{},"124":{}},"component":{},"keyword":{}}],["data/oth",{"_index":4247,"title":{},"name":{},"text":{"120":{},"124":{}},"component":{},"keyword":{}}],["databas",{"_index":3123,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["datalog",{"_index":3979,"title":{},"name":{},"text":{"106":{}},"component":{},"keyword":{}}],["date",{"_index":871,"title":{},"name":{},"text":{"10":{},"17":{},"27":{},"44":{},"48":{},"67":{},"90":{}},"component":{},"keyword":{}}],["day",{"_index":883,"title":{},"name":{},"text":{"10":{},"46":{},"62":{}},"component":{},"keyword":{}}],["db",{"_index":3275,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["deadlock",{"_index":1671,"title":{},"name":{},"text":{"26":{},"38":{}},"component":{},"keyword":{}}],["deal",{"_index":1673,"title":{},"name":{},"text":{"26":{},"41":{},"43":{},"80":{},"91":{},"104":{}},"component":{},"keyword":{}}],["debri",{"_index":1164,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["debug",{"_index":474,"title":{},"name":{},"text":{"7":{},"14":{},"17":{},"39":{},"64":{},"66":{},"69":{},"97":{},"105":{},"115":{},"116":{}},"component":{},"keyword":{}}],["debuginfo",{"_index":4036,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["decemb",{"_index":1371,"title":{},"name":{},"text":{"21":{},"96":{}},"component":{},"keyword":{}}],["decid",{"_index":1318,"title":{},"name":{},"text":{"21":{},"24":{},"31":{},"44":{},"49":{},"76":{}},"component":{},"keyword":{}}],["decis",{"_index":2359,"title":{},"name":{},"text":{"41":{},"47":{},"49":{},"76":{},"94":{},"106":{}},"component":{},"keyword":{}}],["declar",{"_index":494,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"17":{},"34":{},"49":{},"75":{},"94":{},"99":{},"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["decod",{"_index":3794,"title":{},"name":{},"text":{"99":{},"117":{}},"component":{},"keyword":{}}],["decoder.decode(&validationrequest",{"_index":4213,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["decoder.disallowunknownfield",{"_index":4212,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["decreas",{"_index":3182,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["dedic",{"_index":845,"title":{},"name":{},"text":{"9":{},"19":{},"26":{},"28":{},"38":{},"44":{},"49":{},"51":{},"116":{}},"component":{},"keyword":{}}],["deec",{"_index":2586,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["deep",{"_index":3904,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["default",{"_index":437,"title":{"9-11":{},"61-1":{},"67-4":{}},"name":{},"text":{"7":{},"8":{},"9":{},"11":{},"12":{},"15":{},"16":{},"17":{},"18":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"33":{},"34":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"61":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"76":{},"77":{},"78":{},"82":{},"91":{},"93":{},"95":{},"97":{},"99":{},"105":{},"110":{},"111":{},"115":{},"117":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{}}],["default_act",{"_index":4172,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["default_add_cap",{"_index":3213,"title":{},"name":{},"text":{"73":{}},"component":{},"keyword":{}}],["default_allow_privilege_escal",{"_index":1748,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["default_keyfil",{"_index":2952,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["default_resourc",{"_index":4173,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["default_us",{"_index":4171,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["defaultact",{"_index":3962,"title":{},"name":{},"text":{"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["defaultaddcap",{"_index":1797,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["defaultallowprivilegeescal",{"_index":1795,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["defaultrequest",{"_index":3963,"title":{},"name":{},"text":{"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["defaultresourc",{"_index":1870,"title":{},"name":{},"text":{"28":{},"105":{},"117":{}},"component":{},"keyword":{}}],["defaults.tgz",{"_index":2704,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["defaults:1.5.4",{"_index":2524,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["defaultus",{"_index":3961,"title":{},"name":{},"text":{"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["defin",{"_index":134,"title":{"98":{},"110":{},"9-12":{},"21-9":{},"82-2":{},"82-5":{}},"name":{"110":{}},"text":{"3":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"36":{},"41":{},"42":{},"43":{},"44":{},"48":{},"49":{},"51":{},"52":{},"58":{},"60":{},"63":{},"64":{},"65":{},"66":{},"71":{},"72":{},"73":{},"76":{},"81":{},"82":{},"91":{},"93":{},"97":{},"98":{},"99":{},"100":{},"102":{},"103":{},"104":{},"105":{},"106":{},"110":{},"111":{},"112":{},"115":{},"117":{}},"component":{},"keyword":{"98":{}}}],["definit",{"_index":397,"title":{"31":{},"9-5":{}},"name":{},"text":{"7":{},"9":{},"11":{},"14":{},"15":{},"16":{},"17":{},"21":{},"23":{},"26":{},"27":{},"30":{},"31":{},"34":{},"38":{},"46":{},"49":{},"64":{},"65":{},"92":{},"110":{}},"component":{},"keyword":{"31":{}}}],["delay",{"_index":1668,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["deleg",{"_index":2663,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["delet",{"_index":449,"title":{"41-11":{}},"name":{},"text":{"7":{},"8":{},"9":{},"15":{},"20":{},"23":{},"26":{},"31":{},"35":{},"36":{},"41":{},"47":{},"70":{},"74":{},"76":{},"98":{},"105":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["deleteopt",{"_index":3243,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["deliver",{"_index":2493,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["demand",{"_index":1244,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["demo",{"_index":1060,"title":{},"name":{},"text":{"14":{},"21":{},"25":{},"30":{},"75":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["demo.kubewarden.admiss",{"_index":1105,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["demo.yaml",{"_index":1610,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["demo/src/settings.r",{"_index":4008,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["demo:/src",{"_index":3653,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["demonstr",{"_index":2099,"title":{},"name":{},"text":{"32":{}},"component":{},"keyword":{}}],["deni",{"_index":588,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"49":{},"93":{},"94":{},"95":{},"97":{},"98":{},"99":{},"100":{},"104":{},"123":{}},"component":{},"keyword":{}}],["denial",{"_index":1670,"title":{},"name":{},"text":{"26":{},"38":{},"41":{},"74":{}},"component":{},"keyword":{}}],["denied_label",{"_index":3641,"title":{},"name":{},"text":{"97":{},"98":{},"100":{}},"component":{},"keyword":{}}],["deniedlabel",{"_index":3687,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["deniednam",{"_index":3694,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["deny[msg",{"_index":4269,"title":{},"name":{},"text":{"123":{},"126":{}},"component":{},"keyword":{}}],["denylist",{"_index":1594,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["denyport",{"_index":3299,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["depend",{"_index":141,"title":{"33":{},"33-1":{},"33-2":{},"66-1":{},"96-3":{},"108-1":{},"108-2":{}},"name":{"33":{}},"text":{"3":{},"4":{},"10":{},"12":{},"15":{},"16":{},"21":{},"33":{},"41":{},"45":{},"47":{},"48":{},"66":{},"69":{},"76":{},"88":{},"107":{},"108":{},"123":{}},"component":{},"keyword":{"33":{}}}],["dependabot",{"_index":2672,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["dependson",{"_index":1147,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["deploy",{"_index":149,"title":{"41-33":{},"41-47":{},"49-8":{},"94-2":{},"121-3":{}},"name":{"19":{},"26":{},"59":{}},"text":{"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"11":{},"13":{},"14":{},"15":{},"17":{},"19":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"38":{},"41":{},"42":{},"46":{},"48":{},"49":{},"53":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"71":{},"74":{},"76":{},"77":{},"79":{},"92":{},"93":{},"94":{},"95":{},"106":{},"121":{},"125":{}},"component":{},"keyword":{}}],["deployment1",{"_index":2566,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["deployment2",{"_index":1558,"title":{},"name":{},"text":{"23":{},"48":{}},"component":{},"keyword":{}}],["deploymentrollback",{"_index":2057,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["deprec",{"_index":1047,"title":{},"name":{},"text":{"13":{},"27":{},"29":{},"41":{}},"component":{},"keyword":{}}],["depth",{"_index":2469,"title":{},"name":{},"text":{"44":{},"69":{},"103":{}},"component":{},"keyword":{}}],["der",{"_index":2313,"title":{},"name":{},"text":{"40":{},"90":{}},"component":{},"keyword":{}}],["deriv",{"_index":186,"title":{},"name":{},"text":{"4":{},"56":{}},"component":{},"keyword":{}}],["derive(deseri",{"_index":4144,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["derive(seri",{"_index":4145,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["describ",{"_index":396,"title":{},"name":{},"text":{"7":{},"23":{},"29":{},"31":{},"38":{},"42":{},"44":{},"51":{},"52":{},"53":{},"56":{},"60":{},"61":{},"62":{},"67":{},"78":{},"93":{},"99":{},"102":{},"104":{},"106":{},"116":{},"125":{}},"component":{},"keyword":{}}],["descript",{"_index":360,"title":{},"name":{},"text":{"6":{},"7":{},"9":{},"12":{},"21":{},"26":{},"29":{},"31":{},"35":{},"56":{},"60":{},"82":{},"88":{},"89":{},"93":{},"99":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["deseri",{"_index":3365,"title":{},"name":{},"text":{"85":{},"98":{},"115":{},"117":{}},"component":{},"keyword":{}}],["design",{"_index":171,"title":{"9-2":{}},"name":{},"text":{"3":{},"4":{},"6":{},"9":{},"85":{},"92":{},"123":{}},"component":{},"keyword":{}}],["desir",{"_index":484,"title":{},"name":{},"text":{"7":{},"23":{},"31":{},"92":{},"94":{}},"component":{},"keyword":{}}],["desiredhost",{"_index":3581,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["despit",{"_index":1757,"title":{},"name":{},"text":{"27":{},"49":{},"96":{}},"component":{},"keyword":{}}],["destin",{"_index":1190,"title":{},"name":{},"text":{"16":{},"26":{},"71":{}},"component":{},"keyword":{}}],["detach",{"_index":2266,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["detail",{"_index":775,"title":{},"name":{},"text":{"9":{},"11":{},"12":{},"14":{},"18":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"29":{},"34":{},"36":{},"39":{},"41":{},"46":{},"48":{},"49":{},"56":{},"60":{},"61":{},"64":{},"65":{},"67":{},"68":{},"69":{},"71":{},"73":{},"74":{},"76":{},"86":{},"88":{},"98":{},"106":{},"108":{},"123":{},"125":{}},"component":{},"keyword":{}}],["detect",{"_index":705,"title":{},"name":{},"text":{"8":{},"23":{},"34":{},"38":{},"41":{}},"component":{},"keyword":{}}],["determin",{"_index":895,"title":{},"name":{},"text":{"11":{},"12":{},"14":{},"28":{},"82":{}},"component":{},"keyword":{}}],["dev.cosignproject.cosign/signatur",{"_index":2888,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["dev.example.com",{"_index":2295,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["dev.registry.example.com",{"_index":2304,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["dev.sigstore.cosign/bundl",{"_index":2874,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["dev.sigstore.cosign/certif",{"_index":2852,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["dev.sigstore.cosign/chain",{"_index":2876,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["dev.sigstore.cosign/timestamp",{"_index":2871,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["dev/nul",{"_index":3297,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["dev2.example.com:5500",{"_index":2296,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["devel",{"_index":4001,"title":{},"name":{},"text":{"109":{}},"component":{},"keyword":{}}],["develop",{"_index":265,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"21":{},"27":{},"29":{},"33":{},"35":{},"40":{},"48":{},"60":{},"77":{},"79":{},"92":{},"96":{},"100":{},"114":{}},"component":{},"keyword":{"77":{},"82":{}}}],["deviat",{"_index":1179,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["device=tmpf",{"_index":1874,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["devis",{"_index":2347,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["diagram",{"_index":787,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{},"keyword":{}}],["didn’t",{"_index":591,"title":{},"name":{},"text":{"7":{},"23":{},"35":{},"38":{}},"component":{},"keyword":{}}],["diff_id",{"_index":3463,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["differ",{"_index":544,"title":{"106-4":{}},"name":{},"text":{"7":{},"8":{},"9":{},"14":{},"21":{},"26":{},"27":{},"29":{},"31":{},"34":{},"36":{},"38":{},"40":{},"42":{},"43":{},"44":{},"45":{},"46":{},"48":{},"49":{},"51":{},"52":{},"58":{},"60":{},"61":{},"64":{},"65":{},"74":{},"76":{},"78":{},"87":{},"90":{},"92":{},"96":{},"98":{},"99":{},"102":{},"106":{},"119":{},"123":{}},"component":{},"keyword":{}}],["digest",{"_index":1919,"title":{"34-13":{},"88-1":{}},"name":{},"text":{"29":{},"34":{},"41":{},"60":{},"87":{},"88":{},"89":{},"97":{}},"component":{},"keyword":{}}],["digest\":\"sha256:af520a8ccee03811d426c48634b7007f1220c121cc23e14962bb64510585ce97\"},\"type\":\"cosign",{"_index":2894,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["digest_of_verified_imag",{"_index":3392,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["dir",{"_index":2278,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["direct",{"_index":715,"title":{"9-6":{}},"name":{},"text":{"9":{},"23":{},"41":{},"76":{},"81":{},"97":{},"116":{}},"component":{},"keyword":{}}],["directli",{"_index":738,"title":{},"name":{},"text":{"9":{},"27":{},"56":{},"65":{},"106":{}},"component":{},"keyword":{}}],["directori",{"_index":943,"title":{},"name":{},"text":{"12":{},"22":{},"27":{},"34":{},"39":{},"44":{},"51":{},"62":{},"109":{},"111":{},"119":{},"120":{},"121":{},"123":{},"124":{}},"component":{},"keyword":{}}],["disabl",{"_index":436,"title":{"20":{},"20-1":{},"38-7":{}},"name":{"20":{}},"text":{"7":{},"12":{},"17":{},"20":{},"21":{},"27":{},"34":{},"38":{},"39":{},"91":{}},"component":{},"keyword":{}}],["disable_cach",{"_index":3284,"title":{},"name":{},"text":{"76":{},"91":{}},"component":{},"keyword":{}}],["disablestor",{"_index":1732,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["disallow",{"_index":2027,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["disclos",{"_index":59,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["disclosur",{"_index":1,"title":{"1":{}},"name":{"1":{}},"text":{},"component":{},"keyword":{"1":{}}}],["disclosure](https://en.wikipedia.org/wiki/responsible_disclosur",{"_index":19,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["discourag",{"_index":987,"title":{},"name":{},"text":{"12":{},"57":{}},"component":{},"keyword":{}}],["discov",{"_index":3179,"title":{},"name":{},"text":{"70":{},"99":{}},"component":{},"keyword":{}}],["discover",{"_index":2463,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["discuss",{"_index":66,"title":{},"name":{},"text":{"1":{},"9":{},"41":{},"90":{}},"component":{},"keyword":{}}],["disk",{"_index":2145,"title":{},"name":{},"text":{"34":{},"60":{}},"component":{},"keyword":{}}],["disk=20000mb",{"_index":3048,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["dispatch",{"_index":867,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["display",{"_index":2128,"title":{},"name":{},"text":{"34":{},"44":{},"73":{},"74":{},"112":{}},"component":{},"keyword":{}}],["distinct",{"_index":852,"title":{},"name":{},"text":{"9":{},"14":{},"82":{}},"component":{},"keyword":{}}],["distinguish",{"_index":2312,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["distinguished_nam",{"_index":2954,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["distribut",{"_index":181,"title":{"12":{},"103":{},"114":{},"121":{},"125":{},"4-7":{},"21-8":{},"49-5":{},"114-2":{}},"name":{"12":{},"103":{},"114":{},"121":{},"125":{}},"text":{"4":{},"8":{},"9":{},"12":{},"21":{},"22":{},"26":{},"29":{},"37":{},"44":{},"49":{},"62":{},"71":{},"82":{},"88":{},"101":{},"103":{},"114":{},"121":{},"125":{}},"component":{},"keyword":{"103":{},"114":{},"125":{}}}],["distributor",{"_index":367,"title":{},"name":{},"text":{"6":{}},"component":{},"keyword":{}}],["divers",{"_index":756,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["diátaxi",{"_index":332,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["dn",{"_index":2168,"title":{"89-1":{}},"name":{},"text":{"34":{},"89":{}},"component":{},"keyword":{}}],["dns:$fqdn",{"_index":2992,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["dnsname",{"_index":3127,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["do",{"_index":709,"title":{},"name":{},"text":{"8":{},"38":{},"44":{},"99":{},"110":{},"111":{}},"component":{},"keyword":{}}],["doc",{"_index":1146,"title":{"34-16":{},"39-5":{}},"name":{},"text":{"15":{},"21":{},"24":{},"26":{},"34":{},"39":{},"41":{},"48":{},"54":{},"87":{},"92":{},"93":{},"94":{},"105":{}},"component":{},"keyword":{}}],["docker",{"_index":422,"title":{"37-5":{}},"name":{},"text":{"7":{},"28":{},"29":{},"31":{},"34":{},"37":{},"39":{},"45":{},"50":{},"51":{},"53":{},"58":{},"63":{},"84":{},"96":{},"97":{},"100":{},"105":{}},"component":{},"keyword":{}}],["docker.io/library/debian:latest",{"_index":3442,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["docker/config.json",{"_index":2694,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["docker/login",{"_index":2828,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["docker_config",{"_index":2178,"title":{},"name":{},"text":{"34":{},"39":{}},"component":{},"keyword":{}}],["docs.crds.dev",{"_index":551,"title":{},"name":{},"text":{"7":{},"31":{}},"component":{},"keyword":{}}],["docs.kubewarden.io",{"_index":3342,"title":{},"name":{},"text":{"82":{},"105":{}},"component":{},"keyword":{}}],["docs.kubewarden.io/vap",{"_index":1971,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["document",{"_index":199,"title":{"5":{},"54":{},"56":{}},"name":{},"text":{"4":{},"5":{},"7":{},"9":{},"11":{},"14":{},"19":{},"20":{},"21":{},"26":{},"28":{},"29":{},"30":{},"31":{},"34":{},"38":{},"39":{},"41":{},"44":{},"45":{},"46":{},"48":{},"51":{},"52":{},"53":{},"54":{},"56":{},"58":{},"59":{},"60":{},"61":{},"63":{},"64":{},"65":{},"69":{},"71":{},"72":{},"73":{},"74":{},"76":{},"77":{},"78":{},"79":{},"82":{},"87":{},"96":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"106":{},"108":{},"113":{},"114":{},"115":{},"116":{},"117":{},"126":{}},"component":{},"keyword":{"5":{},"6":{},"8":{},"54":{},"56":{}}}],["doesn't",{"_index":1932,"title":{},"name":{},"text":{"29":{},"99":{},"100":{},"126":{}},"component":{},"keyword":{}}],["doesn’t",{"_index":697,"title":{},"name":{},"text":{"8":{},"9":{},"16":{},"21":{},"23":{},"24":{},"34":{},"37":{},"38":{},"41":{},"42":{},"43":{},"44":{},"47":{},"49":{},"51":{},"60":{},"63":{},"64":{},"65":{},"71":{},"76":{},"78":{},"81":{},"84":{},"92":{},"94":{},"96":{},"98":{},"99":{},"100":{},"108":{},"111":{}},"component":{},"keyword":{}}],["domain",{"_index":673,"title":{},"name":{},"text":{"8":{},"17":{},"46":{},"49":{},"62":{},"67":{},"106":{}},"component":{},"keyword":{}}],["don't",{"_index":3647,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["done",{"_index":324,"title":{},"name":{},"text":{"5":{},"7":{},"12":{},"29":{},"30":{},"31":{},"34":{},"44":{},"51":{},"53":{},"60":{},"61":{},"63":{},"80":{},"84":{},"86":{},"87":{},"89":{},"109":{},"112":{}},"component":{},"keyword":{}}],["don’t",{"_index":54,"title":{},"name":{},"text":{"1":{},"15":{},"21":{},"37":{},"41":{},"49":{},"60":{},"66":{},"71":{},"80":{},"84":{},"96":{},"104":{},"106":{},"111":{}},"component":{},"keyword":{}}],["dotnet",{"_index":3328,"title":{},"name":{"80":{}},"text":{"80":{}},"component":{},"keyword":{}}],["doubt",{"_index":1001,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["down",{"_index":2793,"title":{},"name":{},"text":{"56":{},"67":{}},"component":{},"keyword":{}}],["downgrad",{"_index":2372,"title":{"42-6":{}},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["download",{"_index":518,"title":{"52-1":{}},"name":{},"text":{"7":{},"9":{},"14":{},"22":{},"27":{},"29":{},"34":{},"39":{},"45":{},"51":{},"52":{},"53":{},"58":{},"65":{},"77":{},"78":{},"97":{}},"component":{},"keyword":{}}],["downloads\\npolici",{"_index":803,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["downstream",{"_index":2491,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["downtim",{"_index":884,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["downwardapi",{"_index":1816,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["dp.apps.rancher.io/contain",{"_index":2748,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["dp.apps.rancher.io/containers/nginx:1.24.0](http://dp.apps.rancher.io/containers/nginx:1.24.0",{"_index":2765,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["drain",{"_index":4139,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["dri",{"_index":1914,"title":{},"name":{},"text":{"29":{},"74":{}},"component":{},"keyword":{}}],["drift",{"_index":1727,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["drive",{"_index":1432,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["driven",{"_index":3838,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["driver",{"_index":1793,"title":{},"name":{},"text":{"27":{},"28":{},"63":{}},"component":{},"keyword":{}}],["driver=kvm2",{"_index":3041,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["drop",{"_index":1512,"title":{},"name":{},"text":{"23":{},"27":{},"41":{},"67":{},"75":{},"76":{}},"component":{},"keyword":{}}],["dryrun",{"_index":2065,"title":{},"name":{},"text":{"31":{},"74":{}},"component":{},"keyword":{}}],["dsl",{"_index":1004,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["due",{"_index":594,"title":{"41-37":{}},"name":{},"text":{"7":{},"9":{},"10":{},"41":{},"66":{},"75":{},"82":{},"96":{},"119":{}},"component":{},"keyword":{}}],["dump",{"_index":2144,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["dump_results_to_disk",{"_index":2146,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["duplic",{"_index":1051,"title":{},"name":{},"text":{"14":{},"56":{},"76":{}},"component":{},"keyword":{}}],["durat",{"_index":1289,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["dure",{"_index":889,"title":{},"name":{},"text":{"10":{},"14":{},"16":{},"21":{},"31":{},"34":{},"38":{},"43":{},"44":{},"60":{},"67":{},"70":{},"76":{},"82":{},"86":{},"87":{},"96":{},"99":{},"103":{}},"component":{},"keyword":{}}],["dynam",{"_index":769,"title":{"38-6":{}},"name":{},"text":{"9":{},"26":{},"38":{},"92":{}},"component":{},"keyword":{}}],["e",{"_index":1325,"title":{},"name":{},"text":{"21":{},"34":{},"97":{},"105":{},"120":{},"124":{}},"component":{},"keyword":{}}],["e.g",{"_index":1008,"title":{},"name":{},"text":{"13":{},"22":{},"26":{},"31":{},"34":{},"87":{},"91":{},"96":{}},"component":{},"keyword":{}}],["e.string(\"another_field",{"_index":3877,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["e.string(\"nam",{"_index":3799,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["e.string(\"namespac",{"_index":3801,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["e.string(\"one_field",{"_index":3876,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["e1f1",{"_index":4241,"title":{},"name":{},"text":{"119":{},"123":{}},"component":{},"keyword":{}}],["e2",{"_index":1396,"title":{},"name":{"100":{}},"text":{"21":{},"32":{},"97":{},"100":{},"104":{},"105":{}},"component":{},"keyword":{}}],["e2e.bat",{"_index":1409,"title":{},"name":{},"text":{"21":{},"77":{},"78":{},"97":{},"100":{},"104":{},"105":{}},"component":{},"keyword":{}}],["e332",{"_index":2573,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["e51a",{"_index":2640,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["e68b",{"_index":2579,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["e955",{"_index":2634,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["ea0ddd497f04",{"_index":3664,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["each",{"_index":347,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"11":{},"14":{},"15":{},"19":{},"24":{},"26":{},"27":{},"29":{},"31":{},"34":{},"38":{},"41":{},"42":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"52":{},"57":{},"60":{},"63":{},"68":{},"70":{},"71":{},"73":{},"76":{},"86":{},"99":{},"100":{},"106":{},"113":{},"116":{}},"component":{},"keyword":{}}],["earlier",{"_index":1434,"title":{},"name":{},"text":{"21":{},"23":{},"70":{},"99":{},"104":{},"105":{},"117":{},"120":{}},"component":{},"keyword":{}}],["eas",{"_index":762,"title":{},"name":{},"text":{"9":{},"65":{}},"component":{},"keyword":{}}],["easi",{"_index":1562,"title":{},"name":{},"text":{"23":{},"36":{},"96":{}},"component":{},"keyword":{}}],["easier",{"_index":403,"title":{},"name":{},"text":{"7":{},"9":{},"22":{},"106":{}},"component":{},"keyword":{}}],["easiest",{"_index":44,"title":{},"name":{},"text":{"1":{},"96":{}},"component":{},"keyword":{}}],["easili",{"_index":3513,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["east1",{"_index":1689,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["ecdsa",{"_index":880,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["echo",{"_index":421,"title":{},"name":{},"text":{"7":{},"21":{},"60":{},"62":{},"64":{},"77":{},"78":{},"100":{},"105":{}},"component":{},"keyword":{}}],["ecosystem",{"_index":239,"title":{},"name":{},"text":{"4":{},"9":{},"108":{}},"component":{},"keyword":{}}],["ecr",{"_index":931,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{},"keyword":{}}],["edg",{"_index":2229,"title":{},"name":{},"text":{"38":{},"96":{},"116":{}},"component":{},"keyword":{}}],["edit",{"_index":318,"title":{"5-3":{}},"name":{},"text":{"29":{},"37":{},"44":{},"68":{},"69":{},"94":{},"95":{}},"component":{},"keyword":{}}],["edit/upgrad",{"_index":3169,"title":{},"name":{},"text":{"68":{}},"component":{},"keyword":{}}],["editor",{"_index":669,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["eebb9",{"_index":1835,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["effect",{"_index":714,"title":{"9-4":{},"26-16":{}},"name":{},"text":{"26":{},"31":{},"41":{},"57":{},"74":{},"92":{},"99":{}},"component":{},"keyword":{}}],["effici",{"_index":733,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["effort",{"_index":287,"title":{},"name":{},"text":{"4":{},"45":{},"56":{},"93":{},"116":{}},"component":{},"keyword":{}}],["eg",{"_index":2967,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["eight",{"_index":3863,"title":{},"name":{},"text":{"100":{}},"component":{},"keyword":{}}],["elasticsearch",{"_index":2648,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["elect",{"_index":3494,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["element",{"_index":1077,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["elvish",{"_index":2173,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["email",{"_index":60,"title":{},"name":{},"text":{"1":{},"34":{}},"component":{},"keyword":{}}],["email@example.com",{"_index":1448,"title":{},"name":{},"text":{"21":{},"105":{}},"component":{},"keyword":{}}],["emb",{"_index":1912,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["embed",{"_index":2071,"title":{},"name":{},"text":{"31":{},"49":{},"82":{},"96":{},"104":{},"111":{}},"component":{},"keyword":{}}],["emerg",{"_index":1292,"title":{"20":{}},"name":{"20":{}},"text":{"20":{}},"component":{},"keyword":{}}],["emit",{"_index":1122,"title":{},"name":{},"text":{"14":{},"99":{}},"component":{},"keyword":{}}],["employ",{"_index":734,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["empow",{"_index":3344,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["empti",{"_index":2022,"title":{},"name":{},"text":{"31":{},"66":{},"90":{},"97":{},"105":{},"126":{}},"component":{},"keyword":{}}],["empty\".to_str",{"_index":4155,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["empty_lay",{"_index":3480,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["emptydir",{"_index":1815,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{},"keyword":{}}],["enabl",{"_index":207,"title":{"38-8":{},"46-1":{},"67-4":{},"68-4":{},"82-1":{}},"name":{},"text":{"4":{},"9":{},"12":{},"14":{},"17":{},"23":{},"27":{},"30":{},"31":{},"38":{},"39":{},"41":{},"46":{},"51":{},"52":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"71":{},"80":{},"82":{},"101":{},"102":{},"106":{},"109":{}},"component":{},"keyword":{}}],["encod",{"_index":2091,"title":{},"name":{},"text":{"31":{},"40":{},"57":{},"86":{},"87":{},"88":{},"89":{},"90":{}},"component":{},"keyword":{}}],["encoding.textmarshal",{"_index":3701,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["encoding/json",{"_index":3636,"title":{},"name":{},"text":{"96":{},"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["encrypt",{"_index":56,"title":{},"name":{},"text":{"1":{},"41":{},"64":{},"66":{},"69":{}},"component":{},"keyword":{}}],["end",{"_index":791,"title":{"100":{},"77-1":{}},"name":{},"text":{"9":{},"14":{},"21":{},"25":{},"29":{},"31":{},"40":{},"43":{},"53":{},"57":{},"60":{},"74":{},"76":{},"77":{},"78":{},"99":{},"100":{},"102":{},"104":{},"109":{},"111":{}},"component":{},"keyword":{"100":{}}}],["endeavor",{"_index":2108,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["endpoint",{"_index":771,"title":{"28-3":{},"69-3":{}},"name":{},"text":{"9":{},"28":{},"31":{},"39":{},"41":{},"46":{},"48":{},"52":{},"64":{},"65":{},"66":{},"68":{},"69":{}},"component":{},"keyword":{}}],["endpointselector",{"_index":3195,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["enforc",{"_index":202,"title":{"7-6":{},"29-7":{},"49-7":{},"64-3":{}},"name":{},"text":{"4":{},"7":{},"9":{},"18":{},"19":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"41":{},"46":{},"49":{},"57":{},"60":{},"64":{},"71":{},"82":{},"87":{}},"component":{},"keyword":{}}],["enforcer:v1.0.3",{"_index":1573,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["engag",{"_index":286,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["engin",{"_index":183,"title":{},"name":{},"text":{"4":{},"9":{},"15":{},"27":{},"28":{},"49":{},"96":{},"100":{},"116":{}},"component":{},"keyword":{}}],["enhanc",{"_index":747,"title":{},"name":{},"text":{"9":{},"14":{},"40":{},"57":{}},"component":{},"keyword":{}}],["enjoy",{"_index":3898,"title":{},"name":{},"text":{"103":{}},"component":{},"keyword":{}}],["enough",{"_index":1612,"title":{},"name":{},"text":{"25":{},"60":{},"107":{}},"component":{},"keyword":{}}],["enrich",{"_index":4274,"title":{},"name":{},"text":{"125":{}},"component":{},"keyword":{}}],["ensur",{"_index":218,"title":{"8-1":{}},"name":{},"text":{"4":{},"8":{},"9":{},"10":{},"16":{},"19":{},"20":{},"26":{},"28":{},"29":{},"31":{},"38":{},"44":{},"45":{},"49":{},"61":{},"70":{},"87":{},"98":{},"100":{},"118":{}},"component":{},"keyword":{}}],["enter",{"_index":2248,"title":{},"name":{},"text":{"38":{},"44":{},"60":{},"67":{}},"component":{},"keyword":{}}],["enterpris",{"_index":99,"title":{"2":{}},"name":{"2":{}},"text":{"2":{}},"component":{},"keyword":{}}],["entir",{"_index":878,"title":{},"name":{},"text":{"10":{},"14":{},"21":{},"26":{},"38":{},"90":{}},"component":{},"keyword":{}}],["entiti",{"_index":2807,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["entri",{"_index":2824,"title":{"106-5":{}},"name":{},"text":{"60":{},"66":{},"87":{},"89":{},"98":{},"101":{},"106":{},"113":{},"120":{},"124":{}},"component":{},"keyword":{}}],["entrypoint",{"_index":3460,"title":{},"name":{},"text":{"88":{},"119":{},"120":{},"124":{}},"component":{},"keyword":{}}],["enum",{"_index":2028,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["env",{"_index":472,"title":{},"name":{},"text":{"7":{},"31":{},"38":{},"43":{},"60":{},"88":{},"102":{}},"component":{},"keyword":{}}],["environ",{"_index":203,"title":{"19":{},"19-1":{},"52-3":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"18":{},"19":{},"21":{},"22":{},"26":{},"29":{},"31":{},"38":{},"41":{},"43":{},"51":{},"52":{},"57":{},"60":{},"64":{},"65":{},"77":{},"86":{},"91":{},"93":{},"96":{},"112":{},"116":{}},"component":{},"keyword":{"77":{}}}],["environment\",<br",{"_index":2016,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["envvar",{"_index":2086,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["eof",{"_index":558,"title":{},"name":{},"text":{"7":{},"13":{},"21":{},"23":{},"27":{},"51":{},"52":{},"53":{},"64":{},"65":{},"66":{},"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["eol",{"_index":2950,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["ephemer",{"_index":1817,"title":{},"name":{},"text":{"27":{},"60":{}},"component":{},"keyword":{}}],["epoch",{"_index":1335,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["eq",{"_index":1415,"title":{},"name":{},"text":{"21":{},"100":{},"105":{}},"component":{},"keyword":{}}],["equal",{"_index":1632,"title":{},"name":{},"text":{"26":{},"38":{},"43":{},"60":{},"93":{},"111":{}},"component":{},"keyword":{}}],["equival",{"_index":1785,"title":{"93-3":{}},"name":{},"text":{"27":{},"29":{},"31":{},"74":{},"93":{}},"component":{},"keyword":{}}],["err",{"_index":3706,"title":{},"name":{},"text":{"98":{},"99":{},"104":{},"105":{},"117":{}},"component":{},"keyword":{}}],["err(\"defaultact",{"_index":4177,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["err(\"defaultresourc",{"_index":4179,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["err(\"defaultus",{"_index":4175,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["err(\"validact",{"_index":4157,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["err(\"validresourc",{"_index":4159,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["err(\"validus",{"_index":4154,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["err(_",{"_index":4065,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["err(string::from(\"no",{"_index":4020,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["err.error",{"_index":3795,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["errapplied(1",{"_index":1150,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["erron",{"_index":2790,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["error",{"_index":538,"title":{},"name":{},"text":{"7":{},"9":{},"12":{},"13":{},"14":{},"15":{},"21":{},"24":{},"25":{},"27":{},"31":{},"35":{},"39":{},"48":{},"56":{},"60":{},"73":{},"74":{},"85":{},"86":{},"91":{},"93":{},"94":{},"95":{},"96":{},"98":{},"99":{},"100":{},"101":{},"104":{},"105":{},"107":{},"116":{}},"component":{},"keyword":{}}],["error_cod",{"_index":2196,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["escal",{"_index":1501,"title":{"27-2":{}},"name":{},"text":{"23":{},"27":{}},"component":{},"keyword":{}}],["escalation.kubewarden.admiss",{"_index":1752,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["especi",{"_index":1627,"title":{},"name":{},"text":{"26":{},"104":{}},"component":{},"keyword":{}}],["essenti",{"_index":1429,"title":{},"name":{},"text":{"21":{},"49":{}},"component":{},"keyword":{}}],["estim",{"_index":3549,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["etc",{"_index":671,"title":{},"name":{},"text":{"8":{},"34":{},"92":{}},"component":{},"keyword":{}}],["etc/group",{"_index":3476,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["etc/k8s/admission/certs/rootca.crt",{"_index":3205,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["etc/k8s/admission/kubeconfig",{"_index":3202,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["etc/passwd",{"_index":3471,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["etc/rancher/admission/kubeconfig",{"_index":3010,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["etc/rancher/k3s/admission/admission.yaml",{"_index":3001,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["etc/rancher/k3s/admission/cert",{"_index":2944,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["etc/rancher/k3s/admission/certs/client.crt",{"_index":3012,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["etc/rancher/k3s/admission/certs/client.key",{"_index":3013,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["etc/rancher/k3s/admission/certs/rootca.crt",{"_index":3021,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["etc/rancher/k3s/admission/kubeconfig",{"_index":3007,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["etc/rancher/k3s/config.yaml",{"_index":3014,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["ethic",{"_index":14,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["evad",{"_index":653,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["evalu",{"_index":392,"title":{"38":{},"38-7":{},"38-8":{}},"name":{"38":{}},"text":{"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"21":{},"23":{},"25":{},"26":{},"28":{},"29":{},"31":{},"34":{},"35":{},"36":{},"38":{},"39":{},"41":{},"46":{},"47":{},"48":{},"49":{},"64":{},"65":{},"69":{},"72":{},"74":{},"76":{},"86":{},"90":{},"94":{},"95":{},"99":{},"101":{},"105":{},"106":{},"107":{},"111":{},"113":{},"115":{},"116":{},"117":{},"119":{},"122":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{}}],["even",{"_index":642,"title":{},"name":{},"text":{"8":{},"18":{},"19":{},"26":{},"29":{},"31":{},"41":{},"57":{},"106":{}},"component":{},"keyword":{}}],["event",{"_index":728,"title":{"47-1":{}},"name":{},"text":{"9":{},"38":{},"47":{},"63":{},"64":{},"66":{},"68":{},"69":{},"82":{},"99":{}},"component":{},"keyword":{}}],["eventu",{"_index":4249,"title":{},"name":{},"text":{"121":{}},"component":{},"keyword":{}}],["everybodi",{"_index":2772,"title":{},"name":{},"text":{"54":{},"56":{}},"component":{},"keyword":{}}],["everyth",{"_index":1161,"title":{},"name":{},"text":{"15":{},"31":{},"32":{},"44":{},"51":{},"52":{},"66":{},"78":{},"80":{},"84":{},"105":{},"109":{},"121":{},"123":{},"125":{}},"component":{},"keyword":{}}],["evict",{"_index":1658,"title":{},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{}}],["evolv",{"_index":1211,"title":{},"name":{},"text":{"17":{},"46":{},"49":{},"81":{},"96":{}},"component":{},"keyword":{}}],["ex",{"_index":2835,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["exact",{"_index":1622,"title":{},"name":{},"text":{"26":{},"31":{},"91":{}},"component":{},"keyword":{}}],["exactli",{"_index":2038,"title":{},"name":{},"text":{"31":{},"43":{},"120":{}},"component":{},"keyword":{}}],["examin",{"_index":2247,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["exampl",{"_index":243,"title":{"7-6":{},"13-6":{},"15-3":{},"23-1":{},"41-37":{},"43-3":{},"48-2":{},"48-3":{},"73-2":{},"74-2":{},"75-1":{},"78-1":{},"84-2":{},"85-2":{},"87-2":{},"94-1":{},"95-1":{},"102-4":{},"105-1":{},"114-3":{},"115-1":{},"117-1":{},"126-1":{}},"name":{"95":{}},"text":{"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"33":{},"36":{},"38":{},"41":{},"42":{},"43":{},"44":{},"45":{},"48":{},"49":{},"51":{},"52":{},"56":{},"57":{},"58":{},"60":{},"65":{},"66":{},"67":{},"71":{},"73":{},"75":{},"76":{},"77":{},"80":{},"82":{},"88":{},"89":{},"91":{},"93":{},"95":{},"99":{},"100":{},"101":{},"105":{},"106":{},"109":{},"115":{},"116":{},"117":{},"121":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{}}],["example.kubewarden.admiss",{"_index":3552,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["example.yaml",{"_index":3550,"title":{},"name":{},"text":{"93":{},"94":{}},"component":{},"keyword":{}}],["example/.github/workflows/release.yml@refs/heads/main",{"_index":2434,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["except",{"_index":1166,"title":{},"name":{},"text":{"15":{},"24":{},"121":{}},"component":{},"keyword":{}}],["exchang",{"_index":2165,"title":{},"name":{},"text":{"34":{},"76":{}},"component":{},"keyword":{}}],["exclud",{"_index":2939,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["exclus",{"_index":330,"title":{},"name":{},"text":{"5":{},"19":{}},"component":{},"keyword":{}}],["execut",{"_index":156,"title":{"107-1":{}},"name":{},"text":{"3":{},"4":{},"7":{},"8":{},"9":{},"12":{},"19":{},"21":{},"22":{},"26":{},"28":{},"29":{},"31":{},"34":{},"45":{},"49":{},"57":{},"60":{},"77":{},"78":{},"86":{},"89":{},"92":{},"96":{},"98":{},"99":{},"100":{},"102":{},"106":{},"107":{},"113":{},"116":{},"117":{},"118":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{}}],["executionmod",{"_index":1439,"title":{},"name":{},"text":{"21":{},"82":{},"105":{},"116":{},"121":{},"125":{}},"component":{},"keyword":{}}],["exempt",{"_index":2331,"title":{"41-33":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["exercis",{"_index":1770,"title":{},"name":{},"text":{"27":{},"82":{},"106":{},"123":{}},"component":{},"keyword":{}}],["exist",{"_index":454,"title":{"118-1":{},"122-2":{}},"name":{},"text":{"7":{},"8":{},"9":{},"14":{},"15":{},"17":{},"21":{},"26":{},"31":{},"34":{},"36":{},"45":{},"46":{},"54":{},"56":{},"66":{},"71":{},"74":{},"76":{},"78":{},"94":{},"106":{},"107":{},"112":{},"118":{},"119":{},"123":{}},"component":{},"keyword":{}}],["exit",{"_index":2271,"title":{},"name":{},"text":{"39":{},"73":{},"99":{}},"component":{},"keyword":{}}],["exp",{"_index":3749,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["expand",{"_index":2436,"title":{},"name":{},"text":{"43":{},"48":{},"74":{},"93":{}},"component":{},"keyword":{}}],["expect",{"_index":635,"title":{},"name":{},"text":{"8":{},"19":{},"21":{},"26":{},"29":{},"34":{},"42":{},"49":{},"60":{},"64":{},"66":{},"71":{},"77":{},"78":{},"79":{},"98":{},"104":{},"111":{},"112":{},"120":{},"125":{}},"component":{},"keyword":{}}],["expected_denied_label",{"_index":3746,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["expected_regexp",{"_index":3754,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["expected_validation_result",{"_index":4081,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["expectedisvalid",{"_index":3824,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["expens",{"_index":3384,"title":{},"name":{},"text":{"87":{},"88":{}},"component":{},"keyword":{}}],["experi",{"_index":4187,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["experienc",{"_index":2770,"title":{},"name":{},"text":{"54":{},"55":{}},"component":{},"keyword":{}}],["experiment",{"_index":3329,"title":{},"name":{},"text":{"80":{}},"component":{},"keyword":{}}],["expert",{"_index":3353,"title":{},"name":{},"text":{"84":{}},"component":{},"keyword":{}}],["expir",{"_index":876,"title":{},"name":{},"text":{"10":{},"38":{},"70":{},"87":{},"90":{}},"component":{},"keyword":{}}],["expiri",{"_index":3175,"title":{},"name":{"70":{}},"text":{"70":{}},"component":{},"keyword":{}}],["explain",{"_index":1055,"title":{},"name":{},"text":{"14":{},"20":{},"29":{},"30":{},"38":{},"46":{},"63":{},"66":{},"118":{}},"component":{},"keyword":{}}],["explan",{"_index":272,"title":{},"name":{},"text":{"4":{},"5":{},"21":{},"25":{},"45":{},"49":{},"61":{},"74":{},"86":{}},"component":{},"keyword":{}}],["explanations—underli",{"_index":320,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["explicit",{"_index":516,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["explicitli",{"_index":1384,"title":{},"name":{},"text":{"21":{},"31":{}},"component":{},"keyword":{}}],["exploit",{"_index":2318,"title":{"41-8":{},"41-40":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["explor",{"_index":3077,"title":{"64-4":{},"66-6":{},"66-7":{}},"name":{},"text":{},"component":{},"keyword":{}}],["export",{"_index":2712,"title":{},"name":{},"text":{"52":{},"62":{},"66":{},"96":{},"113":{},"116":{}},"component":{},"keyword":{}}],["expos",{"_index":823,"title":{},"name":{},"text":{"9":{},"17":{},"27":{},"28":{},"35":{},"39":{},"58":{},"61":{},"63":{},"65":{},"66":{},"71":{},"74":{},"76":{},"81":{},"86":{},"88":{},"89":{},"90":{},"91":{},"92":{},"98":{},"107":{},"116":{}},"component":{},"keyword":{}}],["exposedport",{"_index":3457,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["exposur",{"_index":3289,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["expr",{"_index":1416,"title":{},"name":{},"text":{"21":{},"78":{},"100":{},"105":{}},"component":{},"keyword":{}}],["express",{"_index":1048,"title":{"14-3":{}},"name":{},"text":{"14":{},"24":{},"25":{},"30":{},"31":{},"71":{},"92":{},"93":{},"94":{},"95":{},"97":{},"98":{},"99":{}},"component":{},"keyword":{}}],["extend",{"_index":735,"title":{},"name":{},"text":{"9":{},"14":{},"30":{},"85":{},"92":{},"106":{},"112":{}},"component":{},"keyword":{}}],["extens",{"_index":285,"title":{"67":{},"9-5":{},"67-1":{}},"name":{},"text":{"4":{},"30":{},"43":{},"45":{},"67":{},"92":{},"94":{},"95":{}},"component":{},"keyword":{"67":{},"68":{}}}],["extensions/v1beta1",{"_index":2040,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["extern",{"_index":691,"title":{"41-55":{},"47-3":{},"71-1":{}},"name":{},"text":{"8":{},"26":{},"31":{},"34":{},"41":{},"47":{},"76":{}},"component":{},"keyword":{}}],["extfil",{"_index":2997,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["extra",{"_index":2204,"title":{},"name":{},"text":{"37":{},"43":{},"49":{},"60":{},"64":{},"74":{},"86":{},"98":{}},"component":{},"keyword":{}}],["extract",{"_index":1314,"title":{},"name":{},"text":{"21":{},"22":{},"45":{},"94":{},"99":{},"104":{},"120":{},"124":{}},"component":{},"keyword":{}}],["f",{"_index":557,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"21":{},"23":{},"25":{},"27":{},"28":{},"29":{},"34":{},"51":{},"52":{},"53":{},"64":{},"66":{},"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["f13397a0d7b5",{"_index":2601,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["facil",{"_index":349,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["factor",{"_index":3272,"title":{},"name":{},"text":{"76":{},"106":{}},"component":{},"keyword":{}}],["fail",{"_index":541,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"21":{},"23":{},"25":{},"30":{},"31":{},"39":{},"40":{},"41":{},"48":{},"69":{},"77":{},"78":{},"93":{},"94":{},"95":{},"99":{},"100":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["failedcr",{"_index":1520,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["failur",{"_index":1104,"title":{},"name":{},"text":{"14":{},"20":{},"24":{},"25":{},"26":{},"31":{},"38":{},"39":{},"77":{},"78":{},"86":{},"95":{},"97":{},"100":{},"104":{},"105":{},"112":{}},"component":{},"keyword":{}}],["failure=tru",{"_index":1880,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["failurepolici",{"_index":536,"title":{},"name":{},"text":{"7":{},"30":{},"31":{},"93":{},"94":{}},"component":{},"keyword":{}}],["failurepolicy=fail",{"_index":2051,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["failurepolicy=ignor",{"_index":2052,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["failurepolicytyp",{"_index":2031,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["fals",{"_index":561,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"17":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"38":{},"46":{},"51":{},"52":{},"58":{},"60":{},"64":{},"66":{},"74":{},"78":{},"82":{},"98":{},"99":{},"105":{},"111":{},"120":{},"121":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{}}],["famili",{"_index":3629,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["familiar",{"_index":1934,"title":{},"name":{},"text":{"29":{},"54":{},"77":{},"105":{},"115":{},"126":{}},"component":{},"keyword":{}}],["far",{"_index":3773,"title":{},"name":{},"text":{"98":{},"100":{},"103":{},"114":{}},"component":{},"keyword":{}}],["fast",{"_index":1094,"title":{},"name":{},"text":{"14":{},"19":{},"26":{},"84":{},"92":{},"96":{},"99":{}},"component":{},"keyword":{}}],["faster",{"_index":1714,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["fatal",{"_index":3987,"title":{},"name":{},"text":{"107":{}},"component":{},"keyword":{}}],["fault",{"_index":624,"title":{},"name":{},"text":{"8":{},"26":{}},"component":{},"keyword":{}}],["favor",{"_index":1657,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["favorit",{"_index":290,"title":{},"name":{},"text":{"4":{},"77":{}},"component":{},"keyword":{}}],["fb836.kubewarden.admiss",{"_index":1755,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["fe0fad5cd9ad",{"_index":2576,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["featur",{"_index":343,"title":{"9-3":{},"41-44":{},"67-6":{}},"name":{},"text":{"5":{},"8":{},"9":{},"10":{},"14":{},"17":{},"26":{},"31":{},"33":{},"38":{},"41":{},"42":{},"46":{},"48":{},"49":{},"61":{},"82":{},"86":{},"92":{},"93":{},"94":{},"96":{},"99":{},"105":{},"118":{}},"component":{},"keyword":{}}],["feedback",{"_index":1006,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["feel",{"_index":3035,"title":{},"name":{},"text":{"63":{},"81":{},"107":{}},"component":{},"keyword":{}}],["fetch",{"_index":894,"title":{"76-4":{}},"name":{},"text":{"11":{},"12":{},"29":{},"34":{},"46":{},"51":{},"52":{},"76":{},"88":{},"91":{},"94":{}},"component":{},"keyword":{}}],["few",{"_index":621,"title":{},"name":{},"text":{"8":{},"26":{},"29":{},"46":{},"51":{},"52":{},"60":{},"67":{},"99":{},"110":{},"112":{}},"component":{},"keyword":{}}],["ffjahl+rravmqxrmkkgtitaqxcx6mhgga1udeqrxmg+gbwh0dhbzoi8vz2l0ahvi",{"_index":2860,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["field",{"_index":1000,"title":{"14-1":{},"27-6":{}},"name":{},"text":{"13":{},"14":{},"16":{},"18":{},"21":{},"24":{},"25":{},"26":{},"27":{},"28":{},"31":{},"34":{},"38":{},"40":{},"42":{},"43":{},"44":{},"46":{},"47":{},"49":{},"57":{},"58":{},"60":{},"65":{},"67":{},"74":{},"75":{},"76":{},"78":{},"82":{},"91":{},"93":{},"105":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["field_selector",{"_index":3508,"title":{},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["file",{"_index":148,"title":{"18-1":{},"40-1":{},"43-10":{},"52-2":{},"60-14":{},"62-3":{},"62-4":{}},"name":{},"text":{"3":{},"7":{},"9":{},"12":{},"14":{},"15":{},"18":{},"21":{},"22":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"39":{},"40":{},"41":{},"43":{},"44":{},"45":{},"49":{},"51":{},"52":{},"56":{},"58":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"71":{},"76":{},"77":{},"78":{},"82":{},"97":{},"98":{},"99":{},"100":{},"102":{},"105":{},"107":{},"110":{},"111":{},"114":{},"117":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{}}],["file#host",{"_index":3560,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["file://$pwd/pod",{"_index":1941,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["file:///<polici",{"_index":526,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["file:///home/jvanz/suse/mygatekeeperpolicy/annot",{"_index":1453,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["file://home/tux/clust",{"_index":2136,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["file://home/tux/new",{"_index":2135,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["file=/etc/rancher/k3s/admission/admission.yaml",{"_index":3017,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["file==verification_config.yaml",{"_index":2911,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["file=cli",{"_index":3023,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["file=verif",{"_index":2896,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["filenam",{"_index":2714,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["filesystem",{"_index":928,"title":{},"name":{},"text":{"12":{},"27":{},"77":{},"78":{}},"component":{},"keyword":{}}],["fill",{"_index":1565,"title":{},"name":{},"text":{"23":{},"44":{}},"component":{},"keyword":{}}],["filter",{"_index":1903,"title":{},"name":{},"text":{"29":{},"31":{},"36":{},"48":{},"91":{},"94":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["filter(i",{"_index":3575,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["final",{"_index":821,"title":{},"name":{},"text":{"9":{},"21":{},"38":{},"42":{},"44":{},"51":{},"52":{},"60":{},"62":{},"63":{},"71":{},"75":{},"76":{},"98":{},"99":{},"105":{},"111":{},"112":{},"115":{},"117":{}},"component":{},"keyword":{}}],["final_annot",{"_index":4123,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["final_annotations.get_key_value(\"kubewarden.policy.demo/inspect",{"_index":4126,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["final_pod",{"_index":4121,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["final_pod.metadata.annotations.unwrap",{"_index":4124,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["find",{"_index":94,"title":{},"name":{},"text":{"1":{},"3":{},"9":{},"11":{},"29":{},"31":{},"44":{},"45":{},"46":{},"49":{},"52":{},"61":{},"67":{},"69":{},"82":{},"91":{},"97":{},"98":{},"102":{},"111":{},"114":{},"118":{}},"component":{},"keyword":{}}],["fine",{"_index":716,"title":{"9-8":{}},"name":{},"text":{"9":{},"26":{},"38":{},"40":{},"61":{},"64":{},"69":{},"82":{},"92":{},"94":{}},"component":{},"keyword":{}}],["finish",{"_index":1155,"title":{},"name":{},"text":{"15":{},"27":{},"62":{},"65":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["first",{"_index":71,"title":{"7-6":{},"9-12":{}},"name":{},"text":{"1":{},"7":{},"8":{},"10":{},"11":{},"15":{},"20":{},"21":{},"26":{},"28":{},"53":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"76":{},"90":{},"94":{},"98":{},"99":{},"100":{},"104":{},"108":{},"109":{},"112":{},"115":{},"117":{},"119":{},"121":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{}}],["firstli",{"_index":3680,"title":{},"name":{},"text":{"98":{},"104":{},"105":{},"110":{}},"component":{},"keyword":{}}],["fish",{"_index":2174,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["five",{"_index":3276,"title":{},"name":{},"text":{"76":{},"91":{}},"component":{},"keyword":{}}],["fix",{"_index":33,"title":{"99-3":{}},"name":{},"text":{"1":{},"21":{},"23":{},"43":{},"56":{},"60":{},"85":{},"99":{}},"component":{},"keyword":{}}],["fixtur",{"_index":3859,"title":{},"name":{},"text":{"100":{},"111":{}},"component":{},"keyword":{}}],["fixture_fil",{"_index":4079,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["flag",{"_index":586,"title":{},"name":{},"text":{"7":{},"9":{},"12":{},"17":{},"21":{},"28":{},"30":{},"34":{},"43":{},"45":{},"46":{},"49":{},"52":{},"60":{},"71":{},"77":{},"78":{},"82":{}},"component":{},"keyword":{}}],["flavio",{"_index":1928,"title":{},"name":{},"text":{"29":{},"43":{},"60":{}},"component":{},"keyword":{}}],["fleet",{"_index":1012,"title":{"15":{}},"name":{"15":{}},"text":{"13":{},"15":{}},"component":{},"keyword":{"15":{}}}],["fleet.yaml",{"_index":1148,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["flexibl",{"_index":201,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"23":{},"44":{}},"component":{},"keyword":{}}],["flexvolum",{"_index":1792,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["flood",{"_index":2317,"title":{"41-2":{}},"name":{},"text":{},"component":{},"keyword":{}}],["flowchart",{"_index":781,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{},"keyword":{}}],["flux",{"_index":1013,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["fmt",{"_index":2273,"title":{},"name":{},"text":{"39":{},"98":{},"104":{}},"component":{},"keyword":{}}],["fmt.errorf(\"defaultresourc",{"_index":3971,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["fmt.errorf(\"defaultus",{"_index":3968,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["fmt.errorf(\"label",{"_index":3809,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["fmt.errorf(\"th",{"_index":3812,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["fmt.errorf(\"thes",{"_index":3732,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["fmt.errorf(\"validact",{"_index":3936,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["fmt.errorf(\"validresourc",{"_index":3938,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["fmt.errorf(\"validus",{"_index":3934,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["fmt.sprintf(\"cannot",{"_index":3793,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["fn",{"_index":4017,"title":{},"name":{},"text":{"110":{},"111":{},"112":{},"113":{},"115":{}},"component":{},"keyword":{}}],["focu",{"_index":1263,"title":{},"name":{},"text":{"19":{},"36":{},"56":{},"123":{}},"component":{},"keyword":{}}],["focus",{"_index":1313,"title":{},"name":{},"text":{"21":{},"44":{},"74":{},"99":{},"106":{}},"component":{},"keyword":{}}],["folder",{"_index":940,"title":{},"name":{},"text":{"12":{},"40":{},"119":{},"123":{}},"component":{},"keyword":{}}],["follow",{"_index":16,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"17":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"37":{},"38":{},"40":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"53":{},"56":{},"57":{},"58":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"82":{},"84":{},"85":{},"87":{},"91":{},"93":{},"94":{},"97":{},"98":{},"99":{},"100":{},"102":{},"103":{},"105":{},"108":{},"109":{},"110":{},"114":{},"115":{},"116":{},"117":{},"119":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["foo",{"_index":1138,"title":{},"name":{},"text":{"14":{},"43":{},"60":{},"94":{},"97":{},"98":{},"100":{}},"component":{},"keyword":{}}],["foo.bar.com",{"_index":3589,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["foobar",{"_index":3588,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["for=condition=policyact",{"_index":3096,"title":{},"name":{},"text":{"64":{}},"component":{},"keyword":{}}],["for\\nev",{"_index":804,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["forbid",{"_index":1822,"title":{},"name":{},"text":{"27":{},"123":{}},"component":{},"keyword":{}}],["forbidden",{"_index":1527,"title":{},"name":{},"text":{"23":{},"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["forbiddenresourc",{"_index":1867,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["forbiddensysctl",{"_index":1805,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["forc",{"_index":569,"title":{},"name":{},"text":{"7":{},"12":{},"27":{},"30":{},"34":{},"97":{}},"component":{},"keyword":{}}],["forev",{"_index":2240,"title":{},"name":{},"text":{"38":{},"92":{}},"component":{},"keyword":{}}],["forget",{"_index":2485,"title":{},"name":{},"text":{"44":{},"95":{}},"component":{},"keyword":{}}],["form",{"_index":535,"title":{},"name":{},"text":{"7":{},"12":{},"31":{},"40":{},"44":{},"74":{}},"component":{},"keyword":{}}],["format",{"_index":167,"title":{"43":{},"14-4":{},"43-2":{}},"name":{},"text":{"3":{},"4":{},"11":{},"12":{},"31":{},"34":{},"39":{},"40":{},"43":{},"44":{},"73":{},"86":{},"90":{},"105":{},"115":{},"116":{},"117":{},"122":{},"126":{}},"component":{},"keyword":{}}],["forth",{"_index":3306,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["forward",{"_index":531,"title":{"17-4":{}},"name":{},"text":{"7":{},"17":{},"28":{},"35":{},"48":{},"64":{},"65":{},"66":{},"74":{},"93":{},"111":{},"112":{},"113":{},"116":{}},"component":{},"keyword":{}}],["found",{"_index":43,"title":{},"name":{},"text":{"1":{},"24":{},"29":{},"31":{},"34":{},"44":{},"60":{},"79":{},"95":{},"98":{},"99":{},"100":{},"104":{}},"component":{},"keyword":{}}],["foundat",{"_index":3031,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["four",{"_index":327,"title":{},"name":{},"text":{"5":{},"52":{}},"component":{},"keyword":{}}],["fqdn",{"_index":3485,"title":{},"name":{},"text":{"89":{}},"component":{},"keyword":{}}],["fqdn=mtls.kubewarden.io",{"_index":2947,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["frame",{"_index":3407,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["framework",{"_index":333,"title":{"8-2":{},"106-1":{}},"name":{},"text":{"5":{},"8":{},"49":{},"63":{},"77":{},"106":{},"122":{},"125":{}},"component":{},"keyword":{}}],["free",{"_index":534,"title":{},"name":{},"text":{"7":{},"12":{},"31":{},"63":{},"74":{},"81":{},"92":{},"107":{}},"component":{},"keyword":{}}],["freedom",{"_index":3210,"title":{},"name":{},"text":{"73":{}},"component":{},"keyword":{}}],["frequenc",{"_index":1285,"title":{},"name":{},"text":{"19":{},"76":{}},"component":{},"keyword":{}}],["frequent",{"_index":1724,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["fresh",{"_index":3277,"title":{},"name":{},"text":{"76":{},"91":{}},"component":{},"keyword":{}}],["freshli",{"_index":2482,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["friendli",{"_index":3634,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["fromendpoint",{"_index":3197,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["froment",{"_index":3196,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["fsgroup",{"_index":1790,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["fulcio",{"_index":976,"title":{},"name":{},"text":{"12":{},"34":{},"43":{},"60":{}},"component":{},"keyword":{}}],["fulcio’",{"_index":2450,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["full",{"_index":527,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"19":{},"21":{},"24":{},"43":{},"45":{},"62":{},"93":{},"102":{}},"component":{},"keyword":{}}],["fulli",{"_index":1681,"title":{},"name":{},"text":{"26":{},"29":{},"74":{},"96":{}},"component":{},"keyword":{}}],["func",{"_index":3703,"title":{},"name":{},"text":{"98":{},"99":{},"101":{},"104":{},"105":{},"117":{}},"component":{},"keyword":{}}],["func(",{"_index":3797,"title":{},"name":{},"text":{"99":{},"101":{}},"component":{},"keyword":{}}],["function",{"_index":543,"title":{"87-4":{},"87-15":{},"88-5":{},"88-6":{},"88-11":{},"88-12":{},"88-17":{},"88-18":{},"89-4":{},"89-5":{},"90-3":{},"90-4":{},"92-2":{},"99-1":{},"104-1":{},"110-2":{}},"name":{},"text":{"7":{},"9":{},"11":{},"14":{},"16":{},"21":{},"27":{},"31":{},"58":{},"73":{},"74":{},"75":{},"76":{},"80":{},"81":{},"84":{},"86":{},"87":{},"89":{},"90":{},"91":{},"92":{},"94":{},"95":{},"96":{},"98":{},"99":{},"104":{},"105":{},"107":{},"109":{},"110":{},"111":{},"112":{},"113":{},"115":{},"116":{},"117":{}},"component":{},"keyword":{}}],["further",{"_index":83,"title":{"11-1":{}},"name":{},"text":{"1":{},"4":{},"9":{},"26":{},"44":{},"49":{},"87":{},"113":{}},"component":{},"keyword":{}}],["futur",{"_index":452,"title":{},"name":{},"text":{"7":{},"31":{},"37":{},"38":{},"70":{},"76":{},"85":{}},"component":{},"keyword":{}}],["gain",{"_index":2322,"title":{"41-18":{}},"name":{},"text":{"41":{},"42":{}},"component":{},"keyword":{}}],["gap",{"_index":1566,"title":{"50":{},"51":{},"52":{},"67-7":{}},"name":{},"text":{"23":{},"41":{},"51":{},"52":{},"67":{},"68":{}},"component":{},"keyword":{"50":{},"51":{},"52":{}}}],["gate",{"_index":2053,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["gatekeep",{"_index":1304,"title":{"21":{},"49":{},"118":{},"119":{},"120":{},"121":{},"21-4":{},"76-11":{},"106-3":{}},"name":{"21":{}},"text":{"21":{},"34":{},"49":{},"76":{},"106":{},"107":{},"118":{},"119":{},"120":{},"121":{},"124":{},"125":{}},"component":{},"keyword":{"49":{},"118":{},"119":{},"120":{},"121":{}}}],["gatekeeper/demo/basic/templates/k8srequiredlabels_template.yaml",{"_index":1357,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["gatekeeper:v0.0.1",{"_index":4254,"title":{},"name":{},"text":{"121":{}},"component":{},"keyword":{}}],["gatekeeper’",{"_index":1386,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["gcr.io/googl",{"_index":3254,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["gcr.io/k8",{"_index":3052,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["gener",{"_index":145,"title":{"52-2":{}},"name":{},"text":{"3":{},"4":{},"6":{},"8":{},"9":{},"10":{},"19":{},"21":{},"22":{},"26":{},"27":{},"28":{},"29":{},"34":{},"39":{},"43":{},"44":{},"45":{},"46":{},"48":{},"54":{},"60":{},"63":{},"64":{},"66":{},"67":{},"71":{},"75":{},"82":{},"84":{},"87":{},"88":{},"92":{},"93":{},"98":{},"99":{},"105":{},"108":{},"109":{},"110":{},"112":{},"120":{},"121":{},"122":{},"124":{},"125":{}},"component":{},"keyword":{}}],["genericissu",{"_index":2423,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["geograph",{"_index":2664,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["get",{"_index":486,"title":{"41-15":{},"54-1":{},"96-3":{},"108-1":{}},"name":{},"text":{"7":{},"15":{},"36":{},"78":{},"92":{},"96":{}},"component":{},"keyword":{}}],["get_resourc",{"_index":3504,"title":{"91-8":{}},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["gh",{"_index":426,"title":{},"name":{},"text":{"7":{},"45":{}},"component":{},"keyword":{}}],["gha",{"_index":2495,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["ghcr",{"_index":2800,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["ghcr.io",{"_index":424,"title":{},"name":{},"text":{"7":{},"32":{},"60":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/audit",{"_index":2727,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/charts/kubewarden",{"_index":2523,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/kubectl:v1.21.4",{"_index":2536,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/kubewarden",{"_index":2533,"title":{},"name":{},"text":{"45":{},"52":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/polici",{"_index":467,"title":{},"name":{},"text":{"7":{},"28":{},"45":{},"52":{},"58":{},"60":{},"88":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/allow",{"_index":1746,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/cel",{"_index":1978,"title":{},"name":{},"text":{"30":{},"34":{},"94":{},"95":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/host",{"_index":1776,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/pod",{"_index":1761,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/prior",{"_index":1605,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/saf",{"_index":3887,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/trust",{"_index":1081,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/us",{"_index":1753,"title":{},"name":{},"text":{"27":{},"43":{},"60":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/policies/verifi",{"_index":1062,"title":{},"name":{},"text":{"14":{},"25":{},"45":{},"53":{}},"component":{},"keyword":{}}],["ghcr.io/kubewarden/tests/raw",{"_index":1860,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["ghcr.io/kyverno/polici",{"_index":2723,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["ghcr.io/myorg/mi",{"_index":3343,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["ghcr.io/myorg/policies/mi",{"_index":2838,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["ghcr.io/opencontainers/golangci",{"_index":3612,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["ghcr.io/rancher/kuberlr",{"_index":2729,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["ghcr.io/yourorg/policies/polici",{"_index":1445,"title":{},"name":{},"text":{"21":{},"105":{}},"component":{},"keyword":{}}],["git",{"_index":668,"title":{"44-1":{}},"name":{},"text":{"8":{},"22":{},"44":{},"49":{},"109":{}},"component":{},"keyword":{}}],["github",{"_index":49,"title":{"102":{},"43-8":{},"60-4":{},"60-12":{}},"name":{},"text":{"1":{},"5":{},"7":{},"12":{},"29":{},"32":{},"34":{},"37":{},"43":{},"44":{},"45":{},"54":{},"56":{},"60":{},"65":{},"77":{},"83":{},"84":{},"85":{},"87":{},"95":{},"102":{},"103":{},"107":{},"109":{},"114":{},"116":{}},"component":{},"keyword":{"102":{}}}],["github.com/deckarep/golang",{"_index":3683,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["github.com/kubewarden/fleet",{"_index":1171,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["github.com/kubewarden/go",{"_index":3649,"title":{},"name":{},"text":{"97":{},"99":{},"104":{},"105":{}},"component":{},"keyword":{}}],["github.com/kubewarden/k8",{"_index":3815,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["github.com/kubewarden/polici",{"_index":2498,"title":{},"name":{},"text":{"45":{},"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["github.com/opencontain",{"_index":3594,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["github.com/tidwall/gjson",{"_index":3906,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["github.repository_own",{"_index":2830,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["github/workflows/release.yml",{"_index":3880,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["github/workflows/test.yml",{"_index":3879,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["github_workflow_repositori",{"_index":2496,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["githubact",{"_index":2418,"title":{},"name":{},"text":{"43":{},"60":{},"95":{}},"component":{},"keyword":{}}],["github’",{"_index":3593,"title":{},"name":{},"text":{"95":{},"97":{}},"component":{},"keyword":{}}],["gitop",{"_index":1011,"title":{},"name":{},"text":{"13":{},"15":{},"49":{}},"component":{},"keyword":{"16":{}}}],["gitrepo",{"_index":1157,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["give",{"_index":2532,"title":{},"name":{},"text":{"45":{},"56":{},"65":{},"77":{},"78":{},"100":{},"108":{},"124":{}},"component":{},"keyword":{}}],["given",{"_index":530,"title":{},"name":{},"text":{"7":{},"14":{},"26":{},"29":{},"30":{},"34":{},"39":{},"43":{},"49":{},"60":{},"67":{},"68":{},"69":{},"74":{},"76":{},"89":{},"91":{},"117":{}},"component":{},"keyword":{}}],["gjson",{"_index":3635,"title":{},"name":{},"text":{"96":{},"99":{},"104":{}},"component":{},"keyword":{}}],["gjson.getbyt",{"_index":3907,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["gjson.result",{"_index":3911,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["gk",{"_index":1437,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["global",{"_index":1630,"title":{},"name":{},"text":{"26":{},"38":{},"67":{},"101":{},"113":{}},"component":{},"keyword":{}}],["global.affin",{"_index":1626,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["global.cattle.systemdefaultregistri",{"_index":2705,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["global.cattle.systemdefaultregistry=<registry.yourdomain.com:port",{"_index":2698,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["global.priorityclassnam",{"_index":1659,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["global.skipnamespac",{"_index":2941,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["global.toler",{"_index":1625,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["globaldefault",{"_index":1662,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["glossari",{"_index":127,"title":{"3":{}},"name":{"3":{}},"text":{"4":{},"5":{}},"component":{},"keyword":{"3":{}}}],["go",{"_index":678,"title":{"96":{},"76-9":{}},"name":{"96":{}},"text":{"8":{},"21":{},"22":{},"28":{},"34":{},"38":{},"44":{},"49":{},"64":{},"65":{},"76":{},"77":{},"89":{},"92":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"111":{},"116":{},"117":{},"121":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{"77":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"105":{}}}],["go.mod",{"_index":3648,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["go.yml",{"_index":3882,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["go/protocol",{"_index":3686,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["go/test",{"_index":3820,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["goal",{"_index":620,"title":{"8-5":{}},"name":{},"text":{"23":{},"27":{},"38":{},"123":{}},"component":{},"keyword":{}}],["goe",{"_index":3370,"title":{},"name":{},"text":{"86":{},"99":{},"101":{},"111":{}},"component":{},"keyword":{}}],["goflag",{"_index":3650,"title":{},"name":{},"text":{"97":{},"105":{}},"component":{},"keyword":{}}],["golanc",{"_index":3611,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["golang",{"_index":3856,"title":{},"name":{},"text":{},"component":{},"keyword":{"99":{},"100":{},"101":{}}}],["good",{"_index":914,"title":{},"name":{},"text":{"11":{},"21":{},"26":{},"38":{},"44":{},"77":{},"78":{},"98":{},"100":{},"101":{},"116":{}},"component":{},"keyword":{}}],["googl",{"_index":932,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{},"keyword":{}}],["google.com",{"_index":3488,"title":{},"name":{},"text":{"89":{}},"component":{},"keyword":{}}],["goraw:/src",{"_index":3953,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["govern",{"_index":97,"title":{},"name":{},"text":{"1":{},"8":{}},"component":{},"keyword":{}}],["go’",{"_index":3616,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["grafana",{"_index":2365,"title":{"65-4":{},"65-5":{},"68-5":{}},"name":{},"text":{"41":{},"48":{},"65":{},"68":{}},"component":{},"keyword":{}}],["grafana.com",{"_index":3120,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["grain",{"_index":717,"title":{"9-8":{}},"name":{},"text":{"9":{},"38":{},"61":{},"64":{},"69":{},"82":{},"92":{},"94":{}},"component":{},"keyword":{}}],["grammat",{"_index":2794,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["grant",{"_index":1093,"title":{},"name":{},"text":{"14":{},"28":{},"34":{},"46":{}},"component":{},"keyword":{}}],["granular",{"_index":1736,"title":{},"name":{},"text":{"27":{},"49":{}},"component":{},"keyword":{}}],["graph",{"_index":783,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{},"keyword":{}}],["gray",{"_index":3157,"title":{},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["great",{"_index":1672,"title":{},"name":{},"text":{"26":{},"60":{}},"component":{},"keyword":{}}],["greater",{"_index":547,"title":{},"name":{},"text":{"7":{},"96":{},"103":{}},"component":{},"keyword":{}}],["green",{"_index":3268,"title":{},"name":{},"text":{"76":{},"97":{},"107":{}},"component":{},"keyword":{}}],["grep",{"_index":2936,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["grid",{"_index":3161,"title":{},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["group",{"_index":922,"title":{"14":{},"25":{},"27-3":{},"47-2":{}},"name":{"14":{},"25":{}},"text":{"11":{},"13":{},"14":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"31":{},"41":{},"43":{},"47":{},"48":{},"49":{},"60":{},"66":{},"71":{},"74":{},"78":{},"91":{}},"component":{},"keyword":{"14":{},"25":{}}}],["group\":\"apps\",\"version\":\"v1\",\"resource\":\"deploy",{"_index":3229,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["group\":\"autoscaling\",\"version\":\"v1\",\"kind\":\"scal",{"_index":3228,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["group.kubewarden.admiss",{"_index":1044,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["group.yaml",{"_index":1043,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["group/version/kind",{"_index":3227,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["groupname/groupvers",{"_index":2024,"title":{},"name":{},"text":{"31":{},"91":{}},"component":{},"keyword":{}}],["groupspec",{"_index":1990,"title":{"31-17":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["groupversionkind",{"_index":3278,"title":{},"name":{},"text":{"76":{},"94":{}},"component":{},"keyword":{}}],["grow",{"_index":238,"title":{},"name":{},"text":{"4":{},"65":{}},"component":{},"keyword":{}}],["grpc",{"_index":3143,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["guarante",{"_index":3346,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["guest",{"_index":856,"title":{},"name":{},"text":{"9":{},"74":{},"81":{},"87":{},"91":{}},"component":{},"keyword":{}}],["guid",{"_index":261,"title":{"55":{}},"name":{"55":{}},"text":{"4":{},"7":{},"17":{},"21":{},"28":{},"30":{},"51":{},"52":{},"56":{},"62":{},"63":{},"66":{},"67":{},"71":{},"82":{},"103":{}},"component":{},"keyword":{}}],["guilherm",{"_index":2844,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["h",{"_index":1232,"title":{},"name":{},"text":{"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["h4bx7",{"_index":1533,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["halt",{"_index":1682,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["hand",{"_index":335,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["handl",{"_index":720,"title":{"9-16":{}},"name":{},"text":{"16":{},"19":{},"21":{},"26":{},"31":{},"38":{},"47":{},"86":{},"98":{},"111":{}},"component":{},"keyword":{}}],["happen",{"_index":1667,"title":{},"name":{},"text":{"26":{},"27":{},"33":{},"38":{},"49":{},"67":{},"74":{},"75":{},"86":{},"87":{},"99":{},"116":{}},"component":{},"keyword":{}}],["har",{"_index":672,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["harbor",{"_index":2206,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["hard",{"_index":1687,"title":{},"name":{},"text":{"26":{},"47":{},"111":{}},"component":{},"keyword":{}}],["harden",{"_index":242,"title":{"61":{},"71":{}},"name":{"61":{},"71":{}},"text":{"4":{},"23":{},"61":{},"62":{},"71":{}},"component":{},"keyword":{}}],["harder",{"_index":2255,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["hardwar",{"_index":1629,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["has(c.livenessprobe)).map(c",{"_index":1960,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["has(kubewarden/polici",{"_index":3192,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["has(object.spec.initcontainerimag",{"_index":3604,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["hash",{"_index":2972,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["hashset::<string>::new",{"_index":4032,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["hashset::new",{"_index":4027,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["hashset<str",{"_index":4011,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["hasn’t",{"_index":3982,"title":{},"name":{},"text":{"106":{}},"component":{},"keyword":{}}],["hauler",{"_index":2487,"title":{"52":{},"45-3":{},"52-1":{}},"name":{"52":{}},"text":{"45":{},"52":{}},"component":{},"keyword":{"52":{}}}],["hauler_manifest.yaml",{"_index":2715,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["hauler_manifest.yml",{"_index":2713,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["have",{"_index":694,"title":{},"name":{},"text":{"8":{},"9":{},"11":{},"12":{},"77":{},"87":{},"103":{},"109":{},"112":{}},"component":{},"keyword":{}}],["haven’t",{"_index":418,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["header",{"_index":350,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["heavi",{"_index":1246,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["hello",{"_index":3645,"title":{},"name":{},"text":{"97":{},"99":{}},"component":{},"keyword":{}}],["hello:1.0",{"_index":3256,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["helm",{"_index":429,"title":{"32-4":{},"42-3":{},"45-2":{},"51-3":{},"52-1":{},"58-3":{},"61-1":{}},"name":{},"text":{"7":{},"8":{},"10":{},"15":{},"16":{},"17":{},"26":{},"32":{},"33":{},"41":{},"42":{},"45":{},"51":{},"52":{},"53":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"71":{},"76":{},"87":{},"88":{}},"component":{},"keyword":{}}],["help",{"_index":176,"title":{"4-1":{},"34-1":{},"39-1":{}},"name":{},"text":{"4":{},"23":{},"29":{},"34":{},"39":{},"41":{},"45":{},"52":{},"54":{},"60":{},"77":{},"81":{},"87":{},"90":{},"104":{},"107":{},"114":{},"116":{},"123":{}},"component":{},"keyword":{}}],["helper",{"_index":380,"title":{},"name":{},"text":{"6":{},"22":{},"96":{},"98":{},"99":{},"104":{},"111":{}},"component":{},"keyword":{}}],["helpers.go:246",{"_index":1103,"title":{},"name":{},"text":{"14":{},"24":{},"25":{}},"component":{},"keyword":{}}],["henc",{"_index":893,"title":{},"name":{},"text":{"10":{},"15":{},"28":{},"41":{},"45":{},"86":{},"87":{},"96":{},"98":{},"111":{},"116":{}},"component":{},"keyword":{}}],["here",{"_index":399,"title":{},"name":{},"text":{"7":{},"17":{},"20":{},"21":{},"24":{},"29":{},"31":{},"37":{},"43":{},"44":{},"49":{},"50":{},"60":{},"67":{},"77":{},"78":{},"82":{},"83":{},"92":{},"93":{},"94":{},"95":{},"96":{},"99":{},"105":{},"106":{},"111":{},"116":{},"121":{},"123":{},"125":{}},"component":{},"keyword":{}}],["here](https://pkg.go.dev/github.com/kubewarden/cel",{"_index":3562,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["here’",{"_index":1378,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["high",{"_index":662,"title":{},"name":{},"text":{"8":{},"19":{},"24":{},"26":{},"38":{},"46":{},"49":{},"105":{}},"component":{},"keyword":{}}],["higher",{"_index":1213,"title":{},"name":{},"text":{"17":{},"23":{},"31":{},"38":{}},"component":{},"keyword":{}}],["highest",{"_index":1009,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["highli",{"_index":1390,"title":{},"name":{},"text":{"21":{},"57":{}},"component":{},"keyword":{}}],["highlight",{"_index":2661,"title":{},"name":{},"text":{"49":{},"60":{}},"component":{},"keyword":{}}],["hint",{"_index":1621,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["histori",{"_index":3468,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["hit",{"_index":3921,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["hoc",{"_index":2655,"title":{},"name":{},"text":{"49":{},"104":{}},"component":{},"keyword":{}}],["hold",{"_index":774,"title":{},"name":{},"text":{"9":{},"15":{},"34":{},"39":{},"44":{},"45":{},"66":{},"74":{},"78":{},"86":{},"94":{},"98":{},"99":{},"110":{},"116":{}},"component":{},"keyword":{}}],["home/.config/kubewarden/sources.yaml",{"_index":2290,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["home/flavio/hacking/kubernetes/kubewarden/demo",{"_index":4091,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["home/jhk/projects/suse/tmp/demo",{"_index":4034,"title":{},"name":{},"text":{"110":{},"112":{}},"component":{},"keyword":{}}],["home/jhk/projects/suse/tmp/fab",{"_index":3952,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["home/jhk/projects/suse/tmp/go",{"_index":3652,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["home/kubewarden/.config/kubewarden/verif",{"_index":2907,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["home/library/appl",{"_index":2292,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["home\\appdata\\roaming\\kubewarden\\config\\sources.yaml",{"_index":2294,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["homebrew",{"_index":1462,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["hook",{"_index":597,"title":{},"name":{},"text":{"7":{},"15":{}},"component":{},"keyword":{}}],["hope",{"_index":3363,"title":{},"name":{},"text":{"85":{}},"component":{},"keyword":{}}],["hopefulli",{"_index":3897,"title":{},"name":{},"text":{"103":{}},"component":{},"keyword":{}}],["host",{"_index":707,"title":{"86":{},"95":{},"27-5":{},"37-2":{},"89-1":{}},"name":{"86":{}},"text":{"8":{},"9":{},"14":{},"17":{},"18":{},"25":{},"27":{},"28":{},"29":{},"34":{},"38":{},"39":{},"40":{},"44":{},"49":{},"52":{},"58":{},"71":{},"72":{},"74":{},"75":{},"76":{},"81":{},"86":{},"88":{},"89":{},"90":{},"91":{},"92":{},"94":{},"95":{},"107":{},"116":{}},"component":{},"keyword":{"86":{}}}],["host.k3d.internal:5000",{"_index":2305,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["host_ip>:5000",{"_index":2736,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["hostipc",{"_index":1743,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hostnam",{"_index":1700,"title":{},"name":{},"text":{"26":{},"52":{},"89":{}},"component":{},"keyword":{}}],["hostnamespac",{"_index":1775,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hostnamespaces.kubewarden.admiss",{"_index":1782,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hostnetwork",{"_index":1742,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hostpath",{"_index":1787,"title":{"41-50":{}},"name":{},"text":{"27":{},"41":{}},"component":{},"keyword":{}}],["hostpid",{"_index":1744,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hostport",{"_index":1745,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hour",{"_index":1286,"title":{},"name":{},"text":{"19":{},"26":{}},"component":{},"keyword":{}}],["howto",{"_index":1309,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["htmllabel",{"_index":782,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["http",{"_index":522,"title":{"32-4":{}},"name":{},"text":{"7":{},"9":{},"18":{},"29":{},"31":{},"32":{},"34":{},"38":{},"39":{},"40":{},"45":{},"57":{},"74":{},"77":{},"78":{},"94":{}},"component":{},"keyword":{}}],["http(",{"_index":523,"title":{},"name":{},"text":{"7":{},"12":{},"77":{},"78":{}},"component":{},"keyword":{}}],["http://<host_ip>:5000",{"_index":2737,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["http://`minikub",{"_index":3087,"title":{},"name":{},"text":{"64":{}},"component":{},"keyword":{}}],["http://k8s.io/docs/reference/us",{"_index":3247,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["http://localhost:16686",{"_index":3100,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["http://localhost:3000/validate_raw/raw",{"_index":1894,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["http://localhost:8082",{"_index":1230,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["http://localhost:9090",{"_index":3155,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["https://<cluster_ip>/api/v1/namespaces/jaeger/services/http:mi",{"_index":3172,"title":{},"name":{},"text":{"69":{}},"component":{},"keyword":{}}],["https://<website/polici",{"_index":524,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["https://artifacthub.io",{"_index":1910,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["https://aur.archlinux.org/kwctl.git",{"_index":1472,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["https://charts.jetstack.io",{"_index":3068,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["https://charts.kubewarden.io",{"_index":433,"title":{},"name":{},"text":{"7":{},"16":{},"32":{},"45":{},"64":{},"65":{}},"component":{},"keyword":{}}],["https://cluster",{"_index":3163,"title":{},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["https://docs.kubewarden.io",{"_index":2909,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["https://example.com/kubewarden/policies/main/psp",{"_index":2132,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["https://get.k3s.io",{"_index":3019,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["https://ghcr.io",{"_index":414,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["https://github.com/<org>/palindromifi",{"_index":954,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["https://github.com/bob",{"_index":2435,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["https://github.com/bob/app",{"_index":2433,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["https://github.com/flavio",{"_index":2441,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["https://github.com/flavio/polici",{"_index":2439,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["https://github.com/kubewarden",{"_index":2442,"title":{},"name":{},"text":{"43":{},"45":{},"60":{}},"component":{},"keyword":{}}],["https://github.com/kubewarden/kwctl/releases/latest/download/kwctl",{"_index":1476,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["https://github.com/kubewarden/pod",{"_index":1930,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["https://github.com/kubewarden/polici",{"_index":2500,"title":{},"name":{},"text":{"45":{},"65":{}},"component":{},"keyword":{}}],["https://github.com/kubewarden/rust",{"_index":4002,"title":{},"name":{},"text":{"109":{}},"component":{},"keyword":{}}],["https://github.com/kubewarden/som",{"_index":4250,"title":{},"name":{},"text":{"121":{},"125":{}},"component":{},"keyword":{}}],["https://github.com/kubewarden/us",{"_index":2847,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["https://github.com/login/oauth",{"_index":2430,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["https://github.com/orgs/kubewarden/packag",{"_index":2100,"title":{},"name":{},"text":{"32":{}},"component":{},"keyword":{}}],["https://github.com/yourorg/mi",{"_index":3341,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["https://github.com/yourorg/polici",{"_index":1449,"title":{},"name":{},"text":{"21":{},"105":{}},"component":{},"keyword":{}}],["https://jaegertracing.github.io/helm",{"_index":3079,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["https://kubernetes.default.svc",{"_index":1191,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["https://kubernetes.io/docs/concepts/overview/work",{"_index":2020,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["https://mi",{"_index":3149,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["https://oauth2.sigstore.dev/auth/auth?access_type=online&client_id=sigstore&code_challenge=<redacted>&code_challenge_method=s256&nonce=<redacted>&redirect_uri=http%3a%2f%2flocalhost%3a34021%2fauth%2fcallback&response_type=code&scope=openid+email&state=<redact",{"_index":2818,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["https://open",{"_index":3073,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["https://prometheu",{"_index":3108,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{},"keyword":{}}],["https://raw.githubusercontent.com/kubewarden/ingress",{"_index":3294,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["https://token.actions.githubusercontent.com",{"_index":2432,"title":{},"name":{},"text":{"43":{},"45":{},"60":{}},"component":{},"keyword":{}}],["https://wapc.io",{"_index":161,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["https://wasi.dev",{"_index":164,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["https://wasmtime.dev",{"_index":175,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["https://webassembly.org",{"_index":173,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["hub",{"_index":1902,"title":{"44":{},"29-2":{},"37-5":{},"44-3":{}},"name":{"44":{}},"text":{"29":{},"37":{},"44":{},"82":{},"105":{}},"component":{},"keyword":{"44":{}}}],["hundr",{"_index":1695,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["i.metadata.nam",{"_index":3576,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["i.metadata.namespac",{"_index":3578,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["i.spec.rules.map(r",{"_index":3572,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["i0612",{"_index":1586,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["i0919",{"_index":1100,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["i2qa4vlrum/i+noheculr1eaymvuph26hledm+eznlqn+wbhip5grc4ba7xrbv7k",{"_index":2761,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["ibm",{"_index":2212,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["icon",{"_index":2782,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["id",{"_index":847,"title":{},"name":{},"text":{"9":{},"23":{},"27":{},"43":{},"44":{},"60":{},"65":{}},"component":{},"keyword":{}}],["idea",{"_index":3981,"title":{},"name":{},"text":{"106":{}},"component":{},"keyword":{}}],["ideal",{"_index":3287,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["ident",{"_index":2307,"title":{},"name":{},"text":{"40":{},"45":{},"60":{}},"component":{},"keyword":{}}],["identif",{"_index":918,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["identifi",{"_index":514,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"31":{},"35":{},"46":{},"74":{},"88":{},"91":{},"99":{}},"component":{},"keyword":{}}],["identity=\"https://github.com/kubewarden/audit",{"_index":2515,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["ifnotpres",{"_index":1765,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["ignor",{"_index":539,"title":{},"name":{},"text":{"7":{},"16":{},"28":{},"31":{},"34":{},"38":{},"39":{},"47":{},"73":{},"74":{},"75":{},"109":{},"110":{},"111":{},"112":{},"117":{}},"component":{},"keyword":{}}],["ignorediffer",{"_index":1185,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["illustr",{"_index":1245,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["imag",{"_index":250,"title":{"53":{},"45-1":{},"51-1":{}},"name":{"53":{}},"text":{"4":{},"7":{},"8":{},"12":{},"13":{},"14":{},"23":{},"25":{},"27":{},"28":{},"31":{},"32":{},"37":{},"41":{},"42":{},"43":{},"44":{},"45":{},"49":{},"50":{},"51":{},"52":{},"53":{},"58":{},"60":{},"63":{},"64":{},"67":{},"75":{},"78":{},"87":{},"88":{},"89":{},"93":{},"95":{},"96":{},"97":{},"100":{},"109":{},"112":{}},"component":{},"keyword":{"32":{}}}],["image.yml@refs/tags/v1.18.0",{"_index":2502,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["image=registry.k8s.io/paus",{"_index":1585,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["image_url",{"_index":3386,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["imageid",{"_index":1539,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["imagelist.txt",{"_index":2525,"title":{},"name":{},"text":{"45":{},"51":{}},"component":{},"keyword":{}}],["imagepullpolici",{"_index":1764,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["imagepullsecret",{"_index":2087,"title":{},"name":{},"text":{"31":{},"53":{},"58":{}},"component":{},"keyword":{}}],["imagepullsecrets\":[{\"nam",{"_index":2767,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["images.sh",{"_index":2685,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["images.tar.gz",{"_index":2686,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["images.txt",{"_index":2684,"title":{},"name":{},"text":{"51":{},"67":{}},"component":{},"keyword":{}}],["images/.github/workflows/release.yml@refs/heads/main",{"_index":2440,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["immedi",{"_index":1948,"title":{},"name":{},"text":{"29":{},"49":{},"73":{},"104":{}},"component":{},"keyword":{}}],["immut",{"_index":3412,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["immutable_ref",{"_index":2839,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["immutable_ref=$(kwctl",{"_index":2836,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["impact",{"_index":25,"title":{},"name":{},"text":{"1":{},"26":{},"56":{},"82":{}},"component":{},"keyword":{}}],["impl",{"_index":4015,"title":{},"name":{},"text":{"110":{},"115":{}},"component":{},"keyword":{}}],["implement",{"_index":696,"title":{"37-1":{},"93-3":{},"98-2":{}},"name":{},"text":{"8":{},"17":{},"24":{},"25":{},"26":{},"31":{},"38":{},"41":{},"45":{},"70":{},"75":{},"86":{},"87":{},"90":{},"91":{},"93":{},"96":{},"98":{},"104":{},"106":{},"107":{},"110":{},"111":{},"115":{},"116":{},"119":{},"122":{}},"component":{},"keyword":{}}],["implementationspecif",{"_index":1227,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["impli",{"_index":1388,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["import",{"_index":600,"title":{},"name":{},"text":{"7":{},"13":{},"16":{},"26":{},"49":{},"52":{},"65":{},"67":{},"68":{},"75":{},"77":{},"82":{},"98":{},"99":{},"101":{},"104":{},"123":{},"126":{}},"component":{},"keyword":{}}],["imposs",{"_index":2669,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["improv",{"_index":241,"title":{"56":{}},"name":{"56":{}},"text":{"4":{},"33":{},"45":{},"54":{},"56":{},"91":{},"100":{},"109":{}},"component":{},"keyword":{"56":{}}}],["in",{"_index":3200,"title":{"107-1":{}},"name":{},"text":{"71":{},"81":{},"107":{}},"component":{},"keyword":{}}],["in\",<br",{"_index":2017,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["inaccur",{"_index":2654,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["inaccuraci",{"_index":2205,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["inact",{"_index":2209,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["inc",{"_index":2217,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["incid",{"_index":30,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["incident",{"_index":2369,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["includ",{"_index":628,"title":{},"name":{},"text":{"8":{},"10":{},"14":{},"16":{},"19":{},"21":{},"26":{},"31":{},"36":{},"38":{},"41":{},"44":{},"45":{},"46":{},"48":{},"49":{},"56":{},"67":{},"74":{},"81":{},"82":{},"92":{},"94":{},"98":{},"99":{},"100":{},"102":{},"112":{},"116":{},"120":{},"124":{}},"component":{},"keyword":{}}],["incom",{"_index":155,"title":{},"name":{},"text":{"3":{},"7":{},"9":{},"31":{},"38":{},"74":{},"75":{},"82":{},"99":{},"104":{},"111":{},"112":{}},"component":{},"keyword":{}}],["incompat",{"_index":2107,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["incomplet",{"_index":1162,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["inconsist",{"_index":1669,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["increas",{"_index":744,"title":{},"name":{},"text":{"9":{},"14":{},"24":{},"25":{},"26":{},"29":{},"34":{},"42":{},"53":{}},"component":{},"keyword":{}}],["independ",{"_index":2376,"title":{},"name":{},"text":{"42":{},"58":{},"71":{}},"component":{},"keyword":{}}],["index",{"_index":2722,"title":{},"name":{"79":{},"81":{}},"text":{"52":{},"60":{},"88":{}},"component":{},"keyword":{}}],["indic",{"_index":338,"title":{},"name":{},"text":{"5":{},"14":{},"31":{},"34":{},"39":{},"45":{},"48":{},"74":{},"82":{},"105":{}},"component":{},"keyword":{}}],["individu",{"_index":1090,"title":{},"name":{},"text":{"14":{},"27":{},"42":{}},"component":{},"keyword":{}}],["industri",{"_index":629,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["inferior",{"_index":4191,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["infinit",{"_index":708,"title":{"13-4":{}},"name":{},"text":{"8":{},"13":{},"38":{}},"component":{},"keyword":{}}],["info",{"_index":972,"title":{"34-18":{}},"name":{},"text":{"12":{},"17":{},"31":{},"34":{},"39":{},"43":{},"45":{},"46":{},"52":{},"60":{},"74":{},"92":{},"105":{},"111":{}},"component":{},"keyword":{}}],["info!(log_drain",{"_index":4050,"title":{},"name":{},"text":{"111":{},"112":{},"113":{},"115":{}},"component":{},"keyword":{}}],["inform",{"_index":84,"title":{"47-2":{}},"name":{},"text":{"1":{},"3":{},"7":{},"8":{},"11":{},"15":{},"17":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"34":{},"35":{},"39":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"67":{},"71":{},"74":{},"76":{},"82":{},"88":{},"91":{},"93":{},"94":{},"96":{},"99":{},"101":{},"105":{},"113":{},"115":{},"116":{},"117":{},"125":{},"126":{}},"component":{},"keyword":{}}],["infrastructur",{"_index":862,"title":{},"name":{},"text":{"9":{},"19":{},"60":{},"66":{}},"component":{},"keyword":{"60":{}}}],["ingress",{"_index":913,"title":{"17-3":{},"94-1":{}},"name":{},"text":{"11":{},"17":{},"19":{},"49":{},"63":{},"64":{},"66":{},"71":{},"76":{},"77":{},"94":{},"106":{}},"component":{},"keyword":{"94":{}}}],["ingress.kubewarden.admiss",{"_index":3592,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["ingress.yaml",{"_index":3554,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["init",{"_index":780,"title":{},"name":{},"text":{"9":{},"42":{},"95":{}},"component":{},"keyword":{}}],["initcontain",{"_index":2333,"title":{"41-37":{}},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["initcontainerimag",{"_index":3603,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["initcontainerimagesnotverifi",{"_index":3606,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["initi",{"_index":721,"title":{"21-3":{},"101-1":{},"113-1":{}},"name":{},"text":{"9":{},"16":{},"18":{},"21":{},"29":{},"32":{},"35":{},"37":{},"40":{},"47":{},"50":{},"51":{},"67":{},"101":{},"102":{},"113":{}},"component":{},"keyword":{}}],["inject",{"_index":3063,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["inlin",{"_index":3293,"title":{},"name":{},"text":{"77":{},"78":{},"92":{}},"component":{},"keyword":{}}],["inner",{"_index":3905,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["input",{"_index":939,"title":{"87-5":{},"87-7":{},"87-9":{},"87-11":{},"87-13":{},"87-16":{},"87-18":{},"88-5":{},"88-11":{},"88-17":{},"89-4":{},"90-3":{},"91-3":{},"91-6":{},"91-10":{}},"name":{},"text":{"12":{},"21":{},"29":{},"34":{},"44":{},"73":{},"75":{},"78":{},"81":{},"86":{},"88":{},"89":{},"91":{},"98":{},"99":{},"102":{},"106":{},"119":{},"122":{},"123":{}},"component":{},"keyword":{}}],["input.parameters.labels[_",{"_index":1352,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["input.request.act",{"_index":4278,"title":{},"name":{},"text":{"126":{}},"component":{},"keyword":{}}],["input.request.object.metadata.namespac",{"_index":4270,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["input.request.uid",{"_index":4264,"title":{},"name":{},"text":{"123":{},"126":{}},"component":{},"keyword":{}}],["input.request.us",{"_index":4279,"title":{},"name":{},"text":{"126":{}},"component":{},"keyword":{}}],["input.review",{"_index":4237,"title":{},"name":{},"text":{"119":{}},"component":{},"keyword":{}}],["input.review.object.metadata.labels[label",{"_index":1351,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["input.review.object.metadata.namespac",{"_index":4235,"title":{},"name":{},"text":{"119":{}},"component":{},"keyword":{}}],["inputs.github_token",{"_index":2831,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["insecur",{"_index":249,"title":{"40-2":{},"57-2":{}},"name":{},"text":{"4":{},"31":{},"34":{},"39":{},"52":{},"57":{},"64":{},"66":{},"69":{}},"component":{},"keyword":{}}],["insecure_skip_verifi",{"_index":2738,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["insecure_sourc",{"_index":1239,"title":{},"name":{},"text":{"18":{},"31":{},"40":{},"57":{}},"component":{},"keyword":{}}],["insecuresourc",{"_index":2088,"title":{},"name":{},"text":{"31":{},"57":{}},"component":{},"keyword":{}}],["insid",{"_index":554,"title":{"28-2":{}},"name":{},"text":{"7":{},"9":{},"12":{},"17":{},"21":{},"23":{},"24":{},"28":{},"29":{},"31":{},"34":{},"43":{},"44":{},"45":{},"46":{},"49":{},"51":{},"52":{},"76":{},"78":{},"87":{},"91":{},"99":{},"100":{},"104":{},"106":{},"111":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{}}],["inspect",{"_index":776,"title":{"34-19":{}},"name":{},"text":{"9":{},"11":{},"12":{},"27":{},"28":{},"29":{},"34":{},"43":{},"45":{},"47":{},"53":{},"60":{},"65":{},"77":{},"107":{},"123":{},"125":{}},"component":{},"keyword":{}}],["inspir",{"_index":3978,"title":{},"name":{},"text":{"106":{}},"component":{},"keyword":{}}],["instal",{"_index":366,"title":{"16":{},"22":{},"50":{},"51":{},"52":{},"7-1":{},"15-1":{},"17-1":{},"22-1":{},"29-5":{},"51-5":{},"52-5":{},"62-5":{},"62-6":{},"62-8":{},"63-2":{},"64-1":{},"64-2":{},"65-1":{},"65-2":{},"66-1":{},"66-2":{},"66-3":{},"66-4":{},"66-5":{},"67-1":{},"67-2":{},"67-3":{},"67-7":{},"67-8":{},"68-2":{},"69-2":{}},"name":{"16":{},"22":{},"51":{},"67":{}},"text":{"6":{},"7":{},"9":{},"10":{},"16":{},"17":{},"18":{},"22":{},"29":{},"33":{},"36":{},"41":{},"44":{},"45":{},"46":{},"48":{},"51":{},"52":{},"53":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"80":{},"108":{},"109":{}},"component":{},"keyword":{"7":{},"22":{},"50":{},"51":{},"52":{}}}],["installpolicyreportcrd",{"_index":1214,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["instanc",{"_index":464,"title":{"98-1":{}},"name":{},"text":{"7":{},"9":{},"21":{},"27":{},"28":{},"36":{},"38":{},"51":{},"52":{},"58":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"71":{},"98":{},"99":{},"104":{},"105":{},"111":{},"112":{}},"component":{},"keyword":{}}],["instanti",{"_index":565,"title":{},"name":{},"text":{"7":{},"53":{},"87":{},"93":{},"94":{},"98":{}},"component":{},"keyword":{}}],["instead",{"_index":643,"title":{},"name":{},"text":{"8":{},"13":{},"21":{},"31":{},"41":{},"49":{},"60":{},"98":{},"99":{},"104":{},"105":{},"112":{},"115":{},"117":{}},"component":{},"keyword":{}}],["instruct",{"_index":166,"title":{},"name":{},"text":{"3":{},"4":{},"22":{},"38":{},"45":{},"46":{},"63":{},"67":{},"68":{},"69":{}},"component":{},"keyword":{}}],["instrument",{"_index":2546,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["insuffici",{"_index":1718,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["int(5",{"_index":3535,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["integ",{"_index":1677,"title":{},"name":{},"text":{"26":{},"31":{},"74":{},"75":{}},"component":{},"keyword":{}}],["integr",{"_index":269,"title":{"102":{},"8-4":{},"49-4":{},"49-6":{},"63-3":{}},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"12":{},"21":{},"22":{},"23":{},"26":{},"45":{},"49":{},"60":{},"63":{},"68":{},"78":{},"101":{},"106":{},"113":{},"118":{}},"component":{},"keyword":{"102":{}}}],["intel",{"_index":1490,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["intend",{"_index":698,"title":{},"name":{},"text":{"8":{},"41":{},"82":{}},"component":{},"keyword":{}}],["intens",{"_index":1710,"title":{},"name":{},"text":{"26":{},"38":{}},"component":{},"keyword":{}}],["intent",{"_index":13,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["inter",{"_index":1691,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["interact",{"_index":395,"title":{},"name":{},"text":{"7":{},"9":{},"18":{},"34":{},"57":{},"72":{},"76":{},"82":{},"88":{},"92":{},"116":{}},"component":{},"keyword":{}}],["intercept",{"_index":2357,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["intercommun",{"_index":3506,"title":{},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["interest",{"_index":263,"title":{},"name":{},"text":{"4":{},"16":{},"28":{},"29":{},"41":{},"49":{},"79":{},"80":{},"106":{},"111":{},"116":{},"121":{},"125":{}},"component":{},"keyword":{}}],["interf",{"_index":749,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["interfac",{"_index":163,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"22":{},"29":{},"71":{},"83":{},"96":{},"98":{},"108":{},"116":{}},"component":{},"keyword":{"68":{}}}],["intermedi",{"_index":3495,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["intern",{"_index":365,"title":{},"name":{},"text":{"6":{},"8":{},"24":{},"31":{},"38":{},"52":{},"91":{}},"component":{},"keyword":{}}],["interoper",{"_index":761,"title":{},"name":{},"text":{"9":{},"61":{},"101":{}},"component":{},"keyword":{}}],["interpret",{"_index":3521,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["interrupt",{"_index":1679,"title":{},"name":{},"text":{"26":{},"38":{},"39":{}},"component":{},"keyword":{}}],["intersect",{"_index":3583,"title":{},"name":{},"text":{"94":{},"96":{},"98":{}},"component":{},"keyword":{}}],["interv",{"_index":3106,"title":{},"name":{},"text":{"65":{},"66":{},"68":{}},"component":{},"keyword":{}}],["intorstr",{"_index":2078,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["intrins",{"_index":3920,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["intro",{"_index":3207,"title":{},"name":{"72":{},"86":{},"92":{},"96":{},"106":{},"108":{},"116":{},"118":{},"122":{}},"text":{},"component":{},"keyword":{}}],["introduc",{"_index":550,"title":{"13-2":{}},"name":{},"text":{"7":{},"14":{},"21":{},"26":{},"29":{},"41":{},"49":{},"71":{},"76":{},"81":{},"105":{},"115":{},"122":{}},"component":{},"keyword":{}}],["introduct",{"_index":182,"title":{"92":{},"122":{},"43-1":{},"122-1":{}},"name":{"4":{}},"text":{"5":{},"117":{}},"component":{},"keyword":{"92":{},"108":{}}}],["intrus",{"_index":704,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["invalid",{"_index":890,"title":{},"name":{},"text":{"10":{},"12":{},"27":{},"30":{},"98":{},"100":{},"104":{},"109":{},"110":{},"111":{}},"component":{},"keyword":{}}],["invalid_nam",{"_index":3998,"title":{},"name":{},"text":{"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["invalid_names.insert(string::from(\"bad_name1",{"_index":4028,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["invalid_names.insert(string::from(\"bad_name2",{"_index":4029,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["invalid_names.insert(string::from(\"nginx",{"_index":4086,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["invalid_names.insert(string::from(\"prod",{"_index":4088,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["inventori",{"_index":3291,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["invers",{"_index":1592,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["invert",{"_index":964,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["invert_behavior",{"_index":962,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["investig",{"_index":7,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["invoc",{"_index":3367,"title":{},"name":{},"text":{"86":{},"98":{},"99":{}},"component":{},"keyword":{}}],["invok",{"_index":836,"title":{},"name":{},"text":{"9":{},"38":{},"73":{},"74":{},"77":{},"78":{},"86":{},"99":{},"106":{},"116":{}},"component":{},"keyword":{}}],["involv",{"_index":1312,"title":{},"name":{},"text":{"21":{},"26":{},"54":{},"88":{}},"component":{},"keyword":{}}],["io.artifacthub.displaynam",{"_index":1440,"title":{},"name":{},"text":{"21":{},"82":{},"105":{}},"component":{},"keyword":{}}],["io.artifacthub.keyword",{"_index":1442,"title":{},"name":{},"text":{"21":{},"82":{},"105":{}},"component":{},"keyword":{}}],["io.artifacthub.resourc",{"_index":1441,"title":{},"name":{},"text":{"21":{},"82":{},"105":{}},"component":{},"keyword":{}}],["io.kubewarden.kwctl",{"_index":979,"title":{},"name":{},"text":{"12":{},"29":{},"60":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.author",{"_index":950,"title":{},"name":{},"text":{"12":{},"21":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.categori",{"_index":1452,"title":{},"name":{},"text":{"21":{},"38":{},"46":{},"82":{},"93":{},"94":{},"105":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.descript",{"_index":948,"title":{},"name":{},"text":{"12":{},"21":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.licens",{"_index":956,"title":{},"name":{},"text":{"12":{},"21":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.ociurl",{"_index":1444,"title":{},"name":{},"text":{"21":{},"82":{},"105":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.sever",{"_index":1450,"title":{},"name":{},"text":{"21":{},"38":{},"46":{},"82":{},"93":{},"94":{},"105":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.sourc",{"_index":955,"title":{},"name":{},"text":{"12":{},"21":{},"34":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.titl",{"_index":944,"title":{},"name":{},"text":{"12":{},"21":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.url",{"_index":953,"title":{},"name":{},"text":{"12":{},"21":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.usag",{"_index":959,"title":{},"name":{},"text":{"12":{},"121":{},"125":{}},"component":{},"keyword":{}}],["io.kubewarden.policy.vers",{"_index":946,"title":{},"name":{},"text":{"12":{},"21":{},"44":{},"82":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["ip",{"_index":1774,"title":{},"name":{},"text":{"27":{},"52":{},"64":{},"89":{}},"component":{},"keyword":{}}],["ip/dashboard/c/local/uiplugin",{"_index":3164,"title":{},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["ipc",{"_index":1772,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["ipv4",{"_index":3486,"title":{},"name":{},"text":{"89":{}},"component":{},"keyword":{}}],["ipv6",{"_index":3487,"title":{},"name":{},"text":{"89":{}},"component":{},"keyword":{}}],["is_a_denied_priority_class",{"_index":1604,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["is_trust",{"_index":3391,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["isnamedefin",{"_index":3695,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["isn’t",{"_index":444,"title":{},"name":{},"text":{"7":{},"14":{},"15":{},"38":{},"41":{},"42":{},"51":{},"64":{},"66":{},"71":{},"73":{},"74":{},"76":{},"98":{},"99":{},"102":{},"105":{},"108":{},"117":{}},"component":{},"keyword":{}}],["isol",{"_index":706,"title":{"26-14":{},"52-3":{}},"name":{},"text":{"8":{},"9":{},"19":{},"26":{},"52":{},"106":{}},"component":{},"keyword":{}}],["issu",{"_index":26,"title":{"70":{},"37-4":{},"56-1":{}},"name":{},"text":{"1":{},"7":{},"10":{},"16":{},"21":{},"26":{},"35":{},"38":{},"39":{},"41":{},"49":{},"54":{},"56":{},"60":{},"62":{},"63":{},"64":{},"66":{},"69":{},"71":{},"74":{},"80":{},"83":{},"84":{},"85":{},"86":{},"98":{},"107":{},"116":{}},"component":{},"keyword":{}}],["issuer",{"_index":2140,"title":{},"name":{},"text":{"34":{},"43":{},"45":{},"60":{},"66":{},"87":{},"95":{}},"component":{},"keyword":{}}],["issuer(mandatori",{"_index":2449,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["issuer=https://token.actions.githubusercontent.com",{"_index":2514,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["issuerref",{"_index":3130,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["it'",{"_index":2754,"title":{},"name":{},"text":{"53":{},"87":{},"90":{}},"component":{},"keyword":{}}],["item",{"_index":358,"title":{},"name":{},"text":{"5":{},"21":{},"31":{},"67":{},"94":{}},"component":{},"keyword":{}}],["iter",{"_index":2470,"title":{},"name":{},"text":{"44":{},"99":{},"104":{}},"component":{},"keyword":{}}],["itself",{"_index":382,"title":{},"name":{},"text":{"6":{},"31":{},"45":{},"61":{},"107":{},"123":{},"125":{}},"component":{},"keyword":{}}],["it’",{"_index":571,"title":{},"name":{},"text":{"7":{},"9":{},"12":{},"13":{},"15":{},"17":{},"18":{},"23":{},"26":{},"27":{},"28":{},"31":{},"33":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"44":{},"48":{},"49":{},"50":{},"51":{},"52":{},"57":{},"58":{},"60":{},"61":{},"63":{},"64":{},"67":{},"69":{},"73":{},"80":{},"84":{},"87":{},"92":{},"96":{},"98":{},"99":{},"100":{},"103":{},"104":{},"106":{},"109":{},"111":{},"112":{},"113":{},"114":{},"119":{},"120":{},"125":{}},"component":{},"keyword":{}}],["iwidaqab",{"_index":2763,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["j9nr4wf66uabs/tth5cylrniuqsd+gbhgwv",{"_index":2870,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["jaeger",{"_index":3034,"title":{"64-1":{},"64-4":{},"66-3":{},"66-6":{},"69-2":{},"69-3":{}},"name":{},"text":{"63":{},"64":{},"66":{},"69":{},"101":{}},"component":{},"keyword":{}}],["jaegertrac",{"_index":3078,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["jaegertracing.io/v1",{"_index":3084,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["jaegertracing/jaeg",{"_index":2119,"title":{},"name":{},"text":{"33":{},"64":{},"66":{}},"component":{},"keyword":{}}],["jaeger’",{"_index":3083,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{},"keyword":{}}],["javascript",{"_index":680,"title":{},"name":{},"text":{"8":{},"85":{}},"component":{},"keyword":{}}],["jetstack",{"_index":3067,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["jetstack/cert",{"_index":3071,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["jfrog",{"_index":2202,"title":{"37-6":{}},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["jguilhermevanz@suse.com",{"_index":2846,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["jo",{"_index":2843,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["job",{"_index":1158,"title":{},"name":{},"text":{"15":{},"17":{},"19":{},"21":{},"23":{},"24":{},"38":{},"44":{},"53":{},"60":{},"81":{},"102":{}},"component":{},"keyword":{}}],["jobs.push",{"_index":3888,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["join",{"_index":1085,"title":{},"name":{},"text":{"14":{},"95":{}},"component":{},"keyword":{}}],["journey",{"_index":718,"title":{"9-10":{}},"name":{},"text":{},"component":{},"keyword":{}}],["joy",{"_index":3355,"title":{},"name":{},"text":{"84":{}},"component":{},"keyword":{}}],["jq",{"_index":1517,"title":{},"name":{},"text":{"23":{},"27":{},"60":{},"77":{},"78":{},"99":{},"104":{},"120":{},"124":{}},"component":{},"keyword":{}}],["jqpathexpress",{"_index":1203,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["json",{"_index":1424,"title":{"104":{}},"name":{},"text":{"21":{},"23":{},"27":{},"28":{},"29":{},"34":{},"39":{},"40":{},"45":{},"60":{},"65":{},"73":{},"74":{},"75":{},"77":{},"78":{},"82":{},"85":{},"86":{},"88":{},"89":{},"96":{},"98":{},"99":{},"100":{},"104":{},"105":{},"111":{},"115":{},"116":{},"117":{},"122":{},"126":{}},"component":{},"keyword":{"104":{}}}],["json.marsh",{"_index":3711,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["json.marshal(&respons",{"_index":4203,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["json.newdecoder(strings.newreader(string(input",{"_index":4211,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["json.unmarsh",{"_index":3702,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["json.unmarshal([]byte(podjson",{"_index":3791,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["json.unmarshal(data",{"_index":3716,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["json.unmarshal(input",{"_index":4199,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["json.unmarshal(payload",{"_index":3736,"title":{},"name":{},"text":{"98":{},"99":{},"104":{},"105":{}},"component":{},"keyword":{}}],["json.unmarshal(responsepayload",{"_index":3765,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["json.unmarshal(settingsjson",{"_index":3744,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["json.unmarshal(validationreq.set",{"_index":3723,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["json:\"accept",{"_index":4226,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["json:\"act",{"_index":3928,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"code,omitempti",{"_index":4229,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["json:\"constrained_label",{"_index":3692,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["json:\"defaultact",{"_index":3965,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"defaultresourc",{"_index":3966,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"defaultus",{"_index":3964,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"denied_label",{"_index":3689,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["json:\"message,omitempti",{"_index":4227,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["json:\"mutated_object,omitempti",{"_index":4231,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["json:\"request",{"_index":3925,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"resourc",{"_index":3929,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"set",{"_index":3926,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"us",{"_index":3927,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"validact",{"_index":3931,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"validresourc",{"_index":3932,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["json:\"validus",{"_index":3930,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["jsonpatch",{"_index":1899,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["jsonpath",{"_index":1040,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["jsonpoint",{"_index":1201,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["june",{"_index":4193,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["justifi",{"_index":915,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["k",{"_index":113,"title":{"3-6":{}},"name":{},"text":{"34":{},"60":{}},"component":{},"keyword":{}}],["k3",{"_index":2734,"title":{"62":{},"62-4":{},"62-5":{}},"name":{},"text":{"52":{},"62":{},"71":{}},"component":{},"keyword":{}}],["k8",{"_index":805,"title":{},"name":{},"text":{"9":{},"71":{}},"component":{},"keyword":{}}],["k8s((\"kubernet",{"_index":789,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["k8s.io/api/core/v1",{"_index":3631,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["k8s:io.kubernetes.pod.namespac",{"_index":3198,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["k8srequiredlabel",{"_index":1342,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["kb",{"_index":1926,"title":{},"name":{},"text":{"29":{},"99":{}},"component":{},"keyword":{}}],["keep",{"_index":865,"title":{"44-3":{}},"name":{},"text":{"9":{},"21":{},"33":{},"44":{},"46":{},"76":{},"78":{},"79":{},"104":{},"107":{}},"component":{},"keyword":{}}],["kept",{"_index":3267,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["key",{"_index":819,"title":{"43-6":{},"60-10":{}},"name":{},"text":{"9":{},"10":{},"12":{},"14":{},"16":{},"17":{},"21":{},"24":{},"25":{},"26":{},"31":{},"34":{},"35":{},"39":{},"40":{},"43":{},"44":{},"53":{},"56":{},"60":{},"62":{},"63":{},"64":{},"66":{},"71":{},"74":{},"76":{},"78":{},"87":{},"90":{},"99":{},"116":{}},"component":{},"keyword":{}}],["key\":[\"som",{"_index":3238,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["key.str",{"_index":3912,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["key/valu",{"_index":2453,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["key1",{"_index":1631,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["key2",{"_index":1635,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["key=valu",{"_index":2170,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["key_fil",{"_index":2272,"title":{},"name":{},"text":{"39":{},"66":{}},"component":{},"keyword":{}}],["keycertsign",{"_index":2979,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["keyid:always,issu",{"_index":2974,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["keyless",{"_index":2410,"title":{"43-7":{},"60-3":{},"60-11":{}},"name":{},"text":{"43":{},"45":{},"60":{},"87":{},"95":{}},"component":{},"keyword":{}}],["keyless_prefix",{"_index":3400,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["keyout",{"_index":2985,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["keys:str",{"_index":2080,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["keyusag",{"_index":2978,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["keyword",{"_index":1364,"title":{},"name":{},"text":{"21":{},"112":{}},"component":{},"keyword":{}}],["kill",{"_index":3214,"title":{},"name":{},"text":{"73":{}},"component":{},"keyword":{}}],["kind",{"_index":295,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"13":{},"14":{},"16":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"38":{},"43":{},"44":{},"48":{},"49":{},"51":{},"52":{},"53":{},"58":{},"60":{},"62":{},"64":{},"66":{},"68":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"82":{},"87":{},"91":{},"93":{},"94":{},"95":{},"97":{},"109":{},"111":{},"112":{},"119":{},"121":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{}}],["kjevmbmga1uechmmc2lnc3rvcmuuzgv2mrewdwydvqqdewhzawdzdg9yztaefw0i",{"_index":2878,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["know",{"_index":41,"title":{"8-3":{}},"name":{},"text":{"1":{},"3":{},"21":{},"47":{},"49":{},"83":{},"95":{},"111":{}},"component":{},"keyword":{}}],["known",{"_index":439,"title":{"37-4":{}},"name":{},"text":{"7":{},"33":{},"41":{},"80":{},"88":{},"94":{},"113":{}},"component":{},"keyword":{}}],["knownhost",{"_index":3570,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["knowningress",{"_index":3568,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["ksxf+jakbggqhkjopqqdawnpadbmajeaj1nhexzp+13nwbna+edsdp8g1wwg1tcm",{"_index":2885,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["kube",{"_index":1571,"title":{},"name":{},"text":{"24":{},"49":{},"62":{},"65":{},"66":{},"71":{},"76":{},"106":{}},"component":{},"keyword":{}}],["kubeconfig",{"_index":3009,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["kubeconfigfil",{"_index":3006,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["kubectl",{"_index":556,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"17":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"32":{},"48":{},"51":{},"52":{},"53":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"71":{},"76":{},"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["kubectl:v5.0.0",{"_index":2730,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["kubernet",{"_index":76,"title":{"91":{},"8-1":{},"8-2":{},"9-3":{},"9-4":{},"9-14":{},"13-4":{},"28-1":{},"28-2":{},"38-6":{},"41-1":{},"41-11":{},"41-44":{},"49-4":{},"62-3":{},"63-1":{},"71-4":{},"82-2":{},"82-4":{},"92-1":{},"92-2":{},"121-3":{}},"name":{"91":{}},"text":{"1":{},"3":{},"4":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"38":{},"39":{},"41":{},"46":{},"47":{},"48":{},"49":{},"51":{},"58":{},"61":{},"62":{},"63":{},"65":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"82":{},"91":{},"92":{},"93":{},"94":{},"96":{},"98":{},"99":{},"100":{},"104":{},"106":{},"107":{},"111":{},"113":{},"117":{},"118":{},"121":{},"122":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{"1":{},"4":{},"9":{},"13":{},"15":{},"17":{},"18":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{}}}],["kubernetes.admiss",{"_index":4268,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["kubernetes.io/dockercfg",{"_index":2798,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["kubernetes.io/dockerconfigjson",{"_index":2799,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["kubernetes.io/hostnam",{"_index":1701,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["kubernetes.io/ingress.class",{"_index":3085,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["kubernetes.io/metadata.nam",{"_index":548,"title":{},"name":{},"text":{"7":{},"24":{},"71":{},"95":{}},"component":{},"keyword":{}}],["kubernetes.io/o",{"_index":1654,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["kubernetesclient.model",{"_index":3330,"title":{},"name":{},"text":{"80":{}},"component":{},"keyword":{}}],["kubernetesgetresourc",{"_index":3282,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["kuberwarden",{"_index":1809,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["kubewarden",{"_index":62,"title":{"15":{},"19":{},"21":{},"23":{},"26":{},"32":{},"37":{},"45":{},"49":{},"50":{},"71":{},"81":{},"121":{},"124":{},"125":{},"19-2":{},"20-1":{},"20-2":{},"21-3":{},"21-5":{},"27-1":{},"27-6":{},"28-2":{},"32-1":{},"38-7":{},"38-8":{},"41-58":{},"41-59":{},"42-1":{},"51-5":{},"52-2":{},"52-5":{},"61-1":{},"62-6":{},"62-8":{},"68-4":{},"69-3":{},"92-3":{}},"name":{"23":{},"45":{}},"text":{"1":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"38":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"48":{},"49":{},"51":{},"52":{},"53":{},"58":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"104":{},"105":{},"106":{},"107":{},"108":{},"112":{},"113":{},"114":{},"116":{},"117":{},"118":{},"121":{},"122":{},"125":{}},"component":{},"keyword":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{}}}],["kubewarden.acceptrequest",{"_index":3806,"title":{},"name":{},"text":{"99":{},"104":{},"105":{}},"component":{},"keyword":{}}],["kubewarden.acceptset",{"_index":3739,"title":{},"name":{},"text":{"98":{},"105":{}},"component":{},"keyword":{}}],["kubewarden.code(400",{"_index":3786,"title":{},"name":{},"text":{"99":{},"104":{},"105":{}},"component":{},"keyword":{}}],["kubewarden.io/policyreport",{"_index":2609,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["kubewarden.kubewarden.svc",{"_index":3128,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["kubewarden.kubewarden.svc.cluster.loc",{"_index":3129,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["kubewarden.kubewardenlogwrit",{"_index":3868,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["kubewarden.messag",{"_index":3792,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["kubewarden.message(\"th",{"_index":3950,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["kubewarden.message(err.error",{"_index":3785,"title":{},"name":{},"text":{"99":{},"104":{},"105":{}},"component":{},"keyword":{}}],["kubewarden.message(fmt.sprintf",{"_index":3855,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["kubewarden.message(fmt.sprintf(\"constrain",{"_index":3917,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["kubewarden.message(fmt.sprintf(\"provid",{"_index":3738,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["kubewarden.message(validationerr.error",{"_index":3915,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["kubewarden.mi",{"_index":3136,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["kubewarden.mutaterequest(request",{"_index":3976,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["kubewarden.nocod",{"_index":3805,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["kubewarden.policy.demo/inspect",{"_index":4095,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["kubewarden.rejectrequest",{"_index":3784,"title":{},"name":{},"text":{"99":{},"104":{},"105":{}},"component":{},"keyword":{}}],["kubewarden.rejectset",{"_index":3737,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["kubewarden.rejectsettings(kubewarden.message(\"provid",{"_index":3941,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["kubewarden.rejectsettings(kubewarden.message(fmt.sprintf(\"provid",{"_index":3939,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["kubewarden.svc",{"_index":3011,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["kubewarden/audit",{"_index":2508,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["kubewarden/kubewarden",{"_index":442,"title":{},"name":{},"text":{"7":{},"17":{},"45":{},"51":{},"53":{},"61":{},"62":{},"64":{},"65":{},"66":{},"71":{}},"component":{},"keyword":{}}],["kubewarden/kwctl",{"_index":2539,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["kubewarden/opa",{"_index":4257,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["kubewarden/packages/chart",{"_index":2102,"title":{},"name":{},"text":{"32":{}},"component":{},"keyword":{}}],["kubewarden/packages/polici",{"_index":2101,"title":{},"name":{},"text":{"32":{}},"component":{},"keyword":{}}],["kubewarden/polici",{"_index":1690,"title":{},"name":{},"text":{"26":{},"45":{},"71":{}},"component":{},"keyword":{}}],["kubewarden::accept_request",{"_index":4054,"title":{},"name":{},"text":{"111":{},"112":{},"115":{}},"component":{},"keyword":{}}],["kubewarden::mutate_request(mutated_object",{"_index":4108,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["kubewarden::mutate_request(mutated_request",{"_index":4185,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["kubewarden::reject_request",{"_index":4063,"title":{},"name":{},"text":{"111":{},"112":{},"115":{}},"component":{},"keyword":{}}],["kubewarden::settings::validat",{"_index":4016,"title":{},"name":{},"text":{"110":{},"115":{}},"component":{},"keyword":{}}],["kubewarden_disable_timeout_protect",{"_index":2238,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["kubewarden_enable_metr",{"_index":2924,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["kubewarden_log_fmt",{"_index":2925,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["kubewarden_log_level",{"_index":473,"title":{},"name":{},"text":{"7":{},"60":{}},"component":{},"keyword":{}}],["kubewarden_policy_evaluations_tot",{"_index":2188,"title":{"35-3":{}},"name":{},"text":{"35":{},"65":{}},"component":{},"keyword":{}}],["kubewarden_policy_sdk::settings::validat",{"_index":4024,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["kubewarden_policy_sdk::test::testcas",{"_index":4072,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["kubewarden_policy_timeout",{"_index":2239,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["kubewarden_protocol",{"_index":3685,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["kubewarden_protocol.settingsvalidationrespons",{"_index":3764,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["kubewarden_protocol.validationrequest",{"_index":3722,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["kubewarden_protocol.validationrespons",{"_index":3834,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["kubewarden_signatures.yaml",{"_index":2461,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["kubewarden_test",{"_index":3819,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["kubewarden_testing.buildvalidationrequest",{"_index":3841,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["kubewarden_testing.buildvalidationrequest(&pod",{"_index":3833,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["kubewarden’",{"_index":1555,"title":{"92-4":{},"93-2":{}},"name":{},"text":{"23":{},"30":{},"34":{},"38":{},"41":{},"49":{},"51":{},"72":{},"73":{},"76":{},"77":{},"87":{},"92":{},"93":{},"94":{},"95":{},"98":{},"103":{},"108":{},"111":{},"114":{}},"component":{},"keyword":{}}],["kvm2",{"_index":3038,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["kw",{"_index":795,"title":{},"name":{},"text":{"9":{},"30":{},"53":{},"97":{}},"component":{},"keyword":{}}],["kw.k8",{"_index":3561,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["kw.k8s.apiversion(\"networking.k8s.io/v1\").kind(\"ingress\").list().item",{"_index":3569,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["kw.k8s.apiversion(\"v1\").kind(\"ingress",{"_index":3565,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["kw.sigstore.image(image).githubaction(\"opencontainers\").verify().istrust",{"_index":3600,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["kw[\"`**kubewarden",{"_index":792,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["kw_sdk.go",{"_index":4197,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["kwctl",{"_index":114,"title":{"22":{},"34":{},"3-7":{},"29-3":{},"34-1":{},"34-2":{},"34-5":{},"34-8":{},"34-11":{},"34-13":{},"34-16":{},"34-18":{},"34-19":{},"34-22":{},"34-24":{},"34-25":{},"34-28":{},"34-31":{},"34-33":{},"34-36":{},"34-39":{},"34-41":{},"34-43":{},"34-45":{},"34-48":{},"34-50":{},"34-51":{},"45-5":{}},"name":{"22":{},"34":{}},"text":{"11":{},"12":{},"18":{},"21":{},"22":{},"28":{},"29":{},"30":{},"32":{},"34":{},"37":{},"40":{},"42":{},"43":{},"44":{},"45":{},"49":{},"50":{},"51":{},"57":{},"60":{},"72":{},"76":{},"77":{},"78":{},"82":{},"87":{},"92":{},"93":{},"94":{},"95":{},"96":{},"99":{},"100":{},"101":{},"105":{},"106":{},"107":{},"113":{},"116":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{"22":{},"29":{},"34":{}}}],["kwctl.ex",{"_index":1492,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["kwctl.pem",{"_index":2538,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["kwctl.sig",{"_index":2537,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["kwctl::scaffold",{"_index":1976,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["kwctl::verifi",{"_index":2459,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["kyverno",{"_index":4196,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["kyverno/polici",{"_index":2122,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["kyverno’",{"_index":675,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["kywgtc7cxkijzr0mucud2wtx/je8ewj6opsalx09e2jtzvmu5kr9xuymf7zsj5ca",{"_index":2762,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["l",{"_index":575,"title":{},"name":{},"text":{"7":{},"20":{},"60":{},"76":{}},"component":{},"keyword":{}}],["l3jldxnhymxllxjlbgvhc2utcg9sawn5lxj1c3quew1sqhjlznmvagvhzhmvdjew",{"_index":2862,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["label",{"_index":549,"title":{},"name":{},"text":{"7":{},"8":{},"21":{},"23":{},"24":{},"26":{},"28":{},"31":{},"35":{},"48":{},"61":{},"64":{},"65":{},"71":{},"76":{},"91":{},"93":{},"97":{},"98":{},"99":{},"100":{},"102":{},"103":{},"104":{}},"component":{},"keyword":{}}],["label_selector",{"_index":3507,"title":{},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["labels.add(label",{"_index":3913,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["labels.contains(requiredlabel",{"_index":3916,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["labels:v0.1.0",{"_index":3894,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["labels:v0.1.6",{"_index":3094,"title":{},"name":{},"text":{"64":{}},"component":{},"keyword":{}}],["labelselector",{"_index":1642,"title":{},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{}}],["lack",{"_index":2225,"title":{},"name":{},"text":{"38":{},"92":{},"96":{}},"component":{},"keyword":{}}],["landscap",{"_index":3336,"title":{},"name":{},"text":{"81":{}},"component":{},"keyword":{}}],["languag",{"_index":205,"title":{"83":{},"8-3":{},"76-7":{},"81-1":{},"106-1":{}},"name":{"83":{}},"text":{"4":{},"8":{},"9":{},"28":{},"29":{},"30":{},"31":{},"38":{},"42":{},"49":{},"76":{},"81":{},"83":{},"84":{},"86":{},"87":{},"90":{},"92":{},"94":{},"96":{},"106":{},"108":{},"122":{}},"component":{},"keyword":{"83":{}}}],["larg",{"_index":1241,"title":{"19":{}},"name":{},"text":{"19":{},"26":{},"41":{},"56":{},"99":{}},"component":{},"keyword":{}}],["larger",{"_index":1694,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["largest",{"_index":1250,"title":{},"name":{},"text":{"19":{},"96":{}},"component":{},"keyword":{}}],["last",{"_index":1170,"title":{},"name":{},"text":{"15":{},"27":{},"43":{},"44":{},"60":{},"90":{},"96":{},"103":{}},"component":{},"keyword":{}}],["lastli",{"_index":1169,"title":{},"name":{},"text":{"15":{},"96":{}},"component":{},"keyword":{}}],["laststat",{"_index":1540,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["lasttransitiontim",{"_index":1521,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["lastupdatetim",{"_index":1524,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["latenc",{"_index":665,"title":{},"name":{},"text":{"8":{},"9":{},"19":{},"26":{},"38":{},"76":{}},"component":{},"keyword":{}}],["later",{"_index":879,"title":{},"name":{},"text":{"10":{},"30":{},"34":{},"36":{},"46":{},"50":{},"53":{},"99":{}},"component":{},"keyword":{}}],["latest",{"_index":446,"title":{},"name":{},"text":{"7":{},"9":{},"10":{},"14":{},"22":{},"25":{},"30":{},"42":{},"44":{},"60":{},"63":{},"65":{},"96":{},"102":{}},"component":{},"keyword":{}}],["layer",{"_index":814,"title":{},"name":{},"text":{"9":{},"45":{},"53":{},"62":{},"74":{},"87":{},"88":{}},"component":{},"keyword":{}}],["layout",{"_index":2468,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["lazy_stat",{"_index":4131,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["lead",{"_index":887,"title":{},"name":{},"text":{"10":{},"13":{},"17":{},"21":{},"30":{},"46":{},"75":{},"99":{},"102":{},"112":{},"123":{}},"component":{},"keyword":{}}],["leap",{"_index":3043,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["learn",{"_index":644,"title":{},"name":{},"text":{"8":{},"21":{},"31":{},"51":{},"52":{},"92":{},"123":{}},"component":{},"keyword":{}}],["leav",{"_index":1163,"title":{},"name":{},"text":{"15":{},"66":{}},"component":{},"keyword":{}}],["left",{"_index":334,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["len(s.validact",{"_index":3935,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["len(s.validresourc",{"_index":3937,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["len(s.validus",{"_index":3933,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["len(settings.validact",{"_index":4207,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["len(settings.validresourc",{"_index":4208,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["len(settings.validus",{"_index":4205,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["lengthi",{"_index":3896,"title":{},"name":{},"text":{"103":{}},"component":{},"keyword":{}}],["less",{"_index":3531,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["let",{"_index":39,"title":{},"name":{},"text":{"1":{},"8":{},"10":{},"15":{},"46":{},"51":{},"58":{},"60":{},"64":{},"65":{},"82":{},"123":{}},"component":{},"keyword":{}}],["letter",{"_index":2962,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["let’",{"_index":555,"title":{},"name":{},"text":{"7":{},"12":{},"24":{},"27":{},"28":{},"93":{},"94":{},"95":{},"115":{}},"component":{},"keyword":{}}],["level",{"_index":231,"title":{},"name":{},"text":{"4":{},"14":{},"23":{},"24":{},"25":{},"28":{},"39":{},"41":{},"45":{},"46":{},"49":{},"58":{},"76":{},"100":{},"113":{},"116":{}},"component":{},"keyword":{}}],["level\":\"debug\",\"message\":\"valid",{"_index":3671,"title":{},"name":{},"text":{"97":{},"99":{}},"component":{},"keyword":{}}],["level\":\"info\",\"message\":\"reject",{"_index":3677,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["leverag",{"_index":1891,"title":{},"name":{},"text":{"28":{},"68":{},"89":{}},"component":{},"keyword":{}}],["li",{"_index":2037,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["lib.r",{"_index":4070,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["librari",{"_index":306,"title":{"92-2":{}},"name":{},"text":{"4":{},"8":{},"80":{},"85":{},"90":{},"92":{},"93":{},"94":{},"95":{},"96":{},"101":{},"104":{},"113":{}},"component":{},"keyword":{}}],["library](https://github.com/kubewarden/cel",{"_index":3557,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["libvirt",{"_index":3039,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["libvirtd",{"_index":3040,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["licens",{"_index":978,"title":{},"name":{},"text":{"12":{},"21":{},"29":{},"60":{},"125":{}},"component":{},"keyword":{}}],["lifecycl",{"_index":1177,"title":{},"name":{},"text":{"16":{},"84":{}},"component":{},"keyword":{}}],["lifetim",{"_index":2817,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["limit",{"_index":256,"title":{"47":{},"26-10":{},"26-11":{},"38-2":{},"96-1":{},"106-6":{},"116-1":{}},"name":{"47":{}},"text":{"4":{},"8":{},"23":{},"24":{},"26":{},"29":{},"31":{},"34":{},"38":{},"44":{},"56":{},"71":{},"76":{},"80":{},"81":{},"82":{},"84":{},"85":{},"93":{},"94":{},"96":{},"105":{},"116":{}},"component":{},"keyword":{"26":{},"59":{}}}],["line",{"_index":1459,"title":{"34-1":{},"39-1":{}},"name":{},"text":{"22":{},"34":{},"39":{},"60":{},"98":{},"99":{},"111":{}},"component":{},"keyword":{}}],["link",{"_index":351,"title":{},"name":{},"text":{"5":{},"49":{},"60":{},"106":{},"107":{}},"component":{},"keyword":{}}],["linkstyl",{"_index":2401,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["lint",{"_index":307,"title":{},"name":{},"text":{"4":{},"85":{},"95":{},"114":{}},"component":{},"keyword":{}}],["lint:v1.52.1",{"_index":3613,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["linux",{"_index":299,"title":{},"name":{},"text":{"4":{},"18":{},"22":{},"26":{},"27":{},"40":{},"45":{},"80":{},"84":{},"88":{}},"component":{},"keyword":{}}],["list",{"_index":487,"title":{"60-5":{},"76-3":{}},"name":{},"text":{"7":{},"11":{},"24":{},"27":{},"29":{},"31":{},"33":{},"34":{},"37":{},"40":{},"41":{},"43":{},"45":{},"48":{},"50":{},"51":{},"57":{},"61":{},"64":{},"67":{},"69":{},"76":{},"81":{},"87":{},"89":{},"90":{},"91":{},"92":{},"94":{},"95":{},"97":{},"98":{},"99":{},"100":{},"104":{},"105":{},"106":{},"107":{},"109":{},"110":{},"111":{},"115":{},"117":{}},"component":{},"keyword":{}}],["list_resources_al",{"_index":3502,"title":{"91-2":{}},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["list_resources_by_namespac",{"_index":3503,"title":{"91-5":{}},"name":{},"text":{"91":{}},"component":{},"keyword":{}}],["listen",{"_index":844,"title":{},"name":{},"text":{"9":{},"13":{},"39":{},"41":{}},"component":{},"keyword":{}}],["listmeta",{"_index":2003,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["littl",{"_index":2929,"title":{},"name":{},"text":{"61":{},"93":{}},"component":{},"keyword":{}}],["live",{"_index":1957,"title":{},"name":{},"text":{"30":{},"49":{},"60":{},"91":{}},"component":{},"keyword":{}}],["ljiumdakbggqhkjopqqdawnpadbmajeaygqbnckoifsto7yccff8yxyc144ann2x",{"_index":2868,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["llvm",{"_index":3619,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["lmnvbs9rdwjld2fyzgvul2dpdgh1yi1hy3rpb25zly5naxrodwivd29ya2zsb3dz",{"_index":2861,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["lmrldjerma8ga1ueaxmic2lnc3rvcmuwdjaqbgcqhkjopqibbgurgqqaigniaat7",{"_index":2880,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["lo",{"_index":1475,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["load",{"_index":391,"title":{"34-22":{}},"name":{},"text":{"7":{},"8":{},"9":{},"12":{},"19":{},"21":{},"26":{},"31":{},"34":{},"39":{},"40":{},"51":{},"52":{},"60":{},"65":{},"67":{},"68":{},"76":{},"77":{},"78":{},"81":{},"91":{},"98":{}},"component":{},"keyword":{}}],["local",{"_index":927,"title":{"76-6":{}},"name":{},"text":{"12":{},"17":{},"28":{},"29":{},"31":{},"34":{},"40":{},"45":{},"51":{},"52":{},"62":{},"66":{},"67":{},"76":{},"77":{},"78":{},"97":{},"98":{},"121":{},"125":{}},"component":{},"keyword":{}}],["local/loc",{"_index":1151,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["localhost/nginx",{"_index":3319,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["localhost:5000",{"_index":2740,"title":{},"name":{},"text":{"52":{},"57":{}},"component":{},"keyword":{}}],["localitynam",{"_index":2966,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["locat",{"_index":339,"title":{},"name":{},"text":{"5":{},"7":{},"12":{},"14":{},"22":{},"31":{},"60":{},"99":{},"124":{},"125":{}},"component":{},"keyword":{}}],["log",{"_index":646,"title":{"101":{},"113":{}},"name":{"101":{},"113":{}},"text":{"8":{},"14":{},"26":{},"36":{},"38":{},"39":{},"41":{},"44":{},"45":{},"49":{},"53":{},"60":{},"63":{},"69":{},"101":{},"107":{},"113":{}},"component":{},"keyword":{"101":{},"113":{}}}],["log.fatalf(\"can",{"_index":4204,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["log.fatalf(\"cannot",{"_index":4220,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["log_drain",{"_index":4062,"title":{},"name":{},"text":{"111":{},"113":{}},"component":{},"keyword":{}}],["log_fmt",{"_index":2274,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["log_level",{"_index":2276,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["logger",{"_index":3851,"title":{"101-1":{},"101-2":{},"113-1":{},"113-2":{}},"name":{},"text":{"99":{},"101":{},"113":{}},"component":{},"keyword":{}}],["logger.debugwithfields(\"valid",{"_index":3796,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["logger.info(\"mut",{"_index":3972,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["logger.info(\"valid",{"_index":3874,"title":{},"name":{},"text":{"101":{},"105":{}},"component":{},"keyword":{}}],["logger.warn(\"reject",{"_index":3940,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["logger.warnwithfields(\"log",{"_index":3875,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["logger::root",{"_index":4134,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["logging::kubewardendrain::new",{"_index":4135,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["logic",{"_index":757,"title":{"99":{},"111":{}},"name":{"111":{}},"text":{"9":{},"14":{},"24":{},"29":{},"31":{},"81":{},"93":{},"99":{},"104":{},"111":{},"112":{},"117":{}},"component":{},"keyword":{"111":{}}}],["login",{"_index":423,"title":{},"name":{},"text":{"7":{},"60":{},"65":{}},"component":{},"keyword":{}}],["logwrit",{"_index":3867,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["loki",{"_index":2647,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["long",{"_index":689,"title":{},"name":{},"text":{"8":{},"21":{},"34":{},"38":{},"60":{}},"component":{},"keyword":{}}],["longer",{"_index":637,"title":{},"name":{},"text":{"8":{},"9":{},"15":{},"17":{},"34":{},"38":{},"46":{},"98":{}},"component":{},"keyword":{}}],["look",{"_index":606,"title":{"106-4":{}},"name":{},"text":{"7":{},"17":{},"21":{},"27":{},"44":{},"63":{},"64":{},"74":{},"75":{},"77":{},"93":{},"94":{},"97":{},"98":{},"102":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{},"115":{},"117":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["lookup",{"_index":3483,"title":{"89-1":{}},"name":{},"text":{"89":{}},"component":{},"keyword":{}}],["loop",{"_index":827,"title":{"13-4":{}},"name":{},"text":{"9":{},"10":{},"13":{},"38":{},"92":{},"99":{},"104":{}},"component":{},"keyword":{}}],["low",{"_index":664,"title":{},"name":{},"text":{"8":{},"24":{},"26":{},"46":{},"48":{},"93":{},"94":{},"105":{},"116":{}},"component":{},"keyword":{}}],["lower",{"_index":1007,"title":{},"name":{},"text":{"13":{},"58":{}},"component":{},"keyword":{}}],["lr",{"_index":784,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{},"keyword":{}}],["lxbvbgljetacbgorbgeeayo/maeeba5szwxlyxnlihbvbgljetasbgorbgeeayo",{"_index":2865,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["m",{"_index":115,"title":{"3-8":{}},"name":{},"text":{"17":{},"34":{},"105":{}},"component":{},"keyword":{}}],["mac",{"_index":2291,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["machin",{"_index":170,"title":{},"name":{},"text":{"3":{},"4":{},"27":{},"63":{},"66":{},"80":{},"84":{},"96":{},"100":{},"114":{}},"component":{},"keyword":{}}],["maco",{"_index":1460,"title":{},"name":{},"text":{"22":{},"80":{}},"component":{},"keyword":{}}],["macro",{"_index":3518,"title":{},"name":{},"text":{"92":{},"113":{}},"component":{},"keyword":{}}],["made",{"_index":1084,"title":{},"name":{},"text":{"14":{},"38":{},"44":{},"86":{},"103":{},"112":{}},"component":{},"keyword":{}}],["maecbarwdxnomdkgcisgaqqbg78waqeek2h0dhbzoi8vdg9rzw4uywn0aw9ucy5n",{"_index":2866,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["mail",{"_index":2311,"title":{},"name":{},"text":{"40":{},"57":{},"87":{}},"component":{},"keyword":{}}],["main",{"_index":345,"title":{"7-2":{},"14-1":{}},"name":{},"text":{"5":{},"7":{},"14":{},"21":{},"23":{},"44":{},"45":{},"81":{},"85":{},"99":{},"101":{},"109":{},"114":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["main.go",{"_index":3866,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["maintain",{"_index":52,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"19":{},"26":{},"27":{},"42":{},"45":{},"49":{},"116":{}},"component":{},"keyword":{}}],["maintainers@lists.cncf.io",{"_index":63,"title":{},"name":{},"text":{"1":{},"29":{}},"component":{},"keyword":{}}],["mainten",{"_index":1628,"title":{},"name":{},"text":{"26":{},"37":{}},"component":{},"keyword":{}}],["major",{"_index":2378,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["major.minor.patch",{"_index":2374,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["major/minor",{"_index":2375,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["make",{"_index":713,"title":{"9-3":{},"9-4":{},"9-14":{},"56-3":{}},"name":{},"text":{"9":{},"14":{},"15":{},"17":{},"21":{},"22":{},"36":{},"38":{},"44":{},"45":{},"46":{},"47":{},"49":{},"52":{},"53":{},"54":{},"62":{},"64":{},"65":{},"67":{},"71":{},"74":{},"76":{},"79":{},"82":{},"89":{},"92":{},"97":{},"99":{},"100":{},"104":{},"105":{},"106":{},"109":{},"110":{},"114":{}},"component":{},"keyword":{}}],["makefil",{"_index":1323,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["makefile:29",{"_index":3849,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["makefile:4",{"_index":1367,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["makepkg",{"_index":1470,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["malici",{"_index":751,"title":{},"name":{},"text":{"9":{},"41":{}},"component":{},"keyword":{}}],["manag",{"_index":236,"title":{"15":{},"66-2":{}},"name":{},"text":{"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"22":{},"26":{},"28":{},"29":{},"34":{},"40":{},"42":{},"48":{},"49":{},"61":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"82":{}},"component":{},"keyword":{"4":{},"5":{}}}],["managedfield",{"_index":3270,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["manager.collectorimage.repository=otel/opentelemetri",{"_index":3075,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["manager.io/v1",{"_index":3126,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["mandat",{"_index":1380,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["mandatori",{"_index":933,"title":{},"name":{},"text":{"12":{},"21":{},"43":{},"48":{},"60":{},"73":{},"74":{},"75":{},"87":{},"90":{},"97":{},"125":{}},"component":{},"keyword":{}}],["mandatory_annot",{"_index":1135,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["mandatory_label",{"_index":3095,"title":{},"name":{},"text":{"64":{}},"component":{},"keyword":{}}],["mani",{"_index":495,"title":{"9-16":{}},"name":{},"text":{"7":{},"9":{},"21":{},"34":{},"63":{},"65":{},"88":{},"108":{},"116":{}},"component":{},"keyword":{}}],["manifest",{"_index":1433,"title":{"34-45":{},"52-1":{},"88-1":{},"88-7":{},"88-13":{}},"name":{},"text":{"21":{},"29":{},"34":{},"41":{},"45":{},"52":{},"60":{},"66":{},"68":{},"82":{},"88":{},"89":{},"93":{},"94":{},"95":{},"121":{},"125":{}},"component":{},"keyword":{}}],["manner",{"_index":2049,"title":{},"name":{},"text":{"31":{},"42":{}},"component":{},"keyword":{}}],["manual",{"_index":604,"title":{"17-5":{},"45-4":{}},"name":{},"text":{"7":{},"17":{},"21":{},"22":{},"33":{},"42":{},"44":{},"70":{}},"component":{},"keyword":{}}],["map",{"_index":1076,"title":{"27-6":{}},"name":{},"text":{"14":{},"27":{},"31":{},"57":{},"98":{},"104":{}},"component":{},"keyword":{}}],["map(i",{"_index":3580,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["map[3000/tcp",{"_index":3481,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["map[cc",{"_index":3846,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["map[owner:team",{"_index":3844,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["map[string]*regularexpress",{"_index":3691,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["map[string]policygroupmemb",{"_index":2074,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["map[string]policygroupmemberwithcontext",{"_index":2075,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["map[string]str",{"_index":3823,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["mapset",{"_index":3638,"title":{},"name":{},"text":{"96":{},"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["mapset.newthreadunsafeset[str",{"_index":3727,"title":{},"name":{},"text":{"98":{},"104":{}},"component":{},"keyword":{}}],["mapset.newthreadunsafeset[string](\"hello",{"_index":3826,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["mapset.newthreadunsafeset[string](\"own",{"_index":3825,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["mapset.newthreadunsafeset[string](rawsettings.deniedlabel",{"_index":3718,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["mapset.set",{"_index":3697,"title":{},"name":{},"text":{"98":{},"104":{}},"component":{},"keyword":{}}],["mapset.set[str",{"_index":3688,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["mark",{"_index":849,"title":{},"name":{},"text":{"9":{},"16":{},"23":{},"28":{},"36":{},"60":{},"82":{},"92":{},"99":{},"104":{},"105":{},"107":{},"111":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["markdown",{"_index":960,"title":{},"name":{},"text":{"12":{},"34":{},"39":{}},"component":{},"keyword":{}}],["market",{"_index":3646,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["marketplac",{"_index":3168,"title":{},"name":{},"text":{"68":{}},"component":{},"keyword":{}}],["marshal",{"_index":3698,"title":{},"name":{},"text":{"98":{},"117":{}},"component":{},"keyword":{}}],["marshaltext",{"_index":3710,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["marshalvalidationresponseorfail",{"_index":4214,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["marshalvalidationresponseorfail(respons",{"_index":4219,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["massiv",{"_index":1730,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["match",{"_index":477,"title":{"41-37":{},"41-40":{}},"name":{},"text":{"7":{},"18":{},"21":{},"24":{},"26":{},"29":{},"31":{},"41":{},"43":{},"44":{},"45":{},"47":{},"57":{},"60":{},"65":{},"71":{},"76":{},"82":{},"87":{},"95":{},"98":{},"99":{},"102":{},"105":{},"110":{},"111":{},"112":{},"113":{},"121":{},"125":{}},"component":{},"keyword":{}}],["matchcondit",{"_index":2043,"title":{},"name":{},"text":{"31":{},"34":{},"93":{}},"component":{},"keyword":{}}],["matchconstraint",{"_index":1962,"title":{},"name":{},"text":{"30":{},"93":{}},"component":{},"keyword":{}}],["matchexpress",{"_index":1575,"title":{},"name":{},"text":{"24":{},"26":{},"31":{},"64":{},"71":{}},"component":{},"keyword":{}}],["matchlabel",{"_index":1509,"title":{},"name":{},"text":{"23":{},"28":{},"30":{},"64":{},"65":{},"66":{},"68":{},"71":{},"93":{},"95":{}},"component":{},"keyword":{}}],["matchnam",{"_index":3105,"title":{},"name":{},"text":{"65":{},"66":{},"68":{}},"component":{},"keyword":{}}],["matchpolici",{"_index":2034,"title":{},"name":{},"text":{"31":{},"74":{}},"component":{},"keyword":{}}],["matchpolicytyp",{"_index":2035,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["matchresourc",{"_index":1970,"title":{},"name":{},"text":{"30":{},"93":{}},"component":{},"keyword":{}}],["materi",{"_index":274,"title":{},"name":{},"text":{"4":{},"5":{},"41":{}},"component":{},"keyword":{}}],["matrix",{"_index":2105,"title":{"33":{},"76-1":{}},"name":{"33":{}},"text":{},"component":{},"keyword":{"33":{}}}],["matter",{"_index":4259,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["matur",{"_index":3989,"title":{},"name":{},"text":{"108":{}},"component":{},"keyword":{}}],["max",{"_index":1024,"title":{},"name":{},"text":{"13":{},"23":{},"27":{},"31":{}},"component":{},"keyword":{}}],["maximum",{"_index":1287,"title":{},"name":{},"text":{"19":{},"26":{},"31":{},"56":{}},"component":{},"keyword":{}}],["maximum_execution_time_second",{"_index":2280,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["maxreplica",{"_index":3534,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["maxunavail",{"_index":1617,"title":{"26-7":{}},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{}}],["mb",{"_index":1269,"title":{},"name":{},"text":{"19":{},"99":{}},"component":{},"keyword":{}}],["mbfkhfdghkijh0caqyikozizj0daqcdqgaex0hfttcfttpmkx5p1rbde6hjsgavd",{"_index":2447,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["mc+rayce2wthrd30msgftoh5adakcd/nml2nx8ud9kbuasrb0gg5jxqgmq",{"_index":2456,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["mdiynte2mzawmloxdtiymdiynte2ndawmvowezerma8ga1uechmic2lnc3rvcmuw",{"_index":2855,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["mean",{"_index":28,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"12":{},"15":{},"16":{},"17":{},"21":{},"26":{},"27":{},"31":{},"36":{},"38":{},"41":{},"42":{},"43":{},"45":{},"60":{},"76":{},"90":{},"92":{},"94":{},"96":{},"98":{},"123":{}},"component":{},"keyword":{}}],["meaning",{"_index":1853,"title":{},"name":{},"text":{"27":{},"31":{},"47":{}},"component":{},"keyword":{}}],["meantim",{"_index":3358,"title":{},"name":{},"text":{"84":{},"90":{}},"component":{},"keyword":{}}],["meanwhil",{"_index":2250,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["measur",{"_index":2153,"title":{},"name":{},"text":{"34":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["mechan",{"_index":50,"title":{},"name":{},"text":{"1":{},"4":{},"9":{},"26":{},"51":{},"56":{},"67":{},"86":{},"91":{},"101":{},"116":{}},"component":{},"keyword":{}}],["med",{"_index":1597,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["media",{"_index":2849,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["mediatyp",{"_index":3418,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["medium",{"_index":1451,"title":{},"name":{},"text":{"21":{},"38":{},"46":{},"82":{},"105":{}},"component":{},"keyword":{}}],["meet",{"_index":1262,"title":{},"name":{},"text":{"19":{},"26":{},"43":{}},"component":{},"keyword":{}}],["member",{"_index":1331,"title":{},"name":{},"text":{"21":{},"26":{},"56":{}},"component":{},"keyword":{}}],["membership",{"_index":237,"title":{},"name":{},"text":{"4":{},"74":{}},"component":{},"keyword":{}}],["memori",{"_index":1270,"title":{},"name":{},"text":{"19":{},"26":{},"76":{},"92":{}},"component":{},"keyword":{}}],["memory=6000mb",{"_index":3047,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["mention",{"_index":400,"title":{},"name":{},"text":{"7":{},"42":{},"77":{}},"component":{},"keyword":{}}],["menu",{"_index":337,"title":{},"name":{},"text":{"5":{},"67":{}},"component":{},"keyword":{}}],["merg",{"_index":3357,"title":{},"name":{},"text":{"84":{},"85":{},"114":{}},"component":{},"keyword":{}}],["merit",{"_index":2223,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["messag",{"_index":57,"title":{"14-4":{},"24-2":{}},"name":{},"text":{"1":{},"7":{},"14":{},"23":{},"24":{},"25":{},"29":{},"31":{},"38":{},"48":{},"52":{},"73":{},"74":{},"75":{},"78":{},"86":{},"94":{},"98":{},"109":{},"116":{},"117":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["message(\"th",{"_index":4223,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["message(fmt.sprintf(\"error",{"_index":4216,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["message.*y",{"_index":1421,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["message.kubewarden.admiss",{"_index":1591,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["messageexpress",{"_index":1965,"title":{},"name":{},"text":{"30":{},"93":{},"95":{}},"component":{},"keyword":{}}],["met",{"_index":2045,"title":{},"name":{},"text":{"31":{},"60":{}},"component":{},"keyword":{}}],["meta.k8s.io/v1",{"_index":3240,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["metadata",{"_index":462,"title":{"82":{},"116-8":{}},"name":{"82":{}},"text":{"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{},"38":{},"44":{},"48":{},"51":{},"52":{},"53":{},"58":{},"60":{},"64":{},"66":{},"68":{},"71":{},"75":{},"78":{},"82":{},"93":{},"94":{},"95":{},"97":{},"99":{},"105":{},"109":{},"112":{},"115":{},"116":{},"117":{},"119":{},"121":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{"82":{}}}],["metadata.annot",{"_index":4109,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["metadata.label",{"_index":3908,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["metadata.nam",{"_index":3997,"title":{},"name":{},"text":{"109":{},"111":{}},"component":{},"keyword":{}}],["metadata.yaml",{"_index":3339,"title":{},"name":{},"text":{"82":{},"121":{},"125":{}},"component":{},"keyword":{}}],["metadata.yml",{"_index":942,"title":{"21-8":{}},"name":{},"text":{"12":{},"21":{},"34":{},"44":{},"105":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["metav1",{"_index":3817,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["metav1.objectmeta",{"_index":3831,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["method",{"_index":2808,"title":{},"name":{},"text":{"60":{},"68":{},"94":{},"98":{}},"component":{},"keyword":{}}],["methodolog",{"_index":2666,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["metric",{"_index":648,"title":{"35":{},"65":{},"19-3":{},"33-1":{},"35-2":{}},"name":{"35":{},"65":{},"68":{}},"text":{"8":{},"33":{},"35":{},"36":{},"39":{},"48":{},"63":{},"65":{},"66":{},"68":{}},"component":{},"keyword":{"35":{},"65":{},"66":{},"68":{}}}],["meyciqcw5fqgptq7znsnfhslrnnqkkgsiqi8cr159pa1sk8tiqihajwl9boqbjmwn7ykdoszo4slogk8jbbjqxdsrt3ryqtb",{"_index":2889,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["mfkwewyhkozizj0caqyikozizj0daqcdqgae5q+cn1jj2s7n05j4axnqwp2dyzsg",{"_index":2455,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["mfkwewyhkozizj0caqyikozizj0daqcdqgaeqity5s+2jfvvlhuwwplzim7itm2j",{"_index":2428,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["mfkwewyhkozizj0caqyikozizj0daqcdqgaeswa3ec4w1eropelpfcdkrh8jvk3x",{"_index":1070,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["mfkwewyhkozizj0caqyikozizj0daqcdqgaeswa3ec4w1eropelpfcdkrh8jvk3x\\n",{"_index":1114,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["mfkwewyhkozizj0caqyikozizj0daqcdqgaeyg65hinht8fxtamzcn34ie3qmgcv",{"_index":1067,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["mgmt",{"_index":2657,"title":{},"name":{},"text":{"49":{},"76":{},"106":{}},"component":{},"keyword":{}}],["micro:bit",{"_index":3624,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["microcontrol",{"_index":3621,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["microservic",{"_index":2670,"title":{},"name":{},"text":{"49":{},"63":{}},"component":{},"keyword":{}}],["migrat",{"_index":701,"title":{"21":{},"27":{},"30":{},"21-2":{},"21-4":{},"27-7":{},"30-1":{}},"name":{"21":{},"27":{},"30":{}},"text":{"8":{},"21":{},"23":{},"27":{},"30":{},"93":{}},"component":{},"keyword":{}}],["miib9zccaxygawibagiualznapfdxhpwjedlodwyychao/4wcgyikozizj0eawmw",{"_index":2877,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["miibijanbgkqhkig9w0baqefaaocaq8amiibcgkcaqea02ftet5gbywiyxbmkvsb",{"_index":2757,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["miidrzccasygawibagitbpuzlufkkahtbzc3rzc/3zxj1dakbggqhkjopqqdazaq",{"_index":2853,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["min",{"_index":1022,"title":{},"name":{},"text":{"13":{},"23":{},"27":{}},"component":{},"keyword":{}}],["minavail",{"_index":1616,"title":{"26-7":{}},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{}}],["mind",{"_index":1399,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["minikub",{"_index":3036,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["minikube/storag",{"_index":3053,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["minim",{"_index":1728,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["minimum",{"_index":916,"title":{},"name":{},"text":{"11":{},"26":{},"31":{},"41":{},"43":{},"60":{}},"component":{},"keyword":{}}],["minimummatch",{"_index":2427,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["minor",{"_index":2379,"title":{},"name":{},"text":{"42":{},"84":{}},"component":{},"keyword":{}}],["minut",{"_index":1216,"title":{},"name":{},"text":{"17":{},"51":{},"52":{},"87":{},"88":{},"89":{}},"component":{},"keyword":{}}],["mirror",{"_index":2735,"title":{},"name":{},"text":{"52":{},"67":{}},"component":{},"keyword":{}}],["misconfigur",{"_index":992,"title":{"13-4":{},"41-8":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["mismatch",{"_index":2721,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["miss",{"_index":1108,"title":{"41-37":{},"107-1":{}},"name":{},"text":{"14":{},"21":{},"25":{},"30":{},"31":{},"48":{},"49":{},"56":{},"76":{},"90":{},"98":{},"100":{},"104":{},"107":{}},"component":{},"keyword":{}}],["missing_label",{"_index":1350,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["mission",{"_index":860,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["mistak",{"_index":2542,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["misus",{"_index":2362,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["mitig",{"_index":750,"title":{"41-4":{},"41-7":{},"41-10":{},"41-13":{},"41-17":{},"41-20":{},"41-23":{},"41-26":{},"41-29":{},"41-32":{},"41-35":{},"41-39":{},"41-42":{},"41-46":{},"41-49":{},"41-54":{},"41-57":{},"41-61":{}},"name":{},"text":{"9":{},"60":{}},"component":{},"keyword":{}}],["mitm",{"_index":2326,"title":{"41-24":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["mkdir",{"_index":2946,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["mock",{"_index":3280,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["mod",{"_index":4022,"title":{},"name":{},"text":{"110":{},"111":{}},"component":{},"keyword":{}}],["mode",{"_index":580,"title":{"36":{},"36-1":{},"49-7":{},"49-8":{}},"name":{"36":{}},"text":{"7":{},"8":{},"12":{},"14":{},"23":{},"24":{},"29":{},"31":{},"34":{},"36":{},"39":{},"43":{},"49":{},"53":{},"60":{},"61":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"74":{},"78":{},"85":{},"93":{},"114":{},"117":{},"119":{},"124":{},"125":{}},"component":{},"keyword":{"36":{}}}],["model",{"_index":2345,"title":{"41":{}},"name":{"41":{}},"text":{"41":{},"61":{}},"component":{},"keyword":{"41":{}}}],["modern",{"_index":3354,"title":{},"name":{},"text":{"84":{},"96":{}},"component":{},"keyword":{}}],["modif",{"_index":752,"title":{"41-50":{}},"name":{},"text":{"9":{},"30":{},"126":{}},"component":{},"keyword":{}}],["modifi",{"_index":826,"title":{"41-11":{}},"name":{},"text":{"9":{},"13":{},"14":{},"16":{},"29":{},"31":{},"41":{},"74":{},"82":{},"98":{},"115":{}},"component":{},"keyword":{}}],["modifyimageswithdigest",{"_index":1064,"title":{},"name":{},"text":{"14":{},"25":{},"53":{}},"component":{},"keyword":{}}],["modul",{"_index":292,"title":{},"name":{},"text":{"4":{},"7":{},"9":{},"11":{},"13":{},"14":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{},"38":{},"43":{},"51":{},"52":{},"53":{},"64":{},"67":{},"82":{},"83":{},"84":{},"93":{},"94":{},"95":{},"96":{},"97":{},"99":{},"107":{},"108":{},"114":{},"116":{},"120":{},"121":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{}}],["moment",{"_index":4236,"title":{},"name":{},"text":{"119":{}},"component":{},"keyword":{}}],["monitor",{"_index":394,"title":{"36":{},"68":{}},"name":{"36":{}},"text":{"7":{},"8":{},"9":{},"26":{},"31":{},"33":{},"36":{},"46":{},"48":{},"63":{},"65":{},"66":{},"67":{},"68":{},"93":{}},"component":{},"keyword":{"36":{},"68":{}}}],["monitoring.coreos.com/v1",{"_index":3167,"title":{},"name":{},"text":{"68":{}},"component":{},"keyword":{}}],["monolith",{"_index":695,"title":{},"name":{},"text":{"8":{},"27":{}},"component":{},"keyword":{}}],["more",{"_index":95,"title":{"84-2":{},"114-3":{}},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"11":{},"14":{},"15":{},"17":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{},"37":{},"38":{},"41":{},"43":{},"44":{},"45":{},"46":{},"48":{},"49":{},"51":{},"52":{},"56":{},"57":{},"58":{},"60":{},"61":{},"62":{},"65":{},"69":{},"71":{},"74":{},"76":{},"77":{},"78":{},"82":{},"87":{},"88":{},"92":{},"93":{},"95":{},"96":{},"97":{},"98":{},"99":{},"101":{},"105":{},"106":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"122":{},"126":{}},"component":{},"keyword":{}}],["moreov",{"_index":1121,"title":{},"name":{},"text":{"14":{},"71":{},"76":{},"111":{}},"component":{},"keyword":{}}],["mount",{"_index":1802,"title":{"41-50":{}},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["mountpath",{"_index":1887,"title":{},"name":{},"text":{"28":{},"66":{}},"component":{},"keyword":{}}],["move",{"_index":1487,"title":{},"name":{},"text":{"22":{},"26":{},"51":{},"52":{},"63":{},"99":{}},"component":{},"keyword":{}}],["mozilla'",{"_index":3499,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["mozilla’",{"_index":3496,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["mruwewydvqqkewxzawdzdg9yzs5kzxyxetapbgnvbamtchnpz3n0b3jlmb4xdtiy",{"_index":2854,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["msg",{"_index":1349,"title":{},"name":{},"text":{"21":{},"99":{},"119":{},"123":{},"126":{}},"component":{},"keyword":{}}],["mtewmdcxmzu2ntlafw0zmtewmduxmzu2nthamcoxftatbgnvbaotdhnpz3n0b3jl",{"_index":2879,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["mtl",{"_index":2264,"title":{},"name":{"62":{}},"text":{"39":{},"41":{},"62":{},"66":{},"71":{}},"component":{},"keyword":{}}],["mtls.configmapnam",{"_index":3026,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["mtls.configmapname=api",{"_index":3028,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["mtls.enabl",{"_index":3025,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["mtls.enable=tru",{"_index":3027,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["much",{"_index":1703,"title":{},"name":{},"text":{"26":{},"99":{},"106":{}},"component":{},"keyword":{}}],["multi",{"_index":1376,"title":{},"name":{},"text":{"21":{},"34":{}},"component":{},"keyword":{}}],["multipl",{"_index":459,"title":{"76-3":{}},"name":{},"text":{"7":{},"14":{},"21":{},"34":{},"42":{},"44":{},"49":{},"56":{},"60":{},"76":{},"94":{}},"component":{},"keyword":{}}],["mustruna",{"_index":1020,"title":{},"name":{},"text":{"13":{},"23":{},"27":{}},"component":{},"keyword":{}}],["mustrunasnonroot",{"_index":1739,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["mut",{"_index":4026,"title":{},"name":{},"text":{"110":{},"111":{},"112":{},"115":{}},"component":{},"keyword":{}}],["mutabl",{"_index":3414,"title":{},"name":{},"text":{"88":{},"112":{}},"component":{},"keyword":{}}],["mutat",{"_index":154,"title":{"13":{},"75":{},"112":{},"13-1":{},"13-2":{},"13-4":{},"28-5":{},"36-2":{},"41-30":{},"82-3":{},"105-3":{},"106-8":{},"112-1":{},"115-3":{},"116-5":{},"117-3":{}},"name":{"13":{},"75":{},"112":{}},"text":{"3":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"38":{},"41":{},"49":{},"51":{},"52":{},"53":{},"60":{},"64":{},"71":{},"74":{},"75":{},"80":{},"81":{},"82":{},"87":{},"105":{},"106":{},"111":{},"112":{},"115":{},"116":{},"117":{},"121":{},"125":{}},"component":{},"keyword":{"13":{},"75":{},"112":{}}}],["mutate_request",{"_index":4096,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["mutated_object",{"_index":3250,"title":{},"name":{},"text":{"74":{},"75":{},"112":{},"116":{}},"component":{},"keyword":{}}],["mutated_request",{"_index":4183,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["mutatedobject",{"_index":4230,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["mutaterequest",{"_index":4225,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["mutaterequest(&request",{"_index":4233,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["mutaterequest(mutatedobject",{"_index":4232,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["mutatingadmissionwebhook",{"_index":3008,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["mutatingwebhook",{"_index":741,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["mutatingwebhookconfigur",{"_index":116,"title":{"3-9":{}},"name":{},"text":{"7":{},"9":{},"16":{},"20":{}},"component":{},"keyword":{}}],["mutatingwebhookconfigurations.admissionregistration.k8s.io",{"_index":601,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["mutual",{"_index":329,"title":{"62":{}},"name":{},"text":{"5":{},"41":{},"62":{}},"component":{},"keyword":{}}],["mvp",{"_index":4142,"title":{},"name":{},"text":{"114":{},"124":{}},"component":{},"keyword":{}}],["myapp",{"_index":1131,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["mypolicy.yml",{"_index":2764,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["myself",{"_index":3340,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["n",{"_index":441,"title":{},"name":{},"text":{"7":{},"14":{},"17":{},"20":{},"23":{},"25":{},"28":{},"51":{},"52":{},"53":{},"61":{},"62":{},"64":{},"65":{},"66":{},"71":{},"76":{}},"component":{},"keyword":{}}],["n/a",{"_index":2355,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["name",{"_index":192,"title":{},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"38":{},"43":{},"44":{},"48":{},"49":{},"51":{},"52":{},"53":{},"58":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"71":{},"74":{},"75":{},"76":{},"78":{},"82":{},"86":{},"91":{},"93":{},"94":{},"95":{},"97":{},"99":{},"102":{},"105":{},"106":{},"109":{},"110":{},"111":{},"112":{},"116":{},"119":{},"121":{},"123":{},"125":{}},"component":{},"keyword":{}}],["name\".to_str",{"_index":4059,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["name\".yaml",{"_index":1947,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["name.kubewarden.admiss",{"_index":1456,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["name.surname@example.com",{"_index":952,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["name>/demo",{"_index":4003,"title":{},"name":{},"text":{"109":{}},"component":{},"keyword":{}}],["name>:<tag",{"_index":3885,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["name>:latest",{"_index":3884,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["namespac",{"_index":128,"title":{"8-2":{},"24-1":{},"27-5":{},"41-33":{}},"name":{},"text":{"3":{},"7":{},"8":{},"9":{},"11":{},"12":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"24":{},"27":{},"31":{},"35":{},"39":{},"41":{},"46":{},"48":{},"49":{},"52":{},"53":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"74":{},"76":{},"82":{},"91":{},"93":{},"99":{},"106":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{"24":{}}}],["namespace(add7bcc5",{"_index":1543,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["namespace/test",{"_index":3551,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["namespace/your",{"_index":1457,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["namespace1",{"_index":2590,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["namespace2",{"_index":2596,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["namespace3",{"_index":2602,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["namespace:v0.0.1",{"_index":4277,"title":{},"name":{},"text":{"125":{}},"component":{},"keyword":{}}],["namespaceselector",{"_index":1574,"title":{},"name":{},"text":{"24":{},"30":{},"31":{},"34":{},"64":{},"65":{},"66":{},"68":{},"71":{},"93":{},"95":{}},"component":{},"keyword":{}}],["nannot",{"_index":1116,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["nano",{"_index":2629,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["narrowli",{"_index":2795,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["nativ",{"_index":3030,"title":{},"name":{},"text":{"63":{},"92":{},"97":{},"99":{}},"component":{},"keyword":{}}],["nativeregexp",{"_index":3705,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["navig",{"_index":316,"title":{"5-1":{}},"name":{},"text":{"56":{},"67":{},"68":{},"96":{}},"component":{},"keyword":{}}],["ne",{"_index":1418,"title":{},"name":{},"text":{"21":{},"78":{},"100":{},"105":{}},"component":{},"keyword":{}}],["near",{"_index":3364,"title":{},"name":{},"text":{"85":{},"97":{}},"component":{},"keyword":{}}],["necessari",{"_index":758,"title":{},"name":{},"text":{"9":{},"14":{},"15":{},"16":{},"17":{},"27":{},"42":{},"43":{},"49":{},"51":{},"52":{},"58":{},"60":{},"96":{},"97":{}},"component":{},"keyword":{}}],["need",{"_index":55,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"17":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"29":{},"31":{},"33":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"44":{},"45":{},"49":{},"50":{},"51":{},"52":{},"53":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"76":{},"77":{},"78":{},"80":{},"82":{},"84":{},"87":{},"90":{},"92":{},"94":{},"95":{},"96":{},"98":{},"99":{},"100":{},"101":{},"102":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"111":{},"112":{},"113":{},"115":{},"116":{},"117":{},"118":{},"119":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{}}],["negat",{"_index":1567,"title":{"24-3":{}},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["net",{"_index":3188,"title":{},"name":{"89":{}},"text":{"71":{},"80":{}},"component":{},"keyword":{"80":{}}}],["net_admin",{"_index":513,"title":{},"name":{},"text":{"7":{},"36":{},"73":{},"75":{}},"component":{},"keyword":{}}],["net_raw",{"_index":2356,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["network",{"_index":247,"title":{"89":{},"41-21":{},"71-1":{}},"name":{},"text":{"4":{},"9":{},"27":{},"41":{},"71":{},"88":{},"89":{},"92":{}},"component":{},"keyword":{"89":{}}}],["networking.k8s.io",{"_index":3555,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["networking.k8s.io/v1",{"_index":3556,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["networkpolici",{"_index":3184,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["neutral",{"_index":188,"title":{},"name":{},"text":{"4":{},"42":{}},"component":{},"keyword":{}}],["never",{"_index":2005,"title":{},"name":{},"text":{"31":{},"104":{},"116":{}},"component":{},"keyword":{}}],["nevertheless",{"_index":2408,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["new",{"_index":180,"title":{"97":{},"112":{},"119":{},"123":{},"4-4":{},"8-3":{},"53-3":{},"56-2":{},"97-1":{},"109-1":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"10":{},"13":{},"14":{},"16":{},"17":{},"21":{},"22":{},"23":{},"26":{},"31":{},"34":{},"41":{},"42":{},"44":{},"46":{},"48":{},"49":{},"54":{},"55":{},"56":{},"60":{},"64":{},"67":{},"68":{},"74":{},"76":{},"96":{},"97":{},"98":{},"99":{},"102":{},"105":{},"107":{},"109":{},"112":{},"115":{},"117":{},"119":{}},"component":{},"keyword":{"97":{},"112":{}}}],["new/old",{"_index":2338,"title":{"41-44":{}},"name":{},"text":{},"component":{},"keyword":{}}],["new_annot",{"_index":4100,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["new_annotations.insert",{"_index":4102,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["newcom",{"_index":3352,"title":{},"name":{},"text":{"84":{}},"component":{},"keyword":{}}],["newer",{"_index":3304,"title":{},"name":{},"text":{"78":{},"97":{}},"component":{},"keyword":{}}],["newkey",{"_index":2983,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["newobject",{"_index":2056,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["newsettingsfromvalidationreq(&validationrequest",{"_index":3787,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["newsettingsfromvalidationreq(validationreq",{"_index":3721,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["next",{"_index":388,"title":{"7-9":{},"29-8":{}},"name":{},"text":{"14":{},"20":{},"21":{},"43":{},"44":{},"60":{},"63":{},"64":{},"74":{},"79":{},"82":{},"87":{},"98":{},"99":{},"100":{},"105":{},"106":{},"110":{},"119":{}},"component":{},"keyword":{}}],["nginx",{"_index":582,"title":{},"name":{},"text":{"7":{},"23":{},"27":{},"53":{},"64":{},"66":{},"78":{},"93":{},"95":{},"97":{},"109":{},"112":{},"119":{},"123":{}},"component":{},"keyword":{}}],["nginx/controller:v1.0.0",{"_index":3061,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["nginx/kub",{"_index":3059,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["nginx:1.14.2",{"_index":1510,"title":{},"name":{},"text":{"23":{},"93":{}},"component":{},"keyword":{}}],["nginx:latest",{"_index":583,"title":{},"name":{},"text":{"7":{},"64":{},"97":{},"109":{},"112":{}},"component":{},"keyword":{}}],["ngykkwybbagdvzabawqommjimgq4njzjmzfmogmyztq3ndmxmdi4m2exnmfkmwfi",{"_index":2863,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["nice",{"_index":3335,"title":{},"name":{},"text":{"81":{}},"component":{},"keyword":{}}],["nil",{"_index":3708,"title":{},"name":{},"text":{"98":{},"99":{},"104":{},"105":{},"117":{}},"component":{},"keyword":{}}],["njblzja1yjaubgorbgeeayo/maefbcbrdwjld2fyzgvul3vzzxitz3jvdxatchnw",{"_index":2864,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["node",{"_index":1255,"title":{"41-47":{},"41-50":{},"41-52":{}},"name":{},"text":{"19":{},"26":{},"27":{},"31":{},"41":{},"62":{},"63":{},"71":{}},"component":{},"keyword":{}}],["nodeaffin",{"_index":1652,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["nodeselectorterm",{"_index":1653,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["noexecut",{"_index":1637,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["noisi",{"_index":661,"title":{},"name":{},"text":{"8":{},"9":{},"49":{}},"component":{},"keyword":{}}],["non",{"_index":619,"title":{"8-5":{},"82-3":{}},"name":{},"text":{"19":{},"25":{},"49":{},"78":{},"82":{}},"component":{},"keyword":{}}],["none",{"_index":2050,"title":{},"name":{},"text":{"31":{},"99":{},"100":{},"111":{},"112":{},"115":{},"119":{}},"component":{},"keyword":{}}],["noneondryrun",{"_index":2061,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["noout",{"_index":2999,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["nop",{"_index":1583,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["normal",{"_index":1165,"title":{},"name":{},"text":{"15":{},"36":{},"41":{},"66":{},"93":{},"94":{}},"component":{},"keyword":{}}],["noschedul",{"_index":1634,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["not_aft",{"_index":3501,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["note",{"_index":1010,"title":{"36-2":{}},"name":{},"text":{"13":{},"31":{},"34":{},"45":{},"53":{},"60":{},"76":{},"94":{},"99":{},"104":{},"105":{},"112":{},"116":{}},"component":{},"keyword":{}}],["note’",{"_index":3918,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["noth",{"_index":3902,"title":{},"name":{},"text":{"103":{}},"component":{},"keyword":{}}],["notic",{"_index":812,"title":{},"name":{},"text":{"9":{},"56":{},"93":{}},"component":{},"keyword":{}}],["notif",{"_index":729,"title":{},"name":{},"text":{"9":{},"56":{},"76":{}},"component":{},"keyword":{}}],["notifi",{"_index":88,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["notin",{"_index":1577,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["notin\",<br",{"_index":2011,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["now",{"_index":445,"title":{},"name":{},"text":{"7":{},"9":{},"10":{},"12":{},"13":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"38":{},"44":{},"45":{},"46":{},"51":{},"52":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"75":{},"76":{},"78":{},"87":{},"90":{},"94":{},"95":{},"98":{},"99":{},"100":{},"101":{},"109":{},"110":{},"111":{},"113":{},"114":{},"116":{},"117":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{}}],["ns",{"_index":1436,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["ns.json",{"_index":4239,"title":{},"name":{},"text":{"119":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["null",{"_index":1763,"title":{},"name":{},"text":{"27":{},"28":{},"31":{},"74":{}},"component":{},"keyword":{}}],["null\\n",{"_index":1117,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["null\\nkey",{"_index":1113,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["num",{"_index":2157,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["num_sampl",{"_index":2154,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["number",{"_index":483,"title":{},"name":{},"text":{"7":{},"19":{},"26":{},"31":{},"39":{},"43":{},"60":{},"65":{},"70":{},"76":{},"93":{},"94":{}},"component":{},"keyword":{}}],["numer",{"_index":3520,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["nv8fj",{"_index":1556,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["o",{"_index":1039,"title":{},"name":{},"text":{"13":{},"21":{},"23":{},"27":{},"34":{},"39":{},"48":{},"60":{},"97":{},"105":{},"113":{}},"component":{},"keyword":{}}],["o!(\"polici",{"_index":4136,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["o=ui=65533",{"_index":1875,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["object",{"_index":515,"title":{"41-11":{},"74-1":{},"74-3":{}},"name":{},"text":{"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"31":{},"34":{},"41":{},"47":{},"48":{},"49":{},"60":{},"64":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"87":{},"88":{},"91":{},"94":{},"95":{},"97":{},"98":{},"99":{},"101":{},"104":{},"106":{},"111":{},"112":{},"116":{},"117":{},"119":{},"122":{},"123":{},"125":{}},"component":{},"keyword":{}}],["object\",\"name\":\"test",{"_index":3672,"title":{},"name":{},"text":{"97":{},"99":{}},"component":{},"keyword":{}}],["object.metadata.label",{"_index":2004,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["object.metadata.nam",{"_index":3577,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["object.metadata.namespac",{"_index":3579,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["object.spec.containers.map(c",{"_index":3596,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["object.spec.initcontainers.map(c",{"_index":3605,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["object.spec.replica",{"_index":3536,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["object.spec.rules.map(r",{"_index":3582,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["object.spec.template.spec.containers.filter(c",{"_index":1959,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["objectmeta",{"_index":2002,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["objects/annot",{"_index":2085,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["objects/api/core/v1",{"_index":3816,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["objects/apimachinery/pkg/apis/meta/v1",{"_index":3818,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["objects/label",{"_index":2021,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["objectselector",{"_index":2046,"title":{},"name":{},"text":{"31":{},"34":{},"93":{}},"component":{},"keyword":{}}],["obligatori",{"_index":2475,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["observ",{"_index":362,"title":{},"name":{},"text":{"6":{},"48":{},"63":{},"82":{}},"component":{},"keyword":{}}],["obtain",{"_index":688,"title":{},"name":{},"text":{"8":{},"14":{},"24":{},"25":{},"29":{},"61":{},"65":{},"66":{},"76":{},"87":{},"88":{},"91":{},"95":{}},"component":{},"keyword":{}}],["occas",{"_index":3321,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["occasion",{"_index":1281,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["occur",{"_index":1361,"title":{},"name":{},"text":{"21":{},"60":{}},"component":{},"keyword":{}}],["oci",{"_index":215,"title":{"37":{},"9-7":{},"12-1":{},"32-3":{},"37-1":{},"37-2":{},"37-3":{},"43-10":{},"60-14":{},"88-1":{},"88-7":{},"88-13":{}},"name":{"37":{}},"text":{"4":{},"6":{},"7":{},"9":{},"12":{},"18":{},"21":{},"26":{},"29":{},"31":{},"32":{},"34":{},"37":{},"40":{},"44":{},"45":{},"49":{},"50":{},"51":{},"52":{},"53":{},"58":{},"60":{},"77":{},"78":{},"82":{},"85":{},"87":{},"88":{},"92":{},"102":{},"105":{},"114":{},"121":{},"125":{}},"component":{},"keyword":{"12":{},"37":{}}}],["oci://<registry.yourdomain.com:port>/hauler/kubewarden",{"_index":2742,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["oci_target",{"_index":3892,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["octocat",{"_index":2781,"title":{},"name":{},"text":{"56":{},"64":{}},"component":{},"keyword":{}}],["of=kubewarden",{"_index":1297,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["off",{"_index":2932,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["offer",{"_index":104,"title":{},"name":{},"text":{"2":{},"4":{},"9":{},"16":{},"21":{},"48":{},"60":{},"86":{},"113":{}},"component":{},"keyword":{}}],["offici",{"_index":277,"title":{},"name":{},"text":{"4":{},"38":{},"44":{},"61":{},"63":{},"64":{},"65":{},"67":{},"81":{},"84":{},"85":{},"96":{},"98":{},"100":{},"116":{},"122":{}},"component":{},"keyword":{}}],["offlin",{"_index":2506,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["oidc",{"_index":2139,"title":{},"name":{},"text":{"34":{},"43":{},"45":{},"60":{},"87":{},"95":{}},"component":{},"keyword":{}}],["ok",{"_index":2518,"title":{},"name":{},"text":{"45":{},"97":{},"98":{},"99":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{},"115":{}},"component":{},"keyword":{}}],["ok(mut",{"_index":4098,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["ok(pod",{"_index":4057,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["ok(validation_request",{"_index":4160,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["old",{"_index":886,"title":{},"name":{},"text":{"10":{},"23":{},"26":{},"34":{},"76":{}},"component":{},"keyword":{}}],["older",{"_index":1377,"title":{},"name":{},"text":{"21":{},"27":{},"71":{},"96":{}},"component":{},"keyword":{}}],["oldobject",{"_index":2055,"title":{},"name":{},"text":{"31":{},"74":{}},"component":{},"keyword":{}}],["omit",{"_index":1548,"title":{},"name":{},"text":{"23":{},"26":{},"31":{},"34":{},"36":{},"40":{}},"component":{},"keyword":{}}],["omitt",{"_index":3141,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["on",{"_index":139,"title":{"106-1":{}},"name":{},"text":{"3":{},"7":{},"9":{},"10":{},"14":{},"15":{},"17":{},"19":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"29":{},"31":{},"34":{},"35":{},"36":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"49":{},"56":{},"60":{},"63":{},"66":{},"70":{},"71":{},"73":{},"75":{},"76":{},"77":{},"78":{},"81":{},"87":{},"88":{},"92":{},"94":{},"97":{},"99":{},"100":{},"105":{},"107":{},"109":{},"110":{},"111":{},"112":{},"116":{},"117":{},"119":{},"121":{},"123":{}},"component":{},"keyword":{}}],["onc",{"_index":293,"title":{},"name":{},"text":{"4":{},"7":{},"9":{},"10":{},"11":{},"14":{},"15":{},"20":{},"25":{},"27":{},"29":{},"44":{},"49":{},"58":{},"62":{},"63":{},"64":{},"65":{},"67":{},"69":{},"108":{},"117":{}},"component":{},"keyword":{}}],["onelog",{"_index":3864,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["onelog.al",{"_index":3870,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["onelog.debug|onelog.info|onelog.warn|onelog.error|onelog.fat",{"_index":3872,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["onelog.entri",{"_index":3798,"title":{},"name":{},"text":{"99":{},"101":{}},"component":{},"keyword":{}}],["onelog.new",{"_index":3869,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["ongo",{"_index":1811,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["onto",{"_index":2095,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["onward",{"_index":1856,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["op",{"_index":1393,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["opa",{"_index":1306,"title":{"49":{},"124":{},"125":{},"21-6":{},"106-2":{}},"name":{"49":{}},"text":{"21":{},"28":{},"34":{},"49":{},"106":{},"107":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{"49":{},"122":{},"123":{},"124":{},"125":{},"126":{}}}],["opa_v0_compatible=tru",{"_index":1389,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["open",{"_index":196,"title":{"63":{},"122":{},"56-1":{},"76-12":{},"106-2":{}},"name":{},"text":{"4":{},"9":{},"18":{},"21":{},"22":{},"27":{},"32":{},"33":{},"37":{},"48":{},"49":{},"50":{},"51":{},"54":{},"56":{},"60":{},"63":{},"64":{},"66":{},"69":{},"80":{},"83":{},"102":{},"106":{},"107":{},"110":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{}},"component":{},"keyword":{"63":{},"122":{},"123":{},"124":{},"125":{},"126":{}}}],["openapiv3schema",{"_index":1344,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["opencontain",{"_index":2309,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["openid",{"_index":2422,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["openssl",{"_index":2948,"title":{},"name":{},"text":{"62":{},"109":{}},"component":{},"keyword":{}}],["openssl.cnf",{"_index":2949,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["opensus",{"_index":1465,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{},"keyword":{}}],["opentelemetri",{"_index":647,"title":{"66":{},"33-1":{},"63-2":{},"63-3":{},"66-2":{},"66-4":{}},"name":{"63":{}},"text":{"8":{},"14":{},"33":{},"63":{},"64":{},"65":{},"66":{},"69":{},"99":{}},"component":{},"keyword":{"63":{},"66":{}}}],["opentelemetry.io/v1beta1",{"_index":3139,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["opentelemetrycollector",{"_index":3140,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["oper",{"_index":210,"title":{"78":{},"8-1":{},"8-2":{},"41-2":{},"91-2":{},"91-5":{},"91-8":{}},"name":{"78":{}},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"38":{},"40":{},"41":{},"42":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"60":{},"61":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"81":{},"82":{},"86":{},"87":{},"88":{},"89":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"105":{},"114":{},"119":{},"121":{},"123":{},"125":{}},"component":{},"keyword":{"78":{},"79":{}}}],["oppos",{"_index":3413,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["opt",{"_index":1872,"title":{},"name":{},"text":{"28":{},"31":{},"84":{}},"component":{},"keyword":{}}],["opt/example.com/pki/ca",{"_index":2298,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["optim",{"_index":255,"title":{},"name":{},"text":{"4":{},"8":{},"12":{},"26":{},"38":{},"84":{}},"component":{},"keyword":{}}],["option",{"_index":90,"title":{"17-2":{},"33-2":{},"34-4":{},"34-7":{},"34-10":{},"34-12":{},"34-15":{},"34-17":{},"34-21":{},"34-23":{},"34-27":{},"34-30":{},"34-35":{},"34-38":{},"34-42":{},"34-44":{},"34-47":{},"34-49":{},"34-53":{},"39-4":{},"39-6":{}},"name":{},"text":{"1":{},"7":{},"14":{},"15":{},"16":{},"21":{},"22":{},"24":{},"29":{},"34":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"48":{},"51":{},"60":{},"65":{},"67":{},"73":{},"74":{},"75":{},"82":{},"87":{},"90":{},"91":{},"92":{},"93":{},"104":{},"105":{},"106":{},"117":{}},"component":{},"keyword":{}}],["order",{"_index":1865,"title":{"42-5":{}},"name":{},"text":{"28":{},"29":{},"31":{},"40":{},"45":{},"90":{}},"component":{},"keyword":{}}],["ordinari",{"_index":1052,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["org.opencontainers.image.base.digest",{"_index":3439,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["org.opencontainers.image.base.nam",{"_index":3441,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["org.opencontainers.image.sourc",{"_index":2179,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["organ",{"_index":103,"title":{"5":{}},"name":{"5":{}},"text":{"2":{},"5":{},"43":{},"44":{},"60":{},"62":{},"95":{},"100":{}},"component":{},"keyword":{"5":{}}}],["organiz",{"_index":253,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["organization(",{"_index":101,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["organizationnam",{"_index":2969,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["organization—thi",{"_index":325,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["origin",{"_index":191,"title":{},"name":{},"text":{"4":{},"12":{},"20":{},"21":{},"24":{},"47":{},"60":{},"71":{},"74":{},"112":{}},"component":{},"keyword":{}}],["os",{"_index":2906,"title":{},"name":{},"text":{"60":{},"88":{}},"component":{},"keyword":{}}],["osx",{"_index":3988,"title":{"108-2":{}},"name":{},"text":{},"component":{},"keyword":{}}],["otc",{"_index":3092,"title":{},"name":{},"text":{"64":{}},"component":{},"keyword":{}}],["otel",{"_index":2114,"title":{},"name":{"66":{}},"text":{"33":{},"66":{}},"component":{},"keyword":{}}],["otelcollectorcertificatesecret",{"_index":3151,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["otelcollectorclientcertificatesecret",{"_index":3152,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["other",{"_index":370,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"11":{},"26":{},"38":{},"41":{},"49":{},"93":{},"107":{}},"component":{},"keyword":{}}],["otherwis",{"_index":2068,"title":{},"name":{},"text":{"31":{},"73":{},"123":{}},"component":{},"keyword":{}}],["otlp",{"_index":2275,"title":{},"name":{},"text":{"39":{},"60":{},"63":{},"66":{}},"component":{},"keyword":{}}],["otlp/jaeg",{"_index":3147,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["ourselv",{"_index":1401,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["out",{"_index":11,"title":{"41-24":{}},"name":{},"text":{"1":{},"9":{},"19":{},"26":{},"27":{},"38":{},"41":{},"48":{},"60":{},"62":{},"67":{},"81":{},"92":{},"101":{},"102":{},"108":{},"109":{},"110":{},"111":{},"112":{},"118":{}},"component":{},"keyword":{}}],["outcom",{"_index":2554,"title":{},"name":{},"text":{"47":{},"74":{},"78":{},"119":{}},"component":{},"keyword":{}}],["outdat",{"_index":2789,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["output",{"_index":563,"title":{"87-6":{},"87-8":{},"87-10":{},"87-12":{},"87-14":{},"87-17":{},"87-19":{},"88-6":{},"88-12":{},"88-18":{},"89-5":{},"90-4":{},"91-4":{},"91-7":{},"91-11":{}},"name":{},"text":{"7":{},"12":{},"13":{},"21":{},"22":{},"25":{},"27":{},"29":{},"30":{},"34":{},"39":{},"44":{},"60":{},"63":{},"75":{},"77":{},"78":{},"86":{},"88":{},"89":{},"91":{},"97":{},"98":{},"99":{},"100":{},"105":{},"109":{},"110":{},"121":{},"122":{},"125":{}},"component":{},"keyword":{}}],["outsid",{"_index":289,"title":{"28-1":{}},"name":{},"text":{"4":{},"23":{},"28":{},"33":{},"78":{},"87":{},"96":{},"99":{},"100":{},"116":{}},"component":{},"keyword":{}}],["ov",{"_index":3559,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["over",{"_index":226,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"26":{},"31":{},"38":{},"46":{},"65":{},"82":{},"96":{},"99":{},"104":{}},"component":{},"keyword":{}}],["overal",{"_index":3165,"title":{},"name":{},"text":{"68":{}},"component":{},"keyword":{}}],["overcom",{"_index":1598,"title":{},"name":{},"text":{"24":{},"81":{}},"component":{},"keyword":{}}],["overlap",{"_index":328,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["overrid",{"_index":1581,"title":{},"name":{},"text":{"24":{},"31":{}},"component":{},"keyword":{}}],["overrides='{\"spec",{"_index":2766,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["overview",{"_index":478,"title":{"19-1":{}},"name":{},"text":{"7":{},"34":{},"39":{},"65":{},"81":{},"82":{},"117":{}},"component":{},"keyword":{}}],["overwrit",{"_index":1552,"title":{},"name":{},"text":{"23":{},"61":{}},"component":{},"keyword":{}}],["own",{"_index":828,"title":{},"name":{},"text":{"9":{},"14":{},"43":{},"60":{}},"component":{},"keyword":{}}],["owned_by_foo_team",{"_index":1132,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["owner",{"_index":1136,"title":{},"name":{},"text":{"14":{},"34":{},"43":{},"48":{},"60":{},"64":{},"87":{},"99":{},"100":{}},"component":{},"keyword":{}}],["ownerrefer",{"_index":2611,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["p",{"_index":117,"title":{"3-10":{}},"name":{},"text":{"28":{},"30":{},"34":{},"62":{},"76":{}},"component":{},"keyword":{}}],["p256",{"_index":881,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["packag",{"_index":937,"title":{},"name":{},"text":{"12":{},"21":{},"22":{},"29":{},"31":{},"44":{},"96":{},"98":{},"99":{},"101":{},"106":{},"119":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["packages/test",{"_index":2103,"title":{},"name":{},"text":{"32":{}},"component":{},"keyword":{}}],["page",{"_index":258,"title":{"52-1":{}},"name":{},"text":{"4":{},"5":{},"7":{},"19":{},"22":{},"26":{},"31":{},"33":{},"37":{},"44":{},"45":{},"48":{},"49":{},"51":{},"52":{},"56":{},"62":{},"65":{},"67":{},"68":{},"69":{},"81":{},"96":{},"97":{},"105":{},"106":{},"107":{},"115":{},"116":{},"117":{},"126":{}},"component":{},"keyword":{}}],["pair",{"_index":2809,"title":{},"name":{},"text":{"60":{},"71":{}},"component":{},"keyword":{}}],["palindrom",{"_index":949,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["palindromifi",{"_index":945,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["pane",{"_index":3121,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["panel",{"_index":346,"title":{},"name":{},"text":{"5":{},"44":{},"65":{}},"component":{},"keyword":{}}],["panick",{"_index":4116,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["paradigm",{"_index":2656,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["paragraph",{"_index":1953,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["parallel",{"_index":1288,"title":{},"name":{},"text":{"19":{},"26":{},"95":{}},"component":{},"keyword":{}}],["param",{"_index":2048,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["paramet",{"_index":832,"title":{},"name":{},"text":{"9":{},"21":{},"31":{},"73":{},"78":{},"93":{},"111":{}},"component":{},"keyword":{}}],["parameters/set",{"_index":1428,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["parent",{"_index":1749,"title":{},"name":{},"text":{"27":{},"106":{}},"component":{},"keyword":{}}],["pars",{"_index":3770,"title":{},"name":{},"text":{"98":{},"100":{},"111":{}},"component":{},"keyword":{}}],["part",{"_index":617,"title":{"8-4":{}},"name":{},"text":{"8":{},"9":{},"14":{},"17":{},"25":{},"28":{},"31":{},"34":{},"36":{},"41":{},"47":{},"49":{},"60":{},"74":{},"76":{},"87":{},"89":{},"95":{},"98":{},"99":{},"104":{},"112":{},"123":{},"125":{}},"component":{},"keyword":{}}],["parti",{"_index":995,"title":{"13-4":{}},"name":{},"text":{"13":{},"14":{},"25":{},"49":{}},"component":{},"keyword":{}}],["partial",{"_index":1366,"title":{},"name":{},"text":{"21":{},"26":{},"37":{},"93":{}},"component":{},"keyword":{}}],["particular",{"_index":770,"title":{},"name":{},"text":{"9":{},"27":{},"123":{}},"component":{},"keyword":{}}],["particularli",{"_index":1003,"title":{},"name":{},"text":{"13":{},"51":{},"94":{},"95":{}},"component":{},"keyword":{}}],["pascalcas",{"_index":2026,"title":{},"name":{},"text":{"31":{},"91":{}},"component":{},"keyword":{}}],["pass",{"_index":1337,"title":{"41-5":{}},"name":{},"text":{"21":{},"31":{},"41":{},"43":{},"48":{},"49":{},"60":{},"77":{},"92":{},"97":{},"98":{},"99":{},"100":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["password",{"_index":427,"title":{},"name":{},"text":{"7":{},"60":{},"65":{}},"component":{},"keyword":{}}],["password=<mytoken",{"_index":2745,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["password=mypass123",{"_index":2802,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["past",{"_index":3119,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["pat",{"_index":417,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["patch",{"_index":626,"title":{},"name":{},"text":{"8":{},"28":{},"35":{},"36":{},"42":{},"84":{}},"component":{},"keyword":{}}],["patchtyp",{"_index":1900,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["path",{"_index":528,"title":{"42":{},"42-4":{}},"name":{"42":{}},"text":{"7":{},"9":{},"12":{},"17":{},"21":{},"22":{},"29":{},"34":{},"39":{},"40":{},"42":{},"43":{},"44":{},"45":{},"51":{},"60":{},"77":{},"78":{},"85":{},"87":{},"94":{},"97":{},"109":{},"120":{},"121":{},"124":{},"125":{}},"component":{},"keyword":{"42":{}}}],["path/to/client/cert",{"_index":3203,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["path/to/client/key",{"_index":3204,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",{"_index":3459,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["path_to_built_wasm_fil",{"_index":2837,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["pathlen:1",{"_index":2977,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["pathtyp",{"_index":1226,"title":{},"name":{},"text":{"17":{},"94":{}},"component":{},"keyword":{}}],["patient",{"_index":2687,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["pattern",{"_index":1595,"title":{},"name":{},"text":{"24":{},"35":{},"42":{},"63":{},"94":{},"102":{}},"component":{},"keyword":{}}],["paus",{"_index":1035,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["payload",{"_index":1898,"title":{},"name":{},"text":{"28":{},"41":{},"75":{},"76":{},"86":{},"88":{},"89":{},"91":{},"98":{},"99":{},"104":{},"105":{},"111":{},"115":{},"117":{}},"component":{},"keyword":{}}],["pdb",{"_index":1674,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["peer",{"_index":670,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["pem",{"_index":2090,"title":{},"name":{},"text":{"31":{},"40":{},"57":{},"87":{},"90":{}},"component":{},"keyword":{}}],["pem/der",{"_index":3497,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["pend",{"_index":568,"title":{},"name":{},"text":{"7":{},"31":{},"67":{}},"component":{},"keyword":{}}],["per",{"_index":654,"title":{"38-4":{},"38-5":{},"61-4":{}},"name":{},"text":{"8":{},"19":{},"26":{},"38":{},"61":{},"76":{},"94":{}},"component":{},"keyword":{}}],["percentag",{"_index":1678,"title":{},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{}}],["perfect",{"_index":3516,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["perform",{"_index":493,"title":{"19-3":{},"19-4":{}},"name":{},"text":{"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"19":{},"20":{},"23":{},"26":{},"29":{},"31":{},"34":{},"36":{},"42":{},"43":{},"45":{},"46":{},"47":{},"53":{},"60":{},"65":{},"74":{},"76":{},"78":{},"81":{},"82":{},"84":{},"86":{},"87":{},"89":{},"90":{},"91":{},"95":{},"99":{},"100":{},"101":{},"102":{},"113":{},"116":{}},"component":{},"keyword":{}}],["perhap",{"_index":377,"title":{},"name":{},"text":{"6":{},"8":{},"41":{}},"component":{},"keyword":{}}],["period",{"_index":641,"title":{},"name":{},"text":{"8":{},"10":{},"26":{},"38":{},"90":{}},"component":{},"keyword":{}}],["permiss",{"_index":1500,"title":{"46-3":{},"61-4":{}},"name":{},"text":{"23":{},"29":{},"36":{},"46":{},"61":{},"76":{},"92":{},"94":{}},"component":{},"keyword":{}}],["permit",{"_index":659,"title":{},"name":{},"text":{"8":{},"12":{},"13":{},"14":{},"46":{},"49":{},"58":{},"64":{},"76":{},"78":{},"85":{}},"component":{},"keyword":{}}],["persist",{"_index":3245,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["persistentvolum",{"_index":1819,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["persistentvolumeclaim",{"_index":1821,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["person",{"_index":375,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{},"keyword":{"79":{}}}],["persona",{"_index":359,"title":{"6":{},"6-1":{},"79-1":{}},"name":{"6":{}},"text":{"6":{},"8":{},"21":{},"79":{}},"component":{},"keyword":{"6":{}}}],["personas—who",{"_index":326,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["physic",{"_index":2466,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["pi",{"_index":1480,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["pick",{"_index":2783,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["pid",{"_index":1773,"title":{},"name":{},"text":{"27":{},"39":{}},"component":{},"keyword":{}}],["pin",{"_index":2820,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["pipelin",{"_index":2152,"title":{},"name":{},"text":{"34":{},"49":{},"60":{},"66":{},"77":{},"78":{},"79":{}},"component":{},"keyword":{}}],["pkg.yml",{"_index":2181,"title":{},"name":{},"text":{"34":{},"44":{}},"component":{},"keyword":{}}],["pki",{"_index":3124,"title":{},"name":{},"text":{"66":{},"90":{}},"component":{},"keyword":{}}],["pki.yaml",{"_index":3125,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["place",{"_index":200,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"14":{},"21":{},"38":{},"44":{},"48":{},"53":{},"60":{},"61":{},"66":{},"97":{},"98":{},"104":{},"105":{},"109":{}},"component":{},"keyword":{}}],["placehold",{"_index":481,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["plain",{"_index":4186,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["plan",{"_index":1397,"title":{},"name":{},"text":{"21":{},"109":{}},"component":{},"keyword":{}}],["plane",{"_index":739,"title":{},"name":{},"text":{"9":{},"26":{},"44":{},"63":{}},"component":{},"keyword":{}}],["plane’",{"_index":727,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["platform",{"_index":754,"title":{},"name":{},"text":{"9":{},"35":{},"44":{},"52":{},"80":{},"88":{},"116":{}},"component":{},"keyword":{}}],["playground",{"_index":3512,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["pleas",{"_index":65,"title":{},"name":{},"text":{"1":{},"28":{},"49":{},"51":{},"56":{},"59":{},"61":{},"80":{},"83":{},"90":{},"93":{},"105":{},"115":{},"116":{},"117":{},"126":{}},"component":{},"keyword":{}}],["plug",{"_index":308,"title":{},"name":{},"text":{"4":{},"71":{},"81":{}},"component":{},"keyword":{}}],["plugin",{"_index":2527,"title":{},"name":{},"text":{"45":{},"62":{},"67":{},"71":{}},"component":{},"keyword":{}}],["plumb",{"_index":855,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["pod",{"_index":496,"title":{"23":{},"61-6":{}},"name":{"23":{}},"text":{"7":{},"8":{},"9":{},"11":{},"13":{},"14":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"31":{},"36":{},"38":{},"43":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"60":{},"61":{},"63":{},"64":{},"75":{},"76":{},"78":{},"82":{},"95":{},"97":{},"99":{},"100":{},"104":{},"105":{},"109":{},"111":{},"112":{},"119":{},"123":{},"124":{}},"component":{},"keyword":{"23":{},"27":{}}}],["pod\",\"denied_names\":\"foo,test",{"_index":3678,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["pod\",\"namespace\":\"default",{"_index":3673,"title":{},"name":{},"text":{"97":{},"99":{}},"component":{},"keyword":{}}],["pod.metadata.annot",{"_index":4105,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["pod.metadata.annotations.clone().unwrap_or_default",{"_index":4101,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["pod.metadata.label",{"_index":3803,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["pod.metadata.labels[requiredlabel",{"_index":3854,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["pod.metadata.nam",{"_index":3800,"title":{},"name":{},"text":{"99":{},"111":{}},"component":{},"keyword":{}}],["pod.metadata.name.clone().unwrap_or_default",{"_index":4099,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["pod.metadata.name.unwrap",{"_index":4061,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["pod.metadata.name.unwrap_or_default",{"_index":4068,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["pod.metadata.namespac",{"_index":3802,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["pod.yml",{"_index":1099,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["pod/nginx",{"_index":1758,"title":{},"name":{},"text":{"27":{},"53":{}},"component":{},"keyword":{}}],["pod/paus",{"_index":1037,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["pod/unprivileg",{"_index":584,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["pod1",{"_index":2577,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["pod2",{"_index":2583,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["pod_nam",{"_index":4060,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["podaffin",{"_index":1640,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["podaffinityterm",{"_index":1650,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["podantiaffin",{"_index":1646,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["poddisruptionbudget",{"_index":1615,"title":{"26-6":{}},"name":{},"text":{"26":{}},"component":{},"keyword":{"26":{},"59":{}}}],["podjson",{"_index":3788,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["podlabel",{"_index":3822,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["podproxyopt",{"_index":2058,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["pods.kubewarden.admiss",{"_index":589,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["podsecur",{"_index":1528,"title":{},"name":{},"text":{"23":{},"71":{}},"component":{},"keyword":{}}],["podsecuritycontext",{"_index":2077,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["podsecuritypolici",{"_index":1734,"title":{"27":{}},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["pod’",{"_index":1697,"title":{},"name":{},"text":{"26":{},"31":{},"41":{}},"component":{},"keyword":{}}],["point",{"_index":853,"title":{"106-5":{}},"name":{},"text":{"9":{},"24":{},"46":{},"52":{},"56":{},"71":{},"74":{},"94":{},"98":{},"101":{},"106":{},"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["pointer",{"_index":3404,"title":{},"name":{},"text":{"87":{},"90":{}},"component":{},"keyword":{}}],["polic",{"_index":690,"title":{},"name":{},"text":{"8":{},"27":{}},"component":{},"keyword":{}}],["polici",{"_index":98,"title":{"11":{},"12":{},"13":{},"14":{},"21":{},"24":{},"25":{},"28":{},"38":{},"39":{},"44":{},"48":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"81":{},"82":{},"87":{},"94":{},"96":{},"97":{},"98":{},"103":{},"105":{},"109":{},"110":{},"112":{},"114":{},"115":{},"117":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"4-7":{},"7-6":{},"8-3":{},"9-1":{},"9-5":{},"9-7":{},"9-8":{},"9-10":{},"9-12":{},"9-13":{},"9-14":{},"9-15":{},"9-16":{},"12-1":{},"12-2":{},"12-3":{},"13-1":{},"13-2":{},"13-4":{},"14-2":{},"14-5":{},"14-8":{},"17-2":{},"21-2":{},"21-3":{},"21-4":{},"21-6":{},"21-9":{},"24-1":{},"24-3":{},"26-14":{},"27-6":{},"28-1":{},"28-2":{},"28-6":{},"29-1":{},"29-7":{},"34-24":{},"35-1":{},"36-1":{},"36-2":{},"38-4":{},"38-5":{},"38-7":{},"38-8":{},"39-1":{},"39-2":{},"39-5":{},"41-55":{},"42-7":{},"43-10":{},"45-6":{},"46-2":{},"47-2":{},"47-3":{},"47-4":{},"48-4":{},"49-1":{},"49-2":{},"49-5":{},"49-7":{},"51-2":{},"53-4":{},"57-1":{},"60-2":{},"60-5":{},"60-6":{},"60-7":{},"60-14":{},"61-4":{},"64-3":{},"67-4":{},"67-5":{},"68-5":{},"71-1":{},"76-6":{},"76-10":{},"76-12":{},"78-3":{},"79-1":{},"82-2":{},"82-3":{},"82-4":{},"92-3":{},"92-4":{},"93-2":{},"93-4":{},"94-2":{},"95-1":{},"97-1":{},"106-2":{},"106-7":{},"106-8":{},"107-1":{},"109-1":{},"110-1":{},"114-1":{},"114-2":{},"116-8":{},"118-1":{},"119-2":{},"121-1":{},"121-2":{},"122-2":{},"123-2":{},"125-1":{},"125-2":{}},"name":{"11":{},"12":{},"13":{},"14":{},"24":{},"25":{},"28":{},"38":{},"39":{},"44":{},"48":{},"70":{},"74":{},"75":{},"76":{},"77":{},"87":{},"98":{},"105":{},"109":{},"110":{},"112":{},"115":{},"117":{},"119":{},"123":{},"126":{}},"text":{"1":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"61":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{"4":{},"5":{},"11":{},"12":{},"13":{},"14":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"38":{},"39":{},"44":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"105":{},"106":{},"108":{},"109":{},"110":{},"111":{},"112":{},"114":{},"115":{},"117":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{}}}],["policies.kubewarden.io/v1",{"_index":461,"title":{"31-2":{}},"name":{},"text":{"7":{},"11":{},"14":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"30":{},"31":{},"38":{},"51":{},"52":{},"53":{},"58":{},"64":{},"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["policies.kubewarden.io/v1alpha2",{"_index":1016,"title":{"31-31":{}},"name":{},"text":{"13":{},"29":{},"31":{},"36":{},"60":{},"121":{},"125":{}},"component":{},"keyword":{}}],["policies.sh",{"_index":2690,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["policies.tar.gz",{"_index":2691,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["policies.txt",{"_index":2689,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["policies.yaml",{"_index":1834,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["policies.yml",{"_index":1142,"title":{},"name":{},"text":{"14":{},"28":{},"39":{}},"component":{},"keyword":{}}],["policies/palindromifi",{"_index":985,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["policies_download_dir",{"_index":2279,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["policies_fil",{"_index":2277,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["policy.example.com",{"_index":3533,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["policy.rego",{"_index":1328,"title":{},"name":{},"text":{"21":{},"119":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["policy.rego:3",{"_index":1362,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["policy.wasm",{"_index":965,"title":{},"name":{},"text":{"12":{},"21":{},"29":{},"34":{},"76":{},"77":{},"97":{},"100":{},"102":{},"105":{},"114":{},"120":{},"121":{},"124":{},"125":{}},"component":{},"keyword":{}}],["policy.yaml",{"_index":1949,"title":{},"name":{},"text":{"29":{},"34":{}},"component":{},"keyword":{}}],["policy/internal/cel/librari",{"_index":3563,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["policy/main",{"_index":4273,"title":{},"name":{},"text":{"124":{}},"component":{},"keyword":{}}],["policy/psp",{"_index":2133,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["policy/v0.1.8/test_data/ingress",{"_index":3295,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["policy/v1beta1",{"_index":1738,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["policy/viol",{"_index":1326,"title":{},"name":{},"text":{"21":{},"119":{},"120":{}},"component":{},"keyword":{}}],["policy1",{"_index":2443,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["policy:latest",{"_index":1979,"title":{},"name":{},"text":{"30":{},"34":{},"60":{}},"component":{},"keyword":{}}],["policy:v0.0.1",{"_index":986,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["policy:v0.1.0",{"_index":1129,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["policy:v0.2.0",{"_index":1082,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["policy:v1.0.0",{"_index":906,"title":{},"name":{},"text":{"11":{},"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["policy:v1.0.1",{"_index":1980,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["policy:v1.0.4",{"_index":1606,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["policy?tab=readm",{"_index":3558,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["policy_nam",{"_index":2191,"title":{},"name":{},"text":{"35":{},"65":{}},"component":{},"keyword":{}}],["policy_test.rego",{"_index":1398,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["policygroup",{"_index":1568,"title":{"24-3":{}},"name":{},"text":{},"component":{},"keyword":{}}],["policygroupmemb",{"_index":1991,"title":{"31-18":{},"31-20":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policygroupmemberswithcontext",{"_index":1993,"title":{"31-21":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policygroupmemberwithcontext",{"_index":1992,"title":{"31-19":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policygroupspec",{"_index":1994,"title":{"31-22":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policylist.txt",{"_index":2526,"title":{},"name":{},"text":{"45":{},"51":{}},"component":{},"keyword":{}}],["policymod",{"_index":1995,"title":{"31-23":{},"31-38":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policymodestatu",{"_index":1996,"title":{"31-24":{},"31-39":{}},"name":{},"text":{},"component":{},"keyword":{}}],["policynam",{"_index":1968,"title":{},"name":{},"text":{"30":{},"93":{}},"component":{},"keyword":{}}],["policyreport",{"_index":118,"title":{"3-11":{},"48-2":{}},"name":{},"text":{"3":{},"7":{},"17":{},"46":{},"48":{},"52":{},"93":{}},"component":{},"keyword":{}}],["policyreports.wgpolicyk8s.io",{"_index":2123,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["policyserv",{"_index":119,"title":{"58":{},"59":{},"3-12":{},"7-3":{},"9-11":{},"9-16":{},"26-5":{},"31-25":{},"31-40":{},"53-2":{},"53-3":{},"58-2":{}},"name":{},"text":{"3":{},"7":{},"8":{},"9":{},"11":{},"15":{},"18":{},"19":{},"23":{},"24":{},"26":{},"31":{},"36":{},"38":{},"40":{},"49":{},"51":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{},"61":{},"63":{},"64":{},"65":{},"70":{},"71":{},"87":{}},"component":{},"keyword":{"7":{},"19":{},"26":{},"29":{},"58":{},"59":{}}}],["policyserver.imagepullsecret",{"_index":2805,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["policyserver.imagepullsecret=appl",{"_index":2746,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["policyserver.insecuresources[0]=<host_ip:5000",{"_index":2739,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["policyserver.verificationconfig",{"_index":2926,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["policyserver`",{"_index":598,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["policyserverlist",{"_index":1997,"title":{"31-26":{},"31-41":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policyservers.policies.kubewarden.io",{"_index":3090,"title":{},"name":{},"text":{"64":{},"65":{}},"component":{},"keyword":{}}],["policyserversecur",{"_index":1998,"title":{"31-27":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policyserverspec",{"_index":1999,"title":{"31-28":{},"31-42":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policyserver’",{"_index":759,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["policyspec",{"_index":2000,"title":{"31-29":{},"31-43":{}},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policystatu",{"_index":2076,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["policystatusenum",{"_index":2001,"title":{"31-30":{},"31-44":{}},"name":{},"text":{},"component":{},"keyword":{}}],["policytyp",{"_index":1859,"title":{},"name":{},"text":{"28":{},"82":{},"105":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["policy’",{"_index":2097,"title":{},"name":{},"text":{"31":{},"34":{},"49":{},"65":{},"67":{},"78":{},"97":{}},"component":{},"keyword":{}}],["polr",{"_index":2560,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["pool",{"_index":841,"title":{},"name":{},"text":{"9":{},"49":{}},"component":{},"keyword":{}}],["popul",{"_index":911,"title":{"51-4":{},"52-4":{}},"name":{},"text":{"11":{},"74":{},"76":{},"104":{},"111":{}},"component":{},"keyword":{}}],["popular",{"_index":3865,"title":{},"name":{},"text":{"101":{},"113":{}},"component":{},"keyword":{}}],["port",{"_index":1208,"title":{"17-4":{}},"name":{},"text":{"17":{},"23":{},"27":{},"28":{},"39":{},"63":{},"64":{},"65":{},"66":{},"68":{},"94":{},"95":{},"119":{},"123":{}},"component":{},"keyword":{}}],["portabl",{"_index":279,"title":{},"name":{},"text":{"4":{},"9":{},"92":{}},"component":{},"keyword":{}}],["pose",{"_index":1175,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["posit",{"_index":3922,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["possibl",{"_index":667,"title":{},"name":{},"text":{"8":{},"9":{},"16":{},"17":{},"23":{},"26":{},"27":{},"28":{},"34":{},"37":{},"38":{},"39":{},"43":{},"48":{},"57":{},"58":{},"60":{},"63":{},"80":{},"106":{}},"component":{},"keyword":{}}],["post",{"_index":356,"title":{"67-3":{}},"name":{},"text":{"5":{},"28":{},"29":{},"43":{},"60":{},"84":{}},"component":{},"keyword":{}}],["postur",{"_index":767,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["potenti",{"_index":67,"title":{},"name":{},"text":{"1":{},"13":{},"35":{},"52":{}},"component":{},"keyword":{}}],["power",{"_index":1564,"title":{},"name":{},"text":{"23":{},"41":{},"84":{}},"component":{},"keyword":{}}],["powershel",{"_index":1494,"title":{},"name":{},"text":{"22":{},"34":{}},"component":{},"keyword":{}}],["pprof",{"_index":2270,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["pr",{"_index":2361,"title":{},"name":{},"text":{"41":{},"49":{}},"component":{},"keyword":{}}],["practic",{"_index":17,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"8":{},"45":{},"61":{},"78":{},"92":{},"94":{}},"component":{},"keyword":{}}],["pre",{"_index":596,"title":{},"name":{},"text":{"7":{},"15":{},"31":{},"44":{},"77":{},"78":{}},"component":{},"keyword":{}}],["pre.example.com",{"_index":2297,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["pre1",{"_index":2299,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["pre2",{"_index":2303,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["pre2.example.com:5500",{"_index":2302,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["preced",{"_index":2235,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["precis",{"_index":3345,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["preconfigur",{"_index":2646,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["predefin",{"_index":2228,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["predict",{"_index":1274,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["prefer",{"_index":1655,"title":{},"name":{},"text":{"26":{},"87":{}},"component":{},"keyword":{}}],["preferredduringschedulingignoredduringexecut",{"_index":1647,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["prefix",{"_index":2069,"title":{},"name":{},"text":{"31":{},"34":{},"43":{},"45":{},"60":{},"87":{},"94":{}},"component":{},"keyword":{}}],["prepar",{"_index":1308,"title":{"21-8":{},"44-1":{}},"name":{},"text":{"21":{},"63":{},"125":{}},"component":{},"keyword":{}}],["prerequisit",{"_index":1303,"title":{"21-1":{},"60-1":{},"62-1":{},"62-7":{},"68-1":{},"69-1":{},"96-4":{},"100-1":{}},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["present",{"_index":1411,"title":{},"name":{},"text":{"21":{},"35":{},"43":{},"71":{},"74":{},"97":{}},"component":{},"keyword":{}}],["preserv",{"_index":2084,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["press",{"_index":2481,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["prevent",{"_index":552,"title":{"41-2":{}},"name":{},"text":{"7":{},"8":{},"9":{},"11":{},"13":{},"23":{},"26":{},"27":{},"41":{},"43":{},"46":{},"52":{},"78":{},"87":{},"116":{}},"component":{},"keyword":{}}],["previou",{"_index":1032,"title":{},"name":{},"text":{"13":{},"14":{},"26":{},"28":{},"29":{},"34":{},"43":{},"44":{},"45":{},"53":{},"64":{},"65":{},"67":{},"74":{},"112":{},"115":{},"124":{}},"component":{},"keyword":{}}],["previous",{"_index":529,"title":{},"name":{},"text":{"7":{},"8":{},"20":{},"21":{},"29":{},"52":{},"62":{},"71":{},"77":{},"104":{}},"component":{},"keyword":{}}],["primari",{"_index":1719,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["prime",{"_index":107,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["primit",{"_index":4189,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["principl",{"_index":712,"title":{"9-2":{}},"name":{},"text":{"58":{},"102":{}},"component":{},"keyword":{}}],["print",{"_index":1394,"title":{},"name":{},"text":{"21":{},"27":{},"29":{},"62":{},"77":{},"78":{},"100":{},"105":{}},"component":{},"keyword":{}}],["prior",{"_index":1369,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["priorit",{"_index":35,"title":{},"name":{},"text":{"1":{},"34":{},"107":{},"116":{}},"component":{},"keyword":{}}],["prioriti",{"_index":31,"title":{},"name":{},"text":{"1":{},"14":{},"24":{},"26":{},"31":{},"76":{},"97":{}},"component":{},"keyword":{}}],["priorityclass",{"_index":1608,"title":{"26-4":{},"26-12":{},"26-13":{}},"name":{},"text":{"24":{},"26":{},"31":{}},"component":{},"keyword":{"26":{},"59":{}}}],["priorityclassnam",{"_index":1709,"title":{},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{}}],["privaci",{"_index":2310,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["privat",{"_index":53,"title":{"58":{},"51-4":{},"52-4":{}},"name":{"58":{}},"text":{"1":{},"6":{},"39":{},"50":{},"51":{},"52":{},"53":{},"58":{},"60":{},"88":{}},"component":{},"keyword":{"58":{}}}],["privateresourc",{"_index":1868,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["privileg",{"_index":246,"title":{"27-2":{},"27-4":{},"41-30":{},"41-47":{},"41-50":{},"41-52":{}},"name":{},"text":{"4":{},"7":{},"13":{},"23":{},"24":{},"27":{},"29":{},"41":{},"46":{},"49":{},"51":{},"52":{},"58":{},"78":{}},"component":{},"keyword":{}}],["privileged.kubewarden.admiss",{"_index":1769,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["privileged2",{"_index":1584,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["privileged:1.0.2",{"_index":1582,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["privileged:v0.1.9",{"_index":1921,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["privileged:v0.2.2",{"_index":560,"title":{},"name":{},"text":{"7":{},"51":{},"52":{}},"component":{},"keyword":{}}],["privileged:v0.2.7",{"_index":1762,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["probe",{"_index":848,"title":{},"name":{},"text":{"9":{},"30":{},"39":{}},"component":{},"keyword":{}}],["problem",{"_index":1154,"title":{},"name":{},"text":{"15":{},"16":{},"41":{}},"component":{},"keyword":{}}],["proc",{"_index":1801,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["proce",{"_index":998,"title":{},"name":{},"text":{"13":{},"64":{}},"component":{},"keyword":{}}],["procedur",{"_index":159,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["process",{"_index":131,"title":{"41-5":{}},"name":{},"text":{"3":{},"7":{},"8":{},"9":{},"10":{},"12":{},"21":{},"26":{},"27":{},"38":{},"41":{},"43":{},"45":{},"49":{},"51":{},"52":{},"60":{},"65":{},"66":{},"67":{},"70":{},"71":{},"76":{},"80":{},"81":{},"84":{},"96":{},"108":{},"109":{},"116":{},"125":{}},"component":{},"keyword":{}}],["processor",{"_index":209,"title":{},"name":{},"text":{"4":{},"66":{}},"component":{},"keyword":{}}],["prod",{"_index":2014,"title":{},"name":{},"text":{"31":{},"43":{},"60":{},"64":{}},"component":{},"keyword":{}}],["prod\",<br",{"_index":2018,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["produc",{"_index":562,"title":{},"name":{},"text":{"7":{},"12":{},"14":{},"25":{},"30":{},"31":{},"36":{},"38":{},"45":{},"47":{},"63":{},"78":{},"83":{},"87":{},"96":{},"99":{},"100":{},"104":{},"109":{},"110":{},"114":{},"116":{},"122":{}},"component":{},"keyword":{}}],["product",{"_index":381,"title":{"26":{},"59":{},"26-5":{}},"name":{"26":{},"59":{}},"text":{"6":{},"18":{},"19":{},"26":{},"28":{},"40":{},"43":{},"54":{},"57":{},"59":{},"60":{},"64":{},"69":{},"84":{},"105":{},"115":{},"117":{},"125":{},"126":{}},"component":{},"keyword":{"19":{},"26":{},"59":{}}}],["profil",{"_index":1498,"title":{},"name":{},"text":{"23":{},"39":{},"78":{}},"component":{},"keyword":{}}],["profile.json",{"_index":3307,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["program",{"_index":204,"title":{"81-1":{}},"name":{},"text":{"4":{},"9":{},"21":{},"23":{},"34":{},"38":{},"39":{},"49":{},"76":{},"77":{},"81":{},"83":{},"84":{},"86":{},"92":{},"96":{},"107":{},"108":{},"116":{}},"component":{},"keyword":{}}],["prohibit",{"_index":2543,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["project",{"_index":96,"title":{"6":{},"21-3":{},"37-1":{},"80-2":{},"97-1":{},"109-1":{},"116-9":{}},"name":{},"text":{"1":{},"4":{},"5":{},"9":{},"12":{},"16":{},"21":{},"27":{},"32":{},"33":{},"37":{},"42":{},"44":{},"45":{},"48":{},"49":{},"60":{},"71":{},"74":{},"80":{},"81":{},"84":{},"87":{},"96":{},"97":{},"100":{},"101":{},"102":{},"106":{},"108":{},"109":{},"111":{},"113":{},"116":{},"118":{},"120":{}},"component":{},"keyword":{}}],["prom",{"_index":3115,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["prometheu",{"_index":2115,"title":{"65-1":{},"65-3":{},"66-3":{},"66-7":{}},"name":{},"text":{"33":{},"41":{},"63":{},"65":{},"66":{},"68":{}},"component":{},"keyword":{}}],["promot",{"_index":760,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["prompt",{"_index":1493,"title":{},"name":{},"text":{"22":{},"60":{},"68":{}},"component":{},"keyword":{}}],["proof",{"_index":2257,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["propag",{"_index":888,"title":{},"name":{},"text":{"10":{},"34":{}},"component":{},"keyword":{}}],["proper",{"_index":2474,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["properti",{"_index":1345,"title":{},"name":{},"text":{"21":{},"44":{},"48":{}},"component":{},"keyword":{}}],["propos",{"_index":2199,"title":{},"name":{},"text":{"36":{},"75":{},"98":{}},"component":{},"keyword":{}}],["protect",{"_index":21,"title":{"38":{}},"name":{},"text":{"1":{},"8":{},"24":{},"31":{},"36":{},"38":{},"39":{},"53":{},"61":{},"93":{}},"component":{},"keyword":{"38":{}}}],["protocol",{"_index":857,"title":{"87-3":{},"88-4":{},"88-10":{},"88-16":{},"89-3":{},"90-2":{},"91-1":{},"116-3":{}},"name":{},"text":{"9":{},"12":{},"28":{},"29":{},"60":{},"63":{},"66":{},"71":{},"88":{},"89":{},"91":{},"116":{}},"component":{},"keyword":{}}],["prove",{"_index":3380,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["proven",{"_index":2411,"title":{},"name":{},"text":{"43":{},"45":{}},"component":{},"keyword":{}}],["provenance.json",{"_index":2520,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["provid",{"_index":102,"title":{"8-2":{}},"name":{},"text":{"2":{},"4":{},"7":{},"8":{},"9":{},"11":{},"12":{},"14":{},"16":{},"17":{},"21":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"41":{},"43":{},"45":{},"46":{},"48":{},"49":{},"52":{},"56":{},"58":{},"60":{},"61":{},"63":{},"67":{},"71":{},"73":{},"74":{},"76":{},"78":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"104":{},"105":{},"107":{},"108":{},"111":{},"115":{},"116":{},"117":{},"119":{}},"component":{},"keyword":{}}],["provinc",{"_index":2965,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["provis",{"_index":2354,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["provision",{"_index":3056,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["provisioner:v5",{"_index":3054,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["proxi",{"_index":627,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["proxim",{"_index":1639,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["prune",{"_index":1194,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["ps",{"_index":411,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["psa",{"_index":1497,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{},"keyword":{}}],["psp",{"_index":502,"title":{"27-1":{},"27-6":{},"27-7":{}},"name":{"27":{}},"text":{"7":{},"8":{},"13":{},"23":{},"27":{},"36":{},"41":{},"46":{},"60":{},"73":{},"77":{},"78":{}},"component":{},"keyword":{"27":{}}}],["psp\"},\"image\":{\"dock",{"_index":2893,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["psp.kubewarden.admiss",{"_index":1561,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["psp:latest",{"_index":1551,"title":{},"name":{},"text":{"23":{},"43":{},"60":{}},"component":{},"keyword":{}}],["psp:v0.1.10",{"_index":1850,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["psp:v0.1.11",{"_index":1842,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["psp:v0.1.13",{"_index":1846,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["psp:v0.1.5",{"_index":1018,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["psp:v0.1.6",{"_index":1777,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["psp:v0.2.0",{"_index":2842,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["psp:v0.2.6",{"_index":1747,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["psp:v0.4.9",{"_index":1754,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["psql",{"_index":3274,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["pub",{"_index":4010,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["pub(crat",{"_index":4009,"title":{},"name":{},"text":{"110":{},"115":{}},"component":{},"keyword":{}}],["pub_key",{"_index":3398,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["pubkey",{"_index":1065,"title":{},"name":{},"text":{"14":{},"25":{},"43":{},"53":{},"60":{}},"component":{},"keyword":{}}],["pubkey\\nown",{"_index":1112,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["public",{"_index":68,"title":{"43-6":{},"60-10":{}},"name":{},"text":{"1":{},"12":{},"14":{},"25":{},"34":{},"43":{},"53":{},"58":{},"60":{},"66":{},"87":{}},"component":{},"keyword":{}}],["public/priv",{"_index":2416,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["publickey",{"_index":2755,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["publicli",{"_index":91,"title":{},"name":{},"text":{"1":{},"21":{}},"component":{},"keyword":{}}],["publicresourc",{"_index":1871,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["publish",{"_index":315,"title":{"44":{},"44-2":{}},"name":{"44":{}},"text":{"4":{},"21":{},"29":{},"32":{},"41":{},"44":{},"45":{},"60":{},"95":{},"102":{},"103":{}},"component":{},"keyword":{"44":{}}}],["pull",{"_index":1235,"title":{"34-25":{},"53-2":{}},"name":{},"text":{"18":{},"27":{},"29":{},"31":{},"34":{},"40":{},"45":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{},"67":{},"77":{},"83":{},"85":{},"87":{},"97":{},"114":{},"121":{},"125":{}},"component":{},"keyword":{}}],["purpos",{"_index":677,"title":{"38-1":{}},"name":{},"text":{"8":{},"21":{},"36":{},"38":{},"46":{},"72":{},"78":{},"82":{},"84":{},"92":{},"122":{}},"component":{},"keyword":{}}],["push",{"_index":926,"title":{"12-1":{},"12-3":{},"34-28":{},"121-2":{},"125-2":{}},"name":{},"text":{"12":{},"18":{},"21":{},"29":{},"34":{},"37":{},"40":{},"44":{},"45":{},"49":{},"60":{},"77":{},"85":{},"96":{},"102":{},"114":{},"121":{},"125":{}},"component":{},"keyword":{}}],["put",{"_index":2147,"title":{},"name":{},"text":{"34":{},"71":{},"77":{},"94":{},"110":{},"112":{}},"component":{},"keyword":{}}],["pwd)/policies.yml:/policies.yml",{"_index":1877,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["q",{"_index":2183,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["qs",{"_index":3029,"title":{},"name":{"63":{},"64":{},"65":{}},"text":{},"component":{},"keyword":{}}],["qualifi",{"_index":3226,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["qualit",{"_index":2791,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["quantiti",{"_index":2349,"title":{},"name":{},"text":{"41":{},"92":{}},"component":{},"keyword":{}}],["quay",{"_index":2208,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["quay.io",{"_index":2211,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["queri",{"_index":1711,"title":{"104":{},"48-1":{}},"name":{"104":{}},"text":{"26":{},"38":{},"48":{},"49":{},"64":{},"65":{},"66":{},"69":{},"76":{},"94":{},"96":{},"99":{},"104":{},"114":{},"123":{}},"component":{},"keyword":{"104":{}}}],["query:16686/proxy/search",{"_index":3173,"title":{},"name":{},"text":{"69":{}},"component":{},"keyword":{}}],["queryabl",{"_index":2083,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["question",{"_index":2184,"title":{},"name":{},"text":{"34":{},"78":{}},"component":{},"keyword":{}}],["quick",{"_index":260,"title":{"7":{},"63":{}},"name":{"7":{}},"text":{"4":{},"5":{},"17":{},"29":{},"96":{}},"component":{},"keyword":{"7":{}}}],["quickli",{"_index":2242,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["quickstart",{"_index":1145,"title":{"64":{},"65":{},"67":{}},"name":{},"text":{"15":{},"23":{},"56":{},"62":{},"69":{}},"component":{},"keyword":{"63":{},"64":{},"65":{}}}],["quit",{"_index":1425,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["quot",{"_index":2241,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["quota",{"_index":257,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["r",{"_index":1406,"title":{},"name":{},"text":{"21":{},"29":{},"34":{},"60":{},"76":{},"98":{},"100":{},"105":{}},"component":{},"keyword":{}}],["r.host",{"_index":3573,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["r.regexp",{"_index":3709,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["rais",{"_index":1750,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["ran",{"_index":2688,"title":{},"name":{},"text":{"51":{},"78":{}},"component":{},"keyword":{}}],["rancher",{"_index":106,"title":{"15":{},"53":{},"67":{},"33-3":{},"53-1":{},"53-2":{},"68-4":{},"69-3":{}},"name":{"15":{}},"text":{"2":{},"4":{},"15":{},"33":{},"53":{},"67":{},"68":{},"69":{}},"component":{},"keyword":{"15":{},"53":{},"67":{}}}],["rancher/kubewarden",{"_index":2774,"title":{},"name":{},"text":{"54":{}},"component":{},"keyword":{}}],["random",{"_index":3220,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["rang",{"_index":1021,"title":{},"name":{},"text":{"13":{},"23":{},"26":{},"27":{},"33":{},"46":{},"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["raspberri",{"_index":1479,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["rate",{"_index":1273,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["raw",{"_index":692,"title":{"28":{},"105":{},"115":{},"117":{},"126":{},"28-6":{},"82-4":{}},"name":{"28":{},"105":{},"115":{},"117":{},"126":{}},"text":{"8":{},"28":{},"34":{},"74":{},"82":{},"99":{},"104":{},"105":{},"111":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{"28":{},"105":{},"115":{},"117":{},"126":{}}}],["rawextens",{"_index":2070,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["rawreviewrequest.request",{"_index":3218,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["rawset",{"_index":3715,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["rawsettings.constrainedlabel",{"_index":3720,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["rawvalidationrequest",{"_index":3923,"title":{},"name":{},"text":{"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["rbac",{"_index":901,"title":{"61-3":{}},"name":{},"text":{"11":{},"41":{},"46":{},"49":{},"61":{},"63":{},"76":{}},"component":{},"keyword":{}}],["rbac.clusterrole=tru",{"_index":3081,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["rc2",{"_index":981,"title":{},"name":{},"text":{"12":{},"60":{}},"component":{},"keyword":{}}],["re",{"_index":616,"title":{"8-4":{}},"name":{},"text":{"8":{},"10":{},"21":{},"23":{},"36":{},"98":{},"104":{},"111":{},"112":{}},"component":{},"keyword":{}}],["re.str",{"_index":3755,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["reach",{"_index":1508,"title":{},"name":{},"text":{"23":{},"26":{},"30":{},"81":{}},"component":{},"keyword":{}}],["reachabl",{"_index":851,"title":{},"name":{},"text":{"9":{},"64":{},"66":{},"69":{}},"component":{},"keyword":{}}],["react",{"_index":2671,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["read",{"_index":830,"title":{"11-1":{}},"name":{},"text":{"9":{},"11":{},"27":{},"28":{},"30":{},"34":{},"37":{},"41":{},"46":{},"49":{},"64":{},"69":{},"82":{},"87":{},"94":{},"95":{},"106":{},"118":{},"122":{},"126":{}},"component":{},"keyword":{}}],["readabl",{"_index":4238,"title":{},"name":{},"text":{"119":{}},"component":{},"keyword":{}}],["readi",{"_index":573,"title":{},"name":{},"text":{"7":{},"9":{},"10":{},"15":{},"21":{},"23":{},"39":{},"60":{}},"component":{},"keyword":{}}],["readiness_probe_port",{"_index":2281,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["readme.md",{"_index":3960,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["readonli",{"_index":1789,"title":{},"name":{},"text":{"27":{},"66":{}},"component":{},"keyword":{}}],["readonlyrootfilesystem",{"_index":1788,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["real",{"_index":1242,"title":{},"name":{},"text":{"19":{},"26":{},"46":{},"97":{}},"component":{},"keyword":{}}],["reason",{"_index":902,"title":{},"name":{},"text":{"11":{},"14":{},"23":{},"30":{},"41":{},"42":{},"43":{},"45":{},"60":{},"90":{},"92":{},"96":{},"116":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["rebuild",{"_index":997,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["recal",{"_index":3857,"title":{},"name":{},"text":{"100":{}},"component":{},"keyword":{}}],["recap",{"_index":3208,"title":{"73-3":{},"75-2":{}},"name":{},"text":{"81":{}},"component":{},"keyword":{}}],["receipt",{"_index":78,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["receiv",{"_index":645,"title":{},"name":{},"text":{"8":{},"9":{},"13":{},"26":{},"35":{},"42":{},"63":{},"64":{},"66":{},"69":{},"73":{},"74":{},"75":{},"76":{},"81":{},"86":{},"90":{},"96":{},"98":{},"116":{},"122":{}},"component":{},"keyword":{}}],["recommend",{"_index":438,"title":{},"name":{},"text":{"7":{},"8":{},"12":{},"21":{},"26":{},"30":{},"34":{},"37":{},"41":{},"42":{},"51":{},"60":{},"61":{},"65":{},"67":{},"73":{},"74":{},"75":{},"87":{},"113":{}},"component":{},"keyword":{}}],["recommendedpolicies.defaultpoliciesregistri",{"_index":2706,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["recommendedpolicies.defaultpoliciesregistry=<registry.yourdomain.com:port",{"_index":2707,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["recommendedpolicies.defaultpolicymode=monitor",{"_index":3110,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{},"keyword":{}}],["recommendedpolicies.defaultpolicymode=protect",{"_index":2934,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["recommendedpolicies.enabled=tru",{"_index":2933,"title":{},"name":{},"text":{"61":{},"65":{},"66":{}},"component":{},"keyword":{}}],["recommended|1.2.0(1.2.0",{"_index":2397,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["reconcil",{"_index":772,"title":{},"name":{},"text":{"9":{},"10":{},"16":{},"20":{},"28":{}},"component":{},"keyword":{}}],["reconcili",{"_index":719,"title":{"9-13":{}},"name":{},"text":{"9":{},"10":{},"31":{},"70":{}},"component":{},"keyword":{"10":{}}}],["reconfigur",{"_index":2679,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["record",{"_index":2163,"title":{},"name":{},"text":{"34":{},"76":{},"111":{},"123":{},"124":{}},"component":{},"keyword":{}}],["recreat",{"_index":1302,"title":{},"name":{},"text":{"20":{},"23":{},"31":{},"103":{}},"component":{},"keyword":{}}],["redeploy",{"_index":3170,"title":{},"name":{},"text":{"68":{}},"component":{},"keyword":{}}],["redirect",{"_index":1813,"title":{},"name":{},"text":{"27":{},"41":{},"56":{}},"component":{},"keyword":{}}],["reduc",{"_index":743,"title":{},"name":{},"text":{"9":{},"14":{},"19":{},"26":{},"38":{},"41":{},"66":{},"76":{},"84":{},"91":{},"96":{},"123":{}},"component":{},"keyword":{}}],["ref",{"_index":4133,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["refer",{"_index":92,"title":{"35":{},"40":{},"31-1":{},"43-4":{},"60-8":{}},"name":{"35":{}},"text":{"1":{},"4":{},"5":{},"9":{},"11":{},"12":{},"14":{},"18":{},"21":{},"26":{},"28":{},"31":{},"41":{},"43":{},"44":{},"45":{},"48":{},"51":{},"52":{},"56":{},"59":{},"60":{},"61":{},"62":{},"67":{},"71":{},"76":{},"77":{},"82":{},"98":{},"101":{},"105":{},"108":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{"34":{},"35":{},"39":{}}}],["referenc",{"_index":2096,"title":{},"name":{},"text":{"31":{},"66":{}},"component":{},"keyword":{}}],["reference\":\"ghcr.io/kubewarden/policies/us",{"_index":2892,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["reflect",{"_index":3630,"title":{},"name":{},"text":{"96":{},"98":{},"100":{}},"component":{},"keyword":{}}],["refresh",{"_index":3158,"title":{},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["refs/head",{"_index":2833,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["refus",{"_index":989,"title":{},"name":{},"text":{"12":{},"60":{}},"component":{},"keyword":{}}],["regard",{"_index":1374,"title":{},"name":{},"text":{"21":{},"26":{},"41":{},"45":{},"123":{}},"component":{},"keyword":{}}],["regardless",{"_index":2244,"title":{},"name":{},"text":{"38":{},"97":{}},"component":{},"keyword":{}}],["regex",{"_index":3519,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["regexp",{"_index":2497,"title":{},"name":{},"text":{"45":{},"98":{},"99":{},"100":{}},"component":{},"keyword":{}}],["regexp.compile(string(text",{"_index":3707,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["regexp.match([]byte(valu",{"_index":3811,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["regexp.mustcompile(`team",{"_index":3827,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["regexp.regexp",{"_index":3693,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["regist",{"_index":435,"title":{},"name":{},"text":{"7":{},"9":{},"73":{},"74":{},"75":{}},"component":{},"keyword":{}}],["registri",{"_index":217,"title":{"37":{},"58":{},"88":{},"12-1":{},"37-1":{},"37-2":{},"37-3":{},"51-4":{},"52-4":{},"57-1":{}},"name":{"37":{},"58":{},"88":{}},"text":{"4":{},"7":{},"9":{},"12":{},"18":{},"21":{},"26":{},"28":{},"29":{},"31":{},"34":{},"37":{},"39":{},"40":{},"44":{},"45":{},"49":{},"50":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"67":{},"77":{},"78":{},"85":{},"87":{},"88":{},"102":{},"109":{},"114":{},"121":{},"125":{}},"component":{},"keyword":{"37":{},"58":{},"88":{}}}],["registries.yaml",{"_index":2733,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["registry.env",{"_index":3889,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["registry.k8s.io/ingress",{"_index":3058,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["registry.k8s.io/paus",{"_index":1036,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["registry.mi",{"_index":4252,"title":{},"name":{},"text":{"121":{},"125":{}},"component":{},"keyword":{}}],["registry.yourdomain.com:port",{"_index":2693,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["registry.yourdomain.com:port>/kubewarden/polici",{"_index":2709,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["registry/polici",{"_index":520,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["registry://<oci",{"_index":519,"title":{},"name":{},"text":{"7":{},"12":{}},"component":{},"keyword":{}}],["registry://<registry.yourdomain.com:port>/kubewarden/policies/pod",{"_index":2708,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["registry://ghcr.io/jvanz/policies/mygatekeeperpolicy:latest",{"_index":1455,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/allow",{"_index":1849,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/cap",{"_index":1845,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/cel",{"_index":3541,"title":{},"name":{},"text":{"93":{},"94":{},"95":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/context",{"_index":905,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/env",{"_index":2236,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/host",{"_index":1839,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/ingress:v0.1.8",{"_index":3300,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/pod",{"_index":559,"title":{},"name":{},"text":{"7":{},"24":{},"27":{},"29":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/psa",{"_index":1572,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/psp",{"_index":504,"title":{},"name":{},"text":{"7":{},"34":{},"36":{},"78":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/readonli",{"_index":1837,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/saf",{"_index":1133,"title":{},"name":{},"text":{"14":{},"64":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/trust",{"_index":1073,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/u",{"_index":2841,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/uniqu",{"_index":1127,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/us",{"_index":1017,"title":{},"name":{},"text":{"13":{},"23":{},"27":{},"60":{}},"component":{},"keyword":{}}],["registry://ghcr.io/kubewarden/policies/volum",{"_index":1841,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["registry://localhost:5000",{"_index":2732,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["registry://registry.mi",{"_index":4255,"title":{},"name":{},"text":{"121":{},"125":{}},"component":{},"keyword":{}}],["registry>/kubewarden",{"_index":984,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["registry[(\"oci",{"_index":790,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["rego",{"_index":608,"title":{"106":{},"119":{},"21-5":{},"21-6":{},"76-10":{}},"name":{"106":{}},"text":{"7":{},"8":{},"13":{},"21":{},"38":{},"49":{},"76":{},"106":{},"107":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{"106":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{}}}],["rego_parse_error",{"_index":1363,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["regul",{"_index":631,"title":{},"name":{},"text":{"8":{},"76":{}},"component":{},"keyword":{}}],["regular",{"_index":305,"title":{},"name":{},"text":{"4":{},"7":{},"12":{},"26":{},"37":{},"41":{},"77":{},"97":{},"98":{},"99":{},"102":{},"116":{}},"component":{},"keyword":{}}],["regularexpress",{"_index":3682,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["regulatori",{"_index":254,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["reinvent",{"_index":723,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["reject",{"_index":542,"title":{"24-2":{}},"name":{},"text":{"7":{},"12":{},"13":{},"14":{},"15":{},"21":{},"23":{},"24":{},"25":{},"29":{},"31":{},"35":{},"36":{},"38":{},"41":{},"49":{},"60":{},"73":{},"74":{},"75":{},"78":{},"81":{},"94":{},"97":{},"98":{},"99":{},"100":{},"104":{},"105":{},"109":{},"111":{},"112":{},"115":{},"117":{},"119":{},"120":{},"121":{},"124":{},"125":{}},"component":{},"keyword":{}}],["reject_deploy_request.json",{"_index":1423,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["reject_latest",{"_index":1072,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["reject_latest_tag",{"_index":1079,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["reject_pod_with_invalid_nam",{"_index":4085,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["reject_settings_without_a_list_of_invalid_nam",{"_index":4031,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["rejectrequest",{"_index":4215,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["rejectsettings(messag",{"_index":4206,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["rejectsettings(message(fmt.sprintf(\"cannot",{"_index":4200,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["rekor",{"_index":974,"title":{},"name":{},"text":{"12":{},"34":{},"60":{},"87":{}},"component":{},"keyword":{}}],["relat",{"_index":357,"title":{},"name":{},"text":{"5":{},"49":{},"67":{},"70":{},"77":{},"82":{}},"component":{},"keyword":{}}],["releas",{"_index":32,"title":{"52-1":{},"102-3":{}},"name":{},"text":{"1":{},"5":{},"7":{},"21":{},"22":{},"23":{},"29":{},"32":{},"38":{},"42":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"65":{},"70":{},"76":{},"82":{},"85":{},"96":{},"102":{},"105":{},"106":{},"114":{},"116":{},"118":{},"122":{}},"component":{},"keyword":{}}],["release.yml",{"_index":3883,"title":{},"name":{},"text":{"102":{},"103":{}},"component":{},"keyword":{}}],["relev",{"_index":1704,"title":{},"name":{},"text":{"26":{},"33":{},"35":{},"44":{},"45":{},"78":{},"82":{},"94":{},"95":{},"99":{},"104":{},"125":{}},"component":{},"keyword":{}}],["reli",{"_index":2551,"title":{"47-2":{},"47-3":{}},"name":{},"text":{"47":{},"63":{},"90":{},"91":{},"99":{}},"component":{},"keyword":{}}],["reliabl",{"_index":1619,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["reload",{"_index":891,"title":{},"name":{},"text":{"10":{},"67":{},"68":{}},"component":{},"keyword":{}}],["remain",{"_index":1665,"title":{},"name":{},"text":{"26":{},"31":{},"67":{},"94":{}},"component":{},"keyword":{}}],["remaind",{"_index":2840,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["rememb",{"_index":1720,"title":{},"name":{},"text":{"26":{},"105":{},"115":{},"126":{}},"component":{},"keyword":{}}],["remot",{"_index":831,"title":{},"name":{},"text":{"9":{},"12":{},"21":{},"29":{},"31":{},"71":{},"88":{}},"component":{},"keyword":{}}],["remov",{"_index":453,"title":{"15-2":{}},"name":{},"text":{"7":{},"10":{},"15":{},"16":{},"21":{},"23":{},"26":{},"27":{},"29":{},"34":{},"49":{},"60":{},"70":{},"76":{},"94":{},"98":{},"100":{},"111":{},"117":{},"126":{}},"component":{},"keyword":{}}],["renam",{"_index":1488,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["rename_al",{"_index":4147,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["render",{"_index":1174,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["renew",{"_index":877,"title":{},"name":{},"text":{"10":{},"16":{},"70":{}},"component":{},"keyword":{}}],["renov",{"_index":2673,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["renovatebot",{"_index":2180,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["repeat",{"_index":2151,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["replac",{"_index":699,"title":{"27-1":{}},"name":{},"text":{"8":{},"21":{},"23":{},"27":{},"99":{},"100":{},"105":{},"110":{},"111":{}},"component":{},"keyword":{}}],["replay",{"_index":2164,"title":{},"name":{},"text":{"34":{},"76":{}},"component":{},"keyword":{}}],["repli",{"_index":3258,"title":{},"name":{},"text":{"75":{},"86":{},"104":{}},"component":{},"keyword":{}}],["replic",{"_index":1046,"title":{},"name":{},"text":{"13":{},"45":{},"106":{}},"component":{},"keyword":{}}],["replica",{"_index":469,"title":{},"name":{},"text":{"7":{},"19":{},"20":{},"23":{},"26":{},"28":{},"31":{},"49":{},"51":{},"52":{},"58":{},"60":{},"64":{},"70":{},"93":{}},"component":{},"keyword":{}}],["replicafailur",{"_index":1531,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["replicalimit",{"_index":3532,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["replicas=0",{"_index":1295,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["replicas=1",{"_index":1299,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["replicaset",{"_index":1600,"title":{},"name":{},"text":{"24":{},"38":{},"53":{}},"component":{},"keyword":{}}],["replicast",{"_index":3538,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["replicationcontrol",{"_index":1599,"title":{},"name":{},"text":{"24":{},"38":{},"53":{}},"component":{},"keyword":{}}],["repo",{"_index":431,"title":{},"name":{},"text":{"7":{},"14":{},"29":{},"34":{},"43":{},"45":{},"60":{},"63":{},"64":{},"65":{},"66":{},"87":{}},"component":{},"keyword":{}}],["repo.yml",{"_index":2471,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["report",{"_index":46,"title":{"48":{},"17-2":{},"48-1":{},"48-4":{}},"name":{"48":{}},"text":{"1":{},"11":{},"14":{},"17":{},"25":{},"33":{},"46":{},"48":{},"49":{},"51":{},"52":{},"54":{},"56":{},"63":{},"65":{},"82":{},"94":{},"105":{},"107":{},"118":{},"119":{}},"component":{},"keyword":{}}],["reporter.image.registry=<registry.yourdomain.com:port",{"_index":2699,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["reporter.image.repository=kyverno/polici",{"_index":2701,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["reporter.ui.image.registry=<registry.yourdomain.com:port",{"_index":2700,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["reporter.ui.image.repository=kyverno/polici",{"_index":2702,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{},"keyword":{}}],["reporter:3.3.3",{"_index":2724,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["reporter’",{"_index":2650,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["repos:v0.2.0",{"_index":1074,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["repositori",{"_index":93,"title":{"44-1":{}},"name":{},"text":{"1":{},"6":{},"7":{},"15":{},"17":{},"21":{},"27":{},"29":{},"31":{},"32":{},"33":{},"34":{},"43":{},"44":{},"45":{},"48":{},"49":{},"51":{},"52":{},"54":{},"56":{},"60":{},"64":{},"65":{},"67":{},"84":{},"85":{},"87":{},"97":{},"114":{},"116":{},"119":{}},"component":{},"keyword":{}}],["repositoryid",{"_index":2483,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["repourl",{"_index":1187,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["repres",{"_index":390,"title":{},"name":{},"text":{"7":{},"31":{},"74":{},"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["represent",{"_index":1086,"title":{},"name":{},"text":{"14":{},"73":{},"99":{}},"component":{},"keyword":{}}],["reproduc",{"_index":2167,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["req",{"_index":2951,"title":{},"name":{},"text":{"62":{},"78":{}},"component":{},"keyword":{}}],["req_distinguished_nam",{"_index":2955,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["request",{"_index":85,"title":{"26-10":{},"26-11":{},"34-41":{},"41-55":{},"78-2":{}},"name":{},"text":{"1":{},"3":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"36":{},"38":{},"41":{},"46":{},"47":{},"49":{},"54":{},"56":{},"65":{},"69":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"81":{},"82":{},"83":{},"85":{},"86":{},"87":{},"88":{},"89":{},"91":{},"93":{},"94":{},"95":{},"96":{},"99":{},"100":{},"101":{},"104":{},"105":{},"106":{},"109":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{}}],["request\".to_str",{"_index":4163,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["request.act",{"_index":3947,"title":{},"name":{},"text":{"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["request.go",{"_index":3924,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["request.json",{"_index":1935,"title":{},"name":{},"text":{"29":{},"76":{}},"component":{},"keyword":{}}],["request.rego",{"_index":4260,"title":{},"name":{},"text":{"123":{},"124":{}},"component":{},"keyword":{}}],["request.resourc",{"_index":3949,"title":{},"name":{},"text":{"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["request.us",{"_index":3945,"title":{},"name":{},"text":{"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["request/respons",{"_index":4262,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["request_fil",{"_index":4075,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["requestkind",{"_index":3231,"title":{},"name":{},"text":{"74":{},"78":{}},"component":{},"keyword":{}}],["requestresourc",{"_index":3232,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["requestsubresourc",{"_index":3233,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["requir",{"_index":480,"title":{"50":{},"41-5":{},"71-4":{},"81-1":{},"119-1":{},"123-1":{}},"name":{"50":{}},"text":{"7":{},"9":{},"10":{},"11":{},"12":{},"21":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"37":{},"39":{},"41":{},"43":{},"44":{},"46":{},"47":{},"49":{},"51":{},"52":{},"56":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"71":{},"82":{},"87":{},"88":{},"91":{},"96":{},"98":{},"101":{},"104":{},"109":{},"111":{},"125":{}},"component":{},"keyword":{}}],["require_rekor_bundl",{"_index":3408,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["required_drop_cap",{"_index":512,"title":{},"name":{},"text":{"7":{},"27":{},"36":{},"73":{}},"component":{},"keyword":{}}],["requireddropcap",{"_index":1798,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["requiredduringschedulingignoredduringexecut",{"_index":1641,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["requiredlabel",{"_index":3853,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["res.mutated_object.is_non",{"_index":4083,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["res.mutated_object.is_som",{"_index":4120,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["resampl",{"_index":2158,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["research",{"_index":15,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["resembl",{"_index":4067,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["reserv",{"_index":463,"title":{},"name":{},"text":{"7":{},"8":{},"26":{},"36":{},"51":{},"52":{}},"component":{},"keyword":{}}],["resili",{"_index":863,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["resolv",{"_index":1182,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{},"keyword":{}}],["resourc",{"_index":130,"title":{"31":{},"5-4":{},"26-15":{},"52-2":{},"68-4":{},"76-3":{},"76-4":{},"82-2":{},"82-5":{}},"name":{},"text":{"3":{},"4":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"36":{},"38":{},"41":{},"42":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"58":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"74":{},"76":{},"78":{},"80":{},"82":{},"84":{},"85":{},"91":{},"92":{},"93":{},"94":{},"95":{},"105":{},"106":{},"111":{},"112":{},"115":{},"117":{},"119":{},"120":{},"121":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{"31":{}}}],["resource_kind",{"_index":2193,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["resource_nam",{"_index":2192,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["resource_namespac",{"_index":2194,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["resource_request_oper",{"_index":2195,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["resourcelist",{"_index":2094,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["resourcerul",{"_index":1963,"title":{},"name":{},"text":{"30":{},"93":{}},"component":{},"keyword":{}}],["resources.tar.zst",{"_index":2716,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["resources/subresourc",{"_index":2030,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["resourceselector",{"_index":2627,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["resourcevers",{"_index":2612,"title":{},"name":{},"text":{"48":{},"60":{}},"component":{},"keyword":{}}],["resource’",{"_index":2545,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{},"keyword":{}}],["respect",{"_index":1199,"title":{},"name":{},"text":{"16":{},"27":{},"40":{},"51":{},"68":{},"99":{},"100":{}},"component":{},"keyword":{}}],["respectignoredifferences=tru",{"_index":1200,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["respond",{"_index":29,"title":{},"name":{},"text":{"1":{},"38":{},"41":{}},"component":{},"keyword":{}}],["respons",{"_index":18,"title":{"14-4":{}},"name":{},"text":{"1":{},"14":{},"17":{},"24":{},"25":{},"28":{},"31":{},"35":{},"38":{},"73":{},"76":{},"81":{},"86":{},"87":{},"88":{},"89":{},"98":{},"99":{},"112":{},"117":{},"119":{},"122":{},"123":{},"126":{}},"component":{},"keyword":{}}],["response.accept",{"_index":3836,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["response.cod",{"_index":3837,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["response.messag",{"_index":3767,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["response.valid",{"_index":3766,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["responsebyt",{"_index":4202,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["responsepayload",{"_index":3761,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["rest",{"_index":401,"title":{},"name":{},"text":{"7":{},"9":{},"15":{},"16":{},"29":{},"64":{},"65":{},"93":{}},"component":{},"keyword":{}}],["restart",{"_index":892,"title":{},"name":{},"text":{"10":{},"20":{},"23":{}},"component":{},"keyword":{}}],["restartcount",{"_index":1541,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["restor",{"_index":1291,"title":{"20-2":{}},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["restraint",{"_index":3266,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["restrict",{"_index":244,"title":{},"name":{},"text":{"4":{},"23":{},"24":{},"26":{},"27":{},"36":{},"41":{},"61":{},"82":{}},"component":{},"keyword":{}}],["restricted:v1.25",{"_index":1529,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["result",{"_index":137,"title":{"24-3":{}},"name":{},"text":{"3":{},"6":{},"7":{},"9":{},"13":{},"14":{},"16":{},"17":{},"24":{},"26":{},"29":{},"31":{},"34":{},"38":{},"46":{},"47":{},"48":{},"49":{},"60":{},"62":{},"76":{},"78":{},"81":{},"82":{},"87":{},"88":{},"89":{},"90":{},"91":{},"94":{},"96":{},"99":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{},"115":{},"122":{}},"component":{},"keyword":{}}],["resum",{"_index":3368,"title":{},"name":{},"text":{"86":{}},"component":{},"keyword":{}}],["retir",{"_index":1909,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["retriev",{"_index":413,"title":{},"name":{},"text":{"7":{},"31":{},"60":{},"76":{},"91":{},"96":{}},"component":{},"keyword":{}}],["return",{"_index":839,"title":{},"name":{},"text":{"9":{},"13":{},"14":{},"24":{},"28":{},"31":{},"35":{},"45":{},"67":{},"73":{},"74":{},"75":{},"81":{},"82":{},"87":{},"89":{},"91":{},"94":{},"98":{},"99":{},"104":{},"105":{},"111":{},"112":{},"115":{},"117":{},"119":{},"122":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{}}],["reus",{"_index":211,"title":{"93":{}},"name":{"93":{}},"text":{"4":{},"7":{},"8":{},"14":{},"53":{},"92":{},"93":{},"94":{},"123":{}},"component":{},"keyword":{}}],["reusabl",{"_index":304,"title":{},"name":{},"text":{"4":{},"102":{}},"component":{},"keyword":{}}],["reveal",{"_index":1360,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["revert",{"_index":1883,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["review",{"_index":79,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"11":{},"13":{},"21":{},"27":{},"34":{},"39":{},"41":{},"56":{},"76":{},"119":{},"122":{}},"component":{},"keyword":{}}],["review_missing_label",{"_index":1404,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["review_required_label",{"_index":1403,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["revis",{"_index":3617,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["rewrit",{"_index":212,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["rewritten",{"_index":2452,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["rfc",{"_index":353,"title":{},"name":{},"text":{"5":{},"90":{}},"component":{},"keyword":{}}],["right",{"_index":340,"title":{"41-11":{}},"name":{},"text":{"5":{},"9":{},"29":{},"41":{},"44":{},"67":{},"98":{},"99":{},"112":{}},"component":{},"keyword":{}}],["rigid",{"_index":3209,"title":{},"name":{},"text":{"73":{}},"component":{},"keyword":{}}],["risk",{"_index":36,"title":{},"name":{},"text":{"1":{},"9":{}},"component":{},"keyword":{}}],["rm",{"_index":1332,"title":{"34-31":{}},"name":{},"text":{"21":{},"28":{},"29":{},"34":{},"97":{},"105":{}},"component":{},"keyword":{}}],["role",{"_index":373,"title":{},"name":{},"text":{"6":{},"46":{},"61":{}},"component":{},"keyword":{}}],["role.kubernetes.io/control",{"_index":1702,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["rolebind",{"_index":1258,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["roll",{"_index":854,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["rollout",{"_index":570,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{},"keyword":{}}],["room",{"_index":75,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["root",{"_index":872,"title":{"62-2":{}},"name":{},"text":{"10":{},"12":{},"16":{},"23":{},"27":{},"34":{},"43":{},"44":{},"60":{},"62":{},"70":{},"71":{},"90":{}},"component":{},"keyword":{}}],["rootca.crt",{"_index":2986,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["rootca.key",{"_index":2953,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["rootca.srl",{"_index":3000,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["rootf",{"_index":3462,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["rotat",{"_index":868,"title":{"10":{},"70":{}},"name":{},"text":{"10":{},"24":{},"70":{},"71":{}},"component":{},"keyword":{}}],["round",{"_index":1088,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["rpc",{"_index":3366,"title":{},"name":{},"text":{"86":{}},"component":{},"keyword":{}}],["rsa:4096",{"_index":2984,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["rshqyda3hritswyp41apf6zhjsplr6lamq3x4wmylapptmzfxigtnr4hxb5unph",{"_index":2760,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["rule",{"_index":506,"title":{"41-30":{},"41-37":{},"41-40":{},"41-44":{}},"name":{},"text":{"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"34":{},"36":{},"38":{},"40":{},"41":{},"42":{},"47":{},"49":{},"51":{},"52":{},"53":{},"60":{},"63":{},"64":{},"67":{},"76":{},"82":{},"92":{},"93":{},"94":{},"95":{},"105":{},"106":{},"120":{},"121":{},"124":{},"125":{}},"component":{},"keyword":{}}],["rulewithoper",{"_index":2029,"title":{},"name":{},"text":{"31":{},"93":{}},"component":{},"keyword":{}}],["run",{"_index":220,"title":{"120":{},"124":{},"17-5":{},"21-7":{},"28-1":{},"28-2":{},"34-33":{},"41-47":{},"41-52":{},"120-2":{},"124-2":{}},"name":{"120":{},"124":{}},"text":{"4":{},"7":{},"8":{},"9":{},"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"38":{},"39":{},"41":{},"42":{},"46":{},"49":{},"52":{},"53":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"71":{},"74":{},"76":{},"77":{},"78":{},"80":{},"82":{},"84":{},"85":{},"87":{},"88":{},"91":{},"96":{},"97":{},"98":{},"99":{},"100":{},"102":{},"104":{},"105":{},"106":{},"107":{},"109":{},"110":{},"111":{},"112":{},"114":{},"118":{},"120":{},"124":{},"125":{}},"component":{},"keyword":{"124":{}}}],["run_as_group",{"_index":1028,"title":{},"name":{},"text":{"13":{},"23":{}},"component":{},"keyword":{}}],["run_as_us",{"_index":1019,"title":{},"name":{},"text":{"13":{},"23":{},"27":{}},"component":{},"keyword":{}}],["runasani",{"_index":1029,"title":{},"name":{},"text":{"13":{},"23":{},"27":{}},"component":{},"keyword":{}}],["runasgroup",{"_index":1794,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["runasnonroot",{"_index":1507,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{},"keyword":{}}],["runasus",{"_index":1033,"title":{},"name":{},"text":{"13":{},"23":{},"27":{}},"component":{},"keyword":{}}],["runasuser\":1000",{"_index":1042,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["runasuser=0",{"_index":1530,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["runlevel",{"_index":2008,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["runlevel\",<br",{"_index":2010,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["runtim",{"_index":174,"title":{},"name":{},"text":{"3":{},"8":{},"19":{},"26":{},"34":{},"73":{},"77":{},"78":{},"81":{},"87":{},"88":{},"96":{},"106":{},"107":{},"116":{}},"component":{},"keyword":{}}],["runtime/default",{"_index":3324,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["runtimedefault",{"_index":1514,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["rust",{"_index":679,"title":{"108":{},"76-8":{},"108-1":{}},"name":{"108":{}},"text":{"8":{},"28":{},"29":{},"38":{},"49":{},"76":{},"77":{},"87":{},"108":{},"110":{},"111":{},"113":{},"114":{},"115":{}},"component":{},"keyword":{"77":{},"110":{},"111":{},"112":{},"114":{},"115":{}}}],["rust_backtrace=1",{"_index":4118,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["rustl",{"_index":3492,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["rustup",{"_index":3993,"title":{},"name":{},"text":{"108":{}},"component":{},"keyword":{}}],["s",{"_index":1233,"title":{},"name":{},"text":{"17":{},"22":{},"29":{},"34":{},"98":{},"99":{},"104":{},"105":{}},"component":{},"keyword":{}}],["s.constrainedlabel",{"_index":3719,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["s.defaultact",{"_index":3969,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["s.defaultresourc",{"_index":3970,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["s.defaultus",{"_index":3967,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["s.deniedlabel",{"_index":3717,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["s/\"//g",{"_index":2531,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["s1",{"_index":1643,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["s2",{"_index":1651,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["sa",{"_index":2710,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["safe",{"_index":611,"title":{"8-1":{}},"name":{},"text":{"8":{},"27":{},"41":{},"48":{},"61":{},"64":{},"84":{},"87":{},"92":{},"102":{},"103":{}},"component":{},"keyword":{}}],["sake",{"_index":4258,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["same",{"_index":451,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"13":{},"14":{},"15":{},"21":{},"24":{},"27":{},"31":{},"34":{},"36":{},"38":{},"42":{},"45":{},"47":{},"49":{},"51":{},"53":{},"60":{},"66":{},"71":{},"75":{},"76":{},"88":{},"89":{},"91":{},"93":{},"98":{},"100":{},"106":{},"112":{},"114":{},"116":{},"119":{},"120":{},"121":{}},"component":{},"keyword":{}}],["sampl",{"_index":2159,"title":{},"name":{},"text":{"34":{},"60":{},"113":{},"123":{}},"component":{},"keyword":{}}],["samples/nod",{"_index":3255,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["sand",{"_index":745,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["sandbox",{"_index":190,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{"4":{}}}],["satisfi",{"_index":2413,"title":{},"name":{},"text":{"43":{},"87":{},"98":{},"99":{},"100":{},"104":{}},"component":{},"keyword":{}}],["satisfied:\\nkind",{"_index":1111,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["save",{"_index":941,"title":{"34-36":{},"51-1":{},"51-2":{}},"name":{},"text":{"12":{},"29":{},"34":{},"46":{},"49":{},"51":{},"52":{},"60":{},"85":{},"94":{}},"component":{},"keyword":{}}],["sbom",{"_index":2490,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["scaffold",{"_index":1427,"title":{"34-39":{},"34-41":{},"34-43":{},"34-45":{},"34-48":{},"34-50":{},"97-1":{},"109-1":{}},"name":{"97":{}},"text":{"21":{},"29":{},"30":{},"34":{},"44":{},"60":{},"80":{},"82":{},"84":{},"94":{},"95":{},"98":{},"99":{},"100":{},"102":{},"105":{},"108":{},"109":{},"110":{},"111":{},"115":{},"117":{},"121":{},"126":{}},"component":{},"keyword":{}}],["scalabl",{"_index":1265,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["scale",{"_index":693,"title":{"19":{},"26-15":{},"26-16":{}},"name":{"19":{}},"text":{"8":{},"19":{},"20":{},"26":{},"74":{}},"component":{},"keyword":{}}],["scan",{"_index":138,"title":{},"name":{},"text":{"3":{},"19":{},"26":{},"44":{},"46":{},"48":{},"105":{}},"component":{},"keyword":{}}],["scanner",{"_index":222,"title":{"17":{},"46":{},"47":{},"48":{},"14-7":{},"19-4":{},"46-1":{}},"name":{"17":{},"46":{}},"text":{"4":{},"7":{},"8":{},"9":{},"16":{},"17":{},"19":{},"26":{},"32":{},"33":{},"38":{},"42":{},"45":{},"46":{},"47":{},"48":{},"49":{},"61":{},"71":{},"82":{},"92":{},"93":{},"94":{},"105":{}},"component":{},"keyword":{"17":{},"46":{},"47":{},"48":{}}}],["scanner/.github/workflows/attestation.yml@refs/tags/v1.18.0",{"_index":2516,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["scanner:v1.0.6",{"_index":2237,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["scanner:v1.27.0",{"_index":2728,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["scanner[\"kw",{"_index":802,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["scenario",{"_index":1557,"title":{"41-3":{},"41-6":{},"41-9":{},"41-12":{},"41-16":{},"41-19":{},"41-22":{},"41-25":{},"41-28":{},"41-31":{},"41-34":{},"41-38":{},"41-41":{},"41-45":{},"41-48":{},"41-51":{},"41-53":{},"41-56":{},"41-60":{}},"name":{},"text":{"23":{},"26":{},"29":{},"38":{},"46":{},"49":{},"60":{},"63":{},"99":{}},"component":{},"keyword":{}}],["scene",{"_index":2678,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["schedul",{"_index":1620,"title":{},"name":{},"text":{"26":{},"29":{},"31":{},"38":{}},"component":{},"keyword":{}}],["scheduling.k8s.io/v1",{"_index":1660,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["schema",{"_index":1343,"title":{},"name":{},"text":{"21":{},"31":{},"34":{},"92":{}},"component":{},"keyword":{}}],["schemavers",{"_index":3417,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["scheme",{"_index":517,"title":{},"name":{},"text":{"7":{},"34":{}},"component":{},"keyword":{}}],["scope",{"_index":142,"title":{},"name":{},"text":{"3":{},"7":{},"29":{},"31":{},"35":{},"41":{},"48":{},"56":{},"67":{},"91":{},"93":{},"94":{}},"component":{},"keyword":{}}],["score",{"_index":2628,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["scrape",{"_index":3137,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["screenshot",{"_index":1906,"title":{},"name":{},"text":{"29":{},"48":{}},"component":{},"keyword":{}}],["script",{"_index":1733,"title":{"27-7":{}},"name":{},"text":{"27":{},"45":{}},"component":{},"keyword":{}}],["sct",{"_index":2822,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["sdk",{"_index":681,"title":{"42-7":{},"76-7":{}},"name":{},"text":{"8":{},"28":{},"42":{},"58":{},"63":{},"74":{},"76":{},"80":{},"81":{},"84":{},"85":{},"87":{},"90":{},"91":{},"96":{},"98":{},"99":{},"101":{},"104":{},"105":{},"106":{},"107":{},"108":{},"111":{},"113":{},"115":{},"116":{}},"component":{},"keyword":{}}],["sdk’",{"_index":3288,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["seamlessli",{"_index":730,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["search",{"_index":317,"title":{"5-2":{}},"name":{},"text":{"5":{},"32":{},"45":{},"91":{},"99":{}},"component":{},"keyword":{}}],["sec",{"_index":3253,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["seccomp",{"_index":1804,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["seccompprofil",{"_index":1513,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["second",{"_index":592,"title":{},"name":{},"text":{"7":{},"11":{},"19":{},"26":{},"31":{},"34":{},"38":{},"48":{},"53":{},"76":{},"87":{},"91":{},"94":{},"99":{},"123":{}},"component":{},"keyword":{}}],["secret",{"_index":820,"title":{"53-2":{},"53-3":{},"58-1":{},"58-2":{},"58-3":{}},"name":{},"text":{"9":{},"10":{},"11":{},"16":{},"27":{},"31":{},"38":{},"49":{},"53":{},"58":{},"60":{},"66":{},"67":{},"70":{}},"component":{},"keyword":{}}],["secretnam",{"_index":3132,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["secretresourc",{"_index":1869,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["section",{"_index":267,"title":{"40-2":{},"40-3":{}},"name":{},"text":{"4":{},"5":{},"9":{},"11":{},"12":{},"13":{},"14":{},"19":{},"21":{},"27":{},"30":{},"31":{},"34":{},"36":{},"38":{},"40":{},"43":{},"44":{},"45":{},"51":{},"52":{},"53":{},"56":{},"59":{},"60":{},"61":{},"63":{},"64":{},"65":{},"67":{},"72":{},"74":{},"75":{},"77":{},"78":{},"79":{},"81":{},"82":{},"96":{},"98":{},"99":{},"100":{},"102":{},"103":{},"104":{},"105":{},"106":{},"111":{},"112":{},"114":{},"116":{},"119":{},"123":{},"124":{}},"component":{},"keyword":{}}],["secur",{"_index":0,"title":{"1":{},"4":{},"8":{},"9":{},"23":{},"60":{},"61":{},"62":{},"4-1":{},"6-1":{},"8-4":{},"9-9":{},"9-10":{},"9-16":{},"61-6":{}},"name":{"23":{},"60":{},"61":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"23":{},"26":{},"29":{},"31":{},"36":{},"38":{},"41":{},"43":{},"45":{},"60":{},"61":{},"62":{},"66":{},"75":{},"78":{},"87":{}},"component":{},"keyword":{"1":{},"7":{},"23":{},"27":{},"45":{},"60":{},"61":{},"62":{},"71":{}}}],["security.kubernetes.io/enforc",{"_index":1505,"title":{},"name":{},"text":{"23":{},"61":{}},"component":{},"keyword":{}}],["security.kubernetes.io/enforce=restrict",{"_index":2942,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["securitycontext",{"_index":587,"title":{"61-7":{}},"name":{},"text":{"7":{},"13":{},"23":{},"27":{},"31":{},"61":{},"75":{}},"component":{},"keyword":{}}],["securitycontext.capabilities.drop",{"_index":3261,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["sed",{"_index":2530,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["see",{"_index":572,"title":{},"name":{},"text":{"7":{},"13":{},"15":{},"17":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"29":{},"31":{},"37":{},"38":{},"44":{},"45":{},"46":{},"48":{},"49":{},"52":{},"53":{},"57":{},"58":{},"60":{},"61":{},"63":{},"64":{},"65":{},"66":{},"69":{},"74":{},"75":{},"76":{},"82":{},"85":{},"91":{},"92":{},"93":{},"94":{},"96":{},"98":{},"99":{},"105":{},"109":{},"111":{},"112":{},"116":{},"119":{},"120":{},"121":{},"123":{},"125":{}},"component":{},"keyword":{}}],["seem",{"_index":2160,"title":{},"name":{},"text":{"34":{},"85":{}},"component":{},"keyword":{}}],["seen",{"_index":3985,"title":{},"name":{},"text":{"107":{}},"component":{},"keyword":{}}],["segreg",{"_index":660,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["select",{"_index":1907,"title":{},"name":{},"text":{"29":{},"45":{},"67":{},"68":{},"97":{},"108":{}},"component":{},"keyword":{}}],["select(.reason",{"_index":1519,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["selector",{"_index":1128,"title":{},"name":{},"text":{"14":{},"23":{},"24":{},"28":{},"31":{},"64":{},"65":{},"66":{},"68":{},"71":{},"91":{},"93":{},"104":{}},"component":{},"keyword":{}}],["self",{"_index":613,"title":{"8-2":{}},"name":{},"text":{"8":{},"9":{},"26":{},"51":{}},"component":{},"keyword":{}}],["self.default_action.is_empti",{"_index":4176,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["self.default_resource.is_empti",{"_index":4178,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["self.default_user.is_empti",{"_index":4174,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["self.invalid_names.is_empti",{"_index":4019,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["self.valid_actions.is_empti",{"_index":4156,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["self.valid_resources.is_empti",{"_index":4158,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["self.valid_users.is_empti",{"_index":4153,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["selfheal",{"_index":1195,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["selfsign",{"_index":3131,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["selinux",{"_index":1799,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["semant",{"_index":2373,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["semver",{"_index":2185,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["send",{"_index":151,"title":{"41-55":{}},"name":{},"text":{"3":{},"9":{},"14":{},"26":{},"38":{},"41":{},"46":{},"63":{},"66":{},"76":{},"113":{},"124":{}},"component":{},"keyword":{}}],["sens",{"_index":4256,"title":{},"name":{},"text":{"122":{}},"component":{},"keyword":{}}],["sensit",{"_index":2363,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["sent",{"_index":809,"title":{},"name":{},"text":{"9":{},"29":{},"31":{},"64":{},"66":{},"105":{},"115":{},"117":{}},"component":{},"keyword":{}}],["separ",{"_index":687,"title":{},"name":{},"text":{"8":{},"19":{},"26":{},"27":{},"29":{},"68":{},"93":{}},"component":{},"keyword":{}}],["serde(default",{"_index":4146,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["serde_json::from_slice(payload",{"_index":4161,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["serde_json::from_value::<apicore::pod>(res.mutated_object.unwrap()).unwrap",{"_index":4122,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["serde_json::from_value::<apicore::pod>(validation_request.request.object",{"_index":4056,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["serde_json::to_value(pod",{"_index":4107,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["serde_json::to_value(request",{"_index":4184,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["serde_json::valu",{"_index":4110,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["seri",{"_index":354,"title":{},"name":{},"text":{"5":{},"78":{},"85":{},"88":{},"89":{},"98":{},"109":{}},"component":{},"keyword":{}}],["serial",{"_index":3211,"title":{},"name":{},"text":{"73":{},"75":{},"85":{},"112":{}},"component":{},"keyword":{}}],["serv",{"_index":313,"title":{},"name":{},"text":{"4":{},"7":{},"9":{},"31":{},"52":{},"76":{},"87":{}},"component":{},"keyword":{}}],["server",{"_index":77,"title":{"39":{},"70":{},"9-13":{},"14-8":{},"28-1":{},"28-2":{},"35-1":{},"38-5":{},"39-1":{},"39-2":{},"39-5":{},"60-7":{},"67-4":{},"68-5":{},"71-4":{}},"name":{"39":{},"70":{}},"text":{"1":{},"4":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"21":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"32":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"49":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"76":{},"77":{},"78":{},"81":{},"87":{},"88":{},"91":{},"93":{},"94":{},"95":{},"96":{},"99":{},"101":{},"105":{},"106":{},"107":{},"113":{},"115":{},"116":{},"117":{},"118":{},"121":{},"122":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{"39":{},"70":{}}}],["server.pid",{"_index":2267,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["server.yaml",{"_index":1884,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["server/.github/workflows/contain",{"_index":2501,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["server/releases/latest/download/kubewarden",{"_index":3116,"title":{},"name":{},"text":{"65":{}},"component":{},"keyword":{}}],["server1",{"_index":2499,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["server:1.9.0",{"_index":1879,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["server:v0.2.7",{"_index":2921,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["server:v0.3.1",{"_index":2535,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["server:v1.1.1",{"_index":2804,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["server:v1.10.0",{"_index":3443,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["server:v1.13.0",{"_index":3482,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["server:v1.18.0",{"_index":2504,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["server:v1.27.0",{"_index":2726,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["server:v1.3.0",{"_index":468,"title":{},"name":{},"text":{"7":{},"51":{},"52":{}},"component":{},"keyword":{}}],["server:v1.9.0",{"_index":1885,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["server=dp.apps.rancher.io",{"_index":2743,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["server=myregistry.io",{"_index":2803,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["server[\"`**polici",{"_index":794,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["server\\ninst",{"_index":807,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["serverfigur",{"_index":811,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["server’",{"_index":899,"title":{},"name":{},"text":{"11":{},"19":{}},"component":{},"keyword":{}}],["servic",{"_index":614,"title":{"8-2":{}},"name":{},"text":{"8":{},"9":{},"11":{},"14":{},"17":{},"19":{},"26":{},"28":{},"31":{},"38":{},"41":{},"46":{},"53":{},"61":{},"64":{},"65":{},"66":{},"69":{},"76":{},"94":{}},"component":{},"keyword":{}}],["service/kubewarden",{"_index":1228,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["service/mi",{"_index":3098,"title":{},"name":{},"text":{"64":{},"66":{}},"component":{},"keyword":{}}],["service/polici",{"_index":1892,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["service1",{"_index":3590,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["service2",{"_index":3591,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["serviceaccount",{"_index":485,"title":{"46-3":{}},"name":{},"text":{"7":{},"31":{},"46":{},"47":{}},"component":{},"keyword":{}}],["serviceaccountnam",{"_index":471,"title":{},"name":{},"text":{"7":{},"31":{},"51":{},"58":{},"60":{}},"component":{},"keyword":{}}],["servicemonitor",{"_index":3102,"title":{"68-3":{}},"name":{},"text":{"65":{},"68":{}},"component":{},"keyword":{}}],["session",{"_index":3286,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["session.yml",{"_index":3281,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["set",{"_index":364,"title":{"73":{},"98":{},"110":{},"14-6":{},"21-9":{},"63-1":{},"73-1":{},"98-1":{},"98-2":{},"98-3":{},"110-1":{},"110-2":{},"116-7":{}},"name":{"73":{},"98":{},"110":{}},"text":{"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"17":{},"18":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{},"38":{},"39":{},"40":{},"42":{},"43":{},"46":{},"49":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"71":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"84":{},"87":{},"88":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"104":{},"105":{},"108":{},"109":{},"110":{},"111":{},"112":{},"115":{},"116":{},"117":{},"121":{},"125":{},"126":{}},"component":{},"keyword":{"73":{},"98":{},"110":{}}}],["set/v2",{"_index":3684,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["sets.intersects(host",{"_index":3585,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["settings.constrainedlabel",{"_index":3852,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["settings.constrainedlabels[\"cost",{"_index":3752,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["settings.constrainedlabels[label",{"_index":3810,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["settings.default_act",{"_index":4181,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["settings.default_resourc",{"_index":4182,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["settings.default_us",{"_index":4180,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["settings.defaultact",{"_index":3974,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["settings.defaultresourc",{"_index":3975,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["settings.defaultus",{"_index":3973,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["settings.deniedlabels.contains(exp",{"_index":3750,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["settings.deniedlabels.contains(label",{"_index":3808,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["settings.go",{"_index":3681,"title":{},"name":{},"text":{"98":{},"99":{},"105":{},"117":{}},"component":{},"keyword":{}}],["settings.valid",{"_index":3545,"title":{},"name":{},"text":{"93":{},"95":{},"98":{},"105":{}},"component":{},"keyword":{}}],["settings.valid_actions.contains(&request.act",{"_index":4167,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["settings.valid_resources.contains(&request.resourc",{"_index":4168,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["settings.valid_users.contains(&request.us",{"_index":4166,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["settings.vari",{"_index":3543,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["settings::tests::accept_settings_with_a_list_of_invalid_nam",{"_index":4043,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["settings::tests::reject_settings_without_a_list_of_invalid_nam",{"_index":4044,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["settings::tests::validate_set",{"_index":4004,"title":{},"name":{},"text":{"109":{}},"component":{},"keyword":{}}],["settings_test.go",{"_index":3696,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["settingsjson",{"_index":3743,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["settingsvalidationrespons",{"_index":3212,"title":{},"name":{},"text":{"73":{},"98":{},"116":{},"117":{}},"component":{},"keyword":{}}],["setup",{"_index":737,"title":{},"name":{},"text":{"9":{},"17":{},"37":{},"41":{},"63":{},"66":{},"71":{}},"component":{},"keyword":{}}],["set{cc",{"_index":3862,"title":{},"name":{},"text":{"100":{}},"component":{},"keyword":{}}],["set{cost",{"_index":3772,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["set{hello",{"_index":3845,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["sever",{"_index":1569,"title":{},"name":{},"text":{"24":{},"26":{},"44":{},"46":{},"48":{},"82":{},"84":{},"90":{},"92":{},"93":{},"94":{},"95":{},"99":{},"105":{},"125":{}},"component":{},"keyword":{}}],["sfl",{"_index":3018,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["sh",{"_index":3020,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["sha",{"_index":1922,"title":{},"name":{},"text":{"29":{},"34":{}},"component":{},"keyword":{}}],["sha256",{"_index":2981,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["sha256:018ce7bd6fd46306e129aca44c1c103675dbe29e3aa842a0b7fb01507e8d02d2",{"_index":3467,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:026af67682a85d424e7d95db460171635f5c3957d67b53499bece912cc0413cc",{"_index":2848,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["sha256:0d893e5416389fd105bc81d3694a5d5dbffc41237291df0aaa4efbc26632e91c",{"_index":3466,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:294efa324e89a020b06df261f77903fb9f46fdee79c54e4f6589f786f6c31bec",{"_index":3446,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:2a5e7791442784b3614921dcb51afdbe94ae9bfd3752e22e5eb81ce731f5bfbf",{"_index":3465,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:58a13f6770904193ca67beb50d424e69a39579e1581dbf8e02e1751f3b75f932",{"_index":3437,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:5cbf5e50aec3a00fcff8bb4ae070a07eea8198187a97b21dff6d873d2274ce7a",{"_index":3666,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["sha256:61dc3269b9e8faeea32128560cdbd355e8c1dff31e32abc0223be039c5cc5e2d",{"_index":3430,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:67a7c41ccd5dfcb08face86546f0d25c0740f0d0225e39fecb8bbae8b95b847a",{"_index":3440,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:67d998e418791ec2955ec99753eb55f03ca96538976e5ccebfec08eae20056b5",{"_index":3433,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:69e70a79f2d41ab5d637de98c1e0b055206ba40a8145e7bddb55ccc04e13cf8f",{"_index":3416,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:6c7ec51ccec3d4438c94e697258085ddf825c1e711df4d923b1794794196cf06",{"_index":3452,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:6ebc3e17a9804a8d385fee819554ad95a05072d022c5bd2dd27556a5752d47f5",{"_index":3454,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:79f61adc25589b7b467a6becca5756f3b722ab7f9d0c18c205e89c08fdc8d45d",{"_index":3464,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:7d5e84b9314ba7058bfa209881919146ffc4a89c5ba14cfa8270a18c8d418c44",{"_index":3421,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:ae1e98105555f3983496c15c70dafc87639b77830953d6470694b47e0e063e25",{"_index":3423,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:bc3511804cb29da6333f0187a333eba13a43a3a0a1737e9b50227a5cf057af74",{"_index":3444,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:be6185edcab66334dd5c7c2273fd6254100ece960e087541f3dba0616c440038",{"_index":3435,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:cd2adfe5e808335e0c30eff616a9852a94cfbf8ecd455d1b893e1c858ddc3aeb",{"_index":3450,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:e8904ebb2841dc19ae458436eb01ddea3e8d6ea653c7d9476537f4029b1f45a2",{"_index":3428,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:e9fc0f86e26366abf29fd29e8c09d00df717f9038fd4298eaa39a0a2b4361fa4",{"_index":3424,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256:f0936413f7d0757b41777a624e5be83da28789d0c4b8b3f46853ca9c3bb6300f",{"_index":3448,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["sha256sum",{"_index":2519,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["shall",{"_index":1771,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{},"keyword":{}}],["share",{"_index":369,"title":{},"name":{},"text":{"6":{},"27":{},"41":{},"60":{},"81":{}},"component":{},"keyword":{}}],["shell",{"_index":1458,"title":{"22-1":{}},"name":{},"text":{"22":{},"29":{},"34":{},"60":{},"123":{}},"component":{},"keyword":{}}],["ship",{"_index":1237,"title":{},"name":{},"text":{"18":{},"26":{},"45":{},"48":{},"51":{},"76":{},"82":{},"92":{},"96":{},"100":{},"111":{}},"component":{},"keyword":{}}],["short",{"_index":402,"title":{},"name":{},"text":{"7":{},"21":{},"60":{},"82":{},"95":{},"105":{}},"component":{},"keyword":{}}],["shortcut",{"_index":3871,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["shorten",{"_index":193,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["shortnam",{"_index":404,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["shouldn’t",{"_index":923,"title":{},"name":{},"text":{"11":{},"116":{}},"component":{},"keyword":{}}],["show",{"_index":341,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"21":{},"23":{},"27":{},"29":{},"34":{},"42":{},"43":{},"45":{},"48":{},"51":{},"52":{},"60":{},"62":{},"64":{},"65":{},"79":{},"100":{},"104":{},"106":{},"108":{}},"component":{},"keyword":{}}],["shown",{"_index":609,"title":{},"name":{},"text":{"7":{},"23":{},"24":{},"27":{},"29":{},"60":{},"106":{},"114":{}},"component":{},"keyword":{}}],["si",{"_index":1473,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["side",{"_index":27,"title":{},"name":{},"text":{"1":{},"18":{},"31":{},"67":{},"74":{},"90":{},"92":{}},"component":{},"keyword":{}}],["sidecar",{"_index":1751,"title":{},"name":{},"text":{"27":{},"31":{},"63":{},"64":{},"65":{},"68":{},"69":{},"106":{}},"component":{},"keyword":{}}],["sideeffect",{"_index":2059,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sideeffectclass",{"_index":2060,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sig",{"_index":2346,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["sign",{"_index":816,"title":{"60-2":{},"60-3":{},"60-4":{}},"name":{},"text":{"9":{},"10":{},"12":{},"14":{},"25":{},"41":{},"43":{},"44":{},"45":{},"49":{},"51":{},"53":{},"60":{},"87":{},"95":{}},"component":{},"keyword":{}}],["signatur",{"_index":982,"title":{"87":{},"43-4":{},"43-5":{},"43-7":{},"43-8":{},"43-9":{},"43-10":{},"60-5":{},"60-7":{},"60-8":{},"60-9":{},"60-11":{},"60-12":{},"60-13":{},"60-14":{}},"name":{"87":{}},"text":{"12":{},"14":{},"22":{},"25":{},"32":{},"34":{},"43":{},"45":{},"51":{},"53":{},"58":{},"60":{},"87":{},"95":{}},"component":{},"keyword":{"53":{},"87":{},"95":{}}}],["signature\"},\"optional\":nul",{"_index":2895,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["signatures\":[{\"keyid\":\"b6710623a30c010738e64c5209d367df1c0a18cf90e6ab5292fb01680f83453d\",\"sig\":\"3046022100f666a7f4b3d85d8003f2c166e27827dfa0c4ab9282e9dab19485f4e702c61700022100dfe826e0edab5f80a40f08cc87b87777a4db30775d85684fe4950e797f2f565c\"}],\"signed\":{\"_type\":\"timestamp\",\"spec_version\":\"1.0\",\"version\":15,\"expires\":\"2022",{"_index":2872,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["signatures/0.2.9",{"_index":2751,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["signatures/verifi",{"_index":2750,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["signatures:v0.2.5",{"_index":2540,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["signatures:v0.2.8",{"_index":1080,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["signatures:v0.2.9",{"_index":2753,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["signatures:v0.3.0",{"_index":1063,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["signatures\\nth",{"_index":1109,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["signatures_requirements.yaml",{"_index":2454,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["signature’",{"_index":2445,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["signed_by_alic",{"_index":1061,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["signed_by_bob",{"_index":1069,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["signedentrytimestamp\":\"meuciefu4qr+hsexsdk5h2qxmduvorcx10j+4clqwtyw5vd6aieayycejvjdv2sr5tz4lapnddh/4v+cov1qkuvbcq3iium=\",\"payload\":{\"body\":\"eyjhcglwzxjzaw9uijoimc4wljeilcjraw5kijoiagfzagvkcmvrb3jkiiwic3blyyi6eyjkyxrhijp7imhhc2gionsiywxnb3jpdghtijoic2hhmju2iiwidmfsdwuioiiwmjzhzjy3njgyytg1zdqyngu3zdk1zgi0njaxnze2mzvmnwmzotu3zdy3yjuzndk5ymvjztkxmmnjmdqxm2njin19lcjzawduyxr1cmuionsiy29udgvudci6ik1fwunjuunxnwzrz1buutdatlnurkhzbhjotlfrs2dtsvfpognsmtu5ueexc0s4vglrswhbsndmowjpcujkbvdun1llzg9tem80c2xpz2s4skjcanfyzhnyddnyevf0qiisinb1ymxpy0tlesi6eyjjb250zw50ijoitfmwdextmunsvwrkvglcrfjwslvtvvpkutbgvvjtmhrmuzb0q2sxslnvulnla05euvhonvowrjntvupcwjbsvvlsqlzxbxhwum10clfvadbzbnbqttnknlf5ohplbghxtvvsqlmwsm5am0zvytjwufvgrljsruy2uvhfs1rwslzkmfyzv1vsv1vwrkxswgq0zw1gwfpicgtsemw1v2xnmwexcflxwghgvkvguvftze9wa0pcvfzsrfnfnxdxak5ptudjelntee5raljzukzssmvrce5srww1vgxsrk1rmtzrwgroykc5wvjgukplvtffu1hst1zfvxlua1jczdaxv2izzezla1ztvfvfnfiwrxhwvvzeyuuxsll6snnibu16vw5aamjwvjndbgrvuvzsq1oytnhhr3rxvdfculnvsknammr4yud0cvqxqljuvupdzda1rffvrlnmmdgxwxpayvnuvknla0ozwlc5rlnxrnrosfzyzfrwbwnycellreflttfcvveyzg1xsgw1zgtscwizsjzpwgrzturoawmynwthmghrvjjar1qyslzlmui2zedknfdeyzrrvzqwttfsm09tow1tsfjqt1rodk5fbenov3beuxdwqlpvbdnsr2raukzau01gqkjvvwd2uwtguljfrm5avuzouwsxsffurlzarxbsvvuxtlfxouhrme56ujbgulzvwknkmdffvfvgm1iwrxhwv1jgzdbwq0npotnvvu5ouvvgm1ngrlpsrlpttuu5q1fsbezsa05rtdnzm1rrvktvv2rzwwtsdgvvttfwazfuym5ab2fyvknwvtfdt0vkqk1wvmttwgrsv1uxq1lvrutsa1pxuvvoc0sxslnzvlp0y1zoevrxdexsmvjkzevgegvhtlloazfjwjbkqk1wvmtsvkztzuuxseswzglwmmd3wkvoq2vroxbpsfphtw13d1lvafdhuxbnylu1mllsttvjbvjyu214a01rwjvxa2rxzfv3evpiqmtsmmd4v1dregfga3pvbkjptwpwnlriazfibuzzvw05a1ywbdjarek1zvdfevdutmlnmli2q2t3elntegtxrtvvv1cxngjfefltbxhpujfab1l6slzkr05it1hoafywndfurmhltvdnelvyvmxwekz6vvvos2jgchvuwfpoujfab1drae5kbvjxulhjs1rtzfptmhqzv1vkq1fvzevkbnbcuwtgm1vxou5ivxbwvfvkuk5fnxfxbxbozwtadfqwze5lvnbvvvrot1jfmtruvvjktkuwevjyae9ivvpyvfzkr2frce9ha0pzv21wqk1wbhfrwfzdwji5evftzezsvuzavhk5tlfvvkdra05dy21swfntegtna1o1v2tkv2rvd3pwbnbhv0vsmfdqtktkbvjzuvhsalnfntnda3hzuw5aaviyehfavljcwtbkbmizsknamfzguvzsuewwmujsvvzduvrwvfdszdrirmxzvg14slnfsjjza2rzyw1wvvfwtknamjl5uw1krljvrlpuethlvfvgrlewskjvbmrrv0u1dlrvunjsme5wyzbkqlvwrknaemm0zdbguljvvkxnbwd3wkvoq2vroxbpsfprunpsevdsyzbkvmxyvgpcafz6bdfzm2sxymdwafdgsnzarmrltvdnevzubfpnamwxwkvkv2rxukrov3bptwpcm1nhzfptmhqzv1vkq1fvzevkbnbcuwtkblvwrmpivlp0wtnrnu1gbfhashbnttfsm0nrehftwfzoukvgtfftzg5jv2hyyws5uvvwrkvrwgrpy0vgrvftmujha1zczvvkullrnurhmdlwwmxomfr6zdvrme5tumponvdibgpnvfewuvu1du1uz0twsgs1twxkwlf6qndwr0zxyuhacfqwvkvorgrtwjbrmlzhnwptmllyt1rkqmfrvkjha0ptywt4dfewy3zuwgr5yuromesyzg1trxbguvzkwfjxttvvuw9yywpst1vqujnsalkyzfvgq1v5ovvwr2cxutfsc2ntnupkwezuukn0sffraehkmvlltfmwdextmuzua1fnutbwu1zfbedtvu5cvkvvdextmhrmuw89in19fx0=\",\"integratedtime\":1645806604,\"logindex\":1506651,\"logid\":\"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d",{"_index":2875,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["signer’",{"_index":2816,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["signifi",{"_index":1153,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["signific",{"_index":1252,"title":{},"name":{},"text":{"19":{},"76":{}},"component":{},"keyword":{}}],["significantli",{"_index":2162,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["sigstor",{"_index":1712,"title":{"95":{},"95-1":{}},"name":{"95":{}},"text":{"26":{},"29":{},"31":{},"34":{},"39":{},"43":{},"45":{},"49":{},"60":{},"87":{},"92":{},"95":{}},"component":{},"keyword":{"95":{}}}],["sigstore::cosign::client_build",{"_index":973,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["sigstore_cache_dir",{"_index":2283,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["sigstorecertificateverifi",{"_index":3378,"title":{"87-13":{},"87-14":{}},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["sigstoregithubactionsverifi",{"_index":3377,"title":{"87-11":{},"87-12":{}},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["sigstorekeylessprefixverifi",{"_index":3376,"title":{"87-9":{},"87-10":{}},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["sigstorekeylessverifi",{"_index":3375,"title":{"87-7":{},"87-8":{},"87-18":{},"87-19":{}},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["sigstorepubkeyverifi",{"_index":3374,"title":{"87-5":{},"87-6":{},"87-16":{},"87-17":{}},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["sigstore’",{"_index":2419,"title":{},"name":{},"text":{"43":{},"45":{},"60":{}},"component":{},"keyword":{}}],["silicon",{"_index":297,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["similar",{"_index":1053,"title":{},"name":{},"text":{"14":{},"21":{},"29":{},"30":{},"45":{},"60":{},"63":{},"65":{},"86":{},"87":{},"99":{},"104":{},"110":{},"112":{},"121":{}},"component":{},"keyword":{}}],["similarli",{"_index":1124,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["simpl",{"_index":683,"title":{},"name":{},"text":{"8":{},"63":{},"109":{},"111":{}},"component":{},"keyword":{}}],["simpler",{"_index":1049,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["simplest",{"_index":2472,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["simpli",{"_index":3980,"title":{},"name":{},"text":{"106":{}},"component":{},"keyword":{}}],["simplic",{"_index":1563,"title":{},"name":{},"text":{"23":{},"64":{},"69":{},"123":{}},"component":{},"keyword":{}}],["simplifi",{"_index":768,"title":{},"name":{},"text":{"9":{},"14":{},"23":{},"26":{},"43":{},"45":{},"60":{},"61":{},"78":{},"80":{},"84":{},"94":{},"98":{},"108":{},"123":{}},"component":{},"keyword":{}}],["simul",{"_index":2552,"title":{},"name":{},"text":{"47":{},"76":{},"119":{},"123":{}},"component":{},"keyword":{}}],["sing",{"_index":2814,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["singl",{"_index":825,"title":{},"name":{},"text":{"9":{},"12":{},"26":{},"42":{},"49":{},"56":{},"88":{},"98":{}},"component":{},"keyword":{}}],["singular",{"_index":2025,"title":{},"name":{},"text":{"31":{},"91":{}},"component":{},"keyword":{}}],["sink",{"_index":4130,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["site",{"_index":2776,"title":{},"name":{},"text":{"54":{}},"component":{},"keyword":{}}],["situat",{"_index":639,"title":{},"name":{},"text":{"8":{},"17":{},"20":{},"46":{},"60":{}},"component":{},"keyword":{}}],["size",{"_index":1253,"title":{},"name":{},"text":{"19":{},"29":{},"49":{},"60":{},"84":{},"88":{},"96":{},"99":{}},"component":{},"keyword":{}}],["size(variables.containerimagesnotverifi",{"_index":3601,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["size(variables.containers_without_liveness_prob",{"_index":1964,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["size(variables.initcontainerimagesnotverifi",{"_index":3608,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["skill",{"_index":302,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["skip",{"_index":1391,"title":{"24-1":{}},"name":{},"text":{"21":{},"31":{},"34":{},"40":{},"46":{},"48":{},"63":{},"76":{},"105":{}},"component":{},"keyword":{}}],["skopeo",{"_index":2214,"title":{},"name":{},"text":{"37":{},"52":{}},"component":{},"keyword":{}}],["slack",{"_index":74,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["sleep",{"_index":1766,"title":{},"name":{},"text":{"27":{},"38":{}},"component":{},"keyword":{}}],["slices.contains(settings.validact",{"_index":3946,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["slices.contains(settings.validresourc",{"_index":3948,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["slices.contains(settings.validus",{"_index":3944,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["slightli",{"_index":3919,"title":{},"name":{},"text":{"104":{},"119":{}},"component":{},"keyword":{}}],["slog",{"_index":4128,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["slog::{info",{"_index":4137,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["slog::{o",{"_index":4132,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["slow",{"_index":1282,"title":{},"name":{},"text":{"19":{},"26":{},"38":{},"68":{}},"component":{},"keyword":{}}],["slow/buggi",{"_index":2256,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["slower",{"_index":2156,"title":{},"name":{},"text":{"34":{},"99":{}},"component":{},"keyword":{}}],["slsa",{"_index":228,"title":{},"name":{},"text":{"4":{},"32":{},"45":{}},"component":{},"keyword":{}}],["small",{"_index":2787,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["smaller",{"_index":967,"title":{},"name":{},"text":{"12":{},"56":{},"96":{}},"component":{},"keyword":{}}],["sniff",{"_index":2324,"title":{"41-21":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["snip",{"_index":2507,"title":{},"name":{},"text":{"45":{},"76":{}},"component":{},"keyword":{}}],["snippet",{"_index":1078,"title":{},"name":{},"text":{"14":{},"21":{},"43":{},"60":{}},"component":{},"keyword":{}}],["soft",{"_index":1686,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["softwar",{"_index":232,"title":{},"name":{},"text":{"4":{},"41":{},"45":{},"60":{}},"component":{},"keyword":{}}],["sole",{"_index":622,"title":{},"name":{},"text":{"8":{},"16":{}},"component":{},"keyword":{}}],["solut",{"_index":618,"title":{"8-4":{},"13-3":{},"13-5":{}},"name":{},"text":{"8":{},"13":{},"101":{},"106":{}},"component":{},"keyword":{}}],["some(\"cannot",{"_index":4162,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["some(\"invalid",{"_index":4058,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["some(\"thi",{"_index":4169,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["some(format!(\"pod",{"_index":4064,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["some(new_annot",{"_index":4106,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["some_resource_nam",{"_index":4138,"title":{},"name":{},"text":{"113":{}},"component":{},"keyword":{}}],["someon",{"_index":361,"title":{},"name":{},"text":{"6":{},"75":{}},"component":{},"keyword":{}}],["someth",{"_index":1852,"title":{},"name":{},"text":{"27":{},"49":{},"86":{},"99":{},"101":{},"106":{},"109":{},"111":{},"112":{}},"component":{},"keyword":{}}],["sometim",{"_index":1578,"title":{},"name":{},"text":{"24":{},"49":{}},"component":{},"keyword":{}}],["soon",{"_index":34,"title":{},"name":{},"text":{"1":{},"47":{}},"component":{},"keyword":{}}],["sort",{"_index":2529,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["sortabl",{"_index":3160,"title":{},"name":{},"text":{"67":{}},"component":{},"keyword":{}}],["sourc",{"_index":197,"title":{"40-2":{},"40-3":{},"57-2":{}},"name":{},"text":{"4":{},"5":{},"12":{},"16":{},"21":{},"29":{},"34":{},"39":{},"40":{},"44":{},"48":{},"49":{},"51":{},"52":{},"60":{},"65":{},"71":{},"102":{},"125":{}},"component":{},"keyword":{}}],["source_author",{"_index":2092,"title":{},"name":{},"text":{"31":{},"40":{}},"component":{},"keyword":{}}],["sourceauthor",{"_index":2089,"title":{},"name":{},"text":{"31":{},"57":{}},"component":{},"keyword":{}}],["sources.yaml",{"_index":1234,"title":{"40":{},"18-1":{},"40-1":{}},"name":{},"text":{"18":{},"31":{},"40":{},"51":{}},"component":{},"keyword":{"40":{}}}],["sources.yml",{"_index":2695,"title":{},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["sources_path",{"_index":2284,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["sources_yaml",{"_index":2287,"title":{},"name":{"40":{}},"text":{},"component":{},"keyword":{}}],["space",{"_index":4143,"title":{},"name":{},"text":{"114":{}},"component":{},"keyword":{}}],["spawn",{"_index":840,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["spec",{"_index":466,"title":{},"name":{"72":{}},"text":{"7":{},"11":{},"13":{},"14":{},"16":{},"18":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"38":{},"47":{},"51":{},"52":{},"53":{},"57":{},"58":{},"60":{},"64":{},"66":{},"68":{},"71":{},"75":{},"78":{},"93":{},"94":{},"95":{},"97":{},"109":{},"112":{},"121":{},"125":{}},"component":{},"keyword":{}}],["spec.affin",{"_index":1696,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["spec.affinity.nodeaffin",{"_index":1684,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["spec.affinity.podaffin",{"_index":1685,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["spec.auditannot",{"_index":3547,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["spec.backgroundaudit",{"_index":2409,"title":{},"name":{},"text":{"42":{},"46":{}},"component":{},"keyword":{}}],["spec.containers[].securitycontext",{"_index":1041,"title":{},"name":{},"text":{"13":{},"23":{}},"component":{},"keyword":{}}],["spec.contextawareresourc",{"_index":2937,"title":{},"name":{},"text":{"61":{},"76":{},"94":{}},"component":{},"keyword":{}}],["spec.express",{"_index":1596,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["spec.imagepullsecret",{"_index":2747,"title":{},"name":{},"text":{"53":{},"58":{}},"component":{},"keyword":{}}],["spec.insecuresourc",{"_index":2288,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["spec.limit",{"_index":1705,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["spec.maxunavail",{"_index":1676,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["spec.minavail",{"_index":1675,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["spec.mod",{"_index":2197,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["spec.namespaceselector",{"_index":1570,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["spec.paramkind",{"_index":3530,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["spec.paramref",{"_index":3546,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["spec.polici",{"_index":1087,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["spec.policies.reject_latest",{"_index":1119,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["spec.policies.signed_by_bob",{"_index":1118,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["spec.request",{"_index":1706,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["spec.securitycontext",{"_index":1759,"title":{},"name":{},"text":{"27":{},"61":{}},"component":{},"keyword":{}}],["spec.set",{"_index":3525,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["spec.sourceauthor",{"_index":2289,"title":{},"name":{},"text":{"40":{},"57":{}},"component":{},"keyword":{}}],["spec.targets[0].rego",{"_index":1358,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["spec.timeoutevalsecond",{"_index":2231,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["spec.timeoutsecond",{"_index":2233,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["spec.validationact",{"_index":3548,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["special",{"_index":2222,"title":{},"name":{},"text":{"38":{},"41":{},"44":{},"103":{},"116":{}},"component":{},"keyword":{}}],["specif",{"_index":266,"title":{"72":{},"86":{},"24-1":{},"76-4":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"12":{},"14":{},"19":{},"21":{},"24":{},"26":{},"27":{},"28":{},"30":{},"31":{},"33":{},"34":{},"36":{},"37":{},"38":{},"41":{},"43":{},"44":{},"46":{},"48":{},"49":{},"51":{},"52":{},"56":{},"57":{},"60":{},"61":{},"63":{},"64":{},"65":{},"68":{},"69":{},"71":{},"74":{},"76":{},"78":{},"82":{},"87":{},"88":{},"94":{},"97":{},"105":{},"106":{},"115":{},"117":{},"122":{},"126":{}},"component":{},"keyword":{"72":{},"73":{},"74":{},"75":{},"76":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{}}}],["specifi",{"_index":497,"title":{"82-3":{},"82-4":{}},"name":{},"text":{"7":{},"9":{},"14":{},"21":{},"23":{},"26":{},"27":{},"31":{},"34":{},"36":{},"40":{},"43":{},"46":{},"49":{},"51":{},"52":{},"57":{},"60":{},"61":{},"64":{},"68":{},"74":{},"78":{},"82":{},"87":{},"99":{},"104":{},"110":{},"117":{},"125":{}},"component":{},"keyword":{}}],["speed",{"_index":3271,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["split",{"_index":1002,"title":{},"name":{},"text":{"13":{},"26":{}},"component":{},"keyword":{}}],["spoof",{"_index":2329,"title":{"41-27":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["spread",{"_index":1698,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["sprecif",{"_index":3191,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["sprintf(\"us",{"_index":4280,"title":{},"name":{},"text":{"126":{}},"component":{},"keyword":{}}],["sprintf(\"you",{"_index":1355,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["squat",{"_index":2426,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["src",{"_index":3654,"title":{},"name":{},"text":{"97":{},"105":{}},"component":{},"keyword":{}}],["src/lib.r",{"_index":4040,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["src/lib.rs:98:9",{"_index":4117,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["src/settings.r",{"_index":4014,"title":{},"name":{},"text":{"110":{}},"component":{},"keyword":{}}],["ssac",{"_index":195,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["ssh",{"_index":2341,"title":{"41-52":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["stabil",{"_index":748,"title":{},"name":{},"text":{"9":{},"19":{},"26":{},"30":{}},"component":{},"keyword":{}}],["stabl",{"_index":1915,"title":{},"name":{},"text":{"29":{},"33":{},"92":{}},"component":{},"keyword":{}}],["stack",{"_index":168,"title":{"26":{},"9-9":{},"42-1":{},"42-2":{},"62-6":{},"62-8":{},"66-5":{}},"name":{},"text":{"3":{},"4":{},"7":{},"8":{},"9":{},"10":{},"17":{},"20":{},"23":{},"26":{},"33":{},"41":{},"42":{},"45":{},"49":{},"51":{},"52":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"71":{}},"component":{},"keyword":{}}],["stage",{"_index":2015,"title":{},"name":{},"text":{"31":{},"64":{}},"component":{},"keyword":{}}],["staging\"<br",{"_index":2019,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["stale",{"_index":3263,"title":{},"name":{},"text":{"76":{},"87":{}},"component":{},"keyword":{}}],["standalon",{"_index":1861,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["standard",{"_index":213,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"15":{},"18":{},"23":{},"27":{},"28":{},"32":{},"45":{},"51":{},"52":{},"61":{},"77":{},"78":{},"91":{},"92":{},"98":{},"116":{}},"component":{},"keyword":{}}],["start",{"_index":259,"title":{"7":{},"63":{},"54-1":{}},"name":{"7":{}},"text":{"4":{},"5":{},"9":{},"10":{},"14":{},"17":{},"21":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"38":{},"42":{},"46":{},"52":{},"60":{},"63":{},"64":{},"70":{},"71":{},"73":{},"89":{},"94":{},"95":{},"96":{},"98":{},"99":{},"105":{},"106":{},"111":{},"112":{},"113":{},"115":{},"116":{},"117":{},"118":{},"122":{},"123":{},"126":{}},"component":{},"keyword":{"7":{}}}],["startswith(github.ref",{"_index":2832,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["startup",{"_index":835,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["starv",{"_index":1717,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["state",{"_index":275,"title":{"80-1":{},"84-1":{},"85-1":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"15":{},"17":{},"23":{},"31":{},"46":{},"49":{},"62":{},"65":{},"74":{},"76":{},"78":{},"84":{},"85":{},"87":{}},"component":{},"keyword":{}}],["statefulset",{"_index":1601,"title":{},"name":{},"text":{"24":{},"38":{},"53":{}},"component":{},"keyword":{}}],["statement",{"_index":1083,"title":{},"name":{},"text":{"14":{},"36":{},"99":{},"112":{},"123":{}},"component":{},"keyword":{}}],["stateorprovincenam",{"_index":2964,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["static",{"_index":1913,"title":{},"name":{},"text":{"29":{},"54":{},"113":{}},"component":{},"keyword":{}}],["statu",{"_index":566,"title":{},"name":{},"text":{"7":{},"14":{},"17":{},"21":{},"23":{},"24":{},"25":{},"29":{},"49":{},"53":{},"78":{},"96":{},"97":{},"99":{},"100":{},"105":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["status.condit",{"_index":1518,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["status.containerstatus",{"_index":1538,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["status.details.caus",{"_index":1096,"title":{},"name":{},"text":{"14":{},"31":{}},"component":{},"keyword":{}}],["std::collections::hashset",{"_index":4073,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["stderr",{"_index":2268,"title":{},"name":{},"text":{"39":{},"116":{}},"component":{},"keyword":{}}],["stdin",{"_index":428,"title":{},"name":{},"text":{"7":{},"21":{},"27":{},"77":{},"78":{},"93":{},"94":{},"95":{},"116":{}},"component":{},"keyword":{}}],["stdlib",{"_index":3637,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["stdout",{"_index":2269,"title":{},"name":{},"text":{"39":{},"112":{},"116":{}},"component":{},"keyword":{}}],["steal",{"_index":2328,"title":{"41-27":{}},"name":{},"text":{},"component":{},"keyword":{}}],["step",{"_index":1140,"title":{"21-3":{},"21-4":{},"21-7":{},"21-8":{},"29-8":{},"30-1":{},"44-2":{},"67-8":{}},"name":{},"text":{"14":{},"21":{},"29":{},"30":{},"31":{},"44":{},"49":{},"60":{},"62":{},"63":{},"64":{},"65":{},"67":{},"68":{},"69":{},"71":{},"78":{},"99":{},"100":{},"102":{}},"component":{},"keyword":{}}],["still",{"_index":593,"title":{},"name":{},"text":{"7":{},"13":{},"23":{},"31":{},"33":{},"38":{},"43":{},"60":{},"76":{},"96":{},"107":{},"112":{}},"component":{},"keyword":{}}],["stop",{"_index":1293,"title":{},"name":{},"text":{"20":{},"40":{},"41":{},"107":{}},"component":{},"keyword":{}}],["storag",{"_index":2203,"title":{},"name":{},"text":{"37":{},"63":{}},"component":{},"keyword":{}}],["storageclass",{"_index":3057,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["store",{"_index":136,"title":{},"name":{},"text":{"3":{},"9":{},"12":{},"16":{},"17":{},"18":{},"27":{},"28":{},"29":{},"31":{},"34":{},"37":{},"39":{},"48":{},"49":{},"50":{},"51":{},"52":{},"57":{},"60":{},"62":{},"64":{},"66":{},"69":{},"76":{},"87":{},"88":{},"98":{},"121":{},"125":{}},"component":{},"keyword":{}}],["store:/registri",{"_index":1878,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["straightforward",{"_index":4127,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["streamlin",{"_index":742,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["strictli",{"_index":2352,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["string",{"_index":920,"title":{"41-40":{}},"name":{},"text":{"11":{},"21":{},"31":{},"34":{},"40":{},"41":{},"57":{},"73":{},"74":{},"75":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"98":{},"99":{},"105":{},"110":{},"115":{},"117":{},"126":{}},"component":{},"keyword":{}}],["string(variables.maxreplica",{"_index":3539,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["string::from(\"ingress",{"_index":4090,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["string::from(\"kubewarden.policy.demo/inspect",{"_index":4103,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["string::from(\"pod",{"_index":4078,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["string::from(\"tru",{"_index":4104,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["string::from(request_fil",{"_index":4080,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["string_mask",{"_index":2958,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["string{\"foo",{"_index":3747,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["strip",{"_index":3360,"title":{},"name":{},"text":{"84":{}},"component":{},"keyword":{}}],["strive",{"_index":2928,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["strong",{"_index":3510,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["struct",{"_index":3359,"title":{},"name":{},"text":{"84":{},"98":{},"99":{},"105":{},"110":{},"111":{},"115":{},"117":{}},"component":{},"keyword":{}}],["structur",{"_index":1322,"title":{"110-1":{}},"name":{},"text":{"21":{},"40":{},"48":{},"60":{},"73":{},"74":{},"75":{},"96":{},"98":{},"101":{},"105":{},"110":{},"113":{},"120":{},"124":{}},"component":{},"keyword":{}}],["stuck",{"_index":996,"title":{"13-4":{}},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["studi",{"_index":711,"title":{},"name":{},"text":{},"component":{},"keyword":{"8":{}}}],["style",{"_index":4276,"title":{},"name":{},"text":{"125":{}},"component":{},"keyword":{}}],["sub",{"_index":1916,"title":{},"name":{},"text":{"29":{},"43":{},"52":{},"60":{},"109":{},"116":{}},"component":{},"keyword":{}}],["subchart",{"_index":1219,"title":{},"name":{},"text":{"17":{},"33":{},"48":{},"51":{}},"component":{},"keyword":{}}],["subcommand",{"_index":1918,"title":{"34-3":{},"34-40":{},"39-3":{}},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["subcommand(",{"_index":1920,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["subgraph",{"_index":788,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["subject",{"_index":1400,"title":{},"name":{},"text":{"21":{},"38":{},"43":{},"45":{},"60":{},"87":{}},"component":{},"keyword":{}}],["subjectaccessreview",{"_index":3237,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["subjectaltnam",{"_index":2991,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["subjectaltname=dns:$fqdn",{"_index":2998,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["subjectkeyidentifi",{"_index":2971,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["submit",{"_index":2773,"title":{},"name":{},"text":{"54":{},"56":{}},"component":{},"keyword":{}}],["subpag",{"_index":2930,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["subpath",{"_index":1888,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["subresourc",{"_index":3230,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["subset",{"_index":3362,"title":{},"name":{},"text":{"85":{}},"component":{},"keyword":{}}],["substanti",{"_index":1692,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["substitut",{"_index":1905,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["succe",{"_index":1034,"title":{},"name":{},"text":{"13":{},"78":{},"94":{}},"component":{},"keyword":{}}],["success",{"_index":2479,"title":{},"name":{},"text":{"44":{},"76":{},"86":{},"87":{},"88":{}},"component":{},"keyword":{}}],["successfulli",{"_index":585,"title":{},"name":{},"text":{"7":{},"12":{},"19":{},"21":{},"43":{},"44":{},"46":{},"60":{},"64":{},"121":{},"125":{}},"component":{},"keyword":{}}],["such",{"_index":214,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"12":{},"13":{},"15":{},"17":{},"21":{},"34":{},"41":{},"44":{},"45":{},"46":{},"64":{},"71":{},"76":{},"82":{},"88":{},"92":{},"96":{},"101":{},"113":{}},"component":{},"keyword":{}}],["sudo",{"_index":2945,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["suffer",{"_index":4190,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["suffici",{"_index":457,"title":{},"name":{},"text":{"7":{},"26":{},"41":{}},"component":{},"keyword":{}}],["suggest",{"_index":2360,"title":{"56":{},"56-2":{}},"name":{"56":{}},"text":{"41":{},"54":{},"56":{},"96":{}},"component":{},"keyword":{"56":{}}}],["suit",{"_index":2668,"title":{},"name":{},"text":{"49":{},"77":{}},"component":{},"keyword":{}}],["suitabl",{"_index":3082,"title":{},"name":{},"text":{"64":{},"68":{}},"component":{},"keyword":{}}],["summar",{"_index":3640,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["summari",{"_index":1379,"title":{"23-2":{}},"name":{},"text":{"21":{},"48":{}},"component":{},"keyword":{}}],["super",{"_index":4023,"title":{},"name":{},"text":{"110":{},"111":{}},"component":{},"keyword":{}}],["superset",{"_index":3523,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["supplement",{"_index":1756,"title":{},"name":{},"text":{"27":{},"92":{}},"component":{},"keyword":{}}],["supplemental_group",{"_index":1030,"title":{},"name":{},"text":{"13":{},"23":{},"27":{}},"component":{},"keyword":{}}],["supplementalgroup",{"_index":1740,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["suppli",{"_index":229,"title":{"60":{}},"name":{"60":{}},"text":{"4":{},"43":{},"45":{},"60":{},"81":{},"87":{}},"component":{},"keyword":{"60":{}}}],["support",{"_index":100,"title":{"2":{},"37":{},"107":{},"118":{},"47-1":{},"76-1":{}},"name":{"37":{},"107":{}},"text":{"2":{},"8":{},"12":{},"14":{},"15":{},"21":{},"24":{},"28":{},"34":{},"37":{},"41":{},"42":{},"45":{},"46":{},"47":{},"49":{},"50":{},"51":{},"52":{},"53":{},"58":{},"60":{},"64":{},"71":{},"76":{},"80":{},"81":{},"84":{},"87":{},"92":{},"94":{},"96":{},"101":{},"106":{},"107":{},"109":{},"113":{},"116":{},"118":{},"122":{}},"component":{},"keyword":{"2":{},"28":{},"32":{},"37":{},"42":{},"107":{}}}],["support/io.kubewarden.kubewarden/sources.yaml",{"_index":2293,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["supported|1.2.0(1.2.0",{"_index":2398,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["sure",{"_index":1167,"title":{},"name":{},"text":{"15":{},"17":{},"21":{},"62":{},"64":{},"65":{},"67":{},"71":{},"78":{},"79":{},"99":{},"100":{},"105":{},"110":{}},"component":{},"keyword":{}}],["surfac",{"_index":3183,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["surnam",{"_index":951,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["suse",{"_index":2,"title":{"4":{},"8":{},"9":{},"4-1":{},"6-1":{},"9-9":{},"9-10":{},"9-16":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"8":{},"9":{}},"component":{},"keyword":{"7":{}}}],["svc/prometheu",{"_index":3111,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{},"keyword":{}}],["swift",{"_index":3351,"title":{"84":{}},"name":{"84":{}},"text":{"84":{}},"component":{},"keyword":{"84":{}}}],["swiftwasm",{"_index":3356,"title":{},"name":{},"text":{"84":{}},"component":{},"keyword":{}}],["switch",{"_index":2201,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["symbol",{"_index":2556,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["sync",{"_index":1198,"title":{"44-3":{}},"name":{},"text":{"16":{},"52":{}},"component":{},"keyword":{}}],["synchron",{"_index":866,"title":{},"name":{},"text":{"9":{},"49":{},"52":{},"113":{}},"component":{},"keyword":{}}],["syncopt",{"_index":1197,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["syncpolici",{"_index":1192,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["syntax",{"_index":1375,"title":{},"name":{},"text":{"21":{},"54":{}},"component":{},"keyword":{}}],["synthet",{"_index":2544,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["sys_tim",{"_index":3257,"title":{},"name":{},"text":{"75":{}},"component":{},"keyword":{}}],["sysctl",{"_index":1806,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["system",{"_index":162,"title":{"8-4":{},"41-55":{}},"name":{},"text":{"3":{},"4":{},"7":{},"8":{},"9":{},"11":{},"13":{},"14":{},"16":{},"18":{},"22":{},"24":{},"26":{},"31":{},"34":{},"41":{},"49":{},"57":{},"67":{},"68":{},"77":{},"78":{},"84":{},"91":{},"96":{},"102":{},"108":{},"114":{},"116":{}},"component":{},"keyword":{}}],["system:authent",{"_index":3313,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["system:authenticated\",\"mi",{"_index":3236,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["system’",{"_index":1236,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["t",{"_index":1324,"title":{},"name":{},"text":{"21":{},"29":{},"34":{},"94":{},"95":{},"120":{},"124":{}},"component":{},"keyword":{}}],["t.error(\"didn't",{"_index":3753,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["t.error(\"expect",{"_index":3769,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["t.errorf(\"didn't",{"_index":3759,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["t.errorf(\"expect",{"_index":3756,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["t.errorf(\"miss",{"_index":3751,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["t.errorf(\"unexpect",{"_index":3745,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["tab",{"_index":48,"title":{},"name":{},"text":{"1":{},"56":{},"67":{},"68":{}},"component":{},"keyword":{}}],["tabl",{"_index":1735,"title":{},"name":{},"text":{"27":{},"49":{},"67":{}},"component":{},"keyword":{}}],["tag",{"_index":476,"title":{},"name":{},"text":{"7":{},"14":{},"25":{},"41":{},"42":{},"44":{},"45":{},"56":{},"60":{},"82":{},"87":{},"88":{},"102":{},"105":{},"121":{},"125":{}},"component":{},"keyword":{}}],["tailor",{"_index":765,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["taint",{"_index":1623,"title":{},"name":{},"text":{"26":{},"31":{}},"component":{},"keyword":{}}],["take",{"_index":264,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"14":{},"16":{},"19":{},"21":{},"27":{},"34":{},"38":{},"42":{},"44":{},"51":{},"52":{},"60":{},"73":{},"76":{},"84":{},"87":{},"94":{},"98":{},"99":{},"104":{},"106":{},"112":{},"116":{},"119":{},"125":{}},"component":{},"keyword":{}}],["taken",{"_index":3529,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["talk",{"_index":73,"title":{},"name":{},"text":{"1":{},"91":{}},"component":{},"keyword":{}}],["tamper",{"_index":3381,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["tar",{"_index":1329,"title":{},"name":{},"text":{"21":{},"45":{},"120":{},"124":{}},"component":{},"keyword":{}}],["tar.gz",{"_index":2129,"title":{},"name":{},"text":{"34":{},"51":{},"102":{}},"component":{},"keyword":{}}],["tarbal",{"_index":2177,"title":{"52-2":{},"52-3":{}},"name":{},"text":{"34":{},"45":{},"51":{}},"component":{},"keyword":{}}],["target",{"_index":133,"title":{"82-5":{}},"name":{},"text":{"3":{},"4":{},"7":{},"8":{},"12":{},"21":{},"24":{},"34":{},"39":{},"49":{},"65":{},"81":{},"82":{},"83":{},"85":{},"94":{},"97":{},"101":{},"102":{},"105":{},"107":{},"108":{},"114":{},"116":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{}},"component":{},"keyword":{}}],["target(",{"_index":4037,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["target/debug/deps/demo",{"_index":4041,"title":{},"name":{},"text":{"110":{},"111":{}},"component":{},"keyword":{}}],["target/debug/deps/demo_a",{"_index":4112,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["target/tini",{"_index":2148,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["target=wasi",{"_index":3656,"title":{},"name":{},"text":{"97":{},"105":{}},"component":{},"keyword":{}}],["targetport",{"_index":1890,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["targetrevis",{"_index":1188,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["task",{"_index":323,"title":{"29":{}},"name":{"29":{}},"text":{"5":{},"8":{},"29":{},"56":{},"79":{},"85":{},"90":{},"102":{},"114":{}},"component":{},"keyword":{}}],["tc",{"_index":4077,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["tc.eval(validate).unwrap",{"_index":4082,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["tc.name",{"_index":4084,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["tcp",{"_index":1889,"title":{},"name":{},"text":{"28":{},"71":{}},"component":{},"keyword":{}}],["team",{"_index":5,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"14":{},"20":{},"27":{},"41":{},"42":{},"45":{},"56":{},"64":{},"67":{},"81":{},"84":{},"87":{},"99":{},"100":{},"107":{},"116":{}},"component":{},"keyword":{}}],["technic",{"_index":2792,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["telemetri",{"_index":703,"title":{"63":{},"68-4":{}},"name":{},"text":{"8":{},"31":{},"58":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"92":{}},"component":{},"keyword":{"63":{}}}],["telemetry.github.io/opentelemetri",{"_index":3074,"title":{},"name":{},"text":{"63":{},"66":{}},"component":{},"keyword":{}}],["telemetry/opentelemetri",{"_index":2111,"title":{},"name":{},"text":{"33":{},"63":{},"66":{}},"component":{},"keyword":{}}],["tell",{"_index":3332,"title":{},"name":{},"text":{"81":{},"124":{}},"component":{},"keyword":{}}],["templat",{"_index":1176,"title":{"80-2":{},"116-9":{}},"name":{},"text":{"16":{},"21":{},"23":{},"28":{},"42":{},"44":{},"45":{},"60":{},"64":{},"80":{},"84":{},"93":{},"96":{},"97":{},"98":{},"99":{},"104":{},"105":{},"108":{},"109":{},"115":{},"116":{},"117":{},"119":{},"123":{},"126":{}},"component":{},"keyword":{}}],["templates.gatekeeper.sh/v1",{"_index":1341,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["ten",{"_index":873,"title":{},"name":{},"text":{"10":{},"19":{}},"component":{},"keyword":{}}],["tenant",{"_index":465,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"36":{},"49":{},"51":{},"52":{}},"component":{},"keyword":{}}],["term",{"_index":722,"title":{},"name":{},"text":{"9":{},"17":{},"122":{}},"component":{},"keyword":{}}],["termin",{"_index":2227,"title":{},"name":{},"text":{"38":{},"51":{},"92":{}},"component":{},"keyword":{}}],["test",{"_index":146,"title":{"77":{},"78":{},"79":{},"100":{},"21-7":{},"29-1":{},"76-6":{},"77-1":{},"78-1":{},"78-3":{},"79-1":{},"97-2":{},"98-3":{},"99-2":{},"99-3":{},"100-2":{},"102-2":{},"104-2":{},"109-2":{},"110-3":{},"111-1":{},"112-2":{}},"name":{"100":{}},"text":{"3":{},"4":{},"7":{},"8":{},"21":{},"27":{},"29":{},"32":{},"33":{},"34":{},"41":{},"42":{},"43":{},"49":{},"53":{},"60":{},"63":{},"76":{},"77":{},"78":{},"79":{},"85":{},"87":{},"92":{},"93":{},"94":{},"96":{},"97":{},"98":{},"99":{},"100":{},"102":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{},"114":{},"116":{}},"component":{},"keyword":{"77":{},"78":{},"100":{}}}],["test.example.com",{"_index":3540,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["test_accept",{"_index":1405,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["test_data",{"_index":4071,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["test_data/accept_deploy_request.json",{"_index":1413,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["test_data/ingress",{"_index":3301,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["test_data/ingress_creation.json",{"_index":4089,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["test_data/pod.json",{"_index":3861,"title":{},"name":{},"text":{"100":{}},"component":{},"keyword":{}}],["test_data/pod_creation.json",{"_index":4076,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["test_data/reject_deploy_request.json",{"_index":1419,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["test_data/request.json",{"_index":3951,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["test_data/settings.json",{"_index":1412,"title":{},"name":{},"text":{"21":{},"105":{}},"component":{},"keyword":{}}],["test_reject",{"_index":1408,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["testacceptvalidset",{"_index":3954,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["testapprov",{"_index":3674,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["testapprovefixtur",{"_index":3675,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["testcas",{"_index":3828,"title":{},"name":{},"text":{"99":{},"111":{},"112":{}},"component":{},"keyword":{}}],["testcase.constrainedlabel",{"_index":3830,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["testcase.deniedlabel",{"_index":3829,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["testcase.expectedisvalid",{"_index":3835,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["testcase.podlabel",{"_index":3832,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["testdetectnotvalidsettingsduetobrokenregexp",{"_index":3777,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["testdetectnotvalidsettingsduetobrokenregexp(t",{"_index":3768,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["testdetectnotvalidsettingsduetoconflictinglabel",{"_index":3778,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["testdetectnotvalidsettingsduetoconflictinglabels(t",{"_index":3771,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["testdetectvalidset",{"_index":3776,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["testdetectvalidsettings(t",{"_index":3760,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["testemptysettingsleadstoapprov",{"_index":3670,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["testing.registry.svc.lan/busybox:latest",{"_index":1106,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["testing.t",{"_index":3742,"title":{},"name":{},"text":{"98":{},"99":{}},"component":{},"keyword":{}}],["testisnamedeni",{"_index":3669,"title":{},"name":{},"text":{"97":{},"98":{},"99":{}},"component":{},"keyword":{}}],["testparsesettingswithinvalidregexp",{"_index":3775,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["testparsesettingswithinvalidregexp(t",{"_index":3758,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["testparsevalidset",{"_index":3774,"title":{},"name":{},"text":{"98":{},"99":{},"104":{}},"component":{},"keyword":{}}],["testparsevalidsettings(t",{"_index":3741,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["testparsingsettingswithnovalueprovid",{"_index":3667,"title":{},"name":{},"text":{"97":{},"99":{}},"component":{},"keyword":{}}],["testrejectionbecausenameisdeni",{"_index":3676,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["testrejectsettingswithemptyvalidact",{"_index":3956,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["testrejectsettingswithemptyvalidresourc",{"_index":3957,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["testrejectsettingswithemptyvalidus",{"_index":3955,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["tests::accept_pod_with_valid_nam",{"_index":4006,"title":{},"name":{},"text":{"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["tests::accept_request_with_non_pod_resourc",{"_index":4005,"title":{},"name":{},"text":{"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["tests::reject_pod_with_invalid_nam",{"_index":4007,"title":{},"name":{},"text":{"109":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["testvalidatelabel",{"_index":3842,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["testvalidatelabel(t",{"_index":3821,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["testvalidaterequestaccept",{"_index":3958,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["testvalidaterequestreject",{"_index":3959,"title":{},"name":{},"text":{"105":{}},"component":{},"keyword":{}}],["text",{"_index":961,"title":{},"name":{},"text":{"12":{},"34":{},"39":{},"49":{},"62":{}},"component":{},"keyword":{}}],["textual",{"_index":3251,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["thank",{"_index":3527,"title":{},"name":{},"text":{"92":{}},"component":{},"keyword":{}}],["that’",{"_index":1537,"title":{},"name":{},"text":{"23":{},"38":{},"81":{},"84":{},"99":{},"111":{},"112":{},"124":{}},"component":{},"keyword":{}}],["theme",{"_index":2386,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["themselv",{"_index":3382,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["therefor",{"_index":1212,"title":{},"name":{},"text":{"17":{},"21":{},"26":{},"31":{},"36":{},"42":{},"45":{},"48":{},"51":{},"52":{},"71":{},"82":{},"87":{}},"component":{},"keyword":{}}],["there’",{"_index":1301,"title":{},"name":{},"text":{"20":{},"32":{},"38":{},"39":{},"42":{},"46":{},"49":{},"85":{},"92":{},"94":{},"96":{},"99":{},"103":{}},"component":{},"keyword":{}}],["they’r",{"_index":656,"title":{},"name":{},"text":{"8":{},"10":{},"21":{},"23":{},"29":{},"32":{},"49":{},"66":{},"82":{},"107":{},"123":{}},"component":{},"keyword":{}}],["think",{"_index":2786,"title":{},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["third",{"_index":1015,"title":{},"name":{},"text":{"13":{},"49":{}},"component":{},"keyword":{}}],["those",{"_index":132,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"13":{},"15":{},"17":{},"36":{},"40":{},"41":{},"45":{},"46":{},"52":{},"58":{},"60":{},"61":{},"71":{},"74":{},"87":{},"90":{},"94":{},"106":{},"113":{}},"component":{},"keyword":{}}],["though",{"_index":2371,"title":{},"name":{},"text":{"41":{},"42":{},"106":{},"116":{}},"component":{},"keyword":{}}],["thousand",{"_index":1290,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["thread",{"_index":843,"title":{},"name":{},"text":{"9":{},"39":{},"98":{},"112":{}},"component":{},"keyword":{}}],["threat",{"_index":2316,"title":{"41":{},"41-1":{},"41-2":{},"41-5":{},"41-8":{},"41-11":{},"41-15":{},"41-18":{},"41-21":{},"41-24":{},"41-27":{},"41-30":{},"41-33":{},"41-37":{},"41-40":{},"41-44":{},"41-47":{},"41-50":{},"41-52":{},"41-55":{},"41-58":{},"41-59":{}},"name":{"41":{}},"text":{"41":{},"61":{}},"component":{},"keyword":{"41":{}}}],["three",{"_index":458,"title":{},"name":{},"text":{"7":{},"14":{},"23":{},"111":{},"112":{}},"component":{},"keyword":{}}],["through",{"_index":47,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"13":{},"58":{},"60":{},"65":{},"67":{},"74":{},"81":{},"100":{},"103":{},"106":{},"108":{},"111":{},"116":{}},"component":{},"keyword":{}}],["throughout",{"_index":198,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["throughput",{"_index":663,"title":{},"name":{},"text":{"8":{},"19":{}},"component":{},"keyword":{}}],["thu",{"_index":746,"title":{},"name":{},"text":{"9":{},"20":{},"114":{}},"component":{},"keyword":{}}],["ti",{"_index":3174,"title":{},"name":{},"text":{"69":{},"95":{}},"component":{},"keyword":{}}],["time",{"_index":227,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"23":{},"24":{},"26":{},"28":{},"31":{},"33":{},"34":{},"38":{},"39":{},"41":{},"44":{},"46":{},"49":{},"53":{},"60":{},"61":{},"63":{},"64":{},"65":{},"73":{},"76":{},"85":{},"87":{},"88":{},"90":{},"92":{},"98":{},"99":{},"100":{},"111":{},"112":{},"114":{},"116":{},"119":{},"123":{},"125":{}},"component":{},"keyword":{}}],["timeout",{"_index":1278,"title":{"38":{},"38-6":{},"38-7":{},"38-8":{},"41-5":{}},"name":{"38":{}},"text":{"19":{},"26":{},"31":{},"38":{},"39":{},"41":{},"53":{},"93":{}},"component":{},"keyword":{"38":{}}}],["timeoutevalsecond",{"_index":2072,"title":{},"name":{},"text":{"31":{},"38":{}},"component":{},"keyword":{}}],["timeoutsecond",{"_index":2067,"title":{},"name":{},"text":{"31":{},"38":{},"53":{}},"component":{},"keyword":{}}],["timestamp",{"_index":1336,"title":{},"name":{},"text":{"21":{},"48":{}},"component":{},"keyword":{}}],["tinygo",{"_index":3615,"title":{"96-1":{},"96-3":{}},"name":{},"text":{"96":{},"97":{},"100":{},"105":{},"116":{}},"component":{},"keyword":{}}],["tinygo/tinygo",{"_index":3658,"title":{},"name":{},"text":{"97":{}},"component":{},"keyword":{}}],["tinygo/tinygo:0.30.0",{"_index":3655,"title":{},"name":{},"text":{"97":{},"105":{}},"component":{},"keyword":{}}],["tinygo’",{"_index":3632,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["tip",{"_index":1247,"title":{},"name":{},"text":{"19":{},"61":{}},"component":{},"keyword":{}}],["titl",{"_index":977,"title":{},"name":{},"text":{"12":{},"29":{},"34":{},"60":{}},"component":{},"keyword":{}}],["title=\"vap.yml",{"_index":1955,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["tl",{"_index":815,"title":{"62":{}},"name":{},"text":{"9":{},"18":{},"41":{},"51":{},"52":{},"57":{},"64":{},"66":{},"69":{},"71":{}},"component":{},"keyword":{}}],["tlog",{"_index":2823,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["tls.crt",{"_index":3153,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["tls.key",{"_index":3154,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["tmp/etc/ssl/certs/mi",{"_index":3142,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["tnmea7ix/stj5tfclleable4bnjosq4vnbhj",{"_index":2887,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["to",{"_index":271,"title":{},"name":{},"text":{"4":{},"5":{}},"component":{},"keyword":{}}],["toa",{"_index":2245,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["todo",{"_index":4055,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["togeth",{"_index":993,"title":{"13-4":{}},"name":{},"text":{"14":{},"23":{},"60":{},"71":{},"76":{},"94":{}},"component":{},"keyword":{}}],["token",{"_index":416,"title":{},"name":{},"text":{"7":{},"53":{},"60":{}},"component":{},"keyword":{}}],["toler",{"_index":625,"title":{"26-1":{},"26-2":{}},"name":{},"text":{"8":{},"26":{},"31":{}},"component":{},"keyword":{"26":{}}}],["took",{"_index":2558,"title":{},"name":{},"text":{"48":{},"53":{},"98":{}},"component":{},"keyword":{}}],["tool",{"_index":144,"title":{"8-3":{},"29-3":{},"37-3":{},"96-2":{}},"name":{},"text":{"3":{},"4":{},"6":{},"8":{},"15":{},"17":{},"21":{},"22":{},"27":{},"29":{},"30":{},"31":{},"32":{},"34":{},"37":{},"38":{},"41":{},"45":{},"46":{},"49":{},"52":{},"60":{},"64":{},"68":{},"69":{},"77":{},"84":{},"93":{},"96":{},"97":{},"100":{},"108":{},"119":{},"122":{},"123":{}},"component":{},"keyword":{}}],["toolchain",{"_index":291,"title":{},"name":{},"text":{"4":{},"12":{}},"component":{},"keyword":{}}],["top",{"_index":344,"title":{},"name":{},"text":{"5":{},"6":{},"56":{},"67":{},"87":{},"97":{}},"component":{},"keyword":{}}],["topic",{"_index":1310,"title":{},"name":{},"text":{"21":{},"49":{},"74":{},"79":{},"103":{}},"component":{},"keyword":{}}],["topology.kubernetes.io/zon",{"_index":1645,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["topologykey",{"_index":1644,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["tos—get",{"_index":322,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["touch",{"_index":1333,"title":{},"name":{},"text":{"21":{},"116":{}},"component":{},"keyword":{}}],["trace",{"_index":649,"title":{"64":{},"69":{},"33-1":{}},"name":{"64":{},"69":{}},"text":{"8":{},"14":{},"33":{},"36":{},"38":{},"39":{},"63":{},"64":{},"66":{},"67":{},"69":{},"92":{},"101":{}},"component":{},"keyword":{"64":{},"66":{},"69":{}}}],["track",{"_index":2109,"title":{},"name":{},"text":{"33":{},"44":{},"107":{},"116":{}},"component":{},"keyword":{}}],["trade",{"_index":2931,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["tradit",{"_index":303,"title":{},"name":{},"text":{"4":{},"38":{},"43":{},"45":{},"49":{},"76":{},"81":{},"86":{}},"component":{},"keyword":{}}],["traffic",{"_index":1716,"title":{"41-2":{},"41-21":{},"41-27":{},"71-1":{}},"name":{},"text":{"26":{},"41":{},"71":{}},"component":{},"keyword":{}}],["trait",{"_index":4013,"title":{},"name":{},"text":{"110":{},"115":{}},"component":{},"keyword":{}}],["transfer",{"_index":2711,"title":{"52-3":{}},"name":{},"text":{},"component":{},"keyword":{}}],["transient",{"_index":1149,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["transit",{"_index":1144,"title":{},"name":{},"text":{"15":{},"31":{}},"component":{},"keyword":{}}],["translat",{"_index":773,"title":{},"name":{},"text":{"9":{},"13":{},"21":{},"54":{}},"component":{},"keyword":{}}],["transpar",{"_index":38,"title":{},"name":{},"text":{"1":{},"4":{},"45":{}},"component":{},"keyword":{}}],["transport",{"_index":813,"title":{},"name":{},"text":{"9":{},"62":{}},"component":{},"keyword":{}}],["treat",{"_index":2243,"title":{},"name":{},"text":{"38":{},"57":{}},"component":{},"keyword":{}}],["tree",{"_index":4246,"title":{},"name":{},"text":{"120":{},"123":{},"124":{}},"component":{},"keyword":{}}],["tri",{"_index":331,"title":{},"name":{},"text":{"5":{},"7":{},"21":{},"27":{},"28":{},"40":{},"41":{},"60":{},"64":{},"75":{},"78":{},"95":{},"96":{},"99":{},"109":{},"124":{}},"component":{},"keyword":{}}],["trigger",{"_index":1209,"title":{"17-5":{}},"name":{},"text":{"17":{},"38":{},"70":{},"76":{},"94":{},"102":{}},"component":{},"keyword":{}}],["trivial",{"_index":3148,"title":{},"name":{},"text":{"66":{}},"component":{},"keyword":{}}],["true",{"_index":509,"title":{},"name":{},"text":{"7":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"31":{},"36":{},"38":{},"42":{},"44":{},"48":{},"52":{},"53":{},"60":{},"62":{},"64":{},"65":{},"66":{},"68":{},"69":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"82":{},"87":{},"88":{},"90":{},"93":{},"98":{},"99":{},"105":{},"111":{},"112":{},"117":{},"118":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["trust",{"_index":1057,"title":{"41-59":{}},"name":{},"text":{"14":{},"18":{},"25":{},"41":{},"43":{},"45":{},"57":{},"60":{},"87":{},"90":{},"95":{}},"component":{},"keyword":{}}],["tunabl",{"_index":2246,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["tune",{"_index":833,"title":{},"name":{},"text":{"9":{},"18":{},"19":{},"26":{},"38":{},"40":{},"61":{},"79":{}},"component":{},"keyword":{}}],["tupl",{"_index":3399,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["ture",{"_index":2224,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["turn",{"_index":2142,"title":{},"name":{},"text":{"34":{},"38":{},"56":{},"112":{}},"component":{},"keyword":{}}],["tutori",{"_index":268,"title":{"96-4":{}},"name":{},"text":{"4":{},"5":{},"7":{},"21":{},"32":{},"45":{},"61":{},"78":{},"93":{},"96":{},"97":{},"99":{},"100":{},"103":{},"105":{},"115":{},"119":{},"123":{},"126":{}},"component":{},"keyword":{}}],["tutorials—learn",{"_index":319,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["two",{"_index":938,"title":{"106-1":{}},"name":{},"text":{"12":{},"14":{},"19":{},"21":{},"25":{},"26":{},"29":{},"36":{},"38":{},"42":{},"43":{},"45":{},"46":{},"49":{},"60":{},"64":{},"65":{},"76":{},"79":{},"82":{},"96":{},"98":{},"99":{},"101":{},"105":{},"106":{},"112":{}},"component":{},"keyword":{}}],["ty92wyc0ptavhvioed47fgd6tnckf+92ajeajbfjlmcg/mwrh8t+gfhjeawwec9q",{"_index":2869,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["type",{"_index":498,"title":{"47-1":{},"49-1":{},"82-4":{},"82-5":{}},"name":{},"text":{"7":{},"8":{},"13":{},"21":{},"23":{},"24":{},"27":{},"28":{},"31":{},"32":{},"34":{},"35":{},"40":{},"43":{},"46":{},"49":{},"58":{},"60":{},"71":{},"74":{},"76":{},"81":{},"82":{},"85":{},"86":{},"87":{},"88":{},"91":{},"92":{},"95":{},"96":{},"98":{},"99":{},"104":{},"105":{},"111":{},"115":{},"117":{},"121":{},"125":{}},"component":{},"keyword":{}}],["type=tmpf",{"_index":1873,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["typescript",{"_index":3361,"title":{"85":{}},"name":{"85":{}},"text":{"85":{}},"component":{},"keyword":{"85":{}}}],["typic",{"_index":1275,"title":{},"name":{},"text":{"19":{},"49":{}},"component":{},"keyword":{}}],["typo",{"_index":2425,"title":{},"name":{},"text":{"43":{},"54":{}},"component":{},"keyword":{}}],["u",{"_index":2131,"title":{},"name":{},"text":{"34":{},"45":{},"105":{}},"component":{},"keyword":{}}],["u8",{"_index":4045,"title":{},"name":{},"text":{"111":{},"112":{},"113":{},"115":{}},"component":{},"keyword":{}}],["ubuntu",{"_index":2827,"title":{},"name":{},"text":{"60":{},"102":{}},"component":{},"keyword":{}}],["ui",{"_index":379,"title":{"67":{},"17-2":{},"48-4":{},"64-4":{},"66-6":{},"66-7":{},"67-1":{}},"name":{},"text":{"6":{},"17":{},"33":{},"34":{},"48":{},"51":{},"52":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{}},"component":{},"keyword":{"67":{}}}],["ui:2.4.1",{"_index":2725,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["uid",{"_index":1896,"title":{},"name":{},"text":{"28":{},"29":{},"48":{},"60":{},"74":{},"78":{},"113":{},"119":{},"120":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["uid\":\"c6e115f4",{"_index":1936,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["uint16",{"_index":4228,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["ul",{"_index":2036,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["unabl",{"_index":2252,"title":{},"name":{},"text":{"38":{},"70":{},"97":{}},"component":{},"keyword":{}}],["unallow",{"_index":1783,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["unannot",{"_index":988,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["unannounc",{"_index":2106,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["unauthor",{"_index":2662,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["unavail",{"_index":1680,"title":{},"name":{},"text":{"26":{},"27":{},"31":{}},"component":{},"keyword":{}}],["unchang",{"_index":1666,"title":{},"name":{},"text":{"26":{},"31":{},"36":{}},"component":{},"keyword":{}}],["uncompl",{"_index":4094,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["unconfin",{"_index":3317,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["unconfined.json",{"_index":3315,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["under",{"_index":623,"title":{},"name":{},"text":{"8":{},"14":{},"17":{},"19":{},"21":{},"31":{},"32":{},"44":{},"45":{},"48":{},"53":{},"60":{},"61":{},"62":{},"64":{},"66":{},"69":{},"71":{},"76":{},"82":{},"95":{},"116":{},"119":{},"123":{}},"component":{},"keyword":{}}],["undercommit",{"_index":1707,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["undergo",{"_index":1139,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["underli",{"_index":2073,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["understand",{"_index":1927,"title":{},"name":{},"text":{"29":{},"38":{},"41":{},"54":{},"85":{},"111":{},"112":{},"123":{},"125":{}},"component":{},"keyword":{}}],["undon",{"_index":2064,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["unencrypt",{"_index":64,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["unexpect",{"_index":1977,"title":{},"name":{},"text":{"30":{},"99":{}},"component":{},"keyword":{}}],["unicod",{"_index":3403,"title":{},"name":{},"text":{"87":{},"90":{}},"component":{},"keyword":{}}],["uninstal",{"_index":384,"title":{"7-7":{}},"name":{},"text":{"7":{},"15":{}},"component":{},"keyword":{}}],["unintend",{"_index":3349,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["union",{"_index":3639,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["uniqu",{"_index":850,"title":{"94-1":{}},"name":{},"text":{"9":{},"14":{},"68":{},"69":{},"74":{},"94":{}},"component":{},"keyword":{}}],["unique_service_selector",{"_index":1126,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["unit",{"_index":1395,"title":{"99-3":{},"110-3":{},"111-1":{},"112-2":{}},"name":{},"text":{"21":{},"26":{},"49":{},"85":{},"98":{},"99":{},"100":{},"102":{},"104":{},"110":{},"111":{},"112":{},"114":{}},"component":{},"keyword":{}}],["unittest",{"_index":4039,"title":{},"name":{},"text":{"110":{},"112":{}},"component":{},"keyword":{}}],["univers",{"_index":185,"title":{},"name":{},"text":{"4":{},"71":{}},"component":{},"keyword":{}}],["unix",{"_index":1334,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["unknown",{"_index":2063,"title":{},"name":{},"text":{"31":{},"41":{},"88":{}},"component":{},"keyword":{}}],["unless",{"_index":1056,"title":{},"name":{},"text":{"14":{},"21":{},"25":{},"26":{}},"component":{},"keyword":{}}],["unmarsh",{"_index":3699,"title":{},"name":{},"text":{"98":{},"99":{},"104":{},"105":{},"111":{},"112":{},"115":{},"117":{}},"component":{},"keyword":{}}],["unmarshal",{"_index":3733,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["unmarshaljson",{"_index":3713,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["unmarshaljson(data",{"_index":3714,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["unmarshaltext",{"_index":3700,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["unmarshaltext(text",{"_index":3704,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["unnecessari",{"_index":1092,"title":{},"name":{},"text":{"14":{},"91":{}},"component":{},"keyword":{}}],["uno",{"_index":3626,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["unoptim",{"_index":4035,"title":{},"name":{},"text":{"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["unprivileg",{"_index":581,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"29":{}},"component":{},"keyword":{}}],["unrecogn",{"_index":2032,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["unrel",{"_index":3350,"title":{},"name":{},"text":{"82":{}},"component":{},"keyword":{}}],["unreleas",{"_index":1447,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["unreview",{"_index":991,"title":{"13-2":{}},"name":{},"text":{},"component":{},"keyword":{}}],["unsaf",{"_index":3724,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["unschedul",{"_index":864,"title":{},"name":{},"text":{"9":{},"31":{}},"component":{},"keyword":{}}],["unsign",{"_index":2364,"title":{},"name":{},"text":{"41":{},"95":{}},"component":{},"keyword":{}}],["unstructur",{"_index":2082,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["unsuit",{"_index":3089,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{},"keyword":{}}],["unsynchron",{"_index":1181,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["untar",{"_index":2528,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["until",{"_index":875,"title":{},"name":{},"text":{"10":{},"15":{},"70":{},"86":{},"99":{}},"component":{},"keyword":{}}],["untrust",{"_index":1238,"title":{},"name":{},"text":{"18":{},"57":{},"60":{},"90":{}},"component":{},"keyword":{}}],["unzip",{"_index":1483,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["up",{"_index":386,"title":{"7-8":{},"63-1":{}},"name":{},"text":{"9":{},"10":{},"13":{},"19":{},"26":{},"27":{},"34":{},"44":{},"56":{},"63":{},"65":{},"67":{},"99":{},"105":{}},"component":{},"keyword":{}}],["upcom",{"_index":2771,"title":{},"name":{},"text":{"54":{}},"component":{},"keyword":{}}],["updat",{"_index":434,"title":{"21-7":{},"69-3":{},"112-2":{}},"name":{},"text":{"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"17":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"30":{},"34":{},"35":{},"36":{},"38":{},"42":{},"44":{},"46":{},"47":{},"52":{},"53":{},"64":{},"68":{},"70":{},"71":{},"74":{},"76":{},"92":{},"93":{},"94":{},"95":{},"105":{},"112":{},"115":{},"117":{}},"component":{},"keyword":{}}],["updatecli",{"_index":2675,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["updateopt",{"_index":3242,"title":{},"name":{},"text":{"74":{}},"component":{},"keyword":{}}],["upgrad",{"_index":448,"title":{"42":{},"42-4":{},"42-5":{}},"name":{"42":{}},"text":{"7":{},"26":{},"42":{},"53":{},"64":{},"66":{},"78":{}},"component":{},"keyword":{"42":{}}}],["upload",{"_index":2812,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["upon",{"_index":3553,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["upstream",{"_index":1221,"title":{},"name":{},"text":{"17":{},"92":{},"94":{},"96":{}},"component":{},"keyword":{}}],["uri",{"_index":983,"title":{},"name":{},"text":{"12":{},"29":{},"31":{},"34":{},"39":{},"40":{},"57":{},"78":{},"87":{},"88":{}},"component":{},"keyword":{}}],["uri_or_sha_prefix",{"_index":2176,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["uri_or_sha_prefix_or_yaml_fil",{"_index":2137,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["url",{"_index":521,"title":{},"name":{},"text":{"7":{},"9":{},"12":{},"29":{},"44":{},"45":{},"60":{},"87":{},"92":{}},"component":{},"keyword":{}}],["url_prefix",{"_index":3401,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["urlprefix",{"_index":2424,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["urm8zrxi4s3an70k8bf1olgni/ahccgleewhbbk1ibyysmwr8babchxgsg",{"_index":1071,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["urm8zrxi4s3an70k8bf1olgni/ahccgleewhbbk1ibyysmwr8babchxgsg==\\n",{"_index":1115,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["us",{"_index":140,"title":{"8":{},"23":{},"25":{},"57":{},"58":{},"104":{},"4-3":{},"4-6":{},"8-3":{},"8-4":{},"9-3":{},"9-4":{},"28-3":{},"29-4":{},"41-44":{},"41-55":{},"43-10":{},"53-3":{},"60-14":{},"65-5":{},"71-1":{},"116-2":{}},"name":{"8":{}},"text":{"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{}},"component":{},"keyword":{"8":{},"104":{}}}],["usabl",{"_index":3618,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["usag",{"_index":658,"title":{"29-6":{},"47-4":{}},"name":{},"text":{"8":{},"12":{},"26":{},"29":{},"30":{},"34":{},"39":{},"60":{},"76":{},"78":{},"82":{},"90":{},"93":{},"95":{},"98":{},"99":{},"116":{}},"component":{},"keyword":{}}],["user",{"_index":23,"title":{"8-2":{},"27-3":{},"47-2":{}},"name":{},"text":{"1":{},"4":{},"6":{},"8":{},"9":{},"11":{},"13":{},"14":{},"17":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"38":{},"41":{},"42":{},"43":{},"44":{},"46":{},"47":{},"49":{},"51":{},"52":{},"56":{},"60":{},"61":{},"62":{},"63":{},"70":{},"71":{},"73":{},"74":{},"76":{},"81":{},"82":{},"88":{},"92":{},"97":{},"98":{},"99":{},"100":{},"105":{},"107":{},"109":{},"111":{},"115":{},"116":{},"117":{},"124":{},"126":{}},"component":{},"keyword":{"68":{}}}],["usergroup",{"_index":1829,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["userinfo",{"_index":3234,"title":{},"name":{},"text":{"74":{},"78":{}},"component":{},"keyword":{}}],["usernam",{"_index":425,"title":{},"name":{},"text":{"7":{},"60":{},"65":{},"74":{},"78":{}},"component":{},"keyword":{}}],["username=<mymail",{"_index":2744,"title":{},"name":{},"text":{"53":{}},"component":{},"keyword":{}}],["username=myus",{"_index":2801,"title":{},"name":{},"text":{"58":{}},"component":{},"keyword":{}}],["usr/bin/env",{"_index":1410,"title":{},"name":{},"text":{"21":{},"45":{},"105":{}},"component":{},"keyword":{}}],["usual",{"_index":919,"title":{},"name":{},"text":{"11":{},"12":{},"40":{},"44":{},"45":{},"49":{},"56":{},"58":{},"64":{},"66":{},"90":{},"94":{},"95":{},"99":{},"110":{},"116":{}},"component":{},"keyword":{}}],["utf",{"_index":3371,"title":{},"name":{},"text":{"86":{},"87":{},"90":{}},"component":{},"keyword":{}}],["utf8onli",{"_index":2959,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["util",{"_index":725,"title":{},"name":{},"text":{"9":{},"19":{},"27":{},"45":{},"51":{},"60":{},"76":{},"78":{},"108":{},"123":{}},"component":{},"keyword":{}}],["utility/policy.rego",{"_index":4281,"title":{},"name":{},"text":{"126":{}},"component":{},"keyword":{}}],["ux",{"_index":3397,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["v",{"_index":120,"title":{"3-13":{}},"name":{},"text":{"21":{},"28":{},"29":{},"34":{},"97":{},"98":{},"99":{},"102":{},"104":{},"105":{},"117":{},"126":{}},"component":{},"keyword":{}}],["v0",{"_index":1382,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["v0.1.0",{"_index":3893,"title":{},"name":{},"text":{"102":{},"110":{},"111":{},"112":{}},"component":{},"keyword":{}}],["v0.2.0",{"_index":3977,"title":{},"name":{},"text":{"106":{},"118":{},"122":{}},"component":{},"keyword":{}}],["v0.28.1",{"_index":3633,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["v0.4.0",{"_index":443,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["v0.69",{"_index":2117,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["v1",{"_index":508,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"14":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"38":{},"43":{},"47":{},"48":{},"51":{},"52":{},"53":{},"60":{},"62":{},"64":{},"71":{},"75":{},"76":{},"78":{},"82":{},"91":{},"93":{},"94":{},"95":{},"97":{},"105":{},"109":{},"112":{},"119":{},"123":{}},"component":{},"keyword":{}}],["v1.0.0",{"_index":1307,"title":{"21-6":{}},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["v1.14",{"_index":3178,"title":{},"name":{},"text":{"70":{}},"component":{},"keyword":{}}],["v1.15.1",{"_index":3066,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["v1.16.0",{"_index":3177,"title":{},"name":{},"text":{"70":{}},"component":{},"keyword":{}}],["v1.17.0",{"_index":869,"title":{},"name":{},"text":{"10":{},"16":{},"70":{}},"component":{},"keyword":{}}],["v1.21",{"_index":1823,"title":{},"name":{},"text":{"27":{},"96":{}},"component":{},"keyword":{}}],["v1.22.2",{"_index":3049,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["v1.23.2",{"_index":3042,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["v1.25",{"_index":1506,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{},"keyword":{}}],["v1.26",{"_index":1951,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["v1.29.0",{"_index":2221,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["v1.30",{"_index":1952,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["v1.5.0",{"_index":2220,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["v1.5.1",{"_index":1316,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["v1.6.0",{"_index":898,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["v1.7.0",{"_index":1210,"title":{},"name":{},"text":{"17":{},"42":{},"47":{}},"component":{},"keyword":{}}],["v1.9.0",{"_index":1855,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["v1/dns_lookup_host",{"_index":3484,"title":{"89-4":{},"89-5":{}},"name":{},"text":{},"component":{},"keyword":{}}],["v1/is_certificate_trust",{"_index":3490,"title":{"90-3":{},"90-4":{}},"name":{},"text":{},"component":{},"keyword":{}}],["v1/manifest_digest",{"_index":3409,"title":{"88-5":{},"88-6":{}},"name":{},"text":{},"component":{},"keyword":{}}],["v1/oci_manifest",{"_index":3410,"title":{"88-11":{},"88-12":{}},"name":{},"text":{},"component":{},"keyword":{}}],["v1/oci_manifest_config",{"_index":3411,"title":{"88-17":{},"88-18":{}},"name":{},"text":{},"component":{},"keyword":{}}],["v1/verifi",{"_index":3379,"title":{"87-15":{}},"name":{},"text":{},"component":{},"keyword":{}}],["v1alpha1",{"_index":2124,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["v1alpha2",{"_index":2098,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["v1beta1",{"_index":2062,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["v2",{"_index":2610,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["v2/verifi",{"_index":3373,"title":{"87-4":{}},"name":{},"text":{},"component":{},"keyword":{}}],["v20.10.6",{"_index":2682,"title":{},"name":{},"text":{"50":{}},"component":{},"keyword":{}}],["v3.19.0",{"_index":1383,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["v3.6",{"_index":2210,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["v3_ca",{"_index":2957,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["v4",{"_index":1098,"title":{},"name":{},"text":{"14":{},"24":{},"25":{}},"component":{},"keyword":{}}],["v4.0.0",{"_index":2478,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["vacat",{"_index":1159,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["valid",{"_index":70,"title":{"74":{},"97":{},"99":{},"104":{},"111":{},"14-6":{},"28-4":{},"41-15":{},"43-5":{},"43-6":{},"43-7":{},"43-9":{},"60-9":{},"60-10":{},"60-11":{},"60-13":{},"73-1":{},"98-2":{},"99-1":{},"99-2":{},"104-1":{},"104-2":{},"105-2":{},"110-2":{},"115-2":{},"116-4":{},"116-7":{},"117-2":{},"126-2":{}},"name":{"74":{},"99":{},"104":{},"111":{}},"text":{"1":{},"3":{},"7":{},"9":{},"10":{},"13":{},"14":{},"18":{},"19":{},"21":{},"26":{},"27":{},"28":{},"30":{},"31":{},"34":{},"38":{},"40":{},"41":{},"43":{},"45":{},"48":{},"49":{},"53":{},"58":{},"60":{},"71":{},"73":{},"74":{},"75":{},"77":{},"78":{},"80":{},"81":{},"82":{},"87":{},"90":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"104":{},"105":{},"109":{},"110":{},"111":{},"112":{},"113":{},"115":{},"116":{},"117":{},"122":{},"125":{},"126":{}},"component":{},"keyword":{"74":{},"97":{},"104":{},"111":{}}}],["valid_act",{"_index":4151,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["valid_resourc",{"_index":4152,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["valid_us",{"_index":4149,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["validact",{"_index":1863,"title":{},"name":{},"text":{"28":{},"105":{},"117":{}},"component":{},"keyword":{}}],["validat",{"_index":4012,"title":{},"name":{},"text":{"110":{},"115":{}},"component":{},"keyword":{}}],["validate(&self",{"_index":4018,"title":{},"name":{},"text":{"110":{},"115":{}},"component":{},"keyword":{}}],["validate(input",{"_index":4210,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["validate(payload",{"_index":3783,"title":{},"name":{},"text":{"99":{},"101":{},"104":{},"105":{},"111":{},"112":{},"113":{},"115":{}},"component":{},"keyword":{}}],["validate.go",{"_index":3780,"title":{},"name":{},"text":{"99":{},"105":{},"117":{}},"component":{},"keyword":{}}],["validate/<polici",{"_index":846,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["validate_raw",{"_index":1854,"title":{"28-3":{}},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["validate_set",{"_index":837,"title":{},"name":{},"text":{"9":{},"73":{},"75":{},"98":{},"101":{},"113":{}},"component":{},"keyword":{}}],["validate_test.go",{"_index":3813,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["validate_test.go:126",{"_index":3843,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["validateclisettings(set",{"_index":4201,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["validatelabel",{"_index":3807,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["validatelabel(label",{"_index":3804,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["validaterequest(set",{"_index":4221,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["validaterequest(validationrequest.set",{"_index":4218,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["validateset",{"_index":3734,"title":{},"name":{},"text":{"98":{},"105":{},"117":{}},"component":{},"keyword":{}}],["validatesettings(input",{"_index":4198,"title":{},"name":{},"text":{"117":{}},"component":{},"keyword":{}}],["validatesettings(payload",{"_index":3735,"title":{},"name":{},"text":{"98":{},"105":{}},"component":{},"keyword":{}}],["validatesettings(settingsjson",{"_index":3762,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["validatingadmissionpolici",{"_index":702,"title":{"30":{},"93":{},"92-4":{},"93-1":{}},"name":{},"text":{"8":{},"30":{},"34":{},"92":{},"93":{}},"component":{},"keyword":{"30":{},"93":{}}}],["validatingadmissionpolicybind",{"_index":1967,"title":{},"name":{},"text":{"30":{},"34":{},"92":{},"93":{}},"component":{},"keyword":{}}],["validatingadmissionwebhook",{"_index":3004,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["validatingwebhookconfigur",{"_index":121,"title":{"3-14":{}},"name":{},"text":{"7":{},"9":{},"16":{},"20":{}},"component":{},"keyword":{}}],["validatingwebhookconfigurations.admissionregistration.k8s.io",{"_index":574,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["validation\",\"policy\":\"sampl",{"_index":4115,"title":{},"name":{},"text":{"112":{}},"component":{},"keyword":{}}],["validation.deni",{"_index":4283,"title":{},"name":{},"text":{"126":{}},"component":{},"keyword":{}}],["validation/mut",{"_index":3303,"title":{},"name":{},"text":{"78":{}},"component":{},"keyword":{}}],["validation_request",{"_index":4047,"title":{},"name":{},"text":{"111":{},"112":{},"115":{}},"component":{},"keyword":{}}],["validation_request.request",{"_index":4164,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["validation_request.request.kind.kind",{"_index":4051,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["validation_request.set",{"_index":4165,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["validationact",{"_index":1969,"title":{},"name":{},"text":{"30":{},"93":{}},"component":{},"keyword":{}}],["validationerr",{"_index":3909,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["validationrequest",{"_index":3215,"title":{"74-1":{}},"name":{},"text":{"74":{},"75":{},"98":{},"99":{},"104":{},"105":{},"111":{},"115":{},"116":{},"117":{}},"component":{},"keyword":{}}],["validationrequest.request",{"_index":3942,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["validationrequest.request.object",{"_index":3789,"title":{},"name":{},"text":{"99":{},"104":{}},"component":{},"keyword":{}}],["validationrequest.set",{"_index":3943,"title":{},"name":{},"text":{"105":{},"117":{}},"component":{},"keyword":{}}],["validationrequest::new(payload",{"_index":4049,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["validationrequest<set",{"_index":4048,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["validationrespons",{"_index":3216,"title":{"74-3":{}},"name":{},"text":{"74":{},"75":{},"77":{},"78":{},"116":{},"117":{}},"component":{},"keyword":{}}],["validationwebhook",{"_index":740,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["validresourc",{"_index":1864,"title":{},"name":{},"text":{"28":{},"105":{},"117":{}},"component":{},"keyword":{}}],["validus",{"_index":1862,"title":{},"name":{},"text":{"28":{},"105":{},"117":{}},"component":{},"keyword":{}}],["valu",{"_index":178,"title":{"4-2":{}},"name":{},"text":{"7":{},"13":{},"14":{},"17":{},"20":{},"21":{},"23":{},"24":{},"26":{},"29":{},"31":{},"34":{},"35":{},"36":{},"38":{},"39":{},"43":{},"44":{},"45":{},"47":{},"51":{},"52":{},"53":{},"56":{},"58":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"71":{},"74":{},"87":{},"97":{},"98":{},"99":{},"100":{},"101":{},"104":{},"111":{},"116":{}},"component":{},"keyword":{}}],["value.str",{"_index":3914,"title":{},"name":{},"text":{"104":{}},"component":{},"keyword":{}}],["value1",{"_index":1633,"title":{},"name":{},"text":{"26":{},"74":{}},"component":{},"keyword":{}}],["value2",{"_index":1636,"title":{},"name":{},"text":{"26":{},"74":{}},"component":{},"keyword":{}}],["values.policyserver.securitycontext",{"_index":2943,"title":{},"name":{},"text":{"61":{}},"component":{},"keyword":{}}],["values.yaml",{"_index":1218,"title":{},"name":{},"text":{"17":{},"42":{},"61":{},"64":{},"65":{},"66":{}},"component":{},"keyword":{}}],["values:str",{"_index":2081,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["vanilla",{"_index":3524,"title":{},"name":{},"text":{"92":{},"93":{}},"component":{},"keyword":{}}],["vanz",{"_index":2845,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["vap",{"_index":1950,"title":{"34-48":{}},"name":{"30":{},"93":{}},"text":{"30":{},"34":{},"93":{}},"component":{},"keyword":{"30":{}}}],["vap.yml",{"_index":1972,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["var",{"_index":3763,"title":{},"name":{},"text":{"98":{},"99":{},"101":{},"104":{},"117":{}},"component":{},"keyword":{}}],["vari",{"_index":1368,"title":{},"name":{},"text":{"21":{},"26":{},"71":{}},"component":{},"keyword":{}}],["variabl",{"_index":488,"title":{},"name":{},"text":{"7":{},"21":{},"22":{},"30":{},"31":{},"38":{},"65":{},"93":{},"94":{},"95":{},"101":{},"112":{},"113":{},"116":{}},"component":{},"keyword":{}}],["variables.containerimages.filter(imag",{"_index":3599,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["variables.containerimagesnotverified.join",{"_index":3602,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["variables.containers_without_liveness_probe.join",{"_index":1966,"title":{},"name":{},"text":{"30":{}},"component":{},"keyword":{}}],["variables.desiredhost",{"_index":3586,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["variables.initcontainerimages.filter(imag",{"_index":3607,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["variables.initcontainerimagesnotverified.join",{"_index":3609,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["variables.knownhost.exists_one(host",{"_index":3584,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["variables.knownhosts.exists_one(host",{"_index":3587,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["variables.knowningress",{"_index":3574,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["variables.knowningresses.map(i",{"_index":3571,"title":{},"name":{},"text":{"94":{}},"component":{},"keyword":{}}],["variables.maxreplica",{"_index":3537,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["variables.replica",{"_index":3542,"title":{},"name":{},"text":{"93":{}},"component":{},"keyword":{}}],["variant",{"_index":3725,"title":{},"name":{},"text":{"98":{}},"component":{},"keyword":{}}],["vast",{"_index":1284,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["vec<str",{"_index":4150,"title":{},"name":{},"text":{"115":{}},"component":{},"keyword":{}}],["vector<(issu",{"_index":3395,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["vector<(key",{"_index":3390,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["vector<str",{"_index":3388,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["vector_of_pub_key",{"_index":3387,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["vector_of_sigstore_annot",{"_index":3389,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["vector_of_tuples_issuer_and_subject",{"_index":3394,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["vendor",{"_index":187,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["verb",{"_index":1431,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["verbos",{"_index":1097,"title":{},"name":{},"text":{"14":{},"24":{},"25":{},"29":{},"34":{},"66":{}},"component":{},"keyword":{}}],["veri",{"_index":3627,"title":{},"name":{},"text":{"96":{}},"component":{},"keyword":{}}],["verif",{"_index":634,"title":{"43":{},"34-50":{},"43-8":{},"43-10":{},"60-12":{},"60-14":{},"95-1":{}},"name":{"43":{}},"text":{"8":{},"14":{},"18":{},"25":{},"31":{},"34":{},"39":{},"40":{},"43":{},"45":{},"53":{},"60":{},"87":{},"92":{},"95":{}},"component":{},"keyword":{"43":{},"45":{},"53":{},"95":{}}}],["verifi",{"_index":80,"title":{"45":{},"53":{},"87":{},"32-1":{},"34-51":{},"45-3":{},"45-4":{},"60-6":{},"61-2":{}},"name":{"45":{},"53":{},"87":{}},"text":{"1":{},"4":{},"17":{},"22":{},"29":{},"31":{},"32":{},"34":{},"40":{},"41":{},"43":{},"44":{},"45":{},"46":{},"49":{},"51":{},"53":{},"58":{},"60":{},"61":{},"63":{},"68":{},"77":{},"87":{},"90":{},"95":{}},"component":{},"keyword":{"53":{},"87":{}}}],["verification.kubewarden.admiss",{"_index":3614,"title":{},"name":{},"text":{"95":{}},"component":{},"keyword":{}}],["verification_config.yaml",{"_index":2905,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["verification_config.yml",{"_index":2910,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["verification_config_path",{"_index":2285,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["verificationconfig",{"_index":2093,"title":{},"name":{},"text":{"31":{},"60":{}},"component":{},"keyword":{}}],["verify_keyless_exact_match",{"_index":3393,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["verify_pub_keys_imag",{"_index":3385,"title":{},"name":{},"text":{"87":{}},"component":{},"keyword":{}}],["versa",{"_index":2659,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["versatil",{"_index":755,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["version",{"_index":447,"title":{"42-1":{},"42-2":{},"42-3":{}},"name":{},"text":{"7":{},"9":{},"11":{},"12":{},"14":{},"17":{},"21":{},"22":{},"23":{},"26":{},"29":{},"30":{},"31":{},"33":{},"34":{},"41":{},"42":{},"44":{},"45":{},"46":{},"48":{},"60":{},"63":{},"64":{},"65":{},"66":{},"71":{},"74":{},"78":{},"91":{},"96":{},"98":{},"114":{},"121":{},"124":{}},"component":{},"keyword":{}}],["via",{"_index":632,"title":{"32-4":{},"41-27":{}},"name":{},"text":{"8":{},"11":{},"12":{},"17":{},"18":{},"26":{},"31":{},"32":{},"38":{},"41":{},"42":{},"45":{},"49":{},"61":{},"63":{},"65":{},"76":{},"77":{},"78":{},"84":{},"94":{},"111":{},"116":{}},"component":{},"keyword":{}}],["vice",{"_index":2658,"title":{},"name":{},"text":{"49":{}},"component":{},"keyword":{}}],["victor",{"_index":2438,"title":{},"name":{},"text":{"43":{},"60":{}},"component":{},"keyword":{}}],["view",{"_index":910,"title":{},"name":{},"text":{"11":{},"27":{},"46":{},"61":{},"66":{},"67":{},"68":{},"69":{}},"component":{},"keyword":{}}],["violat",{"_index":777,"title":{},"name":{},"text":{"9":{},"21":{},"23":{},"46":{},"48":{},"49":{},"64":{},"99":{},"119":{},"120":{}},"component":{},"keyword":{}}],["violation[{\"msg",{"_index":1348,"title":{},"name":{},"text":{"21":{},"119":{}},"component":{},"keyword":{}}],["virtual",{"_index":169,"title":{},"name":{},"text":{"3":{},"4":{}},"component":{},"keyword":{}}],["visibl",{"_index":1611,"title":{},"name":{},"text":{"25":{},"44":{},"106":{}},"component":{},"keyword":{}}],["visit",{"_index":3113,"title":{},"name":{},"text":{"65":{},"106":{}},"component":{},"keyword":{}}],["visual",{"_index":1222,"title":{},"name":{},"text":{"17":{},"64":{},"66":{},"69":{}},"component":{},"keyword":{}}],["vm",{"_index":3045,"title":{},"name":{},"text":{"63":{}},"component":{},"keyword":{}}],["vnd.docker.reference.digest",{"_index":3426,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["vnd.docker.reference.typ",{"_index":3427,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["volum",{"_index":1254,"title":{},"name":{},"text":{"19":{},"27":{},"28":{},"41":{},"66":{}},"component":{},"keyword":{}}],["volumemount",{"_index":1886,"title":{},"name":{},"text":{"28":{},"66":{}},"component":{},"keyword":{}}],["vs",{"_index":2652,"title":{"49":{}},"name":{},"text":{},"component":{},"keyword":{}}],["vulner",{"_index":9,"title":{"13-2":{}},"name":{},"text":{"1":{},"45":{}},"component":{},"keyword":{}}],["w",{"_index":122,"title":{"3-15":{}},"name":{},"text":{"97":{},"105":{}},"component":{},"keyword":{}}],["w3sib3aioijyzxbsywnliiwicgf0aci6ii9yzxnvdxjjzsisinzhbhvlijoichvibgljumvzb3vyy2uifv0",{"_index":1901,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["wait",{"_index":440,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"38":{},"51":{},"52":{},"53":{},"56":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"71":{},"86":{},"95":{}},"component":{},"keyword":{}}],["walk",{"_index":4066,"title":{},"name":{},"text":{"111":{}},"component":{},"keyword":{}}],["wander",{"_index":3899,"title":{},"name":{},"text":{"103":{}},"component":{},"keyword":{}}],["want",{"_index":371,"title":{"8-1":{},"8-2":{},"8-3":{},"8-4":{}},"name":{},"text":{"6":{},"7":{},"8":{},"17":{},"19":{},"21":{},"24":{},"26":{},"27":{},"29":{},"31":{},"44":{},"45":{},"46":{},"51":{},"52":{},"56":{},"60":{},"64":{},"76":{},"78":{},"79":{},"82":{},"100":{},"105":{},"106":{},"111":{},"116":{},"120":{},"124":{},"125":{}},"component":{},"keyword":{}}],["wapc",{"_index":123,"title":{"3-16":{},"87-3":{},"87-4":{},"87-15":{},"88-5":{},"88-6":{},"88-11":{},"88-12":{},"88-17":{},"88-18":{},"89-4":{},"89-5":{},"90-2":{},"90-3":{},"90-4":{},"91-1":{}},"name":{},"text":{"9":{},"12":{},"29":{},"60":{},"73":{},"74":{},"75":{},"76":{},"81":{},"82":{},"86":{},"88":{},"89":{},"91":{},"96":{},"105":{},"116":{}},"component":{},"keyword":{}}],["wapc/rego",{"_index":4192,"title":{},"name":{},"text":{"116":{}},"component":{},"keyword":{}}],["warm",{"_index":2171,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["warn",{"_index":1502,"title":{},"name":{},"text":{"23":{},"27":{},"28":{},"30":{},"31":{},"34":{},"39":{},"41":{},"48":{},"49":{},"52":{},"113":{}},"component":{},"keyword":{}}],["warn!(log_drain",{"_index":4053,"title":{},"name":{},"text":{"111":{},"112":{}},"component":{},"keyword":{}}],["wasi",{"_index":124,"title":{"116":{},"3-17":{}},"name":{"116":{}},"text":{"9":{},"28":{},"34":{},"76":{},"80":{},"83":{},"96":{},"108":{},"116":{},"117":{}},"component":{},"keyword":{"116":{}}}],["wasip1",{"_index":3995,"title":{},"name":{},"text":{"108":{}},"component":{},"keyword":{}}],["wasm",{"_index":125,"title":{"3-18":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"12":{},"21":{},"29":{},"31":{},"32":{},"34":{},"51":{},"60":{},"77":{},"82":{},"84":{},"90":{},"96":{},"107":{},"114":{},"116":{},"118":{},"120":{},"122":{},"123":{},"124":{}},"component":{},"keyword":{"12":{},"107":{}}}],["wasm32",{"_index":3994,"title":{},"name":{},"text":{"108":{}},"component":{},"keyword":{}}],["wasm_binary_nam",{"_index":3891,"title":{},"name":{},"text":{"102":{}},"component":{},"keyword":{}}],["wasmtim",{"_index":126,"title":{"3-19":{}},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["wasmtime’",{"_index":3782,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["wasn’t",{"_index":2198,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["watch",{"_index":732,"title":{},"name":{},"text":{"9":{},"35":{},"76":{}},"component":{},"keyword":{}}],["way",{"_index":45,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"23":{},"24":{},"26":{},"30":{},"34":{},"38":{},"44":{},"48":{},"49":{},"64":{},"65":{},"66":{},"71":{},"79":{},"81":{},"82":{},"85":{},"88":{},"91":{},"93":{},"96":{},"99":{},"104":{},"106":{},"110":{},"116":{},"120":{}},"component":{},"keyword":{}}],["wb5fkuwlzql6zjchkylqksxf+jafbgnvhsmegdawgbrywb5fkuwlzql6zjchkylq",{"_index":2884,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["web",{"_index":172,"title":{},"name":{},"text":{"3":{},"4":{},"9":{},"10":{},"21":{},"44":{},"66":{},"96":{}},"component":{},"keyword":{}}],["webassembl",{"_index":158,"title":{"4-5":{},"4-6":{}},"name":{},"text":{"3":{},"4":{},"8":{},"9":{},"12":{},"21":{},"28":{},"29":{},"34":{},"49":{},"51":{},"77":{},"78":{},"80":{},"81":{},"83":{},"84":{},"85":{},"87":{},"89":{},"96":{},"98":{},"99":{},"100":{},"101":{},"102":{},"107":{},"108":{},"114":{},"116":{},"122":{},"124":{}},"component":{},"keyword":{"12":{}}}],["webassembly’",{"_index":276,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["webhook",{"_index":540,"title":{"62":{},"71":{},"41-2":{},"41-8":{},"41-11":{},"41-15":{},"41-24":{},"41-27":{},"41-47":{},"41-50":{},"41-52":{},"71-4":{}},"name":{"62":{},"71":{}},"text":{"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"31":{},"38":{},"41":{},"62":{},"63":{},"71":{},"74":{},"93":{},"94":{},"95":{},"106":{}},"component":{},"keyword":{}}],["webhookadmissionconfigur",{"_index":3005,"title":{},"name":{},"text":{"62":{},"71":{}},"component":{},"keyword":{}}],["webhooks([\"validationwebhook",{"_index":800,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["webhooks[]?.clientconfig.cabundl",{"_index":1204,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["webhook’",{"_index":2251,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["webook",{"_index":3199,"title":{},"name":{},"text":{"71":{}},"component":{},"keyword":{}}],["websit",{"_index":278,"title":{},"name":{},"text":{"4":{},"44":{},"65":{},"84":{},"85":{},"123":{}},"component":{},"keyword":{}}],["weight",{"_index":1648,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["welcom",{"_index":89,"title":{},"name":{},"text":{"1":{},"54":{},"55":{},"56":{}},"component":{},"keyword":{}}],["well",{"_index":12,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"16":{},"42":{},"43":{},"44":{},"49":{},"58":{},"60":{},"61":{},"72":{},"81":{},"82":{},"88":{},"96":{},"106":{},"113":{},"123":{},"125":{}},"component":{},"keyword":{}}],["went",{"_index":4272,"title":{},"name":{},"text":{"123":{}},"component":{},"keyword":{}}],["wepki",{"_index":3493,"title":{},"name":{},"text":{"90":{}},"component":{},"keyword":{}}],["we’ll",{"_index":1402,"title":{},"name":{},"text":{"21":{},"70":{},"118":{}},"component":{},"keyword":{}}],["we’r",{"_index":1359,"title":{},"name":{},"text":{"21":{},"23":{},"69":{}},"component":{},"keyword":{}}],["we’v",{"_index":3986,"title":{},"name":{},"text":{"107":{}},"component":{},"keyword":{}}],["wg",{"_index":2557,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["wgpolicyk8s.io/v1beta1",{"_index":2604,"title":{},"name":{},"text":{"48":{}},"component":{},"keyword":{}}],["what’",{"_index":387,"title":{"7-9":{}},"name":{},"text":{"56":{}},"component":{},"keyword":{}}],["wheel",{"_index":724,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["wherev",{"_index":3873,"title":{},"name":{},"text":{"101":{}},"component":{},"keyword":{}}],["whether",{"_index":896,"title":{},"name":{},"text":{"11":{},"14":{},"24":{},"31":{},"44":{},"54":{},"55":{},"74":{},"81":{},"123":{},"125":{}},"component":{},"keyword":{}}],["whole",{"_index":2503,"title":{},"name":{},"text":{"45":{},"66":{},"91":{},"119":{},"125":{}},"component":{},"keyword":{}}],["whose",{"_index":2007,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["wide",{"_index":129,"title":{},"name":{},"text":{"3":{},"7":{},"19":{},"44":{},"46":{},"48":{},"49":{},"56":{},"91":{}},"component":{},"keyword":{}}],["widest",{"_index":1499,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["width:2px,strok",{"_index":2403,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["wiki",{"_index":1579,"title":{},"name":{},"text":{"24":{}},"component":{},"keyword":{}}],["wildcard",{"_index":2555,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["wildcard.json",{"_index":3296,"title":{},"name":{},"text":{"77":{}},"component":{},"keyword":{}}],["window",{"_index":1461,"title":{},"name":{},"text":{"22":{},"40":{},"80":{},"84":{}},"component":{},"keyword":{}}],["wish",{"_index":2486,"title":{},"name":{},"text":{"44":{},"111":{}},"component":{},"keyword":{}}],["with/insid",{"_index":1881,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["within",{"_index":731,"title":{},"name":{},"text":{"9":{},"14":{},"21":{},"29":{},"38":{},"41":{},"46":{},"49":{},"56":{},"65":{},"67":{},"68":{},"82":{},"89":{},"97":{},"100":{},"106":{},"113":{},"123":{}},"component":{},"keyword":{}}],["without",{"_index":69,"title":{"28-2":{}},"name":{},"text":{"1":{},"4":{},"7":{},"8":{},"9":{},"10":{},"18":{},"19":{},"21":{},"23":{},"26":{},"27":{},"28":{},"30":{},"32":{},"49":{},"57":{},"64":{},"76":{},"77":{},"78":{},"82":{},"105":{},"112":{}},"component":{},"keyword":{}}],["wizard",{"_index":3156,"title":{},"name":{},"text":{"67":{},"97":{}},"component":{},"keyword":{}}],["wonder",{"_index":3850,"title":{},"name":{},"text":{"99":{}},"component":{},"keyword":{}}],["won’t",{"_index":924,"title":{},"name":{},"text":{"11":{},"21":{},"23":{},"36":{},"47":{}},"component":{},"keyword":{}}],["word",{"_index":153,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["wordpress",{"_index":2541,"title":{},"name":{},"text":{"46":{}},"component":{},"keyword":{}}],["work",{"_index":8,"title":{"37-3":{}},"name":{},"text":{"1":{},"6":{},"9":{},"11":{},"13":{},"17":{},"25":{},"27":{},"29":{},"33":{},"37":{},"41":{},"42":{},"49":{},"56":{},"58":{},"60":{},"61":{},"64":{},"65":{},"78":{},"80":{},"82":{},"84":{},"100":{},"101":{},"102":{},"104":{},"107":{},"108":{},"110":{},"111":{},"112":{},"116":{},"118":{},"119":{},"122":{}},"component":{},"keyword":{}}],["workaround",{"_index":3176,"title":{},"name":{},"text":{"70":{}},"component":{},"keyword":{}}],["worker",{"_index":842,"title":{},"name":{},"text":{"9":{},"26":{},"39":{}},"component":{},"keyword":{}}],["workers_numb",{"_index":2286,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["workflow",{"_index":312,"title":{"60-4":{}},"name":{},"text":{"4":{},"8":{},"43":{},"44":{},"45":{},"52":{},"60":{},"102":{},"105":{},"106":{}},"component":{},"keyword":{}}],["workflow_repositori",{"_index":2421,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["workingdir",{"_index":3461,"title":{},"name":{},"text":{"88":{}},"component":{},"keyword":{}}],["workload",{"_index":219,"title":{"26-14":{},"41-5":{},"41-33":{},"61-5":{}},"name":{},"text":{"4":{},"8":{},"13":{},"14":{},"19":{},"26":{},"28":{},"31":{},"41":{},"46":{},"52":{},"61":{},"68":{}},"component":{},"keyword":{}}],["workstat",{"_index":2683,"title":{"51-1":{},"51-2":{}},"name":{},"text":{"51":{}},"component":{},"keyword":{}}],["world",{"_index":1243,"title":{},"name":{},"text":{"19":{},"97":{},"99":{},"108":{}},"component":{},"keyword":{}}],["wp/whpqpavo0jhswenfzgss0ee7wyi4qajea2wb9ot98sikof3vzydd3/vtwb5b9",{"_index":2886,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["wqcmaawhqydvr0obbyefcp/v7nejqglbdmyc5vmgnvhiubumb8ga1udiwqymbaa",{"_index":2859,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["wrap",{"_index":385,"title":{"7-8":{},"24-3":{}},"name":{},"text":{"24":{},"78":{}},"component":{},"keyword":{}}],["write",{"_index":206,"title":{"81":{},"96":{},"99":{},"105":{},"111":{},"117":{},"126":{},"8-3":{},"28-6":{},"49-2":{},"100-2":{},"112-1":{}},"name":{"111":{}},"text":{"4":{},"6":{},"9":{},"13":{},"21":{},"23":{},"24":{},"28":{},"29":{},"30":{},"33":{},"38":{},"46":{},"49":{},"53":{},"63":{},"64":{},"65":{},"71":{},"77":{},"78":{},"79":{},"80":{},"81":{},"83":{},"84":{},"90":{},"94":{},"96":{},"98":{},"99":{},"100":{},"104":{},"105":{},"106":{},"108":{},"110":{},"111":{},"112":{},"115":{},"116":{},"117":{},"121":{},"122":{},"123":{},"125":{},"126":{}},"component":{},"keyword":{"80":{},"81":{},"83":{},"84":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"99":{},"100":{},"101":{},"105":{},"106":{},"108":{},"110":{},"111":{},"114":{}}}],["writer",{"_index":3279,"title":{},"name":{},"text":{"76":{}},"component":{},"keyword":{}}],["written",{"_index":368,"title":{},"name":{},"text":{"6":{},"9":{},"21":{},"24":{},"28":{},"30":{},"49":{},"60":{},"77":{},"83":{},"84":{},"85":{},"92":{},"106":{},"119":{},"125":{}},"component":{},"keyword":{}}],["wrn",{"_index":2720,"title":{},"name":{},"text":{"52":{}},"component":{},"keyword":{}}],["wrong",{"_index":838,"title":{},"name":{},"text":{"9":{},"73":{},"86":{}},"component":{},"keyword":{}}],["wrote",{"_index":4234,"title":{},"name":{},"text":{"119":{},"124":{}},"component":{},"keyword":{}}],["wtatbgcqhkjopqibbggqhkjopqmbbwncaar/o5c6zi5bzbweoeiam4uwu5fqzhx0",{"_index":2856,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["x",{"_index":1893,"title":{},"name":{},"text":{"28":{},"31":{}},"component":{},"keyword":{}}],["x.509",{"_index":2262,"title":{},"name":{},"text":{"39":{},"90":{}},"component":{},"keyword":{}}],["x509",{"_index":2420,"title":{},"name":{},"text":{"43":{},"45":{},"62":{}},"component":{},"keyword":{}}],["x509_extens",{"_index":2956,"title":{},"name":{},"text":{"62":{}},"component":{},"keyword":{}}],["x69c5ivuyjrq+hz05yi+uf3ubwalhpis5sh0+h2ghe7sxrk1ec5m1tr19l9gg92j",{"_index":2882,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["x86_64",{"_index":1484,"title":{},"name":{},"text":{"22":{},"27":{},"45":{},"52":{},"88":{}},"component":{},"keyword":{}}],["x86_64.ex",{"_index":1491,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["x86_64.pem",{"_index":1486,"title":{},"name":{},"text":{"22":{},"45":{}},"component":{},"keyword":{}}],["x86_64.sig",{"_index":1485,"title":{},"name":{},"text":{"22":{},"45":{}},"component":{},"keyword":{}}],["x86_64.zip",{"_index":1477,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["xcode",{"_index":3996,"title":{},"name":{},"text":{"108":{}},"component":{},"keyword":{}}],["xeft4rb3pqgws4iajtlk3/olnpgangabclypsybr5i+4ynb07ceb3lp0oiozdxex",{"_index":2881,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["xf",{"_index":4245,"title":{},"name":{},"text":{"120":{},"124":{}},"component":{},"keyword":{}}],["xref:cncf",{"_index":61,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["xvf",{"_index":1330,"title":{},"name":{},"text":{"21":{},"45":{}},"component":{},"keyword":{}}],["xyz",{"_index":1663,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["y",{"_index":482,"title":{},"name":{},"text":{"7":{},"17":{}},"component":{},"keyword":{}}],["yaml",{"_index":147,"title":{},"name":{},"text":{"3":{},"12":{},"21":{},"26":{},"27":{},"29":{},"30":{},"34":{},"39":{},"40":{},"44":{},"48":{},"49":{},"60":{},"68":{},"77":{},"78":{},"82":{},"93":{}},"component":{},"keyword":{}}],["yaml+macro",{"_index":676,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["yay",{"_index":1469,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["year",{"_index":874,"title":{},"name":{},"text":{"10":{},"70":{}},"component":{},"keyword":{}}],["yield",{"_index":2161,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["your_configmap",{"_index":2923,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["yourself",{"_index":2775,"title":{},"name":{},"text":{"54":{},"56":{}},"component":{},"keyword":{}}],["you’ll",{"_index":1392,"title":{},"name":{},"text":{"21":{},"69":{},"78":{},"96":{},"100":{},"109":{},"112":{},"119":{},"123":{}},"component":{},"keyword":{}}],["you’r",{"_index":1467,"title":{},"name":{},"text":{"22":{},"56":{},"79":{},"98":{},"99":{},"104":{},"106":{},"121":{},"123":{},"124":{},"126":{}},"component":{},"keyword":{}}],["you’v",{"_index":3901,"title":{},"name":{},"text":{"103":{},"114":{}},"component":{},"keyword":{}}],["yq",{"_index":1319,"title":{},"name":{},"text":{"21":{},"45":{}},"component":{},"keyword":{}}],["yqz3gplhokq3yqa1giofcgljuztcklusvau2/s5gxqydnsw6466jx/zvlg",{"_index":1068,"title":{},"name":{},"text":{"14":{},"25":{}},"component":{},"keyword":{}}],["yzbhma4ga1uddweb/wqeawibbjapbgnvhrmbaf8ebtadaqh/mb0ga1uddgqwbbri",{"_index":2883,"title":{},"name":{},"text":{"60":{}},"component":{},"keyword":{}}],["zero",{"_index":1294,"title":{},"name":{},"text":{"20":{},"41":{}},"component":{},"keyword":{}}],["zip",{"_index":1482,"title":{},"name":{},"text":{"22":{},"45":{},"102":{}},"component":{},"keyword":{}}],["zone",{"_index":1699,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["zsh",{"_index":2175,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["zypper",{"_index":1464,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"The SUSE Security Admission Controller team appreciates investigative work on security vulnerabilities carried out by well-intentioned, ethical security researchers. Admission Controller follows the practice of [responsible disclosure](https://en.wikipedia.org/wiki/Responsible_disclosure) to best protect Admission Controller’s user base from the impact of security issues. On Admission Controller’s side, this means: Admission Controller responds to security incidents on priority. Admission Controller releases fixes for issues as soon as is practical, prioritizing by risk. Admission Controller always transparently lets the community know about any incident that affects them. If you have found a security vulnerability in Admission Controller, the easiest way to report a vulnerability is through the Security tab on GitHub. This mechanism allows maintainers to communicate privately with you, and you don’t need to encrypt your messages. Alternatively, you can disclose it responsibly by emailing xref:cncf-kubewarden-maintainers@lists.cncf.io in an unencrypted message. Please don’t discuss potential vulnerabilities in public without validating with us first. You can also come talk in our slack-room on the Kubernetes Slack server. On receipt the security team: Reviews the report, verifies the vulnerability and responds with confirmation and/or further information requests. After addressing the reported security bug, Admission Controller notifies the Researcher, who is then welcome to optionally disclose publicly. Please, refer to the community repository to find more about the project Governance and Security Policy.","title":"Security disclosure","component":"admission-controller","version":"1.29","name":"disclosure","url":"/admission-controller/1.29/en/disclosure.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"security\", \"disclosure\"]"},"2":{"id":2,"text":"These organization(s) provide enterprise support for SUSE Security Admission Controller: Organization Offering SUSE SUSE provides complete SUSE Security Admission Controller enterprise support with SUSE® Rancher Prime.","title":"Enterprise support","component":"admission-controller","version":"1.29","name":"enterprise","url":"/admission-controller/1.29/en/enterprise.html","titles":[],"keyword":"[ Kubewarden, support, ]"},"3":{"id":3,"text":"A namespace-wide resource. The policy processes only those requests targeting the namespace in which the AdmissionPolicy is defined. An AdmissionPolicy which targets cluster-wide resources. A PolicyReport and a ClusterPolicyReport store results of policy scans. Which one is used, depends on the scope of the resource. A CLI tool to generate and test Kubernetes YAML files for policy deployment. A Kubernetes resource created by the Admission Controller controller to let Kubernetes know where to send an AdmissionReview. In other words, this is how a Admission Controller controller informs Kubernetes where to find a resource mutating policy. A PolicyReport and a ClusterPolicyReport store results of policy scans. Which one is used depends on the scope of the resource. A PolicyServer validates incoming requests by executing Admission Controller policies against requests. A Kubernetes resource created by the Admission Controller controller to let Kubernetes know where to send a AdmissionReview. In other words, this is how Admission Controller informs Kubernetes where to find a resource validating policy. WebAssembly Procedure Calls. https://wapc.io. WebAssembly System Interface. https://wasi.dev. A binary instruction format for a stack-based virtual machine. Designed for web deployment. https://webassembly.org. A runtime for WebAssembly. https://wasmtime.dev.","title":"Glossary","component":"admission-controller","version":"1.29","name":"glossary","url":"/admission-controller/1.29/en/glossary.html","titles":[{"text":"A","hash":"_a","id":1},{"text":"AdmissionPolicy","hash":"_admissionpolicy","id":2},{"text":"C","hash":"_c","id":3},{"text":"ClusterAdmissionPolicy","hash":"_clusteradmissionpolicy","id":4},{"text":"ClusterPolicyReport","hash":"_clusterpolicyreport","id":5},{"text":"K","hash":"_k","id":6},{"text":"kwctl","hash":"_kwctl","id":7},{"text":"M","hash":"_m","id":8},{"text":"MutatingWebhookConfiguration","hash":"_mutatingwebhookconfiguration","id":9},{"text":"P","hash":"_p","id":10},{"text":"PolicyReport","hash":"_policyreport","id":11},{"text":"PolicyServer","hash":"_policy_server","id":12},{"text":"V","hash":"_v","id":13},{"text":"ValidatingWebhookConfiguration","hash":"_validatingwebhookconfiguration","id":14},{"text":"W","hash":"_w","id":15},{"text":"waPC","hash":"_wapc","id":16},{"text":"WASI","hash":"_wasi","id":17},{"text":"Wasm","hash":"_wasm","id":18},{"text":"Wasmtime","hash":"_wasmtime","id":19}],"keyword":"[\"kubewarden\", \"glossary\"]"},"4":{"id":4,"text":"SUSE Security Admission Controller is a Kubernetes Policy Engine. It aims to be the Universal Policy Engine for Kubernetes. Admission Controller is derived from a vendor neutral, CNCF Sandbox project, called Kubewarden, originally created by SUSE Rancher. The name SUSE Security Admission Controller may be shortened to Admission Controller or abbreviated as SSAC. The name Kubewarden refers to the open-source community project. The name Kubewarden may also be used throughout this documentation in place of SUSE Security Admission Controller, Admission Controller, or SSAC. Admission Controller offers flexibility for policy admission and enforcement in a Kubernetes environment. Use any programming language that generates WebAssembly binaries to write your policies. WebAssembly enables policy compatibility across processors and operating systems. Reuse of policies from other policy engines without the need for rewriting them. Distribute policies using standard and secure mechanisms such as OCI compliant registries. Policy enforcement at admission ensures only compliant workloads run. The Admission Controller audit scanner actively and continuously checks policy enforcement over time. Verify policies using SLSA (Supply Chain Levels for Software Artifacts) tools and practices. SUSE Security Admission Controller provides a comprehensive approach to admission policy management. CNCF membership and a growing open source community and ecosystem help Admission Controller with transparency, collaboration and improvement. Security hardening. For example, enforce policies restricting container privileges, enforce network policies, or block insecure image registries. Compliance auditing. Ensure workloads comply with organizational or regulatory standards and best practices. Resource optimization. Enforce resource limits and quotas. There is further documentation of use cases on the use cases page. If new to the Admission Controller project start with the Quick start guide and the architecture page. Then it depends where your interests take you. For policy developers there are language specific sections in the tutorials. For integrators and administrators there is a 'how-tos' section. The explanations section contains useful background material. There is also a glossary. As stated on WebAssembly’s official website: WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications. Wasm was originally conceived as a browser \"extension\". However, the WebAssembly community is engaged in efforts to allow the execution of Wasm code outside browsers. Users can write Kubernetes policies using their favorite programming language, provided its toolchain can generate Wasm binaries. Wasm modules are portable, once built they can run on any kind of processor architecture and operating system. For example, a policy developed and built on Apple Silicon can run on AMD64/Intel64 Linux without conversion. Policy authors can reuse their skills, tools and best practices. Policies are \"traditional\" programs that can have reusable blocks (regular libraries). You can lint and test them and you can plug them into current CI and CD workflows. You can serve Admission Controller policies using a standard web server or, better, you can publish them in an OCI compliant registry as OCI artifacts.","title":"What is SUSE Security Admission Controller?","component":"admission-controller","version":"1.29","name":"introduction","url":"/admission-controller/1.29/en/introduction.html","titles":[{"text":"How does SUSE Security Admission Controller help?","hash":"_how_does_suse_security_admission_controller_help","id":1},{"text":"Benefits and value","hash":"_benefits_and_value","id":2},{"text":"Use cases","hash":"_use_cases","id":3},{"text":"New to Admission Controller?","hash":"_new_to_admission_controller","id":4},{"text":"What is WebAssembly?","hash":"_what_is_webassembly","id":5},{"text":"Why use WebAssembly?","hash":"_why_use_webassembly","id":6},{"text":"Policy distribution","hash":"_policy_distribution","id":7}],"keyword":"[\"kubewarden\", \"cncf\", \"cncf sandbox\", \"kubernetes\", \"admission policy manager\"]"},"5":{"id":5,"text":"SUSE Security Admission Controller organizes project documentation as follows: Introduction Quick start Tutorials—learning through examples. Explanations—underlying concepts. How-tos—getting Admission Controller tasks done. Reference Organization—this page Personas—who is Admission Controller for? Security Glossary Most of the material is in the four sections, Tutorials, Explanations, How-tos, and Reference. There may be overlap as the sections are not mutually exclusive. The Admission Controller project tries to follow the Diátaxis documentation framework. The left hand contents menu always indicates your current document location. The right hand sections menu shows the current page sections. There is also a 'breadcrumbs' feature at the top of the main content panel on each page. A search box facility is in the header panel of each page. A link to the page source on GitHub is at the bottom of each page. Also maintained are: RFCs for the project. A series of blog posts related to Kubewarden releases. Items related to the community management of Kubewarden.","title":"Documentation organization","component":"admission-controller","version":"1.29","name":"organization","url":"/admission-controller/1.29/en/organization.html","titles":[{"text":"Navigation","hash":"_navigation","id":1},{"text":"Search","hash":"_search","id":2},{"text":"Editing","hash":"_editing","id":3},{"text":"Other resources","hash":"_other_resources","id":4}],"keyword":"[\"admission policy manager\", Kubewarden, documentation, organization]"},"6":{"id":6,"text":"Persona Description Policy user Someone who takes a policy and uses it in a cluster. They deploy policies and observe results. They configure the policy settings but do not write the policy internal code (if there is any). Operator Someone operating Admission Controller in a cluster. Installs and maintains Admission Controller. Policy distributor Someone who has written a policy and wants to share it with others. They want the policy consumed by the “policy user” role. A distributor of Admission Controller policies, to places such as ArtifactHub or private OCI repositories. Policy developer A person designing and writing policies for Admission Controller for others to consume. Integrator Builds with, using, or on top of Admission Controller. Perhaps a custom UI or a helper tool for generating policies. Developer A person working on the Admission Controller product set. Building Admission Controller itself.","title":"Who is this project for? The personas.","component":"admission-controller","version":"1.29","name":"personas","url":"/admission-controller/1.29/en/personas.html","titles":[{"text":"SUSE Security Admission Controller personas","hash":"_suse_security_admission_controller_personas","id":1}],"keyword":"[Kubewarden, documentation, personas]"},"7":{"id":7,"text":"The SUSE Security Admission Controller stack comprises: One or more ClusterAdmissionPolicy resources: this defines policies for Kubernetes clusters. One or more PolicyServer resources: representing a deployment of a Admission Controller PolicyServer. The Admission Controller PolicyServer loads and evaluates your administrator’s policies. One or more AdmissionPolicy resources: policies for a defined namespace. A deployment of a kubewarden-controller: this controller monitors the ClusterAdmissionPolicy resources and interacts with the Admission Controller PolicyServer components. Admission Controller describes its Kubernetes Custom Resource Definitions (CRDs) here. Admission Controller CRDs mentioned in this tutorial and in the rest of documentation have short names, which are easier to use. These are the short names for the CRDs: Resource shortName AdmissionPolicies ap ClusterAdmissionPolicies cap AdmissionPolicyGroups apg ClusterAdmissionPolicyGroups capg PolicyServers ps Authentication You can retrieve Admission Controller policies from the GitHub container registry at https://ghcr.io. You need authentication to use the repository with the Admission Controller CLI, a GitHub personal access token (PAT). Their documentation guides you through creating one if you haven’t already done so. Then you authenticate with a command like: echo $PAT | docker login ghcr.io --username <my-gh-username> --password-stdin Deploy the Admission Controller stack using helm charts as follows: helm repo add kubewarden https://charts.kubewarden.io helm repo update kubewarden Install the following Helm charts in the kubewarden namespace in your Kubernetes cluster: kubewarden-crds, which registers the ClusterAdmissionPolicy, AdmissionPolicy and PolicyServer Custom Resource Definitions. Also, the PolicyReport Custom Resource Definitions used by the audit scanner. kubewarden-controller, which installs the Admission Controller controller and the audit scanner If you need to disable the audit scanner component check the audit scanner installation documentation page. kubewarden-defaults, which creates a PolicyServer resource named default. It can also install a set of recommended policies to secure your cluster by enforcing well known best practices. helm install --wait -n kubewarden --create-namespace kubewarden-crds kubewarden/kubewarden-crds helm install --wait -n kubewarden kubewarden-controller kubewarden/kubewarden-controller helm install --wait -n kubewarden kubewarden-defaults kubewarden/kubewarden-defaults Since v0.4.0, a PolicyServer resource named default isn’t created using the kubewarden-controller chart. Now a Helm chart called kubewarden-defaults, installs the default policy server. This means that if not using the latest version of the kubewarden-controller while upgrading or deleting, your default policy server isn’t upgraded or deleted. So, you might run into issues if you try to install the kubewarden-defaults with conflicting information, for example, the same policy server name. To install future upgrades of the kubewarden-defaults Helm chart remove the existing PolicyServer resource created by the kubewarden-controller before installing the new chart. Now you can update your policy server using Helm upgrades without resource conflicts. When you remove the PolicyServer, you remove all the policies bound to it as well. The default configuration values are sufficient for most deployments. The documentation describes all the options. Admission Controller has three main components which you interact with: The PolicyServer The ClusterAdmissionPolicy The AdmissionPolicy The kubewarden-controller manages a Admission Controller PolicyServer. You can deploy multiple PolicyServers in the same Kubernetes cluster. A PolicyServer validates incoming requests by executing Admission Controller policies against them. This is the default PolicyServer configuration: apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: reserved-instance-for-tenant-a spec: image: ghcr.io/kubewarden/policy-server:v1.3.0 replicas: 2 serviceAccountName: ~ env: - name: KUBEWARDEN_LOG_LEVEL value: debug Check the latest released PolicyServer version and change the tag to match. Overview of the attributes of the PolicyServer resource: Required Placeholder Description Y image The name of the container image Y replicas The number of desired instances N serviceAccountName The name of the ServiceAccount to use for the PolicyServer deployment. If there is no provided value, the default ServiceAccount from the installation namespace, of kubewarden-controller, gets used. N env The list of environment variables N annotations The list of annotations Changing any of these attributes causes a PolicyServer deployment with the new configuration. The ClusterAdmissionPolicy resource is the core of the Admission Controller stack. It defines how policies evaluate requests. Enforcing policies is the most common operation which a Kubernetes administrator performs. You can declare as many policies as you want, each targets one or more Kubernetes resources (that is, pods, Custom Resource and others). You also specify the type of operations applied to targeted resources. The operations available are CREATE, UPDATE, DELETE and CONNECT. Default ClusterAdmissionPolicy configuration: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-capabilities spec: policyServer: reserved-instance-for-tenant-a module: registry://ghcr.io/kubewarden/policies/psp-capabilities:v0.1.9 rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE mutating: true settings: allowed_capabilities: - CHOWN required_drop_capabilities: - NET_ADMIN Overview of the attributes of the ClusterAdmissionPolicy resource: Required Placeholder Description N policy-server Identifies an existing PolicyServer object. Only this PolicyServer instance serves the policy. The policy server named default serves a ClusterAdmissionPolicy without an explicit PolicyServer. Y module The location of the Admission Controller policy. The following schemes are allowed: N - registry: Policy download from an OCI artifacts compliant container registry. Example: registry://<OCI registry/policy URL> N - http, https: Policy download from a regular HTTP(s) server. Example: https://<website/policy URL> N - file: Load the policy from a file in the computer file system. Example: file:///<policy WASM binary full path> Y resources The Kubernetes resources evaluated by the policy Y operations What operations for the previously given types should be forwarded to this admission policy by the API server for evaluation. Y mutating Set this boolean value true for policies that can mutate incoming requests N settings A free-form object that contains the policy configuration values N failurePolicy The action to take if the request evaluated by a policy results in an error. The following options are allowed: N - Ignore: ignore an error calling the webhook and the API request continues. N - Fail: an error calling the webhook causes the admission to fail and API request rejection. The controller registers the ClusterAdmissionPolicy resources * webhook scope. This means that registered webhooks forward all requests matching the given resources and operations, either namespaced or cluster-wide resources. AdmissionPolicy is a namespace-wide resource. The policy processes only the requests that are targeting the Namespace with the AdmissionPolicy defined. Other than that, there are no functional differences between the AdmissionPolicy and ClusterAdmissionPolicy resources. AdmissionPolicy requires Kubernetes 1.21.0 or greater. This is because Admission Controller uses the kubernetes.io/metadata.name label, introduced in Kubernetes 1.21.0 The complete documentation of these Custom Resources is here or on docs.crds.dev. We will use the pod-privileged policy. We want to prevent the creation of privileged containers inside our Kubernetes cluster by enforcing this policy. Let’s define a ClusterAdmissionPolicy to do that: kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: privileged-pods spec: module: registry://ghcr.io/kubewarden/policies/pod-privileged:v0.2.2 rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE mutating: false EOF This produces the following output: clusteradmissionpolicy.policies.kubewarden.io/privileged-pods created After instantiating a ClusterAdmissionPolicy, the status becomes pending, and it forces a rollout of the targeted PolicyServer. In the example, it’s the PolicyServer named default. You can monitor the rollout by running the following command: kubectl get clusteradmissionpolicy.policies.kubewarden.io/privileged-pods You should see the following output: NAME POLICY SERVER MUTATING STATUS privileged-pods default false pending Once the new policy is ready, the kubewarden-controller registers a ValidatingWebhookConfiguration object to serve it. The ClusterAdmissionPolicy status becomes active once the Deployment completes for every PolicyServer instance. Show ValidatingWebhookConfigurations with the following command: kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io -l kubewarden You should see the following output: NAME WEBHOOKS AGE clusterwide-privileged-pods 1 9s Once the ClusterAdmissionPolicy is active and the ValidatingWebhookConfiguration registers, you can test the policy. First, you can create a Pod with a Container not in privileged mode: kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: unprivileged-pod spec: containers: - name: nginx image: nginx:latest EOF This produces the following output: pod/unprivileged-pod created The Pod is successfully created. Now, you can create a Pod with at least one Container privileged flag: kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: privileged-pod spec: containers: - name: nginx image: nginx:latest securityContext: privileged: true EOF The policy denies creation of the Pod and you should see the following message: Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-privileged-pods.kubewarden.admission\" denied the request: Privileged container is not allowed Both examples didn’t define a namespace, which means the default namespace was the target. However, as you could see in the second example, the policy is still applied. As stated previously, this is due to the scope being cluster-wide and not targeting a specific namespace. You can remove the resources created by uninstalling the helm charts as follows: helm uninstall --namespace kubewarden kubewarden-defaults helm uninstall --namespace kubewarden kubewarden-controller helm uninstall --namespace kubewarden kubewarden-crds After removal of the helm charts remove the Kubernetes namespace used to deploy the Admission Controller stack: kubectl delete namespace kubewarden Admission Controller contains a helm pre-delete hook that removes all PolicyServer`s and `kubewarden-controller`s. Then the `kubewarden-controller deletes all resources, so it’s important that kubewarden-controller is running when helm uninstall executes. Admission Controller deletes ValidatingWebhookConfigurations and MutatingWebhookConfigurations. Check this with: kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io -l \"kubewarden\" kubectl get mutatingwebhookconfigurations.admissionregistration.k8s.io -l \"kubewarden\" If these resources aren’t automatically removed, remove them manually using the following command: kubectl delete -l \"kubewarden\" validatingwebhookconfigurations.admissionregistration.k8s.io kubectl delete -l \"kubewarden\" mutatingwebhookconfigurations.admissionregistration.k8s.io ClusterAdmissionPolicy is the core resource that a cluster operator has to manage. The kubewarden-controller module automatically takes care of the configuration for the rest of the resources needed to run the policies. Now, you are ready to deploy Admission Controller! Have a look at the policies on artifacthub.io, on GitHub, or reuse existing Rego policies as shown in the following chapters. Full list of available policies on ArtifactHub","title":"Quick start","component":"admission-controller","version":"1.29","name":"quick-start","url":"/admission-controller/1.29/en/quick-start.html","titles":[{"text":"Installation","hash":"_installation","id":1},{"text":"Main components","hash":"_main_components","id":2},{"text":"PolicyServer","hash":"_policyserver","id":3},{"text":"ClusterAdmissionPolicy","hash":"_clusteradmissionpolicy","id":4},{"text":"AdmissionPolicy","hash":"_admissionpolicy","id":5},{"text":"Example: Enforce your first policy","hash":"_example_enforce_your_first_policy","id":6},{"text":"Uninstall","hash":"_uninstall","id":7},{"text":"Wrapping up","hash":"_wrapping_up","id":8},{"text":"What’s next?","hash":"_whats_next","id":9}],"keyword":"[\"SUSE Security Admission Controller\", \"installation\", \"quick start\", \"policyserver\", \"clusteradmissionpolicy\", \"admissionpolicy\"]"},"8":{"id":8,"text":"These are a few example use cases for SUSE Security Admission Controller’s personas. I deploy Admission Controller and its default configuration with its kubewarden-defaults Helm chart, in the kubewarden Namespace. This deploys a default PolicyServer and recommended ClusterAdmissionPolicies in the kubewarden namespace, solely under the control of the Kubernetes operator. As an operator, I can add more PolicyServers under a managed Namespace (such as kubewarden) to distribute load and fault tolerance. Operators can deploy more ClusterAdmissionPolicies and ClusterAdmissionPolicyGroups. These check all the Kubernetes resources, for any type of operation (GET, CREATE, UPDATE, PATCH, DELETE, PROXY). This ensures operations into the cluster are safe and compliant. These include: security compliance (to industry standards or company regulations) resource optimization (via mutating policies) governance of Kubernetes environments (via labels and naming conventions) best practices image verification Security expectations change over time. Previously correct deployments in the cluster may no longer be so. Yet Admission Controller has already accepted those operations in the cluster. In these situations, the operator can deploy the Audit Scanner feature, a CronJob that runs periodically and evaluates the existing resources in the cluster. This checks the cluster is safe and compliant even over time. The operator can configure policies in monitor mode instead of protect mode, to learn from the state of the cluster without blocking operations. Operators can receive information from policies and the Admission Controller stack by consuming logs and OpenTelemetry information for metrics and tracing. As an operator, I deploy Admission Controller as in Case A for a set of policies of my choosing. This provides me with a safe baseline in the cluster, that other users can’t evade. As well as Case A, I have different personas per Namespaces: perhaps teams, team administrators, test deployments, and others. I allow each Namespace administrator to self-service by letting them deploy PolicyServers in their Namespace, along with namespaced AdmissionPolicies and AdmissionPolicyGroups. This architecture means that they’re in control of their PolicyServer and policies. The policies only apply to their Namespace, and they constrain resource usage to their Namespace. It also permits the operator to segregate noisy tenants, reserving performant PolicyServers for those tenants and tasks that need high throughput and low latency, for example. Admission Controller achieves this by supporting any language that compiles to WebAssembly as possible target languages for policies. This means that policy authors can reuse their workflows (git, CI, editors, peer reviews, etc.), and tools: languages, language libraries, testing harnesses and frameworks, etc. It permits re-using Domain Specific Languages (like Rego, CEL, Kyverno’s YAML+macros) or general-purpose languages (like Go, Rust, C#, Javascript, any that compiles to Wasm). Admission Controller provides SDKs for a few languages as first-class support. Admission Controller policies can be simple or complex context-aware policies. Context-aware policies are also used to interface with separate workloads (for example, to obtain information from an image scanner long-running service). As a system integrator, I want to re-use Admission Controller, and possibly re-use other solutions by including them in Admission Controller. As a system integrator, I can reuse parts of Admission Controller. For example, the policy-server, to police resources, internal or external to the Kubernetes cluster via the \"raw policies\" feature. System integrators can choose to deploy the kubewarden-controller or manage the CRDs on their own. They can choose to deploy or scale the Audit Scanner as needed. System integrators can create new components. For example, an image scanner, and interface with it via a context-aware policy, without having a monolithic implementation in a Kubernetes controller. Admission Controller doesn’t intend to: Replace Kubernetes built-in security features, but complement them: Admission Controller provides migration from PSPs. You can re-use ValidatingAdmissionPolicies and CEL policies with Admission Controller’s cel-policy. Admission Controller policies can be mutating, while Pod Security Admission cannot. Admission Controller policies benefit from the Admission Controller stack features (audit scanner, telemetry, CRD management). Provide runtime security like intrusion detection or runtime container isolation. Provide host system protection of clusters. Provide infinite policy execution flexibility. To prevent DoS attacks, policies' processing times are limited.","title":"SUSE Security Admission Controller use cases","component":"admission-controller","version":"1.29","name":"use-cases","url":"/admission-controller/1.29/en/use-cases.html","titles":[{"text":"Case A: As a Kubernetes operator, I want to ensure my cluster is safe and compliant.","hash":"_case_a_as_a_kubernetes_operator_i_want_to_ensure_my_cluster_is_safe_and_compliant","id":1},{"text":"Case B: As a Kubernetes operator, I want to provide a framework to my Kubernetes users so they can self-service in their Namespaces.","hash":"_case_b_as_a_kubernetes_operator_i_want_to_provide_a_framework_to_my_kubernetes_users_so_they_can_self_service_in_their_namespaces","id":2},{"text":"Case C: As a policy author, I want to use the tools and languages that I know to write new policies.","hash":"_case_c_as_a_policy_author_i_want_to_use_the_tools_and_languages_that_i_know_to_write_new_policies","id":3},{"text":"Case D: As a system integrator, I want to re-use Admission Controller as part of my security and compliance solution.","hash":"_case_d_as_a_system_integrator_i_want_to_re_use_admission_controller_as_part_of_my_security_and_compliance_solution","id":4},{"text":"Non-goals","hash":"_non_goals","id":5}],"keyword":"Kubewarden, documentation, use cases, case studies"},"9":{"id":9,"text":"SUSE Security Admission Controller is a Kubernetes policy engine. It uses policies written in a programming language of your choosing. This language must generate a WebAssembly binary for SUSE Security Admission Controller to use. A policy is an Open Container Initiative (OCI) artifact. It contains a WebAssembly module, the policy code, and the metadata required by PolicyServer to perform admission request validations and mutations. Like Kubernetes, SUSE Security Admission Controller uses the terms 'PolicyServer' when discussing the SUSE Security Admission Controller policy server and policy-server when discussing Pod or Deployment of a SUSE Security Admission Controller PolicyServer. The team designed SUSE Security Admission Controller to use core features of Kubernetes, without reinventing the wheel. The project utilizes a combination of: Kubernetes Controllers Custom Resource Definitions (CRDs) Webhooks (Validation and Mutating) the Control Plane’s event notification system SUSE Security Admission Controller operates seamlessly within the Kubernetes ecosystem. At its core, the SUSE Security Admission Controller controller is a Kubernetes controller, monitoring SUSE Security Admission Controller Custom Resource Definitions (CRDs) and configuring Kubernetes resources to execute them. This integration ensures that SUSE Security Admission Controller uses the built-in Kubernetes mechanisms, such as controllers and CRDs, to watch, manage, and apply security policies efficiently. SUSE Security Admission Controller employs CRDs to define and manage SUSE Security Admission Controller resources, which specify the rules for admission request validations. This design enables users to extend Kubernetes' capabilities with custom admission controls, ensuring that security and compliance policy enforcement is consistent across the cluster. When setup by the SUSE Security Admission Controller controller, the policy-server Service receives admission requests directly from the Kubernetes control plane, using ValidationWebhooks and MutatingWebhooks. This direct interaction streamlines the admission control process, reducing latency and increasing efficiency in policy enforcement. WebAssembly offers a sand-boxed execution environment, ensuring policies run in isolation, thus enhancing the security and stability of the policy enforcement mechanism. This isolation prevents policies from interfering with each other or with the host system, mitigating the risk of malicious code execution. WebAssembly is portable and efficient, enabling policies to run across different environments without modification. This cross-platform compatibility ensures that SUSE Security Admission Controller policies are versatile, so you can distribute and run them on diverse Kubernetes clusters Policies in SUSE Security Admission Controller are OCI (Open Container Initiative) artifacts. This standardization makes the distribution and versioning of policies easier, Policies contain both the WebAssembly modules for enforcement logic, and metadata necessary for the PolicyServer’s operation. Using OCI artifacts promotes interoperability and ease of management within cloud ecosystems. SUSE Security Admission Controller associates policies with their own 'validation' or 'mutating' webhook, allowing for fine-grained application of admission controls. This flexibility enables administrators to tailor the enforcement of policies according to specific needs, enhancing the security and compliance posture of the Kubernetes cluster. SUSE Security Admission Controller consists of these components: SUSE Security Admission Controller Custom Resources are Kubernetes Custom Resources that simplify the process of managing policies. SUSE Security Admission Controller integrates with Kubernetes using Dynamic Admission Control. In particular, SUSE Security Admission Controller operates as a Kubernetes Admission Webhook. The policy-server is the Webhook endpoint called by the Kubernetes API server to validate requests. The SUSE Security Admission Controller controller is a Kubernetes controller that reconciles SUSE Security Admission Controller’s Custom Resources. This controller creates parts of the SUSE Security Admission Controller stack. It also translates SUSE Security Admission Controller configuration into Kubernetes directives. The kubewarden-controller registers the needed MutatingWebhookConfiguration or ValidatingWebhookConfiguration objects with the Kubernetes API server. SUSE Security Admission Controller policies are WebAssembly modules holding the validation or mutation logic. WebAssembly modules have detailed documentation in the writing policies sections. The PolicyServer receives requests for validation. It validates the requests by executing SUSE Security Admission Controller policies. The audit scanner inspects the resources already in the cluster. It identifies those violating SUSE Security Admission Controller policies. Audit scanner constantly checks the resources declared in the cluster, flagging the ones that no longer adhere to the deployed SUSE Security Admission Controller policies. %%{ init: { \"flowchart\": { \"htmlLabels\": false, } } }%% graph LR accTitle: Kubewarden architecture accDescr: A diagram showing the architecture of Kubewarden components. subgraph \" \" direction LR subgraph \" \" direction LR k8s((\"Kubernetes\")) registry[(\"OCI registry\")] end subgraph kw[\"`**Kubewarden**`\"] controller(\"`**KW controller**`\") subgraph policy-server[\"`**policy-server**`\"] direction LR kw-policy-1{{\"Policy 1\"}} kw-policy-2{{\"Policy 2\"}} kw-policy-3{{\"Policy 3\"}} end webhooks([\"ValidationWebhooks and\\nMutatingWebhooks\"]) audit-scanner[\"KW audit scanner\"] end end policy-server -->|\"downloads\\npolicies from\"| registry controller -->|\"watches for\\nevents\"| k8s controller -->|\"creates\"| webhooks controller -->|\"creates\\npolicy-server\\ninstances\"| policy-server k8s -. \"sends admission\\nrequests using\" .-> webhooks webhooks -. \"sent admission\\nrequests from K8s\" .-> policy-server audit-scanner -->|\"sends audit\\nadmission requests\"| policy-serverFigure 1. Architecture On a new cluster, the SUSE Security Admission Controller components defined are: Custom Resource Definitions (CRD) The kubewarden-controller Deployment A PolicyServer Custom Resource named default. When the kubewarden-controller notices the default PolicyServer resource, it creates a policy-server deployment of the PolicyServer component. SUSE Security Admission Controller works as a Kubernetes Admission Webhook. Kubernetes specifies using Transport Layer Security (TLS) to secure all Webhook endpoints. The kubewarden-controller sets up this secure communication by: Generating a self-signed Certificate Authority Use this CA to generate a TLS certificate key for the policy-server Service. These objects are all stored as Secret resources in Kubernetes. Finally, kubewarden-controller creates the policy-server Deployment and a Kubernetes ClusterIP Service to expose it inside the cluster network. A policy must define which policy-server it must run on. It binds to a policy-server instance. You can have different policies with the same Wasm module and settings running in many PolicyServers. However, you can’t have a single policy definition that runs in many PolicyServers. The kubewarden-controller notices the new ClusterAdmissionPolicy resource and so finds the bound policy-server and reconciles it. When creating, modifying or deleting a ClusterAdmissionPolicy or AdmissionPolicy, a reconciliation loop activates in kubewarden-controller, for the policy-server owning the policy. This reconciliation loop creates a ConfigMap with all the policies bound to the policy-server. Then the Deployment rollout of the policy-server starts. This results in starting the new policy-server instance with the updated configuration. At start time, the policy-server reads its configuration from the ConfigMap and downloads all the SUSE Security Admission Controller policies specified. You can download SUSE Security Admission Controller policies from remote HTTP servers and container registries. You use policy settings parameters to tune a policies' behavior. After startup and policy download the policy-server checks the policy settings provided by the user are valid. The policy-server validates policy settings by invoking the validate_setting function exposed by each policy. There is further documentation in the specification reference section of the documentation. If any policies received wrong configuration parameters, from the users policy specification, then any admission requests evaluated by that policy return an error. When SUSE Security Admission Controller has configured all policies, the policy-server spawns a pool of worker threads to evaluate incoming requests using the SUSE Security Admission Controller policies specified by the user. Finally, the policy-server starts a HTTPS server, listening to incoming validation requests. SUSE Security Admission Controller uses the TLS key and certificate created by the SUSE Security Admission Controller controller to secure the web server. The web server exposes each policy by a dedicated path following the naming convention: /validate/<policy ID>. All policy-server instances have a Readiness Probe, that kubewarden-controller uses to check when the policy-server Deployment is ready to evaluate an AdmissionReview. Once SUSE Security Admission Controller marks the policy-server deployment as 'uniquely reachable' or Ready, the kubewarden-controller makes the Kubernetes API server aware of the new policy. This is by creating either a MutatingWebhookConfiguration or a ValidatingWebhookConfiguration object. In this context, 'uniquely reachable', means that all the PolicyServer instances in the cluster have the latest policy configuration installed. The distinction, is a fine point, but is necessary, due to how roll-out of PolicyServers works. It’s possible to have the same policy, on different PolicyServers with different configurations. Each policy has a dedicated MutatingWebhookConfiguration or ValidatingWebhookConfiguration pointing to the Webhook endpoint served by policy-server. The endpoint is reachable at the /validate/<policy ID> URL. Now that all the necessary plumbing is complete, Kubernetes starts sending Admission Review requests to the right policy-server endpoints. A policy-server receives the Admission Request object and, based on the endpoint that received the request, uses the correct policy to evaluate it. SUSE Security Admission Controller evaluates each policy inside its own dedicated WebAssembly sand-box. The communication between a policy-server instance (the \"host\") and the WebAssembly policy (the \"guest\") uses the waPC communication protocol. The protocol description is part of the writing policies documentation. Policies can also use the interfaces provided by the Web Assembly System Interface (WASI). A cluster can have many PolicyServers and SUSE Security Admission Controller policies defined. There are benefits of having many PolicyServers: You can isolate noisy namespaces or tenants, or those generating many policy evaluations, from the rest of the cluster so as not to adversely affect other cluster operations. You can run mission-critical policies in a dedicated PolicyServer pool, making your infrastructure more resilient. A PolicyServer resource defines each policy-server and a ClusterAdmissionPolicy or AdmissionPolicy resource defines each policy. A ClusterAdmissionPolicy and an AdmissionPolicy bind to a policy-server. Any ClusterAdmissionPolicy not specifying a policy-server binds to the default PolicyServer. If a ClusterAdmissionPolicy references a policy-server that doesn’t exist, its state is unschedulable. Each policy-server defines many validation endpoints, one for each policy defined in its configuration file. You can load the same policy many times, with different configuration parameters. The ValidatingWebhookConfiguration and MutatingWebhookConfiguration resources make the Kubernetes API server aware of these policies. Then kubewarden-controller keeps the API server and configuration resources in synchronization. The Kubernetes API server dispatches incoming admission requests to the correct validation endpoint exposed by policy-server.","title":"SUSE Security Admission Controller architecture","component":"admission-controller","version":"1.29","name":"architecture","url":"/admission-controller/1.29/en/explanations/architecture.html","titles":[{"text":"What is a policy?","hash":"_what_is_a_policy","id":1},{"text":"Design principles","hash":"_design_principles","id":2},{"text":"Making use of core Kubernetes features","hash":"_making_use_of_core_kubernetes_features","id":3},{"text":"Makes effective use of the Kubernetes architecture","hash":"_makes_effective_use_of_the_kubernetes_architecture","id":4},{"text":"Extensible policy definition","hash":"_extensible_policy_definition","id":5},{"text":"Direct admission control","hash":"_direct_admission_control","id":6},{"text":"OCI based policy artifacts","hash":"_oci_based_policy_artifacts","id":7},{"text":"Fine-grained policy application","hash":"_fine_grained_policy_application","id":8},{"text":"The SUSE Security Admission Controller stack","hash":"_the_suse_security_admission_controller_stack","id":9},{"text":"The journey of a SUSE Security Admission Controller policy","hash":"_the_journey_of_a_suse_security_admission_controller_policy","id":10},{"text":"Default PolicyServer","hash":"_default_policyserver","id":11},{"text":"Defining the first policy","hash":"_defining_the_first_policy","id":12},{"text":"Reconciliation of a policy-server","hash":"_reconciliation_of_a_policy_server","id":13},{"text":"Making Kubernetes aware of the policy","hash":"_making_kubernetes_aware_of_the_policy","id":14},{"text":"Policy in action","hash":"_policy_in_action","id":15},{"text":"How SUSE Security Admission Controller handles many PolicyServer and policies","hash":"_how_suse_security_admission_controller_handles_many_policyserver_and_policies","id":16}],"keyword":"[\"kubewarden\", \"kubernetes\", \"architecture\"]"},"10":{"id":10,"text":"Kubewarden v1.17.0 removed the cert-manager dependency. The controller is able to manage all the certificates used by all the components. Now, the controller has a new reconciliation loop that ensures the certificates are always up-to-date and the webhook configuration is correct. The Helm chart installation does the first certificate generation. It generates the root CA with ten years until expiration. The Helm chart installation also generates the controller webhook web server certificate, signed by the root CA. The API server use this to communicate with the Kubewarden controller to validate the CRDs. It has a one year expiration. Once the controller starts, its reconciler renews the certificates automatically when they’re about to expire. It also updates all the certificates and webhook configurations used by the entire Kubewarden stack. All the certificates generated by the Helm chart and later by the controller uses ECDSA P256 keys. The reconciliation loop renews certificates 60 days before expiration. Certificates rotate without downtime. The reconciliation loop takes care of renewing the root CA too. The controller generates a new root CA 60 days before expiration. The controller updates the CA bundle used by all the webhooks to include both the new root CA and the old one. The change of the root CA leads the reconciler to re-create the certificates issued to the webhooks. The propagation of the new certificates requires a period of time. However, during this time the updated CA bundle lets the API server continue to communicate with all the webhooks without any downtime. When a new certificate is ready, and the old one is invalid, the controller updates the CA bundle, used by webhooks, to include only the latest root CA. When a policy server, or controller web server certificate renews, the controller updates the secret with the new certificate signed by the root CA. Due to this reload feature, the controller, and the policy server, use the new certificate with no need to restart processes, hence no downtime.","title":"Certificate rotation","component":"admission-controller","version":"1.29","name":"certificates","url":"/admission-controller/1.29/en/explanations/certificates.html","titles":[],"keyword":"[\"kubewarden\", \"certificate\", \"controller\", \"reconciliation\"]"},"11":{"id":11,"text":"Developers can create policies that fetch information from a Kubernetes cluster at run time. These are context aware policies. Context aware policies can determine whether an AdmissionRequest is acceptable using information from resources deployed in the cluster. Context aware policies are only available in Kubewarden versions ≥ v1.6.0. Control of which resources a policy can access in the cluster is by by the policy server’s Service Account. A cluster administrator controls what a policy can access via Kubernetes RBAC rules. Context aware policies have only read access to the requested resources. For security reasons, only ClusterAdmissionPolicy policies can fetch information from the Kubernetes cluster. This is because unprivileged users can deploy AdmissionPolicy resources. If an unprivileged user deploys a context aware policy as an AdmissionPolicy, the system: Blocks all attempts to access Kubernetes resources. Reports them to the cluster administrator. By default, Kubewarden blocks all cluster resources. A Kubewarden administrator defines which Kubernetes resources each context aware policy can read. contextAwareResources to do this. The following example deploys a policy that requires access to the Deployment and Pod resources: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: context-aware-policy namespace: default spec: policyServer: default module: \"registry://ghcr.io/kubewarden/policies/context-aware-policy:v1.0.0\" settings: {} contextAwareResources: - apiVersion: \"apps/v1\" kind: \"deployment\" - apiVersion: \"v1\" kind: \"pod\" rules: - apiGroups: [\"apps\"] apiVersions: [\"v1\"] resources: [\"deployment\"] operations: - CREATE - UPDATE mutating: false Once deployed, this policy can read the data of the deployment and pod resources. Policy authors provide lists of Kubernetes resources for their context aware policy. Policy authors do this by annotating the policy. Kubewarden administrators view policy metadata using the kwctl inspect command. They can get a list of resources the policy needs access to. An administrator uses this list to populate the ClusterAdmissionPolicy definition. To prevent system abuse, Kubewarden administrators must review the resources the policy accesses. For example, a policy evaluating ingress objects would have good reasons to read the Ingress resources defined in the cluster. The same policy can’t justify having access to Secret resources. Policies should have the minimum access needed to function correctly. Kubernetes resource identification uses apiVersion and kind. Usually, apiVersion is a string in the format <api>/<version>. Resources from the core API group (Pod, Service, and others) shouldn’t define the group name, <api>. They should only define the <version> (for example, v1). For a core resource, the first won’t work, the second will. - apiVersion: \"core/v1\" kind: \"pod\" - apiVersion: \"v1\" kind: \"pod\" All other Kubernetes resources need the full definition: <api>/<version>. You can find more detailed information about context aware policies in this section of the reference documentation.","title":"Context aware policies","component":"admission-controller","version":"1.29","name":"context-aware-policies","url":"/admission-controller/1.29/en/explanations/context-aware-policies.html","titles":[{"text":"Further readings","hash":"_further_readings","id":1}],"keyword":"[\"kubewarden\", \"context-aware policy\", \"clusteradmissionpolicy\", \"admissionpolicy\", \"admissionrequest\", \"cluster administrator\"]"},"12":{"id":12,"text":"Kubewarden policies are WebAssembly (Wasm) binaries evaluated by the Kubewarden Policy Server. The Kubewarden policy server loads policies from these sources: Local filesystem HTTP(s) server OCI-compliant registries: Distribution GitHub container registry Azure container registry Amazon ECR Google container registry Kubewarden recommends distributing Kubewarden policies via a regular OCI-compliant registry. Container registries are a mandatory requirement for any Kubernetes cluster. Having a single place to store, and secure, all the artifacts required by a cluster is beneficial. The OCI image format specification permits storing any binary blob inside a regular OCI-compliant container registry. The target OCI-compliant registry must support artifacts to successfully push a Kubewarden Policy to it. You can use the kwctl CLI to push a Kubewarden Policy to an OCI-compliant registry. You also annotate a policy with kwctl. The process of annotating a Kubewarden policy is done by adding Wasm custom sections to the policy binary. This means that the policy packages its own metadata. The kwctl annotate command requires two inputs: the Kubewarden policy to annotate, a local file in the filesystem. the annotations file, a file containing a YAML description of the policy metadata. This file is usually located in the root project folder of your policy. For example, you can save this file as metadata.yml in the current directory: rules: - apiGroups: [\"*\"] apiVersions: [\"*\"] resources: [\"*\"] operations: [\"*\"] mutating: false annotations: io.kubewarden.policy.title: palindromify io.kubewarden.policy.version: 0.1.0 io.kubewarden.policy.description: Allows you to reject palindrome names in resources and namespace names, or to only accept palindrome names io.kubewarden.policy.author: Name Surname <name.surname@example.com> io.kubewarden.policy.url: https://github.com/<org>/palindromify io.kubewarden.policy.source: https://github.com/<org>/palindromify io.kubewarden.policy.license: Apache-2.0 io.kubewarden.policy.usage: | This is markdown text and as such allows you to define a free form usage text. This policy allows you to reject requests if: - The name of the resource is a palindrome name. - The namespace name where this resource is created has a palindrome name. This policy accepts the following settings: - `invert_behavior`: bool that inverts the policy behavior. If enabled, only palindrome names will be accepted. Now, let’s annotate the policy: $ kwctl annotate policy.wasm \\ --metadata-path metadata.yml \\ --output-path annotated-policy.wasm The annotation process performs certain optimizations on the policy, so often the annotated policy is smaller than the original. This depends considerably on the toolchain used to produce the original Wasm object. Use kwctl inspect to check your policy $ kwctl inspect annotated-policy.wasm 2023-08-24T12:06:27.986401Z INFO sigstore::cosign::client_builder: Rekor public key not provided. Rekor integration disabled 2023-08-24T12:06:27.986449Z INFO sigstore::cosign::client_builder: No Fulcio cert has been provided. Fulcio integration disabled Details title: palindromify description: Allows you to reject palindrome names in resources and namespace names, or to only accept palindrome names author: Name Surname <name.surname@example.com> url: https://github.com/<org>/palindromify source: https://github.com/<org>/palindromify license: Apache-2.0 mutating: false background audit support: true context aware: false execution mode: kubewarden-wapc protocol version: 1 Annotations io.kubewarden.kwctl 1.7.0-rc2 Rules ──────────────────── - apiGroups: - '*' apiVersions: - '*' resources: - '*' operations: - '*' ──────────────────── Usage This is markdown text and as such allows you to define a free form usage text. This policy allows you to reject requests if: • The name of the resource is a palindrome name. • The namespace name where this resource is created has a palindrome name. This policy accepts the following settings: • invert_behavior: bool that inverts the policy behavior. If enabled, only palindrome names will be accepted. Cannot determine if the policy has been signed. There was an error while attempting to fetch its signatures from the remote registry: invalid uri You can push an annotated policy like this: $ kwctl push annotated-policy.wasm \\ <oci-registry>/kubewarden-policies/palindromify-policy:v0.0.1 It’s discouraged to push unannotated policies. The policy server uses the metadata provided by annotations to correctly execute a policy. By default, kwctl push refuses to push such a policy to an OCI registry. If you need an unannotated policy, use the -‍-‍force flag of kwctl push. You can reference a policy from the Kubewarden Policy Server or kwctl as registry://<oci-registry>/kubewarden-policies/palindromify-policy:v0.0.1.","title":"Distributing policies","component":"admission-controller","version":"1.29","name":"distributing-policies","url":"/admission-controller/1.29/en/explanations/distributing-policies.html","titles":[{"text":"Pushing policies to an OCI-compliant registry","hash":"_pushing_policies_to_an_oci_compliant_registry","id":1},{"text":"Annotating the policy","hash":"_annotating_the_policy","id":2},{"text":"Pushing the policy","hash":"_pushing_the_policy","id":3}],"keyword":"[\"oci\", \"kubewarden\", \"policy\", \"wasm\", \"webassembly\"]"},"13":{"id":13,"text":"Mutating policies receive an object request and rebuild it (mutate it) into a new request. This is according to the defined values in the settings of the policy. The request proceeds through the Kubernetes API, potentially being evaluated by other policies. To permit mutating request behavior, set the ClusterAdmissionPolicy.mutating field to true. However, if you set the ClusterAdmissionPolicy.mutating field to false, the mutated requests will be rejected. To prevent system abuse Kubewarden administrators should review mutating policies. Mutating policies could, for example, modify a workload, such that it permits privileged container creation. If in doubt, split policies into mutating and validating policies, instead of writing or deploying policies that both validate and mutate. This is particularly important when using a DSL (such as Rego) to build complex policies. Mutating policies return requests that proceed through the Kubernetes API. If there are other Kubernetes Controllers that listen for those same resources, they may mutate them back in a follow-up request. This could lead to an infinite feedback loop of mutations. Perform the mutation against: The lower type of resource (e.g: Pod). The highest type of resource (e.g: Deployment). Note: this could still lead to loops if a controller is managing those resources. For example, controllers of GitOps solutions (like fleet, flux, argo, …​) or other third party controllers that translate their own CRDs into Deployment objects. You can see a mutating policy at work. Create the following ClusterAdmissionPolicy with the mutating field set to true: # Command kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1alpha2 kind: ClusterAdmissionPolicy metadata: name: psp-user-group spec: module: \"registry://ghcr.io/kubewarden/policies/user-group-psp:v0.1.5\" rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE mutating: true settings: run_as_user: rule: \"MustRunAs\" ranges: - min: 1000 max: 2000 - min: 3000 max: 4000 run_as_group: rule: \"RunAsAny\" supplemental_groups: rule: \"RunAsAny\" EOF # Output clusteradmissionpolicy.policies.kubewarden.io/psp-user-group created You use the psp-user-group policy to control users and groups in containers and can mutate the requests. In the previous example, you set the runAsUser field and it’s added to the container securityContext section. As the mutating field is true, the following request succeeds: # Command kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: pause-user-group spec: containers: - name: pause image: registry.k8s.io/pause EOF # Output pod/pause-user-group created You can see the results of the container’s securityContext: # Command kubectl get pods pause-user-group -o jsonpath='{ .spec.containers[].securityContext }' # Output {\"runAsUser\":1000} Now, modify the ClusterAdmissionPolicy by setting the field mutating to false: # Command kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1alpha2 kind: ClusterAdmissionPolicy metadata: name: psp-user-group spec: module: \"registry://ghcr.io/kubewarden/policies/user-group-psp:v0.1.5\" rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE mutating: false settings: run_as_user: rule: \"MustRunAs\" ranges: - min: 1000 max: 2000 - min: 3000 max: 4000 run_as_group: rule: \"RunAsAny\" supplemental_groups: rule: \"RunAsAny\" EOF # Output clusteradmissionpolicy.policies.kubewarden.io/psp-user-group configured As the mutating field is false, the following request fail: # Command kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: pause-user-group spec: containers: - name: pause image: registry.k8s.io/pause EOF # Output Error from server: error when creating \".\\\\pause-user-group.yaml\": admission webhook \"psp-user-group.kubewarden.admission\" denied the request: Request rejected by policy psp-user-group. The policy attempted to mutate the request, but it is currently configured to not allow mutations. In conclusion, you can see Kubewarden replicates the same behavior as the deprecated Kubernetes Pod Security Policies (PSP).","title":"Mutating policies","component":"admission-controller","version":"1.29","name":"mutating-policies","url":"/admission-controller/1.29/en/explanations/mutating-policies.html","titles":[{"text":"Why mutating policies can be dangerous","hash":"_why_mutating_policies_can_be_dangerous","id":1},{"text":"Unreviewed mutating policies can introduce vulnerabilities","hash":"_unreviewed_mutating_policies_can_introduce_vulnerabilities","id":2},{"text":"Solution","hash":"_solution","id":3},{"text":"Misconfigured mutating policies together with 3rd party Kubernetes Controllers can get stuck in an infinite loop","hash":"_misconfigured_mutating_policies_together_with_3rd_party_kubernetes_controllers_can_get_stuck_in_an_infinite_loop","id":4},{"text":"Solution","hash":"_solution_2","id":5},{"text":"Examples","hash":"_examples","id":6}],"keyword":"[\"kubewarden\", \"policy mutating\", \"kubernetes\", \"clusteradmissionpolicy\", \"admissionpolicy\"]"},"14":{"id":14,"text":"The policy group feature permits users to create complex policies by combining simpler ones. It introduces two new Custom Resource Definitions (CRDs): AdmissionPolicyGroup: for admission policies that apply to specific namespaces. ClusterAdmissionPolicyGroup: for admission policies that apply across the entire cluster. These policy groups enable users to use existing policies, reducing the need for custom policy creation and enhancing reuse. By avoiding duplication of policy logic, users can simplify management and create custom policies with a DSL-like configuration. Policy groups enable the combined evaluation of multiple policies using logical operators. This permits the definition of complex logic. However, while ordinary policies can include mutation logic to modify resources during admission, policy groups only do validation. Configuration for policy groups is similar to that of ordinary policies. The difference is the addition of the expression, message, and policies fields, and the declaration of context-aware rules in a different location. This is an example of a ClusterAdmissionPolicyGroup that you can use in the next sections to explain the different fields: A ClusterAdmissionPolicyGroup that rejects Pods that use images with the latest tag, unless the images are signed by two trusted parties: Alice and Bob. apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicyGroup # or AdmissionPolicyGroup metadata: name: demo spec: rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE policies: signed_by_alice: module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.0 settings: modifyImagesWithDigest: false signatures: - image: \"*\" pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEyg65hiNHt8FXTamzCn34IE3qMGcV yQz3gPlhoKq3yqa1GIofcgLjUZtcKlUSVAU2/S5gXqyDnsW6466Jx/ZVlg== -----END PUBLIC KEY----- signed_by_bob: module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.0 settings: modifyImagesWithDigest: false signatures: - image: \"*\" pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEswA3Ec4w1ErOpeLPfCdkrh8jvk3X urm8ZrXi4S3an70k8bf1OlGnI/aHCcGleewHbBk1iByySMwr8BabchXGSg== -----END PUBLIC KEY----- reject_latest: module: registry://ghcr.io/kubewarden/policies/trusted-repos:v0.2.0 settings: tags: reject: - latest expression: \"reject_latest() || (signed_by_alice() && signed_by_bob())\" message: \"the image is using the latest tag or is not signed by Alice and Bob\" This section covers the main configuration fields of a policy group. The policies field is a map of ordinary policies. Kubewarden calls policies by the policy group, to determine whether accept of reject the resource under evaluation. The definitions of these policies are a simplified version of ordinary Kubewarden policies, containing only the module, settings and contextAwareResources attributes. These elements are necessary for the policies to function within a policy group. A unique name identifies each policy of the group policy. For example, the following snippet defines three policies: signed_by_alice, signed_by_bob and reject_latest_tag. policies: signed_by_alice: module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.2.8 settings: {} # settings for the policy signed_by_bob: module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.2.8 settings: {} # settings for the policy reject_latest_tag: module: ghcr.io/kubewarden/policies/trusted-repos-policy:v0.2.0 settings: {} # settings for the policy A policy group can include the same policy multiple times with different settings. The expression attribute contains a statement made of the policy identifiers joined together by logical operators. The evaluation of the expression statement must evaluate to a boolean value. Policies representation is as a function named after the identifier specified in the .spec.policies map. The results produced by the evaluation of the policies are then evaluated using the logical operators provided by the user. These are the supported operators: &&: used to perform AND operations ||: used to perform OR operations !: used to perform NOT operations You can use round brackets ( ) to define evaluation priorities. For example, given the following expression: reject_latest() || (signed_by_alice() && signed_by_bob()) The policy rejects workloads that have images using the latest tag, unless both Alice and Bob have signed the images. The message field specifies the message returned when the evaluation of the expression results in a rejection. The response includes the message, together with the results of the individual policies evaluation. Evaluation of policies that belong to the group takes place only if necessary. For example, given the following expression: reject_latest() || (signed_by_alice() && signed_by_bob()) The signed_by_bob and signed_by_alice policies aren’t evaluated when the reject_latest policy returns true. In the same way, the signed_by_bob policy isn’t evaluated if the signed_by_alice and the reject_latest policies return false. This avoids unnecessary evaluations of policies in the group and grants fast responses to the admission requests. The system sends all evaluation details of the group policies as part of the AdmissionResponse .status.details.causes when a group policy performs a rejection. You can obtain full details of a rejected admission request by increasing the verbosity level of kubectl: kubectl -v4 apply -f signed-pod.yml I0919 18:29:40.251332 4330 helpers.go:246] server response object: [{ \"kind\": \"Status\", \"apiVersion\": \"v1\", \"metadata\": {}, \"status\": \"Failure\", \"message\": \"error when creating \\\"signed-pod.yml\\\": admission webhook \\\"clusterwide-demo.kubewarden.admission\\\" denied the request: the image is using the latest tag or is not signed by Alice and Bob\", \"details\": { \"causes\": [ { \"message\": \"Resource signed is not accepted: verification of image testing.registry.svc.lan/busybox:latest failed: Host error: Callback evaluation failure: Image verification failed: missing signatures\\nThe following constraints were not satisfied:\\nkind: pubKey\\nowner: null\\nkey: |\\n -----BEGIN PUBLIC KEY-----\\n MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEswA3Ec4w1ErOpeLPfCdkrh8jvk3X\\n urm8ZrXi4S3an70k8bf1OlGnI/aHCcGleewHbBk1iByySMwr8BabchXGSg==\\n -----END PUBLIC KEY-----\\nannotations: null\\n\", \"field\": \"spec.policies.signed_by_bob\" }, { \"message\": \"not allowed, reported errors: tags not allowed: latest\", \"field\": \"spec.policies.reject_latest\" } ] }, \"code\": 400 }] Error from server: error when creating \"signed-pod.yml\": admission webhook \"clusterwide-demo.kubewarden.admission\" denied the request: the image is using the latest tag or is not signed by Alice and Bob The full admission response is available in the logs of the Policy Server when running in debug mode. Moreover, the evaluation details are always part of the OpenTelemetry traces emitted by Policy Server. Another distinction between policy groups and ordinary policies is the definition location of context-aware resource rules. Each policy in a group accepts an optional contextAwareResources field to specify the resources that the policy can access during evaluation. Similarly to ordinary policies, you can only use context-aware capabilities by defining a ClusterAdmissionPolicyGroup. This is for security reasons, as only unprivileged users can deploy AdmissionPolicyGroup resources. For more details, refer to the context-aware policies documentation. An example of a policy group that makes use of a context-aware policy. apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicyGroup # or AdmissionPolicyGroup metadata: name: demo-ctx-aware spec: rules: - apiGroups: - \"\" apiVersions: - v1 resources: - services operations: - CREATE - UPDATE policies: unique_service_selector: module: registry://ghcr.io/kubewarden/policies/unique-service-selector-policy:v0.1.0 contextAwareResources: - apiVersion: v1 kind: Service settings: app.kubernetes.io/name: MyApp owned_by_foo_team: module: registry://ghcr.io/kubewarden/policies/safe-annotations:v0.2.9 settings: mandatory_annotations: - owner constrained_annotations: owner: \"foo-team\" expression: \"unique_service_selector() || (!unique_service_selector() && owned_by_foo_team())\" message: \"the service selector is not unique or the service is not owned by the foo team\" In the previous example, the unique_service_selector policy can access the Service resource. However, the owned_by_foo_team has no access to Kubernetes resources. When the policy server starts, it validates the settings of both policy groups and ordinary policies. However, policy groups undergo an additional validation step to check that the expression is valid and evaluates to a boolean value. Similar to the AdmissionPolicy and ClusterAdmissionPolicy CRDs, the backgroundAudit field indicates whether to include the policy group during audit checks. You can extend the policies.yml settings file to include policy groups alongside ordinary policies. As with ordinary policies, modules download takes place once. You use the same policy module in both a policy group and an ordinary policy.","title":"Policy Groups","component":"admission-controller","version":"1.29","name":"policy-groups","url":"/admission-controller/1.29/en/explanations/policy-groups.html","titles":[{"text":"Main configuration fields","hash":"_main_configuration_fields","id":1},{"text":"The policies attribute","hash":"_the_policies_attribute","id":2},{"text":"The expression attribute","hash":"_the_expression_attribute","id":3},{"text":"The message attribute and the response format","hash":"_the_message_attribute_and_the_response_format","id":4},{"text":"Context-Aware Policies","hash":"_context_aware_policies","id":5},{"text":"Settings Validation","hash":"_settings_validation","id":6},{"text":"Audit Scanner","hash":"_audit_scanner","id":7},{"text":"Policy Server","hash":"_policy_server","id":8}],"keyword":"[\"kubewarden\", \"policy groups\", \"clusteradmissionpolicygroup\", \"admissionpolicygroup\"]"},"15":{"id":15,"text":"You can manage Kubewarden Helm charts, like other Helm charts, with Rancher Fleet. Rancher Fleet uses Kubernetes CRDs to define a GitOps approach to managing Kubernetes clusters. It does this by defining Fleet Bundles. The Kubewarden charts are standard charts, they depend transitively on each other: kubewarden-crds ← kubewarden-controller ← kubewarden-defaults See the Quickstart docs for more information. Using Rancher Fleet, you can code the chart dependencies using dependsOn in the fleet.yaml file. You may see transient errors until the charts are ready, such as: ErrApplied(1) [Cluster fleet-local/local: dependent bundle(s) are not ready: [kubewarden-example-helm-kubewarden-controller]] These errors don’t signify a problem, and once the charts have finished deployment, they no longer appear. When removing the GitRepo, all 3 Kubewarden charts get removed at once. This means the kubewarden-crds chart gets removed. Kubewarden uses a pre-delete helm hook job in kubewarden-controller chart that deletes the default policy-server. This pre-delete hook is necessary to vacate the webhooks of the policies before deleting the PolicyServer. This is true any Policy Engine. If not, the cluster may have webhooks for policies that don’t exist anymore so rejecting everything and being in a failed state. Removing the GitRepo, and hence the kubewarden-crds chart, at the same time as the kubewarden-controller chart makes the pre-delete hook job fail. It means the removal is incomplete, leaving 'debris' in the cluster. Uninstalling CRDs automatically isn’t normally supported by any tooling, and Rancher Fleet is no exception. To perform a correct removal, make sure to first remove the Bundle for kubewarden-defaults from the cluster. Do this by committing those changes to the repository holding the Fleet configuration and then waiting until it’s applied. Then remove kubewarden-controller in the same way, and lastly, remove kubewarden-crds. Another option is to add 2 GitRepos, one for the CRDs only, and another for the rest of the Kubewarden charts. This lets you remove the Kubewarden charts first and the Kubewarden CRDs last. For an example of Fleet bundle definitions see github.com/kubewarden/fleet-example.","title":"Managing Kubewarden with Rancher Fleet","component":"admission-controller","version":"1.29","name":"Rancher-Fleet","url":"/admission-controller/1.29/en/howtos/Rancher-Fleet.html","titles":[{"text":"Installing","hash":"_installing","id":1},{"text":"Removing","hash":"_removing","id":2},{"text":"Example","hash":"_example","id":3}],"keyword":"[\"kubernetes\", \"kubewarden\", \"rancher fleet\"]"},"16":{"id":16,"text":"If you are using ArgoCD to manage your Kubernetes resources, you may be interested in installing Kubewarden using ArgoCD. This is possible, but there are certain considerations to consider. Since Kubewarden v1.17.0, the cert-manager dependency has been removed. There is a new certificate reconciler that automatically renews the certificates. This means that the Kubewarden controller takes care of creating and renewing the certificates for you, including both the root CA and all the webhook certificates. However, the initial root CA and webhook certificates are created during the Helm chart installation using the available Helm functions. This means that when the Helm chart is rendered, it checks if the certificates are already created, and if not, it will create them. This poses a problem when using ArgoCD, as it uses Helm solely to render the templates, while all resource lifecycle management is handled by ArgoCD. Consequently, every time ArgoCD renders the Helm chart to ensure that the application running in the cluster doesn’t deviate from the definition in the Helm chart, it will attempt to create the certificates again. As a result, it marks the secrets that store the certificates, as well as the webhook configuration, as unsynchronized. To resolve this issue, it is necessary to configure the ArgoCD application to ignore the data field in secrets and the caBundle field in the MutatingWebhookConfiguration and ValidatingWebhookConfiguration resources. This can be accomplished by adding the ignoreDifferences field in the ArgoCD application: apiVersion: argoproj.io/v1alpha1 kind: Application metadata: name: kubewarden-crds namespace: argocd spec: project: default source: repoURL: https://charts.kubewarden.io chart: kubewarden-crds targetRevision: 1.13.0 destination: server: https://kubernetes.default.svc namespace: kubewarden-system syncPolicy: automated: prune: true selfHeal: true --- apiVersion: argoproj.io/v1alpha1 kind: Application metadata: name: kubewarden-controller namespace: argocd spec: project: default source: repoURL: https://charts.kubewarden.io chart: kubewarden-controller targetRevision: 4.1.0 destination: server: https://kubernetes.default.svc namespace: kubewarden-system syncPolicy: automated: prune: true selfHeal: true syncOptions: # Sync options which modifies sync behavior # When syncing changes, respect fields ignored by the ignoreDifferences configuration - RespectIgnoreDifferences=true # ignoreDifferences is the important configuration to avoid ArgoCD marking # the secrets and # webhook configurations as unsynchronized ignoreDifferences: - group: \"\" kind: \"Secret\" name: kubewarden-ca namespace: kubewarden-system jsonPointers: - /data - group: \"\" kind: \"Secret\" name: kubewarden-webhook-server-cert namespace: kubewarden-system jsonPointers: - /data - group: \"\" kind: \"Secret\" name: kubewarden-audit-scanner-client-cert namespace: kubewarden-system jsonPointers: - /data - group: \"admissionregistration.k8s.io\" kind: \"MutatingWebhookConfiguration\" jqPathExpressions: - '.webhooks[]?.clientConfig.caBundle' - group: \"admissionregistration.k8s.io\" kind: \"ValidatingWebhookConfiguration\" jqPathExpressions: - '.webhooks[]?.clientConfig.caBundle' --- apiVersion: argoproj.io/v1alpha1 kind: Application metadata: name: kubewarden-defaults namespace: argocd spec: project: default source: repoURL: https://charts.kubewarden.io chart: kubewarden-defaults targetRevision: 2.8.0 destination: server: https://kubernetes.default.svc namespace: kubewarden-system syncPolicy: automated: prune: true selfHeal: true In the example above, the key aspect is the ignoreDifferences configuration for the Kubewarden controller application. The rest of the content is included to provide context on how the ArgoCD application should be configured and to offer a complete example.","title":"ArgoCD Installation","component":"admission-controller","version":"1.29","name":"argocd-installation","url":"/admission-controller/1.29/en/howtos/argocd-installation.html","titles":[],"keyword":"[kubewarden, gitops, argocd]"},"17":{"id":17,"text":"Beginning with version v1.7.0, Kubewarden has a new feature called \"Audit Scanner\". A new component, called \"audit-scanner\", constantly checks the resources declared in the cluster, flagging the ones that do not adhere with the deployed Kubewarden policies. Policies evolve over the time: new ones are deployed and the existing ones can be updated, both in terms of version and configuration settings. This can lead to situations where resources already inside of the cluster are no longer compliant. The audit scanner feature provides Kubernetes administrators with a tool to consistently verify the compliance state of their clusters. The audit scanner component is available since Kubewarden v1.7.0. Therefore, make sure you are installing the Helm chart with app version v1.7.0 or higher. Install the kubewarden-crds Helm chart. The chart install the needed PolicyReport CRDs by default. helm install kubewarden-crds kubewarden/kubewarden-crds To store the results of policy reports, you need to have the PolicyReport Custom Resource Definitions (CRDs) available. If the necessary PolicyReport CRDs are already in the cluster, you cannot install them using the kubewarden-crds chart. In such case, you can disable the installation of PolicyReport CRDs by setting installPolicyReportCRDs to false in the chart. This means that the Kubewarden stack will not manage those CRDs, and the responsibility will be with the administrator. + See more info about the CRDs at the policy work group repository Install the kubewarden-controller Helm chart. helm install kubewarden-controller kubewarden/kubewarden-controller The audit scanner is enabled by default. If you want to disable it, set the auditScanner.enable=false. For more information about the installation of Kubewarden see the Quick Start guide By default, the Audit Scanner is implemented as a Cronjob that will be triggered every 60 minutes. You can adjust this and other audit scanner settings by changing the kubewarden-controller chart values.yaml. See here more information about the Audit Scanner. The kubewarden-controller chart comes with a subchart of the Policy Reporter. It is disabled by default, and can be enabled by setting auditScanner.policyReporter=true. The values of the Policy Reporter subchart are exposed under the policyReporter key of the kubewarden-controller values. This will install only part of the Policy Reporter upstream chart, the UI, which provides a visualization of the PolicyReports and ClusterPolicyReports in cluster. See here more information about the Policy Reporter UI. By default, the Policy Reporter UI is only exposed as a ClusterIP service with name kubewarden-controller-ui in the namespace where the kubewarden-controller chart was installed. Users can provide their own Ingress configuration, or enable an Ingress via the subchart configuration (see the ingress config of the UI subchart here). See this example of an Ingress configuration via the subchart: auditScanner: policyReporter: true policy-reporter: # subchart values settings ui: enabled: true ingress: enabled: true hosts: - host: \"*.local\" # change this to your appropriate domain paths: - path: / pathType: ImplementationSpecific For a quick look or debugging, one can setup a port-forwarding to the service with: kubectl port-forward service/kubewarden-controller-ui 8082:8080 -n kubewarden Which will make the Policy Reporter UI available at http://localhost:8082. The audit scanner is implemented as a Cronjob that runs every 60 minutes by default. It’s possible to trigger a manual run by running the following command: kubectl create job \\ --namespace kubewarden \\ --from cronjob/audit-scanner \\ audit-scanner-manual-$(date +%Y-%m-%d-%H-%M-%S) The status of the job can be checked with: kubectl get -n kubewarden jobs","title":"Audit Scanner","component":"admission-controller","version":"1.29","name":"audit-scanner","url":"/admission-controller/1.29/en/howtos/audit-scanner.html","titles":[{"text":"Installation","hash":"_installation","id":1},{"text":"Policy Reporter UI (optional)","hash":"_policy_reporter_ui_optional","id":2},{"text":"Ingress","hash":"_ingress","id":3},{"text":"Port-forwarding","hash":"_port_forwarding","id":4},{"text":"Trigger manual run","hash":"_trigger_manual_run","id":5}],"keyword":"[\"kubewarden\", \"kubernetes\", \"audit scanner\"]"},"18":{"id":18,"text":"With both of kwctl and policy-server you can pull policies from Open Container Initiative (OCI) registries and HTTP servers. You can only push policies to OCI registries. By default, HTTPS is used with host TLS verification for this. The system’s certificate authority (CA) store is used to validate the trusted chain of certificates from the OCI registry. In a standard Kubewarden installation, the policy-server uses the CA store shipped with its Linux container. On the client side, kwctl uses your operating system CA store. If you are using the Kubewarden Controller, you can configure the PolicyServer via its spec fields. The default behavior of kwctl and policy-server enforces HTTPS with trusted certificates matching the system CA store. You can interact with registries using untrusted certificates or even without TLS, by using the insecure_sources setting. Clearly, it’s not for production environments. You can tune the push-pull behavior of kwctl and policy-server using the sources.yaml file. For reference details, check the sources.yaml reference.","title":"Custom certificate authorities","component":"admission-controller","version":"1.29","name":"custom-certificate-authorities","url":"/admission-controller/1.29/en/howtos/custom-certificate-authorities.html","titles":[{"text":"The sources.yaml file","hash":"_the_sources_yaml_file","id":1}],"keyword":"[\"kubewarden\", \"kubernetes\", \"custom certificate authorities\"]"},"19":{"id":19,"text":"This section details a real-world deployment of Kubewarden in a demanding, large-scale environment. It illustrates how to configure Kubewarden for high availability and performance and what to expect under heavy load. If you want to see more tips on how to run Kubewarden in production, check out the Production deployments documentation. The infrastructure consists of approximately 20 Kubernetes clusters. The largest of these clusters are characterized by significant size and resource volume: Nodes: ~400 Namespaces: ~4,000 Managed Resources: Pods: 10,000 RoleBindings: 13,000 Ingresses: 12,000 Deployments: 8,000 Services: 13,000 To meet the demands of this environment, Kubewarden is configured with a focus on workload isolation and high availability. Policy Enforcement: 22 ClusterAdmissionPolicies are enforced across the clusters, with no namespace-specific AdmissionPolicies. PolicyServer Architecture: Two separate PolicyServer deployments are used to isolate workloads: One PolicyServer is dedicated exclusively to context-aware policies. A second PolicyServer handles all other, non-context-aware policies. Scalability and Resources: Replicas: Each PolicyServer deployment runs 15 replicas to handle the high volume of requests. Resource Allocation: Each replica is allocated 300 MB of memory and 4 CPU cores. This configuration successfully manages a high rate of admission requests while maintaining predictable performance. Admission Request Throughput: The clusters handle up to 300 admission requests per second (including both webhook validations and audit scans). Policy Latency: Typical Latency: Context-aware policies generally take around 500ms to execute. Timeouts: In this high-throughput environment, webhook timeouts are configured at 2.5 seconds, while the PolicyServer timeout is set to 10 seconds. While most requests are fast, the infrastructure is built to handle occasional slow operations without compromising the API server’s stability. The audit-scanner is utilized to ensure continuous compliance across the vast number of resources. Frequency: A cluster-wide audit is performed every 4 hours. Configuration: The audit job is tuned for maximum parallelism to reduce runtime: --parallel-namespaces: \"10\" --parallel-resources: \"20\" --parallel-policies: \"20\" --page-size: \"1000\" Audit Duration: Even on the largest cluster with tens of thousands of resources, a full audit job completes in","title":"Kubewarden in a Large-Scale Environment","component":"admission-controller","version":"1.29","name":"deploy-at-scale","url":"/admission-controller/1.29/en/howtos/deploy-at-scale.html","titles":[{"text":"Environment Overview","hash":"_environment_overview","id":1},{"text":"Kubewarden Configuration","hash":"_kubewarden_configuration","id":2},{"text":"Performance Metrics","hash":"_performance_metrics","id":3},{"text":"Audit Scanner Performance","hash":"_audit_scanner_performance","id":4}],"keyword":"kubewarden, kubernetes, policyservers, production"},"20":{"id":20,"text":"In an emergency, operations teams might need to perform actions that Kubewarden would block. This document explains how to disable Kubewarden so operations teams can address cluster failures. After resolving the situation, operations teams can restart Kubewarden. First, stop the Kubewarden controller. You do this by scaling its Deployment to zero: kubectl scale deployment kubewarden-controller \\ --replicas=0 \\ -n kubewarden Ensure you use the name of the Namespace where the Kubewarden stack is deployed. Here, the stack is deployed in the kubewarden Namespace. Next, delete all the ValidatingWebhookConfigurations and MutatingWebhookConfigurations created by Kubewarden: # Delete all the ValidatingWebhookConfiguration created by Kubewarden kubectl delete validatingwebhookconfigurations \\ -l app.kubernetes.io/part-of=kubewarden # Delete all the MutatingWebhookConfiguration created by Kubewarden kubectl delete mutatingwebhookconfigurations \\ -l app.kubernetes.io/part-of=kubewarden When the emergency is over, restore the Kubewarden stack by bringing back the Kubewarden controller: kubectl scale deployment kubewarden-controller \\ --replicas=1 \\ -n kubewarden Ensure you use the name of the Namespace where the Kubewarden stack is deployed. Here, the stack is deployed in the kubewarden Namespace. Ensure you scale the controller back to its original value. This example assumes there’s only one replica of the controller running. Once the controller is running, it reconciles the deployed policies. The ValidatingWebhookConfiguration and MutatingWebhookConfiguration resources, previously deleted, are recreated, thus enforcing the policies.","title":"Emergency disable","component":"admission-controller","version":"1.29","name":"emergency-disable","url":"/admission-controller/1.29/en/howtos/emergency-disable.html","titles":[{"text":"Disable Kubewarden","hash":"_disable_kubewarden","id":1},{"text":"Restore Kubewarden","hash":"_restore_kubewarden","id":2}],"keyword":"ClusterAdmissionPolicies, AdmissionPolicies, configuration"},"21":{"id":21,"text":"doc-persona: [kubewarden-operator, kubewarden-integrator, kubewarden-policy-developer] doc-type: [howto] doc-topic: [operator-manual] This guide shows you how to convert an existing Gatekeeper policy into a Kubewarden policy. This process involves two main steps: . Compile the Rego program into a WebAssembly (Wasm) module. . Distribute the WebAssembly module as a Kubewarden policy. The Rego policies tutorial covers most of the build process for compiling Rego code into a WebAssembly module. This guide focuses on the step-by-step process of extracting Gatekeeper Custom Resource Definitions (CRDs) and migrating them into a functional Kubewarden policy. It uses a basic Gatekeeper demo policy. opa: you use this tool to build the code into wasm. This guide was written using the v1.5.1 version. kwctl: tool you use to prepare and run Kubewarden web assembly module bats: tool used to run end-to-end tests. If you decided to write such kind of tests yq: tool used to extract data from yaml files Before starting the process of migrating Gatekeeper policies, consider using already available policies in the Kubewarden catalog. Some of the policies are publicly available OPA and Gatekeeper policies migrated to Kubewarden. Also, take a look at our comparison documentation between Kubewarden and Gatekeeper. First, use the Kubewarden Gatekeeper template to create a basic policy project structure. This provides Makefile targets for building and testing your policy. After you create the policy code from the template, run the Makefile commands to check the policy builds and tests run successfully: $ make policy.wasm test opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego tar xvf bundle.tar.gz /policy.wasm tar: Removing leading `/' from member names /policy.wasm rm bundle.tar.gz touch policy.wasm # opa creates the bundle with unix epoch timestamp, fix it opa test *.rego PASS: 2/2 Now, begin migrating the Gatekeeper policy. This involves converting a ConstraintTemplate and its associated Constraint resources into a Kubewarden policy. In a Kubewarden context, consider the ConstraintTemplate as the core policy code, while the Constraint instances translate into policy instances running within Kubewarden. First, copy the Rego code from your ConstraintTemplate into the policy.rego file the Kubewarden template generated. For this example, you should use the following basic demo policy from the Gatekeeper repository. Gatekeeper policy yaml apiVersion: templates.gatekeeper.sh/v1 kind: ConstraintTemplate metadata: name: k8srequiredlabels spec: crd: spec: names: kind: K8sRequiredLabels validation: # Schema for the `parameters` field openAPIV3Schema: type: object properties: labels: type: array items: type: string targets: - target: admission.k8s.gatekeeper.sh rego: | package k8srequiredlabels violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] { provided := {label | input.review.object.metadata.labels[label]} required := {label | label := input.parameters.labels[_]} missing := required - provided count(missing) > 0 msg := sprintf(\"you must provide labels: %v\", [missing]) } Copy the Rego code snippet from the rego field into your policy.rego file: cat gatekeeper/demo/basic/templates/k8srequiredlabels_template.yaml | yq \".spec.targets[0].rego\" > policy.rego You need to make sure the package name used inside of the Rego code is policy. This is the value expected in many places by the Kubewarden Gatekeeper template. If you don’t change it, you will have errors when building the policy and running its end-to-end tests. For example, the demo policy we’re converting is defined inside of the k8srequiredlabels package, this value must be changed to be policy. This is how the contents of the policy.rego file have to be: package policy violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] { provided := {label | input.review.object.metadata.labels[label]} required := {label | label := input.parameters.labels[_]} missing := required - provided count(missing) > 0 msg := sprintf(\"you must provide labels: %v\", [missing]) } Attempting to build the code after this change might reveal new compilation errors: opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego error: load error: 2 errors occurred during loading: policy.rego:3: rego_parse_error: `if` keyword is required before rule body policy.rego:3: rego_parse_error: `contains` keyword is required for partial set rules make: *** [Makefile:4: policy.wasm] Error 1 The policy author must fix these errors to allow the opa CLI to build the code successfully. The specific changes may vary depending on the opa version and the original policy code. As we are migrating a rego policy prior to OPA v1, we need to update the code to be v1-compliant. The final policy.rego code looks like this: package policy violation contains {\"msg\": msg, \"details\": {\"missing_labels\": missing}} if { provided := {label | input.review.object.metadata.labels[label]} required := {label | label := input.parameters.labels[_]} missing := required - provided count(missing) > 0 msg = sprintf(\"you must provide labels: %v\", [missing]) } After you adjust the code, build the policy: $ make policy.wasm opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego tar xvf bundle.tar.gz /policy.wasm tar: Removing leading `/' from member names /policy.wasm rm bundle.tar.gz touch policy.wasm # opa creates the bundle with unix epoch timestamp, fix it There is more information on how to build Gatekeeper policies in our tutorial. With the release of OPA (Open Policy Agent) v1.0.0 in December 2024, a breaking change was introduced regarding Rego policy syntax. Previously, if for all rule definitions and contains for multi-value rules were optional; now, they’re mandatory. This change affects most older policies. Here’s a summary of what you need to know: OPA v1.0.0 Syntax: OPA v1.0.0 mandates the use of if for all rule definitions and contains for multi-value rules. Policies not adhering to this syntax will break. Backward Compatibility: If you need to build older policies that don’t use the new v1.0.0 syntax, you must provide the --v0-compatible flag to the opa build command. Gatekeeper integration: Gatekeeper updated its OPA dependency to v1.0.0 in its v3.19.0 release. Rego version in Gatekeeper templates: Gatekeeper assumes v0 syntax is used unless the template explicitly specifies version: \"v1\" within the source field under code.engine: Rego. See this section of Gatekeeper’s docs for more details about how v0 and v1 versions of Rego are handled. What this means for you: If the Gatekeeper CR doesn’t specify a Rego version, it implies v0 is going to be used. You must build the policy using the OPA_V0_COMPATIBLE=true make command. If the Gatekeeper CR explicitly specifies version: \"v1\", you must build the policy without any environment variable set. While highly recommended, policy authors might skip creating tests for the initial version of a policy. If this applies to you, you’ll need to disable the Makefile targets used to run tests. You can’t remove these targets entirely, as the default CI jobs expect them to be defined. Instead, you should replace the commands that call opa and bats with a \"no-op\" operation. For example, you can use an echo command to print an explanation for why the tests aren’t being run. The Kubewarden Gatekeeper template includes both Rego unit tests and end-to-end (e2e) tests using Bats and kwctl. If you plan to include tests, both sets need to be adapted for your policy. If your Gatekeeper policy already has Rego tests, you can copy them into the policy_test.rego file. These run automatically when you execute the make test command. Keep in mind that any Rego tests you write in policy_test.rego are subject to the same compatibility issues detailed in the Rego Policy code and OPA v1.0.0 Compatibility section. The policy you are migrating in this guide does not have tests; we need to add them ourselves. Therefore, we’ll update the policy_test.rego test file with some basic tests: package policy review_required_labels := { \"parameters\": {\"labels\": [\"test\"]}, \"review\": {\"object\": {\"metadata\": {\"labels\": {\"test\": \"value\"}}}}, } review_missing_labels := { \"parameters\": {\"labels\": [\"test\"]}, \"review\": {\"object\": {\"metadata\": {\"labels\": {\"other\": \"value\"}}}}, } test_accept if { r = review_required_labels res = violation with input as r count(res) = 0 } test_reject if { r = review_missing_labels res = violation with input as r count(res) = 1 } Now, running make test should validate your policy: $ make policy.wasm test opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego tar xvf bundle.tar.gz /policy.wasm tar: Removing leading `/' from member names /policy.wasm rm bundle.tar.gz touch policy.wasm # opa creates the bundle with unix epoch timestamp, fix it opa test *.rego PASS: 2/2 Next, update the e2e tests file (e2e.bats): #!/usr/bin/env bats @test \"accept because required label is present\" { run kwctl run -e gatekeeper annotated-policy.wasm --settings-path test_data/settings.json --request-path test_data/accept_deploy_request.json # this prints the output when one the checks below fails echo \"output = ${output}\" # request accepted [ \"$status\" -eq 0 ] [ $(expr \"$output\" : '.*allowed.*true') -ne 0 ] } @test \"reject because required label is missing\" { run kwctl run -e gatekeeper annotated-policy.wasm --settings-path test_data/settings.json --request-path test_data/reject_deploy_request.json # this prints the output when one the checks below fails echo \"output = ${output}\" # request rejected [ \"$status\" -eq 0 ] [ $(expr \"$output\" : '.*allowed.*false') -ne 0 ] [ $(expr \"$output\" : '.*message.*you must provide labels: \\[test\\]') -ne 0 ] } You’ll need to create the test_data/settings.json, test_data/accept_deploy_request.json and test_data/reject_deploy_request.json files to support these tests. test_data/settings.json { \"labels\": [\"test\"] } We won’t include the full content of accept_deploy_request.json and reject_deploy_request.json here, as AdmissionRequest JSON can be quite long, and we want to keep this guide concise. However, you can use the kwctl scaffold command to generate these files. The key for this guide is that one request should be missing the required label, while the other should have the label defined. Check if the e2e tests are passing: $ make e2e-tests bats e2e.bats e2e.bats ✓ accept because required label is present ✓ reject because required label is missing The policy parameters (for example, labels in this example) originate from the policy settings. This allows you to deploy multiple instances of the same policy with different parameters/settings, similar to how Constraints function in Gatekeeper. Now that you have a functional policy, prepare the metadata.yml file for distribution. This file defines annotations with the policy description, author, license, and other essential information. Crucially, it defines the rules that specify which resources and verbs the policy can validate. This information drives the kwctl scaffold command to generate the manifest for deploying the policy in your cluster. Gatekeeper’s Constraints CRDs, which are instances of policies defined in ConstraintTemplates, specify which resources a policy instance evaluates. Therefore, if you have existing Constraints that apply a ConstraintTemplate, they offer a good reference for the resources you should define in your metadata.yml file. For instance, in the Gatekeeper example used earlier, the K8sRequiredLabels Constraint created from the k8srequiredlabels ConstraintTemplate applies to Namespaces: apiVersion: constraints.gatekeeper.sh/v1beta kind: K8sRequiredLabels metadata: name: ns-must-have-gk spec: match: kinds: - apiGroups: [\"\"] kinds: [\"Namespace\"] parameters: labels: [\"gatekeeper\"] Based on this, update the rules section of your metadata.yml to include a new rule for validating namespaces during CREATE and UPDATE operations: rules: - apiGroups: [\"apps\"] apiVersions: [\"v1\"] resources: [\"deployments\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"namespaces\"] operations: [\"CREATE\", \"UPDATE\"] mutating: false contextAware: false executionMode: gatekeeper backgroundAudit: true annotations: io.artifacthub.displayName: Policy Name io.artifacthub.resources: Pod io.artifacthub.keywords: pod, cool policy, kubewarden io.kubewarden.policy.ociUrl: ghcr.io/yourorg/policies/policy-name io.kubewarden.policy.title: policy-name io.kubewarden.policy.version: 0.0.1-unreleased io.kubewarden.policy.description: Short description io.kubewarden.policy.author: \"Author name <author-email@example.com>\" io.kubewarden.policy.url: https://github.com/yourorg/policy-name io.kubewarden.policy.source: https://github.com/yourorg/policy-name io.kubewarden.policy.license: Apache-2.0 io.kubewarden.policy.severity: medium io.kubewarden.policy.category: Resource validation Now, your policy is ready for distribution and deployment. Refer to the Publishing the policy section from the tutorial to learn how to push it to a remote registry. You can scaffold the policy manifest using kwctl: $ kwctl scaffold manifest --type ClusterAdmissionPolicy annotated-policy.wasm apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: annotations: io.kubewarden.policy.category: Resource validation io.kubewarden.policy.severity: medium name: policy-name spec: module: file:///home/jvanz/SUSE/mygatekeeperpolicy/annotated-policy.wasm settings: {} rules: - apiGroups: - apps apiVersions: - v1 resources: - deployments operations: - CREATE - UPDATE - apiGroups: - '' apiVersions: - v1 resources: - namespaces operations: - CREATE - UPDATE mutating: false This policy has parameters, which Gatekeeper defines within the Constraint. You need to update the settings section in the generated Kubewarden policy manifest to include these required parameters. In the following example, beyond defining the settings, you can test the policy from the OCI registry: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: annotations: io.kubewarden.policy.category: Resource validation io.kubewarden.policy.severity: medium name: policy-name spec: module: registry://ghcr.io/jvanz/policies/mygatekeeperpolicy:latest settings: labels: - \"gatekeeper\" rules: - apiGroups: - apps apiVersions: - v1 resources: - deployments operations: - CREATE - UPDATE - apiGroups: - \"\" apiVersions: - v1 resources: - namespaces operations: - CREATE - UPDATE mutating: false Try to deploy a namespace missing the required gatekeeper label: kubectl apply -f - <<EOF apiVersion: v1 kind: Namespace metadata: name: your-namespace-name labels: purpose: demo EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-policy-name.kubewarden.admission\" denied the request: you must provide labels: [gatekeeper] And another namespace with the required label: kubectl apply -f - <<EOF apiVersion: v1 kind: Namespace metadata: name: your-namespace-name labels: purpose: demo gatekeeper: test EOF namespace/your-namespace-name created","title":"Migrating Gatekeeper Policies to Kubewarden","component":"admission-controller","version":"1.29","name":"gatekeeper-migration","url":"/admission-controller/1.29/en/howtos/gatekeeper-migration.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Before migrating your policies","hash":"_before_migrating_your_policies","id":2},{"text":"Step 1: Initialize Your Kubewarden policy project","hash":"_step_1_initialize_your_kubewarden_policy_project","id":3},{"text":"Step 2: Migrate Gatekeeper policy code","hash":"_step_2_migrate_gatekeeper_policy_code","id":4},{"text":"Adapt Rego code for Kubewarden","hash":"_adapt_rego_code_for_kubewarden","id":5},{"text":"Rego Policy code and OPA v1.0.0 compatibility","hash":"_rego_policy_code_and_opa_v1_0_0_compatibility","id":6},{"text":"Step 3: Update and run tests","hash":"_step_3_update_and_run_tests","id":7},{"text":"Step 4: Prepare metadata.yml for distribution","hash":"_step_4_prepare_metadata_yml_for_distribution","id":8},{"text":"Define Policy Settings","hash":"_define_policy_settings","id":9}]},"22":{"id":22,"text":"kwctl is the command-line interface (CLI) tool for Kubewarden. Below are installation instructions for some operating systems. Linux macOS Windows Install for Linux Homebrew If you use the Homebrew package manager on Linux, then: brew install kwctl Verify installation: kwctl --version Zypper (openSUSE) zypper install kwctl AUR If you’re using Arch Linux, or an Arch-based distribution, you can install kwctl from the AUR. Using an AUR helper (yay): yay -S kwctl Using makepkg: # Clone the AUR package git clone https://aur.archlinux.org/kwctl.git cd kwctl # Build and install the package makepkg -si Verify the installation: kwctl --version Manual installation Download the latest release of kwctl for Linux: curl -LO https://github.com/kubewarden/kwctl/releases/latest/download/kwctl-linux-x86_64.zip For ARM64 systems (e.g., Raspberry Pi), use: curl -LO https://github.com/kubewarden/kwctl/releases/latest/download/kwctl-linux-aarch64.zip Extract the files from the downloaded .zip file: unzip kwctl-linux-x86_64.zip This extracts the following files: kwctl-linux-x86_64: The kwctl binary kwctl-linux-x86_64.sig: A signature file for verifying the binary kwctl-linux-x86_64.pem: A certificate file for verifying the signature Move the binary to a directory in your PATH, rename to kwctl and make executable. Verify the installation: kwctl --version Install for macOS. Using Homebrew Install kwctl: brew install kwctl Verify installation: kwctl --version Manual installation Download the latest release of kwctl for macOS: For Apple Silicon (ARM64) systems, use: curl -LO https://github.com/kubewarden/kwctl/releases/latest/download/kwctl-darwin-aarch64.zip For Intel (x86_64) systems, use: curl -LO https://github.com/kubewarden/kwctl/releases/latest/download/kwctl-darwin-x86_64.zip Extract the files from the downloaded .zip file: unzip kwctl-darwin-x86_64.zip This extracts the following files: kwctl-darwin-x86_64: The kwctl binary kwctl-darwin-x86_64.sig: A signature file for verifying the binary kwctl-darwin-x86_64.pem: A certificate file for verifying the signature Move the binary to a directory in your PATH, rename to kwctl and make executable. Verify the installation: kwctl --version Install for Windows Download kwctl: Open your browser and go to the Kubewarden releases page. Download the kwctl-windows-x86_64.zip file. Extract the files from the downloaded zip file. It will contain: kwctl-windows-x86_64.exe: the kwctl binary. kwctl-windows-x86_64.sig: a signature file for verifying the binary. kwctl-windows-x86_64.pem: a certificate file for verifying the signature. Rename the binary file from kwctl-windows-x86_64.exe to kwctl.exe for easier use. Move the binary to a location covered by your PATH environment variable. Verify the installation. Open a new command prompt or PowerShell window and check the kwctl installation: kwctl --version The kwctl CLI has the --shell option to generate shell completion commands for your shell. You can use the output from this command to integrate completions into your shell. kwctl completions --shell [bash|elvish|fish|powershell|zsh]","title":"Installing kwctl","component":"admission-controller","version":"1.29","name":"install-kwctl","url":"/admission-controller/1.29/en/howtos/install-kwctl.html","titles":[{"text":"Install shell completions","hash":"_install_shell_completions","id":1}],"keyword":"kubewarden, kubernetes, install kwctl, install, kwctl"},"23":{"id":23,"text":"Pod Security Policies (PSP) are removed since the Kubernetes 1.25 release. They’re replaced by the Pod Security Admission (PSA). PSA simplifies securing the Pods in Kubernetes clusters. PSA has three profiles (described in Pod Security Standards) for namespaces: privileged, providing the widest range of permissions baseline, to prevent new privilege escalations restricted, restricted to harden Pods A PSA controller performs actions on violation detection. The actions are: enforce, audit, and warn. They can be configured. At the time of writing, with Kubernetes 1.28, the PSA controller has the following limitations: No mutation capabilities Higher level objects (like Deployment, Job) are evaluated only when the audit or warn modes are enabled Kubewarden can be used to integrate a PSA profile to avoid these limitations. You could use Kubewarden to replace the old PSP configuration as shown in PSP migration. However, the goal of this article is to show how Kubewarden can complement the new PSA. In this example we’re creating a namespace and applying restrictive PSA policies: kubectl apply -f - <<EOF apiVersion: v1 kind: Namespace metadata: name: my-namespace labels: pod-security.kubernetes.io/enforce: restricted pod-security.kubernetes.io/enforce-version: v1.25 EOF This PSA profile doesn’t allow creating containers that run their application as the root user. When defining this container: the runAsNonRoot attribute must be set to true the runAsUser one can’t be set to 0. So, the following resource won’t reach its desired state: kubectl command configuring a resource with runAsUser: 0 (marked as ➀) kubectl apply -n my-namespace -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 1 selector: matchLabels: app: template-nginx template: metadata: labels: app: template-nginx spec: containers: - name: nginx image: nginx:1.14.2 securityContext: runAsNonRoot: true runAsUser: 0 (1) allowPrivilegeEscalation: false capabilities: drop: - \"ALL\" seccompProfile: type: \"RuntimeDefault\" ports: - containerPort: 80 EOF 1 runAsUser: 0 If we check the deployment, we can see the PSA prevents the pod creation: kubectl get deploy -n my-namespace nginx-deployment -o json | jq \".status.conditions[] | select(.reason == \\\"FailedCreate\\\")\" { \"lastTransitionTime\": \"2022-10-28T19:09:56Z\", \"lastUpdateTime\": \"2022-10-28T19:09:56Z\", \"message\": \"pods \\\"nginx-deployment-5f98b4db8c-2m96l\\\" is forbidden: violates PodSecurity \\\"restricted:v1.25\\\": runAsUser=0 (container \\\"nginx\\\" must not set runAsUser=0)\", \"reason\": \"FailedCreate\", \"status\": \"True\", \"type\": \"ReplicaFailure\" } You can fix this by removing the runAsUser: 0 from the container definition: kubectl command configuring a resource without runAsUser: 0 kubectl apply -n my-namespace -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 1 selector: matchLabels: app: template-nginx template: metadata: labels: app: template-nginx spec: containers: - name: nginx image: nginx:1.14.2 securityContext: runAsNonRoot: true allowPrivilegeEscalation: false capabilities: drop: - \"ALL\" seccompProfile: type: \"RuntimeDefault\" ports: - containerPort: 80 EOF Now PSA allows an attempt at pod creation but it still fails. kubectl get pods -n my-namespace NAME READY STATUS RESTARTS AGE nginx-deployment-57d8568bbb-h4bx7 0/1 CreateContainerConfigError 0 47s It’s because the container definition didn’t specify a user to be used when starting a program inside the container. The default is to run as the root user if this is the case. That’s not allowed by the runAsNonRoot directive: kubectl get pods -n my-namespace nginx-deployment-57d8568bbb-h4bx7 -o json | jq \".status.containerStatuses\" [ { \"image\": \"nginx:1.14.2\", \"imageID\": \"\", \"lastState\": {}, \"name\": \"nginx\", \"ready\": false, \"restartCount\": 0, \"started\": false, \"state\": { \"waiting\": { \"message\": \"container has runAsNonRoot and image will run as root (pod: \\\"nginx-deployment-57d8568bbb-8mvkc_my-namespace(add7bcc5-3d23-43d0-94e9-6e78f887a53f)\\\", container: nginx)\", \"reason\": \"CreateContainerConfigError\" } } } ] This is where Kubewarden can help. You can use the user-group-policy policy to mutate the Deployment definition. This configures a default user for containers omitting that information. You need the Kubewarden stack in the Kubernetes cluster for this example. See the QuickStart for more details. It’s possible to enforce a user ID range, for example, 1000—​2000 and 4000—​5000: kubectl command enforcing a user id range kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: user-group-psp spec: policyServer: default module: registry://ghcr.io/kubewarden/policies/user-group-psp:latest rules: - apiGroups: [\"\", \"apps\"] apiVersions: [\"v1\"] resources: [\"pods\", \"deployments\"] operations: - CREATE - UPDATE mutating: true settings: run_as_user: rule: \"MustRunAs\" overwrite: false ranges: - min: 1000 max: 2000 - min: 4000 max: 5000 run_as_group: rule: \"RunAsAny\" supplemental_groups: rule: \"RunAsAny\" EOF Check the policy is active before continuing: kubectl get clusteradmissionpolicy.policies.kubewarden.io/user-group-psp When the policy is active, re-create the deployment: kubectl command recreating the deployment kubectl delete deployment -n my-namespace nginx-deployment && \\ kubectl apply -n my-namespace -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 1 selector: matchLabels: app: template-nginx template: metadata: labels: app: template-nginx spec: containers: - name: nginx image: nginx:1.14.2 securityContext: runAsNonRoot: true allowPrivilegeEscalation: false capabilities: drop: - \"ALL\" seccompProfile: type: \"RuntimeDefault\" ports: - containerPort: 80 EOF Now the deployment is mutated by Kubewarden’s policy which allows the Pod to be started. The container defined inside the Pod has a default runAsUser value: kubectl get pods -n my-namespace nginx-deployment-57d8568bbb-nv8fj -o json | jq \".spec.containers[].securityContext\" { \"allowPrivilegeEscalation\": false, \"capabilities\": { \"drop\": [ \"ALL\" ] }, \"runAsNonRoot\": true, \"runAsUser\": 1000, \"seccompProfile\": { \"type\": \"RuntimeDefault\" } } The Kubewarden integration can do more in this scenario. It can check the value of the runAsUser provided. This resource is rejected by the Kubewarden policy from earlier: kubectl command to show resource rejection kubectl apply -n my-namespace -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment2 labels: app: nginx spec: replicas: 1 selector: matchLabels: app: template-nginx template: metadata: labels: app: template-nginx spec: containers: - name: nginx image: nginx:1.14.2 securityContext: runAsNonRoot: true runAsUser: 7000 (1) allowPrivilegeEscalation: false capabilities: drop: - \"ALL\" seccompProfile: type: \"RuntimeDefault\" ports: - containerPort: 80 EOF 1 runAsUser: 7000 It’s rejected because the runAsUser value is set to 7000, which is outside the ranges allowed by the policy: kubectl get deploy -n my-namespace nginx-deployment -o json | jq \".status.conditions[] | select(.reason == \\\"FailedCreate\\\")\" { \"lastTransitionTime\": \"2022-10-28T19:22:04Z\", \"lastUpdateTime\": \"2022-10-28T19:22:04Z\", \"message\": \"admission webhook \\\"clusterwide-user-group-psp.kubewarden.admission\\\" denied the request: User ID outside defined ranges\", \"reason\": \"FailedCreate\", \"status\": \"True\", \"type\": \"ReplicaFailure\" } PSA provides an easy way to secure Kubernetes clusters. The main goal of PSA is simplicity and it doesn’t have the power and flexibility of the earlier PSP. Using Kubewarden together with PSA helps fill this gap.","title":"Using Pod Security Admission with Kubewarden","component":"admission-controller","version":"1.29","name":"pod-security-admission-with-kubewarden","url":"/admission-controller/1.29/en/howtos/pod-security-admission-with-kubewarden.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Summary","hash":"_summary","id":2}],"keyword":"[\"kubewarden\", \"pod security admission\", \"pod security policy\", \"kubernetes\"]"},"24":{"id":24,"text":"By default, policies apply to all Namespaces that the PolicyServer is configured for. If you want a policy to target only specific namespaces, you can deploy several AdmissionPolicies in each Namespace. Another option is to configure ClusterAdmissionPolicies by setting their spec.namespaceSelector (see CRD docs). The spec.namespaceSelector decides whether to run the policy on an object, based on whether the namespace for that object matches the selector. For example, here is a policy that only targets the kube-system and my-namespace Namespaces: --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psa-enforcer-privileged-namespaces spec: module: registry://ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.3 rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"namespaces\"] operations: - CREATE - UPDATE mutating: true namespaceSelector: matchExpressions: - key: \"kubernetes.io/metadata.name\" operator: In values: [kube-system, my-namespace] settings: modes: enforce: \"privileged\" Here is a policy that targets all the Namespaces besides the kube-system and my-namespace: --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psa-enforcer-default-mode spec: module: registry://ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.3 rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"namespaces\"] operations: - CREATE - UPDATE mutating: true namespaceSelector: matchExpressions: - key: \"kubernetes.io/metadata.name\" operator: NotIn values: [kube-system, my-namespace] settings: modes: enforce: \"restricted\" When a policy rejects a resource, the message shown to the user is the one written by the policy author. Sometimes cluster operators may want to set a custom reject message. For example, this can be used to point to an internal wiki or to provide a more specific error code. The message field in the ClusterAdmissionPolicy and AdmissionPolicy types can be used to achieve this. ClusterAdmissionPolicyGroup and AdmissionPolicyGroup already have a message field that behaves in the same way. The message field allows cluster operators to define a custom reject message that overrides the one returned by the policy. When using this configuration, the original rejection message can be found in the causes field of the response. apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: pod-privileged-with-message spec: module: registry://ghcr.io/kubewarden/policies/pod-privileged:1.0.2 policyServer: default mode: protect message: \"Nops! You cannot do that\" settings: {} rules: - apiGroups: - \"\" apiVersions: - v1 resources: - \"*\" operations: - CREATE mutating: false You can obtain the full details of a rejected admission request by increasing the verbosity level of kubectl: $ kubectl -v4 run pod-privileged2 --image=registry.k8s.io/pause --privileged I0612 16:32:43.647601 48424 cert_rotation.go:137] Starting client certificate rotation controller I0612 16:32:43.662550 48424 helpers.go:246] server response object: [{ \"metadata\": {}, \"status\": \"Failure\", \"message\": \"admission webhook \\\"clusterwide-pod-privileged-with-message.kubewarden.admission\\\" denied the request: Nops! You cannot do that\", \"details\": { \"causes\": [ { \"message\": \"Privileged container is not allowed\" } ] }, \"code\": 400 }] Sometimes when using a policy, it doesn’t implement the inverse logic of what you need yet. For example, you want to use the priority-class policy to reject a set of priority classes. But at the time of writing, the priority-class policy only supports allowlists, not denylist. A common pattern then is to wrap your policy in an AdmissionPolicyGroup or ClusterAdmissionPolicyGroup, and negate the result of the policy in its spec.expression. For example, let’s assume we want users to use all the priority classes defined inside of the cluster except for one of the following ones: low-priority, med-priority and high-priority. Currently the policy settings allows to express only the list of allowed priority classes. The following group policy overcomes this limitation. apiVersion: policies.kubewarden.io/v1 kind: AdmissionPolicyGroup metadata: name: priority-class-denylist namespace: your-namespace # or use a CLusterAdmissionPolicyGroup and set spec.namespaceSelector spec: rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"replicationcontrollers\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"apps\"] apiVersions: [\"v1\"] resources: [\"deployments\", \"replicasets\", \"statefulsets\", \"daemonsets\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"batch\"] apiVersions: [\"v1\"] resources: [\"jobs\", \"cronjobs\"] operations: [\"CREATE\", \"UPDATE\"] policies: is_a_denied_priority_class: module: ghcr.io/kubewarden/policies/priority-class-policy:v1.0.4 settings: allowed_priority_classes: - low-priority - med-priority - high-priority expression: \"!is_a_denied_priority_class()\" # negated result message: \"the Pod is using a priorityClass that is not allowed\"","title":"Configuring policies","component":"admission-controller","version":"1.29","name":"policies","url":"/admission-controller/1.29/en/howtos/policies.html","titles":[{"text":"Skipping namespaces for a specific policy","hash":"_skipping_namespaces_for_a_specific_policy","id":1},{"text":"Custom rejection message","hash":"_custom_rejection_message","id":2},{"text":"Negating a policy result by wrapping it in a PolicyGroup","hash":"_negating_a_policy_result_by_wrapping_it_in_a_policygroup","id":3}],"keyword":"[\"policies\", \"ClusterAdmissionPolicies\", \"AdmissionPolicies\", \"configuration\", \"namespaces\"]"},"25":{"id":25,"text":"Before working with Policy Groups, consult the explanation. Using the example from the explanation of Policy Groups, use these commands to implement it. kubectl apply -f group-policy-demo.yaml A ClusterAdmissionPolicyGroup that rejects Pods that use images with the latest tag, unless the images are signed by two trusted parties: Alice and Bob. apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicyGroup # or AdmissionPolicyGroup metadata: name: demo spec: rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE policies: signed_by_alice: module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.0 settings: modifyImagesWithDigest: false signatures: - image: \"*\" pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEyg65hiNHt8FXTamzCn34IE3qMGcV yQz3gPlhoKq3yqa1GIofcgLjUZtcKlUSVAU2/S5gXqyDnsW6466Jx/ZVlg== -----END PUBLIC KEY----- signed_by_bob: module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.0 settings: modifyImagesWithDigest: false signatures: - image: \"*\" pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEswA3Ec4w1ErOpeLPfCdkrh8jvk3X urm8ZrXi4S3an70k8bf1OlGnI/aHCcGleewHbBk1iByySMwr8BabchXGSg== -----END PUBLIC KEY----- reject_latest: module: registry://ghcr.io/kubewarden/policies/trusted-repos:v0.2.0 settings: tags: reject: - latest expression: \"reject_latest() || (signed_by_alice() && signed_by_bob())\" message: \"the image is using the latest tag or is not signed by Alice and Bob\" Once the policy is active, the creation of a non-compliant Pod will be rejected. To obtain more information about the evaluation of the policies that are part of the group, increase the verbosity level of kubectl: kubectl -v4 apply -f signed-pod.yml I0919 18:29:40.251332 4330 helpers.go:246] server response object: [{ \"kind\": \"Status\", \"apiVersion\": \"v1\", \"metadata\": {}, \"status\": \"Failure\", \"message\": \"error when creating \\\"signed-pod.yml\\\": admission webhook \\\"clusterwide-demo.kubewarden.admission\\\" denied the request: the image is using the latest tag or is not signed by Alice and Bob\", \"details\": { \"causes\": [ { \"message\": \"Resource signed is not accepted: verification of image testing.registry.svc.lan/busybox:latest failed: Host error: Callback evaluation failure: Image verification failed: missing signatures\\nThe following constraints were not satisfied:\\nkind: pubKey\\nowner: null\\nkey: |\\n -----BEGIN PUBLIC KEY-----\\n MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEswA3Ec4w1ErOpeLPfCdkrh8jvk3X\\n urm8ZrXi4S3an70k8bf1OlGnI/aHCcGleewHbBk1iByySMwr8BabchXGSg==\\n -----END PUBLIC KEY-----\\nannotations: null\\n\", \"field\": \"spec.policies.signed_by_bob\" }, { \"message\": \"not allowed, reported errors: tags not allowed: latest\", \"field\": \"spec.policies.reject_latest\" } ] }, \"code\": 400 }] Error from server: error when creating \"signed-pod.yml\": admission webhook \"clusterwide-demo.kubewarden.admission\" denied the request: the image is using the latest tag or is not signed by Alice and Bob The evaluation output produced by the policies that are part of the group is visible only by increasing the verbosity level of kubectl. A verbosity level of 4 is enough to see the evaluation output of the policies.","title":"How to use policy groups","component":"admission-controller","version":"1.29","name":"policy-groups","url":"/admission-controller/1.29/en/howtos/policy-groups.html","titles":[],"keyword":"[\"kubewarden\", \"policy groups\", \"clusteradmissionpolicygroup\", \"admissionpolicygroup\"]"},"26":{"id":26,"text":"Kubewarden provides features for reliability and correct scheduling of its components in a Kubernetes cluster. Some of the hints on this page come from Kubewarden community members using Kubewarden at scale. If you want to see a real example of running Kubewarden at scale check out the Kubewarden in a Large-Scale Environment documentation page By using the tolerations and affinity fields, operators can fine-tune the scheduling and reliability of the Kubewarden stack to meet their specific deployment needs and constraints. For more details on the exact fields and their configurations, refer to the Kubernetes documentation on Taints and Tolerations and Affinity and Anti-Affinity. Starting from version 1.15 of the Kubewarden stack, the Kubewarden Helm charts ship with two new values: .global.tolerations .global.affinity These Helm chart values allow users to define Kubernetes tolerations and affinity/anti-affinity settings for the Kubewarden stack, including the controller deployment, audit scanner cronjob, and the default PolicyServer custom resource. The tolerations value is an array where users can specify Kubernetes tolerations for the Kubewarden components. Tolerations allow pods to be scheduled on nodes with matching taints. This is useful for managing where pods can be scheduled, especially in scenarios involving node maintenance, dedicated workloads, or specific hardware requirements: global: tolerations: - key: \"key1\" operator: \"Equal\" value: \"value1\" effect: \"NoSchedule\" - key: \"key2\" operator: \"Equal\" value: \"value2\" effect: \"NoExecute\" In this example, the tolerations defined are applied to the controller deployment, audit scanner cronjob, and the default PolicyServer custom resource. The affinity value allows users to define Kubernetes affinity and anti-affinity rules for the Kubewarden components. Affinity rules constrain pods to specific nodes, while anti-affinity rules prevent pods from being scheduled on certain nodes or in close proximity to other pods. These settings are useful for ensuring high availability, fault tolerance, and optimized resource usage in a cluster. global: affinity: podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: security operator: In values: - S1 topologyKey: topology.kubernetes.io/zone podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 100 podAffinityTerm: labelSelector: matchExpressions: - key: security operator: In values: - S2 topologyKey: topology.kubernetes.io/zone nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/os operator: In values: - linux preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 preference: matchExpressions: - key: label-1 operator: In values: - key-1 - weight: 50 preference: matchExpressions: - key: label-2 operator: In values: - key-2 In this example, the affinity rules will be applied to the controller deployment, audit scanner cronjob, and the default PolicyServer custom resource. The previous affinity configuration available in the kubewarden-default Helm chart, which was used to define the affinity configuration for the PolicyServer only, has been removed in favor of the global affinity value. This change simplifies the configuration process by providing a single approach to defining affinity and anti-affinity rules for all Kubewarden components. The old affinity configuration in the kubewarden-default Helm chart has been removed. Users should now use the .global.affinity field to configure affinity and anti-affinity settings for the entire Kubewarden stack. By using priorityClasses, operators can enforce a scheduling priority for the workload pods of the Kubewarden stack. This ensures the Kubewarden workload is available over other workloads, preventing eviction and ensuring service reliability. For more information, refer to the Kubernetes documentation on Priorityclasses. Starting from version 1.25 of the Kubewarden stack, the Kubewarden Helm charts ship with a new value: .global.priorityClassName The priorityClass defined by name in this value is applied to the controller deployment pods, and the pods of the default PolicyServer custom resource. The .global.priorityClassName value expects a name of an existing PriorityClass. As an example, we could use: apiVersion: scheduling.k8s.io/v1 kind: PriorityClass metadata: name: kubewarden-high-priority value: 1000000 globalDefault: false description: \"This priority class should be used for XYZ service pods only.\" Kubernetes already ships with two PriorityClasses that are good candidates: system-cluster-critical and system-node-critical. These are common classes and are used to ensure that critical components are always scheduled first. If you delete a PriorityClass, existing Pods that use the name of the deleted PriorityClass remain unchanged, but following Pods that use the name of the deleted PriorityClass will not be created by Kubernetes. PolicyServers are critical to the cluster. Reliability of them is important as they process Admission Requests destined for the Kubernetes API via the Validating and Mutating Webhooks. As with other Dynamic Admission Controllers, this process happens before requests reach the Kubernetes API server. Latency or service delays by the Dynamic Admission Controller may introduce cluster inconsistency, Denial of Service, or deadlock. Kubewarden provides several ways to increase the reliability of PolicyServers. Production deployments can vary a great deal, it is up to the operator to configure the deployment for their needs. The Kubewarden controller can create a PodDisruptionBudget (PDB) for the PolicyServer Pods. This controls the range of PolicyServer Pod replicas associated with the PolicyServer, ensuring high availability and controlled eviction in case of node maintenance, scaling operations or cluster upgrades. This is achieved by setting spec.minAvailable, or spec.maxUnavailable of the PolicyServer resource: minAvailable: specifies the minimum number of PolicyServer Pods that must be available at all times. Can be an integer or a percentage. Useful for maintaining the operational integrity of the `PolicyServer`, ensuring that policies are continuously enforced without interruption. maxUnavailable: specifies the maximum number of PolicyServer Pods that can be unavailable at any given time. Can be an integer or a percentage. Useful for performing rolling updates or partial maintenance without fully halting the policy enforcement mechanism. You can specify only one of maxUnavailable and minAvailable. Example: Set minAvailable apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: your-policy-server spec: # Other configuration fields minAvailable: 2 # ensure at least two policy-server Pods are available at all times Example: Set maxUnavailable apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: your-policy-server spec: # Other configuration fields maxUnavailable: \"30%\" # ensure no more than 30% of policy-server Pods are unavailable at all times The Kubewarden controller can set the affinity of PolicyServer Pods. This allows constraint of Pods to specific nodes, or Pods against other Pods. For more information on Affinity, see the Kubernetes docs. Kubernetes affinity configuration allows constraining Pods to nodes (via spec.affinity.nodeAffinity) or constraining Pods with regards to other Pods (via spec.affinity.podAffinity). Affinity can be set as a soft constraint (with preferredDuringSchedulingIgnoredDuringExecution) or a hard one (with requiredDuringSchedulingIgnoredDuringExecution). Affinity / anti-affinity matches against specific labels, be it nodes' labels (e.g: topology.kubernetes.io/zone set to antarctica-east1) or Pods labels. Pods created from PolicyServer definitions have a label kubewarden/policy-server set to the name of the PolicyServer. (e.g: kubewarden/policy-server: default). Inter-pod affinity/anti-affinity require substantial amounts of processing and are not recommended in clusters larger than several hundred nodes. To configure affinity for a PolicyServer, set its spec.affinity field. This field accepts a YAML object matching the contents of a Pod’s spec.affinity. Example: Spread the PolicyServer Pods across zones and hostnames apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: your-policy-server spec: # Other configuration fields affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: kubewarden/policy-server operator: In values: - your-policy-server topologyKey: topology.kubernetes.io/zone - labelSelector: matchExpressions: - key: kubewarden/policy-server operator: In values: - your-policy-server topologyKey: kubernetes.io/hostname Example: Only schedule PolicyServer pods in control-plane nodes apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: your-policy-server spec: # Other configuration fields affinity: podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: kubewarden/policy-server operator: In values: - your-policy-server topologyKey: node-role.kubernetes.io/control-plane The Kubewarden controller can set the resource limits and requests of PolicyServer Pods. This specifies how much of each resource each of the containers associated with the PolicyServer Pods needs. For PolicyServers, only cpu and memory resources are relevant. See the Kubernetes docs on resource units for more information. This is achieved by setting the following PolicyServer resource fields: spec.limits: Limits on resources, enforced by the container runtime. Different runtimes can have different ways to implement the restrictions. spec.requests: Amount of resources to reserve for each container. It is possible and allowed for a container to use more resource than its request. If omitted, it defaults to `spec.limits` if that is set (unless `spec.requests` of containers is set to some defaults via an admission mechanism). Undercommitting resources of PolicyServers may cause reliability issues in the cluster. Example: Set hard limits for each PolicyServer container apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: your-policy-server spec: # Other configuration fields limits: cpu: 500m memory: 1Gi The Kubewarden controller can set the PriorityClass used for the pods of PolicyServers. This means PolicyServer workloads are scheduled with priority, preventing eviction and ensuring service reliability. See the Kubernetes docs for more information. If you delete a PriorityClass, existing Pods that use the name of the deleted PriorityClass remain unchanged, but following Pods that use the name of the deleted PriorityClass will not be created by Kubernetes. Example: Using the default system-cluster-critical priorityClass: apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: your-policy-server spec: # Other configuration fields priorityClassName: system-cluster-critical To ensure stability and high performance at scale, users can run separate PolicyServer deployments to isolate different workloads. Dedicate one PolicyServer to Context-Aware Policies: These policies are more resource-intensive because they query the Kubernetes API server or other external services like Sigstore, OCI registries, among others. Isolating them prevents a slow policy from creating a bottleneck for other, faster policies. Use another PolicyServer for All Other Policies: Run regular, self-contained policies on a separate server to ensure low latency for the most common admission requests. You can also consider splitting even further the workload. For example, if you have some policies that are slow and require a bigger execution timeout, consider moving them into a dedicated PolicyServer. This way you ensure that policies will not block the workers to evaluate other requests. To handle high traffic and ensure availability, provide sufficient resources and scale your replicas. Allocate Sufficient Resources: In high-traffic environments, allocate generous resources to each replica. Do not starve the PolicyServers, as insufficient CPU or memory is a primary cause of request timeouts. Remember that PolicyServers will receive requests from control plane and the Kubewarden audit scanner. Scale for High Availability: For deployments handling hundreds of requests per second, run a high number of replicas. This distributes the load effectively and ensures that the failure of a few pods does not impact the cluster’s operation. Start with a baseline of 3-5 replicas and monitor CPU and memory usage. Scale the replica count as needed. To run audits efficiently on large clusters, fine-tune the audit scanner for performance and parallelism. Schedule Audits Periodically: Running a scan frequently can be a good balance between catching configuration drift and minimizing load on the API server. Tune Parallelism Aggressively: The key to fast audits is parallelization. With high-parallelism settings, you can reduce audit times on massive clusters to just over an hour. It’s important to remember that audit scanner sends requests to PolicyServers. Therefore, its parallelism can impact on PolicyServer performance. If you want to have an aggressive parallelism to reduce the scan times in big clusters, you may need to increase the policy server resources available to avoid impacting the admission controller performance. Set disableStore: true to reduce load if you consume audit results from logs and do not require","title":"Configuring the Kubewarden stack for production","component":"admission-controller","version":"1.29","name":"production-deployments","url":"/admission-controller/1.29/en/howtos/production-deployments.html","titles":[{"text":"Configuring Tolerations and Affinity/Anti-Affinity","hash":"_configuring_tolerations_and_affinityanti_affinity","id":1},{"text":"Tolerations","hash":"_tolerations","id":2},{"text":"Affinity/Anti-Affinity","hash":"_affinityanti_affinity","id":3},{"text":"Configuring priorityClasses","hash":"_configuring_priorityclasses","id":4},{"text":"PolicyServer production configuration","hash":"_policyserver_production_configuration","id":5},{"text":"PodDisruptionBudgets","hash":"_poddisruptionbudgets","id":6},{"text":"Configuring minAvailable or maxUnavailable","hash":"_configuring_minavailable_or_maxunavailable","id":7},{"text":"Affinity / Anti-affinity","hash":"_affinity_anti_affinity","id":8},{"text":"Configuring Affinity / Anti-affinity","hash":"_configuring_affinity_anti_affinity","id":9},{"text":"Limits and Requests","hash":"_limits_and_requests","id":10},{"text":"Configuring Limits and Requests","hash":"_configuring_limits_and_requests","id":11},{"text":"PriorityClasses","hash":"_priorityclasses","id":12},{"text":"Configuring PriorityClasses","hash":"_configuring_priorityclasses_2","id":13},{"text":"Isolate Policy Workloads","hash":"_isolate_policy_workloads","id":14},{"text":"Resource Allocation and Scaling","hash":"_resource_allocation_and_scaling","id":15},{"text":"Effective Auditing at Scale","hash":"_effective_auditing_at_scale","id":16}],"keyword":"kubewarden, kubernetes, policyservers, production, poddisruptionbudget, affinity, limits, tolerations, priorityclass"},"27":{"id":27,"text":"For Kubernetes ≥ v1.25. PodSecurityPolicy (PSP) is removed. Now you can use Kubewarden for admission control on your Kubernetes clusters. Kubewarden has separate policies to achieve the same goal as a monolithic PSP configuration. Each Kubewarden policy definition functions as a different configuration section in the specification of a PSP. The mapping of PSP configuration fields to their respective Kubewarden policies is in the mapping table below. With Kubewarden, operators have granular control of policy configuration in their clusters. With a Kubewarden instance, you can deploy policies to replace the PodSecurityPolicy object. We consider these rules in this example: a PSP disabling privileged escalation privileged containers blocking pods running as root forcing a particular user group blocking host namespaces allowing a pod to use only port 443 The YAML definition of this PSP is: PSP YAML definition apiVersion: policy/v1beta1 kind: PodSecurityPolicy metadata: name: restricted spec: allowPrivilegeEscalation: false runAsUser: rule: MustRunAsNonRoot supplementalGroups: rule: MustRunAs ranges: - min: 1000 max: 65535 privileged: false hostNetwork: false hostIPC: false hostPID: false hostPorts: - min: 443 max: 443 Now we will create Kubewarden policies to achieve the same goal. You enforce each rule with a separate Kubewarden policy. So, in this example, you need a separate policy for the enforcement of each of: privileged escalation user and group configuration host namespaces privileged container configuration. You can deploy a policy as shown below: kubectl command for policy deployment $ kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-allow-privilege-escalation spec: module: ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.2.6 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: default_allow_privilege_escalation: false EOF In that command, we have specified default_allow_privilege_escalation to be false. This policy restricts pods that try to run with more privileges than the parent container. Output from kubectl that attempts to raise privilege $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx securityContext: allowPrivilegeEscalation: true - name: sidecar image: sidecar EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-allow-privilege-escalation.kubewarden.admission\" denied the request: one of the containers has privilege escalation enabled Now, to enforce the user and group configuration, you can use the user-group-psp policy. kubectl command to use user-group-psp-policy $ kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-user-group spec: module: ghcr.io/kubewarden/policies/user-group-psp:v0.4.9 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: true settings: run_as_user: rule: MustRunAsNonRoot supplemental_groups: rule: MustRunAs ranges: - min: 1000 max: 65535 EOF You should configure the policy with mutation: true. It’s required because the policy will add supplementalGroups when the user does not define them. So, now users cannot deploy pods running as root: Example output where runAsNonRoot: false $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx securityContext: runAsNonRoot: false runAsUser: 0 EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-user-group-fb836.kubewarden.admission\" denied the request: RunAsNonRoot should be set to true Example output where runAsUser: 0 kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx securityContext: runAsNonRoot: true runAsUser: 0 EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-user-group-fb836.kubewarden.admission\" denied the request: Invalid user ID: cannot run container with root ID (0) This example below shows the addition of a supplemental group, despite it not being defined by us. Example addition of a supplemental group kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx EOF pod/nginx created $ kubectl get pods -o json nginx | jq \".spec.securityContext\" { \"supplementalGroups\": [ 10000 ] } You need to replace the older PSP configuration that blocks privileged containers. It’s necessary to deploy the pod-privileged policy. This policy does not need any settings. Once running, it will block privileged pods. Applying the pod-privileged-policy $ kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-privileged spec: module: ghcr.io/kubewarden/policies/pod-privileged:v0.2.7 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: null EOF To test the policy, we can try running a pod with privileged configuration enabled: Pod run with privileged configuration enabled $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent securityContext: privileged: true - name: sleeping-sidecar image: alpine command: [\"sleep\", \"1h\"] EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-privileged.kubewarden.admission\" denied the request: Privileged container is not allowed To finish the PSP migration exercise, you need to disable host namespace sharing. For that, we shall be using the host-namespace-psp policy. It allows the cluster administrator to block IPC, PID, and network namespaces individually. It also sets the ports that the pods can be open on, on the host IP. Disabling namespace sharing and setting ports $ kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-hostnamespaces spec: module: ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.6 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: allow_host_ipc: false allow_host_pid: false allow_host_ports: - min: 443 max: 443 allow_host_network: false EOF We can validate the policy. The pod should not be able to share host namespaces: Blocking namespace example $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: hostIPC: true hostNetwork: false hostPID: false containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent - name: sleeping-sidecar image: alpine command: [\"sleep\", \"1h\"] EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-hostnamespaces.kubewarden.admission\" denied the request: Pod has IPC enabled, but this is not allowed $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: hostIPC: false hostNetwork: true hostPID: false containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent - name: sleeping-sidecar image: alpine command: [\"sleep\", \"1h\"] EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-hostnamespaces.kubewarden.admission\" denied the request: Pod has host network enabled, but this is not allowed $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: hostIPC: false hostNetwork: false hostPID: true containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent - name: sleeping-sidecar image: alpine command: [\"sleep\", \"1h\"] EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-hostnamespaces.kubewarden.admission\" denied the request: Pod has host PID enabled, but this is not allowed In this last example, the pod should only be able to expose port 443. If other ports are configured in hostPorts then an error should happen. Attempting to use port 80 in hostPorts $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent ports: - containerPort: 80 hostPort: 80 - name: sleeping-sidecar image: alpine command: [\"sleep\", \"1h\"] EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-psp-hostnamespaces.kubewarden.admission\" denied the request: Pod is using unallowed host ports in containers This table maps PSP configuration fields to corresponding Kubewarden policies. PSP field Kubewarden equivalent policy privileged pod-privileged-policy hostPID host-namespaces-psp-policy hostIPC host-namespaces-psp-policy hostNetwork host-namespaces-psp-polic hostPorts host-namespaces-psp-policy volumes volumes-psp-policy allowedHostPaths hostpaths-psp-policy readOnlyRootFilesystem readonly-root-filesystem-psp-policy fsgroup allowed-fsgroups-psp-policy allowedFlexVolumes flexvolume-drivers-psp-policy runAsUser user-group-psp-policy runAsGroup user-group-psp-policy supplementalGroups user-group-psp-policy allowPrivilegeEscalation allow-privilege-escalation-psp-policy defaultAllowPrivilegeEscalation allow-privilege-escalation-psp-policy allowedCapabilities capabilities-psp-policy defaultAddCapabilities capabilities-psp-policy requiredDropCapabilities capabilities-psp-policy seLinux selinux-psp-policy allowedProcMountTypes allowed-proc-mount-types-psp-policy apparmor apparmor-psp-policy seccomp seccomp-psp-policy forbiddenSysctls sysctl-psp-policy allowedUnsafeSysctls sysctl-psp-policy The Kubewarden team has developed a script for PSP migration. It uses the migration tool from AppVia. The AppVia tool reads a PSP YAML configuration. It then generates the corresponding policies. It does this for Kubewarden and other policy engines. The AppVia migration tool is out of control of the Kuberwarden maintainers. This means that it’s possible it generates out-of-date Kubewarden policies. Use with caution. We need a pull request for AppVia for which work is ongoing. Contact us for more information if you need to. The script is available in the Kubewarden utils repository. It downloads the AppVia migration tool into the working directory to use. It processes the PSPs defined in the kubectl default context. Then it prints the Kuberwarden policies definitions on the standard output. Users can redirect the content to a file or to kubectl directly. This script only works in Linux x86_64 machines. Let’s take a look at an example. In a cluster with the PSP: blocking access to host namespaces blocking privileged containers not allowing privilege escalation dropping container capabilities listing the allowed volume types defining the allowed users and groups to be used controlling the supplemental group applied to volumes forcing containers to run in a read-only root filesystem The following YAML could be used. The PSP configuration apiVersion: policy/v1beta1 kind: PodSecurityPolicy metadata: name: restricted spec: hostNetwork: false hostIPC: false hostPID: false hostPorts: - min: 80 max: 8080 privileged: false # Required to prevent escalations to root. allowPrivilegeEscalation: false requiredDropCapabilities: - ALL # Allow core volume types. volumes: - \"configMap\" - \"emptyDir\" - \"projected\" - \"secret\" - \"downwardAPI\" # Assume that ephemeral CSI drivers & persistentVolumes set up by the cluster admin are safe to use. - \"csi\" - \"persistentVolumeClaim\" - \"ephemeral\" runAsUser: # Require the container to run without root privileges. rule: \"MustRunAsNonRoot\" seLinux: # This policy assumes the nodes are using AppArmor rather than SELinux. rule: \"RunAsAny\" supplementalGroups: rule: \"MustRunAs\" ranges: # Forbid adding the root group. - min: 1 max: 65535 fsGroup: rule: \"MustRunAs\" ranges: # Forbid adding the root group. - min: 1 max: 65535 readOnlyRootFilesystem: true Kubewarden policies can be applied directly to a cluster using the following command: $ ./psp-to-kubewarden | kubectl apply -f - Warning: policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+ Warning: policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+ clusteradmissionpolicy.policies.kubewarden.io/psp-privileged-82bf2 created clusteradmissionpolicy.policies.kubewarden.io/psp-readonlyrootfilesystem-b4a55 created clusteradmissionpolicy.policies.kubewarden.io/psp-hostnamespaces-a25a2 created clusteradmissionpolicy.policies.kubewarden.io/psp-volumes-cee05 created clusteradmissionpolicy.policies.kubewarden.io/psp-capabilities-34d8e created clusteradmissionpolicy.policies.kubewarden.io/psp-usergroup-878b0 created clusteradmissionpolicy.policies.kubewarden.io/psp-fsgroup-3b08e created clusteradmissionpolicy.policies.kubewarden.io/psp-defaultallowprivilegeescalation-b7e87 created If users want to inspect the policies before applying, it’s possible to redirect the content to a file or review it directly in the console To store the generated policies and view them: ./psp-to-kubewarden > policies.yaml && cat policies.yaml $ ./psp-to-kubewarden > policies.yaml $ cat policies.yaml --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-privileged-eebb9 spec: module: registry://ghcr.io/kubewarden/policies/pod-privileged:v0.2.7 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: null --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-readonlyrootfilesystem-34d7c spec: module: registry://ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v0.1.6 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: null --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-hostnamespaces-41314 spec: module: registry://ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.6 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: allow_host_ipc: false allow_host_pid: false allow_host_ports: - max: 8080 min: 80 allow_host_network: false --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-volumes-2fd34 spec: module: registry://ghcr.io/kubewarden/policies/volumes-psp:v0.1.11 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: allowedTypes: - configMap - emptyDir - projected - secret - downwardAPI - csi - persistentVolumeClaim - ephemeral --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-capabilities-340fe spec: module: registry://ghcr.io/kubewarden/policies/capabilities-psp:v0.1.13 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: allowed_capabilities: [] required_drop_capabilities: - ALL --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-usergroup-19f7a spec: module: registry://ghcr.io/kubewarden/policies/user-group-psp:v0.4.9 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: run_as_user: rule: MustRunAsNonRoot supplemental_groups: ranges: - max: 65535 min: 1 rule: MustRunAs --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-fsgroup-52337 spec: module: registry://ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v0.1.10 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: ranges: - max: 65535 min: 1 rule: MustRunAs --- apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: psp-defaultallowprivilegeescalation-6f11b spec: module: registry://ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.2.6 rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE - UPDATE mutating: false settings: default_allow_privilege_escalation: false The policy names are generated by the PSP migration tool. You may want to change the name to something more meaningful.","title":"PodSecurityPolicy migration","component":"admission-controller","version":"1.29","name":"psp-migration","url":"/admission-controller/1.29/en/howtos/psp-migration.html","titles":[{"text":"Kubewarden replacements for PSP","hash":"_kubewarden_replacements_for_psp","id":1},{"text":"Blocking container privilege escalation","hash":"_blocking_container_privilege_escalation","id":2},{"text":"User and group configuration","hash":"_user_and_group_configuration","id":3},{"text":"Privileged container configuration","hash":"_privileged_container_configuration","id":4},{"text":"Host namespace configuration","hash":"_host_namespace_configuration","id":5},{"text":"Mapping Kubewarden policies to PSP fields","hash":"_mapping_kubewarden_policies_to_psp_fields","id":6},{"text":"PSP migration script","hash":"_psp_migration_script","id":7}],"keyword":"[\"kubewarden\", \"kubernetes\", \"appvia\", \"psp\", \"pod security policy\"]"},"28":{"id":28,"text":"From v1.9.0 onwards, Kubewarden supports the ability to write and execute policies outside a Kubernetes cluster, as a generic policy evaluation engine. The Policy Server exposes the /validate_raw endpoint that can be used to validate arbitrary JSON documents against a Kubewarden policy. For this guide, we will use the following raw policies: raw-validation-policy raw-mutation-policy Please ensure that the policy author has marked the policy as policyType: raw in the metadata. You can inspect the metadata by using kwctl kwctl inspect ghcr.io/kubewarden/tests/raw-mutation-policy:v0.1.0 The Policy Server can be run outside Kubernetes as a standalone container. First, create a policies.yml file with the following content: raw-validation: module: ghcr.io/kubewarden/tests/raw-validation-policy:v0.1.0 settings: validUsers: - alice - bob validActions: - read - write validResources: - orders - products raw-mutation: module: ghcr.io/kubewarden/tests/raw-mutation-policy:v0.1.0 allowedToMutate: true settings: forbiddenResources: - privateResource - secretResource defaultResource: publicResource To start the policy server: # Create a docker volume to store the policies docker volume create --driver local \\ --opt type=tmpfs \\ --opt device=tmpfs \\ --opt o=ui=65533 \\ policy-store # Start the policy server docker run --rm -it \\ -p 3000:3000 \\ -v $(pwd)/policies.yml:/policies.yml \\ -v policy-store:/registry \\ ghcr.io/kubewarden/policy-server:1.9.0 \\ --ignore-kubernetes-connection-failure=true the flag --ignore-kubernetes-connection-failure=true is required to start the policy server without Kubernetes. However, it is possible to start the Policy Server with/inside Kubernetes and use the raw validation endpoint. Raw policies can access context-awarecapabilities like standard policies. It’s not possible to use a Policy Server instance managed by the Kubewarden controller to host raw policies. The controller will not allow the user to change the Policy Server ConfigMap to add a raw policy, since it will try to reconcile it reverting the changes. Because of that, a dedicated Policy Server has to be started. Create a policy-server.yaml file with the following content: --- apiVersion: apps/v1 kind: Deployment metadata: name: policy-server-deployment spec: replicas: 1 selector: matchLabels: app: policy-server template: metadata: labels: app: policy-server spec: containers: - name: policy-server image: ghcr.io/kubewarden/policy-server:v1.9.0 ports: - containerPort: 3000 volumeMounts: - name: policy-store mountPath: /registry - name: policies-config mountPath: /policies.yml subPath: policies.yml volumes: - name: policy-store emptyDir: {} - name: policies-config configMap: name: policies-configmap --- apiVersion: v1 kind: Service metadata: name: policy-server-service spec: selector: app: policy-server ports: - protocol: TCP port: 3000 targetPort: 3000 --- apiVersion: v1 kind: ConfigMap metadata: name: policies-configmap data: policies.yml: | raw-validation: module: ghcr.io/kubewarden/tests/raw-validation-policy:v0.1.0 settings: validUsers: - alice - bob validActions: - read - write validResources: - orders - products raw-mutation: module: ghcr.io/kubewarden/tests/raw-mutation-policy:v0.1.0 allowedToMutate: true settings: forbiddenResources: - privateResource - secretResource defaultResource: publicResource Apply the configuration: kubectl apply -f policy-server.yaml The Policy Server instance deployed will have access to Kubernetes resources that could be leveraged by context aware policies. The access level to the Kubernetes resources is determined by the Service Account used to run the Policy Server workload. In the previous example, no Service Account is defined inside of the Deployment specification; hence the default Service Account is going to be used. The raw validation endpoint is exposed at /validate_raw and accepts POST requests. Since we have deployed a service, we can set a port-forward to access it with kubectl port-forward service/policy-server-service 3000:3000 -n default. Let’s try to validate a JSON document against the raw-validation policy: curl -X POST \\ http://localhost:3000/validate_raw/raw-validation \\ -H 'Content-Type: application/json' \\ -d '{ \"request\": { \"user\": \"alice\", \"action\": \"read\", \"resource\": \"customers\" } }' The request will be not accepted, since alice has not been granted access to the customers resource: { \"response\": { \"uid\": \"\", \"allowed\": false, \"auditAnnotations\": null, \"warnings\": null } } Let’s try again with a valid resource: curl -X POST \\ http://localhost:3000/validate_raw/raw-validation \\ -H 'Content-Type: application/json' \\ -d '{ \"request\": { \"user\": \"alice\", \"action\": \"read\", \"resource\": \"orders\" } }' This time, the request will be accepted: { \"response\": { \"uid\": \"\", \"allowed\": true, \"auditAnnotations\": null, \"warnings\": null } } If the uid field is provided in the request payload, it will be returned as part of the response. Now, let’s try to mutate a JSON document against the raw-mutation policy: curl -X POST \\ http://localhost:3000/validate_raw/raw-mutation \\ -H 'Content-Type: application/json' \\ -d '{ \"request\": { \"user\": \"alice\", \"action\": \"read\", \"resource\": \"privateResource\" } }' The request will be mutated and the response will contain a JSONPatch: { \"response\": { \"uid\": \"\", \"allowed\": true, \"patchType\": \"JSONPatch\", \"patch\": \"W3sib3AiOiJyZXBsYWNlIiwicGF0aCI6Ii9yZXNvdXJjZSIsInZhbHVlIjoicHVibGljUmVzb3VyY2UifV0=\", \"auditAnnotations\": null, \"warnings\": null } } Similarly to policies that validate Kubernetes resources, raw policies are written in WebAssembly using Kubewarden SDKs. If you are interested in writing raw policies, please refer to language-specific documentation for more information: Go Rust OPA WASI","title":"Raw policies","component":"admission-controller","version":"1.29","name":"raw-policies","url":"/admission-controller/1.29/en/howtos/raw-policies.html","titles":[{"text":"Running the policy server outside Kubernetes","hash":"_running_the_policy_server_outside_kubernetes","id":1},{"text":"Running a Policy Server inside Kubernetes without the Kubewarden controller","hash":"_running_a_policy_server_inside_kubernetes_without_the_kubewarden_controller","id":2},{"text":"Using the validate_raw endpoint","hash":"_using_the_validate_raw_endpoint","id":3},{"text":"Validation","hash":"_validation","id":4},{"text":"Mutation","hash":"_mutation","id":5},{"text":"Writing raw policies","hash":"_writing_raw_policies","id":6}],"keyword":"[\"kubewarden\", \"kubernetes\", \"support\", \"raw policies\"]"},"29":{"id":29,"text":"This describes tasks that can be performed after you install Kubewarden in your Kubernetes cluster. Each task can be done separately; they are shown here in a logical ordering. Kubewarden has two tools to help you find policies and test them locally: Artifact Hub using their package filter for Kubewarden policies. kwctl CLI tool Artifact hub hosts policies contributed by the community. For example, you can find substitutes to the deprecated Kubernetes Pod Security Policies, created by the Kubewarden developers. As shown in the screenshot below, once you find a policy of interest, select the Install button and use kwctl to fetch the policy for your cluster. Previously, Kubewarden policies could be found at the Kubewarden Policy Hub. This has been retired. Policies are now available from https://artifacthub.io. kwctl is our CLI tool for policy authors and the cluster administrators to test policies before they are applied to the Kubernetes cluster. This tool has a similar interface to the docker CLI tool. You can use kwctl to help in these scenarios: As a policy author End-to-end testing of your policy: Test your policy against crafted Kubernetes requests and ensure your policy behaves as you expect. You can even test context-aware policies that require access to a running cluster. Embed metadata in your Wasm module: the binary contains annotations of the permissions it needs to be executed. You can inspect and modify these annotations with kwctl. Publish policies to OCI registries: The binary is a fully compliant OCI object and can be stored in OCI registries. As a cluster administrator Inspect remote policies: Given a policy in an OCI registry or in an HTTP server, show all static information about the policy. Dry-run of a policy in your cluster: Test the policy against crafted Kubernetes requests and ensure the policy behaves as you expect given the input data you provide. You can even test context-aware policies that require access to a running cluster, also in a dry-run mode. Generate initial ClusterAdmissionPolicy scaffolding for your policy: Generate a YAML file with all the required settings, which can be applied to your Kubernetes cluster using kubectl. kwctl binaries for the stable releases are available from the GitHub repository. To build kwctl from the GitHub repo, you will need a Rust development environment. You can list all the kwctl options and sub-commands by running the following command: $ kwctl --help kwctl 0.2.5 Kubewarden Developers <cncf-kubewarden-maintainers@lists.cncf.io> Tool to manage Kubewarden policies USAGE: kwctl [OPTIONS] <SUBCOMMAND> OPTIONS: -h, --help Print help information -v Increase verbosity -V, --version Print version information SUBCOMMANDS: annotate Add Kubewarden metadata to a WebAssembly module completions Generate shell completions digest Fetch the digest of its OCI manifest help Print this message or the help of the given subcommand(s) inspect Inspect Kubewarden policy policies Lists all downloaded policies pull Pulls a Kubewarden policy from a given URI push Pushes a Kubewarden policy to an OCI registry rm Removes a Kubewarden policy from the store run Runs a Kubewarden policy from a given URI scaffold Scaffold a Kubernetes resource or configuration file verify Verify a Kubewarden policy from a given URI using Sigstore Here are a few command usage examples: List the policies: lists all the policies stored in the local kwctl registry Command: kwctl policies Obtain the policy: download and store the policy inside the local kwctl store Command: kwctl pull <policy URI> $ kwctl pull registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9 $ kwctl policies +--------------------------------------------------------------+----------+---------------+--------------+----------+ | Policy | Mutating | Context aware | SHA-256 | Size | +--------------------------------------------------------------+----------+---------------+--------------+----------+ | registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9 | no | no | 59e34f482b40 | 21.86 kB | +--------------------------------------------------------------+----------+---------------+--------------+----------+ Understand how the policy works: inspect the policy metadata Command: kwctl inspect <policy URI> $ kwctl inspect registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9 Details title: pod-privileged description: Limit the ability to create privileged containers author: Flavio Castelli url: https://github.com/kubewarden/pod-privileged-policy source: https://github.com/kubewarden/pod-privileged-policy license: Apache-2.0 mutating: false context aware: false execution mode: kubewarden-wapc protocol version: 1 Annotations io.kubewarden.kwctl 0.1.9 Rules ──────────────────── --- - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE ──────────────────── Usage This policy doesn't have a configuration. Once enforced, it will reject the creation of Pods that have at least a privileged container defined. Evaluate the policy: Assess the policy and, if available, find the right configuration values to match your requirements. You will need some familiarity with the Kubernetes REST APIs. Command: kwctl run -r <\"Kubernetes Admission request\" file path> -s <\"JSON document\" file path> <policy URI> Scenario 1: Request to be evaluated: Create a pod with no 'privileged' container $ kwctl run registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9 -r unprivileged-pod-request.json {\"uid\":\"C6E115F4-A789-49F8-B0C9-7F84C5961FDE\",\"allowed\":true,\"status\":{\"message\":\"\"}} Equivalent command with the policy binary downloaded: `$ kwctl run file://$PWD/pod-privileged-policy.wasm -r unprivileged-pod-request.json {\"uid\":\"C6E115F4-A789-49F8-B0C9-7F84C5961FDE\",\"allowed\":true,\"status\":{\"message\":\"\"}} Result: The policy allows the request Scenario 2: Request to be evaluated: Create a pod with at least one 'privileged' container Command: kwctl run registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9 -r privileged-pod-request.json Equivalent command with the policy binary downloaded: kwctl run file://$PWD/pod-privileged-policy.wasm -r privileged-pod-request.json Output: { \"uid\": \"8EE6AF8C-C8C8-45B0-9A86-CB52A70EC50D\", \"allowed\": false, \"status\": { \"message\": \"User 'kubernetes-admin' cannot schedule privileged containers\" } } Result: The policy denies the request For some more complex examples, see the blog post Introducing kwctl to Kubernetes Administrators. You enforce a policy by defining a ClusterAdmissionPolicy and then deploy it to your cluster using kubectl. kwctl helps generate a ClusterAdmissionPolicy from the policy you want to enforce. After you have generated the ClusterAdmissionPolicy and applied it to your cluster, you can follow the steps described in the Quick Start below: Generate the ClusterAdmissionPolicy from the policy manifest and save it to a file Command: kwctl scaffold manifest -t ClusterAdmissionPolicy <policy URI> > <\"policy name\".yaml> $ kwctl scaffold manifest -t ClusterAdmissionPolicy registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9 --- apiVersion: policies.kubewarden.io/v1alpha2 kind: ClusterAdmissionPolicy metadata: name: privileged-pods spec: module: \"registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9\" settings: {} rules: - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE mutating: false By default, the name value is set to generated-policy. You might want to edit it before you deploy the ClusterAdmissionPolicy. The name in the immediately previous example has been set to privileged-pods. Deploy the ClusterAdmissionPolicy to your Kubernetes cluster Command: kubectl apply -f <\"policy name\".yaml> $ kubectl apply -f pod-privileged-policy.yaml clusteradmissionpolicy.policies.kubewarden.io/privileged-pods created After the ClusterAdmissionPolicy is deployed, all requests sent to your cluster will be evaluated by the policy if they’re within the policy scope. Writing Policies explains how to write policies in different languages and generate WebAssembly binaries, so they can be used by Kubewarden. Distributing Policies explains how to publish policies to OCI registries.","title":"Common tasks","component":"admission-controller","version":"1.29","name":"tasks","url":"/admission-controller/1.29/en/howtos/tasks.html","titles":[{"text":"Test Policies","hash":"_test_policies","id":1},{"text":"Artifact hub","hash":"_artifact_hub","id":2},{"text":"kwctl CLI tool","hash":"_kwctl_cli_tool","id":3},{"text":"Use cases","hash":"_use_cases","id":4},{"text":"Installation","hash":"_installation","id":5},{"text":"Usage","hash":"_usage","id":6},{"text":"Enforce Policies","hash":"_enforce_policies","id":7},{"text":"Next steps","hash":"_next_steps","id":8}],"keyword":"[\"kubewarden\", \"kubernetes\", \"kwctl\", \"policy\", \"policyserver\", \"clusteradmissionpolicy\", \"admissionpolicy\"]"},"30":{"id":30,"text":"Starting from Kubernetes v1.26, the ValidatingAdmissionPolicy provides a way to write custom admission policies in Kubernetes. The policies are written with the Common Expression Language (CEL), extended with some Kubernetes-specific extensions. ValidatingAdmissionPolicy reached stability in Kubernetes v1.30. Kubewarden provides a CEL policy that is capable of running Kubernetes VAP policies without any modifications. You can read more about the CEL policy in this section of Kubewarden’s documentation. This paragraph explains the benefits of running VAP policies using Kubewarden. This guide explains how to use the kwctl tool to migrate a VAP policy to Kubewarden. You must use kwctl version 1.14.0 or later to follow this guide. Given a file containing this YAML definition of a ValidatingAdmissionPolicy: ValidatingAdmissionPolicy definition ```yaml title=\"vap.yml\" apiVersion: admissionregistration.k8s.io/v1 kind: ValidatingAdmissionPolicy metadata: name: \"force-liveness-probe\" spec: failurePolicy: Fail variables: - name: containers_without_liveness_probe expression: | object.spec.template.spec.containers.filter(c, !has(c.livenessProbe)).map(c, c.name) matchConstraints: resourceRules: - apiGroups: [\"apps\"] apiVersions: [\"v1\"] operations: [\"CREATE\", \"UPDATE\"] resources: [\"deployments\"] validations: - expression: | size(variables.containers_without_liveness_probe) == 0 messageExpression: | 'These containers are missing a liveness probe: ' + variables.containers_without_liveness_probe.join(' ') reason: Invalid And a file containing the ValidatingAdmissionPolicyBinding resource: ValidatingAdmissionPolicyBinding definition apiVersion: admissionregistration.k8s.io/v1 kind: ValidatingAdmissionPolicyBinding metadata: name: \"kw-scaffold-demo\" spec: policyName: \"force-liveness-probe\" validationActions: [Deny] matchResources: namespaceSelector: matchLabels: docs.kubewarden.io/vap-migration: enabled You can migrate the policy to Kubewarden by following these steps: kwctl command for policy migration $ kwctl scaffold vap \\ -p vap.yml \\ -b vap-binding.yml The command produces output similar to this: Output from the migration 2024-06-24T16:00:16.516062Z WARN kwctl::scaffold: Using the 'latest' version of the CEL policy could lead to unexpected behavior. It is recommended to use a specific version to avoid breaking changes. apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: kw-scaffold-demo spec: module: ghcr.io/kubewarden/policies/cel-policy:latest settings: variables: - expression: | object.spec.template.spec.containers.filter(c, !has(c.livenessProbe)).map(c, c.name) name: containers_without_liveness_probe validations: - expression: | size(variables.containers_without_liveness_probe) == 0 messageExpression: | 'These containers are missing a liveness probe: ' + variables.containers_without_liveness_probe.join(' ') reason: Invalid rules: - apiGroups: - apps apiVersions: - v1 resources: - deployments operations: - CREATE - UPDATE mutating: false failurePolicy: Fail namespaceSelector: matchLabels: docs.kubewarden.io/vap-migration: enabled The command warns the user about the usage of the latest version of the CEL policy. It is recommended to use a specific version to avoid breaking changes. This can be done using the --cel-policy flag, like this: $ kwctl scaffold vap \\ --cel-policy ghcr.io/kubewarden/policies/cel-policy:v1.0.1 \\ -p vap.yml \\ -b vap-binding.yml","title":"ValidatingAdmissionPolicy migration","component":"admission-controller","version":"1.29","name":"vap-migration","url":"/admission-controller/1.29/en/howtos/vap-migration.html","titles":[{"text":"Migration steps","hash":"_migration_steps","id":1}],"keyword":"[\"kubewarden\", \"kubernetes\", \"cel\", \"vap\", \"validatingadmissionpolicy\"]"},"31":{"id":31,"text":"You can find the definitions for the Kubewarden Custom Resources both on this page and here at docs.crds.dev. Packages policies.kubewarden.io/v1 policies.kubewarden.io/v1alpha2 Package v1 contains API Schema definitions for the policies v1 API group Resource Types AdmissionPolicy AdmissionPolicyGroup AdmissionPolicyGroupList AdmissionPolicyList ClusterAdmissionPolicy ClusterAdmissionPolicyGroup ClusterAdmissionPolicyGroupList ClusterAdmissionPolicyList PolicyServer PolicyServerList AdmissionPolicy is the Schema for the admissionpolicies API Appears In: AdmissionPolicyList Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string AdmissionPolicy metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec AdmissionPolicySpec AdmissionPolicyGroup is the Schema for the AdmissionPolicyGroups API Appears In: AdmissionPolicyGroupList Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string AdmissionPolicyGroup metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec AdmissionPolicyGroupSpec AdmissionPolicyGroupList contains a list of AdmissionPolicyGroup. Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string AdmissionPolicyGroupList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items AdmissionPolicyGroup array AdmissionPolicyGroupSpec defines the desired state of AdmissionPolicyGroup. Appears In: AdmissionPolicyGroup Field Description Default Validation PolicyGroupSpec PolicyGroupSpec AdmissionPolicyList contains a list of AdmissionPolicy. Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string AdmissionPolicyList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items AdmissionPolicy array AdmissionPolicySpec defines the desired state of AdmissionPolicy. Appears In: AdmissionPolicy Field Description Default Validation PolicySpec PolicySpec ClusterAdmissionPolicy is the Schema for the clusteradmissionpolicies API Appears In: ClusterAdmissionPolicyList Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string ClusterAdmissionPolicy metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec ClusterAdmissionPolicySpec ClusterAdmissionPolicyGroup is the Schema for the clusteradmissionpolicies API Appears In: ClusterAdmissionPolicyGroupList Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string ClusterAdmissionPolicyGroup metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec ClusterAdmissionPolicyGroupSpec ClusterAdmissionPolicyGroupList contains a list of ClusterAdmissionPolicyGroup Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string ClusterAdmissionPolicyGroupList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items ClusterAdmissionPolicyGroup array ClusterAdmissionPolicyGroupSpec defines the desired state of ClusterAdmissionPolicyGroup. Appears In: ClusterAdmissionPolicyGroup Field Description Default Validation ClusterPolicyGroupSpec ClusterPolicyGroupSpec namespaceSelector LabelSelector NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook. <br/><br/> For example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\"; you will set the selector as follows: <pre> \"namespaceSelector\": \\{<br/> \"matchExpressions\": [<br/> \\{<br/> \"key\": \"runlevel\",<br/> \"operator\": \"NotIn\",<br/> \"values\": [<br/> \"0\",<br/> \"1\"<br/> ]<br/> \\}<br/> ]<br/> \\} </pre> If instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: <pre> \"namespaceSelector\": \\{<br/> \"matchExpressions\": [<br/> \\{<br/> \"key\": \"environment\",<br/> \"operator\": \"In\",<br/> \"values\": [<br/> \"prod\",<br/> \"staging\"<br/> ]<br/> \\}<br/> ]<br/> \\} </pre> See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors. <br/><br/> Default to the empty LabelSelector, which matches everything. ClusterAdmissionPolicyList contains a list of ClusterAdmissionPolicy Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string ClusterAdmissionPolicyList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items ClusterAdmissionPolicy array ClusterAdmissionPolicySpec defines the desired state of ClusterAdmissionPolicy. Appears In: ClusterAdmissionPolicy Field Description Default Validation PolicySpec PolicySpec namespaceSelector LabelSelector NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook. <br/><br/> For example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\"; you will set the selector as follows: <pre> \"namespaceSelector\": \\{<br/> \"matchExpressions\": [<br/> \\{<br/> \"key\": \"runlevel\",<br/> \"operator\": \"NotIn\",<br/> \"values\": [<br/> \"0\",<br/> \"1\"<br/> ]<br/> \\}<br/> ]<br/> \\} </pre> If instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: <pre> \"namespaceSelector\": \\{<br/> \"matchExpressions\": [<br/> \\{<br/> \"key\": \"environment\",<br/> \"operator\": \"In\",<br/> \"values\": [<br/> \"prod\",<br/> \"staging\"<br/> ]<br/> \\}<br/> ]<br/> \\} </pre> See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors. <br/><br/> Default to the empty LabelSelector, which matches everything. contextAwareResources ContextAwareResource array List of Kubernetes resources the policy is allowed to access at evaluation time. Access to these resources is done using the ServiceAccount of the PolicyServer the policy is assigned to. Appears In: ClusterAdmissionPolicyGroupSpec Field Description Default Validation GroupSpec GroupSpec policies PolicyGroupMembersWithContext Policies is a list of policies that are part of the group that will be available to be called in the evaluation expression field. Each policy in the group should be a Kubewarden policy. Required: \\{} ContextAwareResource identifies a Kubernetes resource. Appears In: ClusterAdmissionPolicySpec PolicyGroupMemberWithContext Field Description Default Validation apiVersion string apiVersion of the resource (v1 for core group, groupName/groupVersions for other). kind string Singular PascalCase name of the resource Appears In: ClusterPolicyGroupSpec PolicyGroupSpec Field Description Default Validation policyServer string PolicyServer identifies an existing PolicyServer resource. default mode PolicyMode Mode defines the execution mode of this policy. Can be set to either \"protect\" or \"monitor\". If it’s empty, it is defaulted to \"protect\". Transitioning this setting from \"monitor\" to \"protect\" is allowed, but is disallowed to transition from \"protect\" to \"monitor\". To perform this transition, the policy should be recreated in \"monitor\" mode instead. protect Enum: [protect monitor] rules RuleWithOperations array Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches any Rule. failurePolicy FailurePolicyType FailurePolicy defines how unrecognized errors and timeout errors from the policy are handled. Allowed values are \"Ignore\" or \"Fail\". * \"Ignore\" means that an error calling the webhook is ignored and the API request is allowed to continue. * \"Fail\" means that an error calling the webhook causes the admission to fail and the API request to be rejected. The default behaviour is \"Fail\" backgroundAudit boolean BackgroundAudit indicates whether a policy should be used or skipped when performing audit checks. If false, the policy cannot produce meaningful evaluation results during audit checks and will be skipped. The default is \"true\". true matchPolicy MatchPolicyType matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\". <ul> <li> Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"], a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook. </li> <li> Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"], a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook. </li> </ul> Defaults to \"Equivalent\" matchConditions MatchCondition array MatchConditions are a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed. If a parameter object is provided, it can be accessed via the params handle in the same manner as validation expressions. The exact matching logic is (in order): 1. If ANY matchCondition evaluates to FALSE, the policy is skipped. 2. If ALL matchConditions evaluate to TRUE, the policy is evaluated. 3. If any matchCondition evaluates to an error (but none are FALSE): - If failurePolicy=Fail, reject the request - If failurePolicy=Ignore, the policy is skipped. Only available if the feature gate AdmissionWebhookMatchConditions is enabled. objectSelector LabelSelector ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything. sideEffects SideEffectClass SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. timeoutSeconds integer TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 2 and 30 seconds. Default to 10 seconds. 10 Maximum: 30 Minimum: 2 expression string Expression is the evaluation expression to accept or reject the admission request under evaluation. This field uses CEL as the expression language for the policy groups. Each policy in the group will be represented as a function call in the expression with the same name as the policy defined in the group. The expression field should be a valid CEL expression that evaluates to a boolean value. If the expression evaluates to true, the group policy will be considered as accepted, otherwise, it will be considered as rejected. This expression allows grouping policies calls and perform logical operations on the results of the policies. See Kubewarden documentation to learn about all the features available. Required: \\{} message string Message is used to specify the message that will be returned when the policy group is rejected. The specific policy results will be returned in the warning field of the response. Required: \\{} Appears In: PolicyGroupMemberWithContext PolicyGroupMembers Field Description Default Validation module string Module is the location of the WASM module to be loaded. Can be a local file (file://), a remote file served by an HTTP server (http://, https://), or an artifact served by an OCI-compatible registry (registry://). If prefix is missing, it will default to registry:// and use that internally. Required: \\{} settings RawExtension Settings is a free-form object that contains the policy configuration values. x-kubernetes-embedded-resource: false timeoutEvalSeconds integer TimeoutEvalSeconds specifies the timeout for the policy evaluation. After the timeout passes, the policy evaluation call will fail based on the failure policy. The timeout value must be between 2 and 30 seconds. Maximum: 30 Minimum: 2 Appears In: PolicyGroupMembersWithContext Field Description Default Validation PolicyGroupMember PolicyGroupMember contextAwareResources ContextAwareResource array List of Kubernetes resources the policy is allowed to access at evaluation time. Access to these resources is done using the ServiceAccount of the PolicyServer the policy is assigned to. Underlying type: map[string]PolicyGroupMember Appears In: PolicyGroupSpec Underlying type: map[string]PolicyGroupMemberWithContext Appears In: ClusterPolicyGroupSpec Appears In: AdmissionPolicyGroupSpec Field Description Default Validation GroupSpec GroupSpec policies PolicyGroupMembers Policies is a list of policies that are part of the group that will be available to be called in the evaluation expression field. Each policy in the group should be a Kubewarden policy. Required: \\{} Underlying type: string Validation: Enum: [protect monitor] Appears In: GroupSpec PolicySpec Underlying type: string Validation: Enum: [protect monitor unknown] Appears In: PolicyStatus PolicyServer is the Schema for the policyservers API. Appears In: PolicyServerList Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string PolicyServer metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec PolicyServerSpec PolicyServerList contains a list of PolicyServer. Field Description Default Validation apiVersion string policies.kubewarden.io/v1 kind string PolicyServerList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items PolicyServer array PolicyServerSecurity defines securityContext configuration to be used in the Policy Server workload. Appears In: PolicyServerSpec Field Description Default Validation container SecurityContext securityContext definition to be used in the policy server container pod PodSecurityContext podSecurityContext definition to be used in the policy server Pod PolicyServerSpec defines the desired state of PolicyServer. Appears In: PolicyServer Field Description Default Validation image string Docker image name. replicas integer Replicas is the number of desired replicas. minAvailable IntOrString Number of policy server replicas that must be still available after the eviction. The value can be an absolute number or a percentage. Only one of MinAvailable or Max MaxUnavailable can be set. maxUnavailable IntOrString Number of policy server replicas that can be unavailable after the eviction. The value can be an absolute number or a percentage. Only one of MinAvailable or Max MaxUnavailable can be set. annotations object (keys:string, values:string) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ env EnvVar array List of environment variables to set in the container. serviceAccountName string Name of the service account associated with the policy server. Namespace service account will be used if not specified. imagePullSecret string Name of ImagePullSecret secret in the same namespace, used for pulling policies from repositories. insecureSources string array List of insecure URIs to policy repositories. The insecureSources content format corresponds with the contents of the insecure_sources key in sources.yaml. Reference for sources.yaml is found in the Kubewarden documentation in the reference section. sourceAuthorities object (keys:string, values:string array) Key value map of registry URIs endpoints to a list of their associated PEM encoded certificate authorities that have to be used to verify the certificate used by the endpoint. The sourceAuthorities content format corresponds with the contents of the source_authorities key in sources.yaml. Reference for sources.yaml is found in the Kubewarden documentation in the reference section. verificationConfig string Name of VerificationConfig configmap in the same namespace, containing Sigstore verification configuration. The configuration must be under a key named verification-config in the Configmap. securityContexts PolicyServerSecurity Security configuration to be used in the Policy Server workload. The field allows different configurations for the pod and containers. If set for the containers, this configuration will not be used in containers added by other controllers (e.g. telemetry sidecars) affinity Affinity Affinity rules for the associated Policy Server pods. limits ResourceList Limits describes the maximum amount of compute resources allowed. requests ResourceList Requests describes the minimum amount of compute resources required. If Request is omitted for, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value tolerations Toleration array Tolerations describe the policy server pod’s tolerations. It can be used to ensure that the policy server pod is not scheduled onto a node with a taint. priorityClassName string PriorityClassName is the name of the PriorityClass to be used for the policy server pods. Useful to schedule policy server pods with higher priority to ensure their availability over other cluster workload resources. Note: If the referenced PriorityClass is deleted, existing pods remain unchanged, but new pods that reference it cannot be created. Appears In: AdmissionPolicySpec ClusterAdmissionPolicySpec Field Description Default Validation policyServer string PolicyServer identifies an existing PolicyServer resource. default mode PolicyMode Mode defines the execution mode of this policy. Can be set to either \"protect\" or \"monitor\". If it’s empty, it is defaulted to \"protect\". Transitioning this setting from \"monitor\" to \"protect\" is allowed, but is disallowed to transition from \"protect\" to \"monitor\". To perform this transition, the policy should be recreated in \"monitor\" mode instead. protect Enum: [protect monitor] module string Module is the location of the WASM module to be loaded. Can be a local file (file://), a remote file served by an HTTP server (http://, https://), or an artifact served by an OCI-compatible registry (registry://). If prefix is missing, it will default to registry:// and use that internally. Required: \\{} settings RawExtension Settings is a free-form object that contains the policy configuration values. x-kubernetes-embedded-resource: false rules RuleWithOperations array Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches any Rule. failurePolicy FailurePolicyType FailurePolicy defines how unrecognized errors and timeout errors from the policy are handled. Allowed values are \"Ignore\" or \"Fail\". * \"Ignore\" means that an error calling the webhook is ignored and the API request is allowed to continue. * \"Fail\" means that an error calling the webhook causes the admission to fail and the API request to be rejected. The default behaviour is \"Fail\" mutating boolean Mutating indicates whether a policy has the ability to mutate incoming requests or not. backgroundAudit boolean BackgroundAudit indicates whether a policy should be used or skipped when performing audit checks. If false, the policy cannot produce meaningful evaluation results during audit checks and will be skipped. The default is \"true\". true matchPolicy MatchPolicyType matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\". <ul> <li> Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"], a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook. </li> <li> Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"], a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook. </li> </ul> Defaults to \"Equivalent\" matchConditions MatchCondition array MatchConditions are a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed. If a parameter object is provided, it can be accessed via the params handle in the same manner as validation expressions. The exact matching logic is (in order): 1. If ANY matchCondition evaluates to FALSE, the policy is skipped. 2. If ALL matchConditions evaluate to TRUE, the policy is evaluated. 3. If any matchCondition evaluates to an error (but none are FALSE): - If failurePolicy=Fail, reject the request - If failurePolicy=Ignore, the policy is skipped. Only available if the feature gate AdmissionWebhookMatchConditions is enabled. objectSelector LabelSelector ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything. sideEffects SideEffectClass SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. timeoutSeconds integer TimeoutSeconds specifies the timeout for the policy webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 2 and 30 seconds. Default to 10 seconds. 10 Maximum: 30 Minimum: 2 timeoutEvalSeconds integer TimeoutEvalSeconds specifies the timeout for the policy evaluation. After the timeout passes, the policy evaluation call will fail based on the failure policy. The timeout value must be between 2 and 30 seconds. Maximum: 30 Minimum: 2 message string Message overrides the rejection message of the policy. When provided, the policy’s rejection message can be found inside of the .status.details.causes field of the AdmissionResponse object Underlying type: string Validation: Enum: [unscheduled scheduled pending active] Appears In: PolicyStatus Package v1alpha2 contains API Schema definitions for the policies v1alpha2 API group Resource Types AdmissionPolicy AdmissionPolicyList ClusterAdmissionPolicy ClusterAdmissionPolicyList PolicyServer PolicyServerList AdmissionPolicy is the Schema for the admissionpolicies API Appears In: AdmissionPolicyList Field Description Default Validation apiVersion string policies.kubewarden.io/v1alpha2 kind string AdmissionPolicy metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec AdmissionPolicySpec AdmissionPolicyList contains a list of AdmissionPolicy. Field Description Default Validation apiVersion string policies.kubewarden.io/v1alpha2 kind string AdmissionPolicyList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items AdmissionPolicy array AdmissionPolicySpec defines the desired state of AdmissionPolicy. Appears In: AdmissionPolicy Field Description Default Validation PolicySpec PolicySpec ClusterAdmissionPolicy is the Schema for the clusteradmissionpolicies API Appears In: ClusterAdmissionPolicyList Field Description Default Validation apiVersion string policies.kubewarden.io/v1alpha2 kind string ClusterAdmissionPolicy metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec ClusterAdmissionPolicySpec ClusterAdmissionPolicyList contains a list of ClusterAdmissionPolicy Field Description Default Validation apiVersion string policies.kubewarden.io/v1alpha2 kind string ClusterAdmissionPolicyList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items ClusterAdmissionPolicy array ClusterAdmissionPolicySpec defines the desired state of ClusterAdmissionPolicy. Appears In: ClusterAdmissionPolicy Field Description Default Validation PolicySpec PolicySpec namespaceSelector LabelSelector NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook. <br/><br/> For example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\"; you will set the selector as follows: <pre> \"namespaceSelector\": \\{<br/> \"matchExpressions\": [<br/> \\{<br/> \"key\": \"runlevel\",<br/> \"operator\": \"NotIn\",<br/> \"values\": [<br/> \"0\",<br/> \"1\"<br/> ]<br/> \\}<br/> ]<br/> \\} </pre> If instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: <pre> \"namespaceSelector\": \\{<br/> \"matchExpressions\": [<br/> \\{<br/> \"key\": \"environment\",<br/> \"operator\": \"In\",<br/> \"values\": [<br/> \"prod\",<br/> \"staging\"<br/> ]<br/> \\}<br/> ]<br/> \\} </pre> See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors. <br/><br/> Default to the empty LabelSelector, which matches everything. Underlying type: string Validation: Enum: [protect monitor] Appears In: PolicySpec Underlying type: string Validation: Enum: [protect monitor unknown] Appears In: PolicyStatus PolicyServer is the Schema for the policyservers API. Appears In: PolicyServerList Field Description Default Validation apiVersion string policies.kubewarden.io/v1alpha2 kind string PolicyServer metadata ObjectMeta Refer to Kubernetes API documentation for fields of metadata. spec PolicyServerSpec PolicyServerList contains a list of PolicyServer. Field Description Default Validation apiVersion string policies.kubewarden.io/v1alpha2 kind string PolicyServerList metadata ListMeta Refer to Kubernetes API documentation for fields of metadata. items PolicyServer array PolicyServerSpec defines the desired state of PolicyServer. Appears In: PolicyServer Field Description Default Validation image string Docker image name. replicas integer Replicas is the number of desired replicas. annotations object (keys:string, values:string) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ env EnvVar array List of environment variables to set in the container. serviceAccountName string Name of the service account associated with the policy server. Namespace service account will be used if not specified. imagePullSecret string Name of ImagePullSecret secret in the same namespace, used for pulling policies from repositories. insecureSources string array List of insecure URIs to policy repositories. The insecureSources content format corresponds with the contents of the insecure_sources key in sources.yaml. Reference for sources.yaml is found in the Kubewarden documentation in the reference section. sourceAuthorities object (keys:string, values:string array) Key value map of registry URIs endpoints to a list of their associated PEM encoded certificate authorities that have to be used to verify the certificate used by the endpoint. The sourceAuthorities content format corresponds with the contents of the source_authorities key in sources.yaml. Reference for sources.yaml is found in the Kubewarden documentation in the reference section. verificationConfig string Name of VerificationConfig configmap in the same namespace, containing Sigstore verification configuration. The configuration must be under a key named verification-config in the Configmap. Appears In: AdmissionPolicySpec ClusterAdmissionPolicySpec Field Description Default Validation policyServer string PolicyServer identifies an existing PolicyServer resource. default module string Module is the location of the WASM module to be loaded. Can be a local file (file://), a remote file served by an HTTP server (http://, https://), or an artifact served by an OCI-compatible registry (registry://). Required: \\{} mode PolicyMode Mode defines the execution mode of this policy. Can be set to either \"protect\" or \"monitor\". If it’s empty, it is defaulted to \"protect\". Transitioning this setting from \"monitor\" to \"protect\" is allowed, but is disallowed to transition from \"protect\" to \"monitor\". To perform this transition, the policy should be recreated in \"monitor\" mode instead. protect Enum: [protect monitor] settings RawExtension Settings is a free-form object that contains the policy configuration values. x-kubernetes-embedded-resource: false rules RuleWithOperations array Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches any Rule. failurePolicy FailurePolicyType FailurePolicy defines how unrecognized errors and timeout errors from the policy are handled. Allowed values are \"Ignore\" or \"Fail\". * \"Ignore\" means that an error calling the webhook is ignored and the API request is allowed to continue. * \"Fail\" means that an error calling the webhook causes the admission to fail and the API request to be rejected. The default behaviour is \"Fail\" mutating boolean Mutating indicates whether a policy has the ability to mutate incoming requests or not. matchPolicy MatchPolicyType matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\". <ul> <li> Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"], a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook. </li> <li> Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"], a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook. </li> </ul> Defaults to \"Equivalent\" objectSelector LabelSelector ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything. sideEffects SideEffectClass SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. timeoutSeconds integer TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds. 10 Underlying type: string Validation: Enum: [unscheduled scheduled pending active] Appears In: PolicyStatus","title":"Custom Resource Definitions (CRD)","component":"admission-controller","version":"1.29","name":"CRDs","url":"/admission-controller/1.29/en/reference/CRDs.html","titles":[{"text":"API Reference","hash":"_api_reference","id":1},{"text":"policies.kubewarden.io/v1","hash":"k8s-api-policies-kubewarden-io-v1","id":2},{"text":"AdmissionPolicy","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-admissionpolicy","id":3},{"text":"AdmissionPolicyGroup","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-admissionpolicygroup","id":4},{"text":"AdmissionPolicyGroupList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-admissionpolicygrouplist","id":5},{"text":"AdmissionPolicyGroupSpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-admissionpolicygroupspec","id":6},{"text":"AdmissionPolicyList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-admissionpolicylist","id":7},{"text":"AdmissionPolicySpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-admissionpolicyspec","id":8},{"text":"ClusterAdmissionPolicy","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-clusteradmissionpolicy","id":9},{"text":"ClusterAdmissionPolicyGroup","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-clusteradmissionpolicygroup","id":10},{"text":"ClusterAdmissionPolicyGroupList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-clusteradmissionpolicygrouplist","id":11},{"text":"ClusterAdmissionPolicyGroupSpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-clusteradmissionpolicygroupspec","id":12},{"text":"ClusterAdmissionPolicyList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-clusteradmissionpolicylist","id":13},{"text":"ClusterAdmissionPolicySpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-clusteradmissionpolicyspec","id":14},{"text":"ClusterPolicyGroupSpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-clusterpolicygroupspec","id":15},{"text":"ContextAwareResource","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-contextawareresource","id":16},{"text":"GroupSpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-groupspec","id":17},{"text":"PolicyGroupMember","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policygroupmember","id":18},{"text":"PolicyGroupMemberWithContext","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policygroupmemberwithcontext","id":19},{"text":"PolicyGroupMembers","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policygroupmembers","id":20},{"text":"PolicyGroupMembersWithContext","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policygroupmemberswithcontext","id":21},{"text":"PolicyGroupSpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policygroupspec","id":22},{"text":"PolicyMode","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policymode","id":23},{"text":"PolicyModeStatus","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policymodestatus","id":24},{"text":"PolicyServer","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policyserver","id":25},{"text":"PolicyServerList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policyserverlist","id":26},{"text":"PolicyServerSecurity","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policyserversecurity","id":27},{"text":"PolicyServerSpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policyserverspec","id":28},{"text":"PolicySpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policyspec","id":29},{"text":"PolicyStatusEnum","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1-policystatusenum","id":30},{"text":"policies.kubewarden.io/v1alpha2","hash":"k8s-api-policies-kubewarden-io-v1alpha2","id":31},{"text":"AdmissionPolicy","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-admissionpolicy","id":32},{"text":"AdmissionPolicyList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-admissionpolicylist","id":33},{"text":"AdmissionPolicySpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-admissionpolicyspec","id":34},{"text":"ClusterAdmissionPolicy","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-clusteradmissionpolicy","id":35},{"text":"ClusterAdmissionPolicyList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-clusteradmissionpolicylist","id":36},{"text":"ClusterAdmissionPolicySpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-clusteradmissionpolicyspec","id":37},{"text":"PolicyMode","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-policymode","id":38},{"text":"PolicyModeStatus","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-policymodestatus","id":39},{"text":"PolicyServer","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-policyserver","id":40},{"text":"PolicyServerList","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-policyserverlist","id":41},{"text":"PolicyServerSpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-policyserverspec","id":42},{"text":"PolicySpec","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-policyspec","id":43},{"text":"PolicyStatusEnum","hash":"k8s-api-github-com-kubewarden-kubewarden-controller-api-policies-v1alpha2-policystatusenum","id":44}],"keyword":"[\"kubewarden\", \"kubernetes\", \"custom resource definitions\", \"crd\"]"},"32":{"id":32,"text":"There is a tutorial on verifying Kubewarden demonstrating how to verify Kubewarden artifacts. Our kwctl CLI tool is published via GitHub releases. For Open Container Initiative (OCI) artifacts, the project publishes everything in ghcr.io under https://github.com/orgs/kubewarden/packages. kubewarden/packages/policies/* are the policy Wasm OCI artifacts. kubewarden/packages/charts/* are the Helm charts as OCI artifacts. They follow SLSA standards. the container images published as OCI images: kubewarden-controller, policy-server, audit-scanner, kubectl. there’s also packages/tests/* containing artifacts used in e2e tests. Kubewarden publishes Helm charts in the Helm chart HTTPS repository at https://charts.kubewarden.io. They’re without SLSA, or signatures, but this type of Helm repository provides searching.","title":"Kubewarden artifacts","component":"admission-controller","version":"1.29","name":"artifacts","url":"/admission-controller/1.29/en/reference/artifacts.html","titles":[{"text":"Verifying Kubewarden","hash":"_verifying_kubewarden","id":1},{"text":"Binaries","hash":"_binaries","id":2},{"text":"OCI artifacts","hash":"_oci_artifacts","id":3},{"text":"Helm charts via HTTPS","hash":"_helm_charts_via_https","id":4}],"keyword":"[artifacts, support, airgap, images]"},"33":{"id":33,"text":"This page lists the dependencies of Kubewarden, with their relevant version constraints. Versions outside of the provided ranges may work but are not tested. At the time of writing, the OpenTelemetry stack keeps improving. However, it’s not yet stable, and unannounced, backwards-incompatible changes still happen. The Kubewarden developers endeavor to track OpenTelemetry stack changes and adjust to them. The project tests against a known working range of OpenTelemetry, metrics and tracing stack. Needed for specific features. Chart dependency Helm chart appVersion Helm chart version Feature open-telemetry/opentelemetry-operator chart ≥ 0.104 Example: 0.90.0 OTEL prometheus-community/kube-prometheus-stack chart ≥ v0.69 Example: 75.17.1 Metrics jaegertracing/jaeger-operator chart ≥ 1.49 < 2 Example: 2.57.0 Tracing kyverno/policy-reporter chart ≥ 2 < 4 In kubewarden-controller chart as subchart Policy Reports UI CRD dependency Version Helm chart version Feature policyreports.wgpolicyk8s.io CRDs v1alpha1 In kubewarden-defaults chart or manually installed Audit Scanner Kubewarden tests against the monitoring and tracing Helm charts provided in the Rancher charts repository.","title":"Dependency matrix","component":"admission-controller","version":"1.29","name":"dependency-matrix","url":"/admission-controller/1.29/en/reference/dependency-matrix.html","titles":[{"text":"OpenTelemetry, metrics and tracing dependencies","hash":"_opentelemetry_metrics_and_tracing_dependencies","id":1},{"text":"Optional dependencies","hash":"_optional_dependencies","id":2},{"text":"Rancher","hash":"_rancher","id":3}],"keyword":"[“dependency”, “dependencies”, “CRD”, “charts”, “matrix”]"},"34":{"id":34,"text":"This document contains the help content for the kwctl command-line program. Command Overview: kwctl kwctl annotate kwctl bench kwctl completions kwctl digest kwctl docs kwctl info kwctl inspect kwctl load kwctl policies kwctl pull kwctl push kwctl rm kwctl run kwctl save kwctl scaffold kwctl scaffold admission-request kwctl scaffold artifacthub kwctl scaffold manifest kwctl scaffold vap kwctl scaffold verification-config kwctl verify Tool to manage Kubewarden policies Usage: kwctl [OPTIONS] <COMMAND> annotate — Add Kubewarden metadata to a WebAssembly module bench — Benchmarks a Kubewarden policy completions — Generate shell completions digest — Fetch digest from the OCI manifest of a policy docs — Generates the markdown documentation for kwctl commands info — Display system information inspect — Inspect Kubewarden policy load — load policies from a tar.gz file policies — Lists all downloaded policies pull — Pulls a Kubewarden policy from a given URI push — Pushes a Kubewarden policy to an OCI registry rm — Removes a Kubewarden policy from the store run — Runs a Kubewarden policy from a given URI save — save policies to a tar.gz file scaffold — Scaffold a Kubernetes resource or configuration file verify — Verify a Kubewarden policy from a given URI using Sigstore -v, --verbose <VERBOSE> — Increase verbosity --no-color <NO-COLOR> — Disable colorful output Add Kubewarden metadata to a WebAssembly module Usage: kwctl annotate [OPTIONS] --metadata-path <PATH> --output-path <PATH> <wasm-path> <WASM-PATH> — Path to WebAssembly module to be annotated -m, --metadata-path <PATH> — File containing the metadata -o, --output-path <PATH> — Output file -u, --usage-path <PATH> — File containing the usage information of the policy Benchmarks a Kubewarden policy. The policy can be specified in the following ways: - URI: e.g., registry://ghcr.io/kubewarden/policies/psp-policy:latest or https://example.com/kubewarden/policies/main/psp-policy/psp-policy.wasm - SHA prefix: e.g., c3b80a10f9c3 (requires the policy to be already pulled) - Local WASM file: e.g., file://home/tux/new-policy/psp-policy.wasm - Local YAML file: e.g., file://home/tux/cluster-admission-policy.yaml (contains declarations of Kubewarden Custom Resources like ClusterAdmissionPolicy, AdmissionPolicy, etc.) Default Behavior: If the schema is omitted, file:// is assumed, rooted in the current directory. Notes on Kubewarden Custom Resources: - Flags --request-path, --settings-path, and --settings-json are ignored; settings are read from the Custom Resource definition. - The --execution-mode flag applies to all policies in the YAML file. - The --raw flag cannot be used, as Kubewarden’s Custom Resources do not support raw policies. Only the following attributes of the Custom Resource Definition (CRD) are evaluated: - Policy module - Policy settings - Context-aware resources the policy can access Other fields, such as rules, matchConditions, objectSelector, and namespaceSelector, are ignored. A YAML file may contain multiple Custom Resource declarations. In this case, kwctl evaluates each policy in the file using the same request during each evaluation. Usage: kwctl bench [OPTIONS] --request-path <PATH> <uri_or_sha_prefix_or_yaml_file> <URI_OR_SHA_PREFIX_OR_YAML_FILE> — Policy URI, SHA prefix or YAML file containing Kubewarden policy resources. Supported schemes: registry://, https://, file://. If schema is omitted, file:// is assumed, rooted on the current directory. --allow-context-aware <ALLOW-CONTEXT-AWARE> — Grant access to the Kubernetes resources defined inside of the policy’s contextAwareResources section. Warning: review the list of resources carefully to avoid abuses. Disabled by default --cert-email <VALUE> — Expected email in Fulcio certificate --cert-oidc-issuer <VALUE> — Expected OIDC issuer in Fulcio certificates --disable-wasmtime-cache <DISABLE-WASMTIME-CACHE> — Turn off usage of wasmtime cache --docker-config-json-path <PATH> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details --dump-results-to-disk <DUMP_RESULTS_TO_DISK> — Puts results in target/tiny-bench/label/.. if target can be found. used for comparing previous runs -e, --execution-mode <MODE> — The runtime to use to execute this policy Possible values: opa, gatekeeper, kubewarden, wasi --fulcio-cert-path <PATH> — Path to the Fulcio certificate. Can be repeated multiple times --github-owner <VALUE> — GitHub owner expected in the certificates generated in CD pipelines --github-repo <VALUE> — GitHub repository expected in the certificates generated in CD pipelines --measurement-time <SECONDS> — How long the bench 'should' run, num_samples is prioritized so benching will take longer to be able to collect num_samples if the code to be benched is slower than this time limit allowed --num-resamples <NUM> — How many resamples should be done --num-samples <NUM> — How many resamples should be done. Recommended at least 50, above 100 doesn’t seem to yield a significantly different result --raw <RAW> — Validate a raw request Default value: false --record-host-capabilities-interactions <FILE> — Record all the policy and host capabilities communications to the given file. Useful to be combined later with '--replay-host-capabilities-interactions' flag --rekor-public-key-path <PATH> — Path to the Rekor public key --replay-host-capabilities-interactions <FILE> — During policy and host capabilities exchanges the host replays back the answers found inside of the provided file. This is useful to test policies in a reproducible way, given no external interactions with OCI registries, DNS, Kubernetes are performed. -r, --request-path <PATH> — File containing the Kubernetes admission request object in JSON format --settings-json <VALUE> — JSON string containing the settings for this policy -s, --settings-path <PATH> — File containing the settings for this policy --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) -a, --verification-annotation <KEY=VALUE> — Annotation in key=value format. Can be repeated multiple times --verification-config-path <PATH> — YAML file holding verification config information (signatures, public keys…​) -k, --verification-key <PATH> — Path to key used to verify the policy. Can be repeated multiple times --warm-up-time <SECONDS> — How long the bench should warm up Generate shell completions Usage: kwctl completions --shell <VALUE> -s, --shell <VALUE> — Shell type Possible values: bash, elvish, fish, powershell, zsh Fetch digest from the OCI manifest of a policy Usage: kwctl digest [OPTIONS] <uri> <URI> — Policy URI --docker-config-json-path <PATH> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) Generates the markdown documentation for kwctl commands Usage: kwctl docs --output <FILE> -o, --output <FILE> — path where the documentation file will be stored Display system information Usage: kwctl info Inspect Kubewarden policy Usage: kwctl inspect [OPTIONS] <uri_or_sha_prefix> <URI_OR_SHA_PREFIX> — Policy URI or SHA prefix. Supported schemes: registry://, https://, file://. If schema is omitted, file:// is assumed, rooted on the current directory. --docker-config-json-path <PATH> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details -o, --output <FORMAT> — Output format Possible values: yaml --show-signatures <SHOW-SIGNATURES> — Show sigstore signatures --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) load policies from a tar.gz file Usage: kwctl load --input <input> --input <INPUT> — load policies from tarball Lists all downloaded policies Usage: kwctl policies Pulls a Kubewarden policy from a given URI Usage: kwctl pull [OPTIONS] <uri> <URI> — Policy URI. Supported schemes: registry://, https://, file:// --cert-email <VALUE> — Expected email in Fulcio certificate --cert-oidc-issuer <VALUE> — Expected OIDC issuer in Fulcio certificates --docker-config-json-path <DOCKER_CONFIG> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details --fulcio-cert-path <PATH> — Path to the Fulcio certificate. Can be repeated multiple times --github-owner <VALUE> — GitHub owner expected in the certificates generated in CD pipelines --github-repo <VALUE> — GitHub repository expected in the certificates generated in CD pipelines -o, --output-path <PATH> — Output file. If not provided will be downloaded to the Kubewarden store --rekor-public-key-path <PATH> — Path to the Rekor public key. Can be repeated multiple times --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) -a, --verification-annotation <KEY=VALUE> — Annotation in key=value format. Can be repeated multiple times --verification-config-path <PATH> — YAML file holding verification config information (signatures, public keys…​) -k, --verification-key <PATH> — Path to key used to verify the policy. Can be repeated multiple times Pushes a Kubewarden policy to an OCI registry Usage: kwctl push [OPTIONS] <policy> <uri> The annotations found inside of policy’s metadata are going to be part of the OCI manifest. The multi-line annotations are skipped because they are not compatible with the OCI specification. The 'io.kubewarden.policy.source' annotation is propagated as 'org.opencontainers.image.source' to allow tools like renovatebot to detect policy updates. <POLICY> — Policy to push. Can be the path to a local file, a policy URI or the SHA prefix of a policy in the store. <URI> — Policy URI. Supported schemes: registry:// --docker-config-json-path <PATH> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details -f, --force <FORCE> — Push also a policy that is not annotated -o, --output <PATH> — Output format Default value: text Possible values: text, json --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) Removes a Kubewarden policy from the store Usage: kwctl rm <uri_or_sha_prefix> <URI_OR_SHA_PREFIX> — Policy URI or SHA prefix Run one or more Kubewarden policies locally. The policy can be specified in the following ways: - URI: e.g., registry://ghcr.io/kubewarden/policies/psp-policy:latest or https://example.com/kubewarden/policies/main/psp-policy/psp-policy.wasm - SHA prefix: e.g., c3b80a10f9c3 (requires the policy to be already pulled) - Local WASM file: e.g., file://home/tux/new-policy/psp-policy.wasm - Local YAML file: e.g., file://home/tux/cluster-admission-policy.yaml (contains declarations of Kubewarden Custom Resources like ClusterAdmissionPolicy, AdmissionPolicy, etc.) Default Behavior: If the schema is omitted, file:// is assumed, rooted in the current directory. Notes on Kubewarden Custom Resources: - Flags --request-path, --settings-path, and --settings-json are ignored; settings are read from the Custom Resource definition. - The --execution-mode flag applies to all policies in the YAML file. - The --raw flag cannot be used, as Kubewarden’s Custom Resources do not support raw policies. Only the following attributes of the Custom Resource Definition (CRD) are evaluated: - Policy module - Policy settings - Context-aware resources the policy can access Other fields, such as rules, matchConditions, objectSelector, and namespaceSelector, are ignored. A YAML file may contain multiple Custom Resource declarations. In this case, kwctl evaluates each policy in the file using the same request during each evaluation. Usage: kwctl run [OPTIONS] --request-path <PATH> <uri_or_sha_prefix_or_yaml_file> <URI_OR_SHA_PREFIX_OR_YAML_FILE> — Policy URI, SHA prefix or YAML file containing Kubewarden policy resources. Supported schemes: registry://, https://, file://. If schema is omitted, file:// is assumed, rooted on the current directory. --allow-context-aware <ALLOW-CONTEXT-AWARE> — Grant access to the Kubernetes resources defined inside of the policy’s contextAwareResources section. Warning: review the list of resources carefully to avoid abuses. Disabled by default --cert-email <VALUE> — Expected email in Fulcio certificate --cert-oidc-issuer <VALUE> — Expected OIDC issuer in Fulcio certificates --disable-wasmtime-cache <DISABLE-WASMTIME-CACHE> — Turn off usage of wasmtime cache --docker-config-json-path <PATH> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details -e, --execution-mode <MODE> — The runtime to use to execute this policy Possible values: opa, gatekeeper, kubewarden, wasi --fulcio-cert-path <PATH> — Path to the Fulcio certificate. Can be repeated multiple times --github-owner <VALUE> — GitHub owner expected in the certificates generated in CD pipelines --github-repo <VALUE> — GitHub repository expected in the certificates generated in CD pipelines --raw <RAW> — Validate a raw request Default value: false --record-host-capabilities-interactions <FILE> — Record all the policy and host capabilities communications to the given file. Useful to be combined later with '--replay-host-capabilities-interactions' flag --rekor-public-key-path <PATH> — Path to the Rekor public key --replay-host-capabilities-interactions <FILE> — During policy and host capabilities exchanges the host replays back the answers found inside of the provided file. This is useful to test policies in a reproducible way, given no external interactions with OCI registries, DNS, Kubernetes are performed. -r, --request-path <PATH> — File containing the Kubernetes admission request object in JSON format --settings-json <VALUE> — JSON string containing the settings for this policy -s, --settings-path <PATH> — File containing the settings for this policy --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) -a, --verification-annotation <KEY=VALUE> — Annotation in key=value format. Can be repeated multiple times --verification-config-path <PATH> — YAML file holding verification config information (signatures, public keys…​) -k, --verification-key <PATH> — Path to key used to verify the policy. Can be repeated multiple times save policies to a tar.gz file Usage: kwctl save --output <FILE> <policies>…​ <POLICIES> — list of policies to save -o, --output <FILE> — path where the file will be stored Scaffold a Kubernetes resource or configuration file Usage: kwctl scaffold <COMMAND> admission-request — Scaffold an AdmissionRequest object artifacthub — Output an artifacthub-pkg.yml file from a metadata.yml file manifest — Output a Kubernetes resource manifest vap — Convert a Kubernetes ValidatingAdmissionPolicy into a Kubewarden ClusterAdmissionPolicy verification-config — Output a default Sigstore verification configuration file Scaffold an AdmissionRequest object Usage: kwctl scaffold admission-request [OPTIONS] --operation <TYPE> --object <PATH> — The file containing the new object being admitted --old-object <PATH> — The file containing the existing object -o, --operation <TYPE> — Kubewarden Custom Resource type Possible values: CREATE Output an artifacthub-pkg.yml file from a metadata.yml file Usage: kwctl scaffold artifacthub [OPTIONS] -m, --metadata-path <PATH> — File containing the metadata of the policy -o, --output <FILE> — Path where the artifact-pkg.yml file will be stored -q, --questions-path <PATH> — File containing the questions-ui content of the policy -v, --version <VALUE> — Semver version of the policy Output a Kubernetes resource manifest Usage: kwctl scaffold manifest [OPTIONS] --type <VALUE> <uri_or_sha_prefix> <URI_OR_SHA_PREFIX> — Policy URI or SHA prefix. Supported schemes: registry://, https://, file://. If schema is omitted, file:// is assumed, rooted on the current directory. --allow-context-aware <ALLOW-CONTEXT-AWARE> — Uses the policy metadata to define which Kubernetes resources can be accessed by the policy. Warning: review the list of resources carefully to avoid abuses. Disabled by default --cert-email <VALUE> — Expected email in Fulcio certificate --cert-oidc-issuer <VALUE> — Expected OIDC issuer in Fulcio certificates --docker-config-json-path <DOCKER_CONFIG> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details --fulcio-cert-path <PATH> — Path to the Fulcio certificate. Can be repeated multiple times --github-owner <VALUE> — GitHub owner expected in the certificates generated in CD pipelines --github-repo <VALUE> — GitHub repository expected in the certificates generated in CD pipelines --rekor-public-key-path <PATH> — Path to the Rekor public key. Can be repeated multiple times --settings-json <VALUE> — JSON string containing the settings for this policy -s, --settings-path <PATH> — File containing the settings for this policy --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) --title <VALUE> — Policy title -t, --type <VALUE> — Kubewarden Custom Resource type Possible values: ClusterAdmissionPolicy, AdmissionPolicy -a, --verification-annotation <KEY=VALUE> — Annotation in key=value format. Can be repeated multiple times --verification-config-path <PATH> — YAML file holding verification config information (signatures, public keys…​) -k, --verification-key <PATH> — Path to key used to verify the policy. Can be repeated multiple times Convert a Kubernetes ValidatingAdmissionPolicy into a Kubewarden ClusterAdmissionPolicy Usage: kwctl scaffold vap [OPTIONS] --binding <VALIDATING-ADMISSION-POLICY-BINDING.yaml> --policy <VALIDATING-ADMISSION-POLICY.yaml> -b, --binding <VALIDATING-ADMISSION-POLICY-BINDING.yaml> — The file containing the ValidatingAdmissionPolicyBinding definition --cel-policy <URI> — The CEL policy module to use Default value: ghcr.io/kubewarden/policies/cel-policy:latest -p, --policy <VALIDATING-ADMISSION-POLICY.yaml> — The file containing the ValidatingAdmissionPolicy definition Output a default Sigstore verification configuration file Usage: kwctl scaffold verification-config Verify a Kubewarden policy from a given URI using Sigstore Usage: kwctl verify [OPTIONS] <uri> <URI> — Policy URI. Supported schemes: registry:// --cert-email <VALUE> — Expected email in Fulcio certificate --cert-oidc-issuer <VALUE> — Expected OIDC issuer in Fulcio certificates --docker-config-json-path <PATH> — Path to a directory containing the Docker 'config.json' file. Can be used to indicate registry authentication details --fulcio-cert-path <PATH> — Path to the Fulcio certificate. Can be repeated multiple times --github-owner <VALUE> — GitHub owner expected in the certificates generated in CD pipelines --github-repo <VALUE> — GitHub repository expected in the certificates generated in CD pipelines --rekor-public-key-path <PATH> — Path to the Rekor public key --sources-path <PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…​) -a, --verification-annotation <KEY=VALUE> — Annotation in key=value format. Can be repeated multiple times --verification-config-path <PATH> — YAML file holding verification config information (signatures, public keys…​) -k, --verification-key <PATH> — Path to key used to verify the policy. Can be repeated multiple times This document was generated automatically by clap.-markdown`","title":"kwctl CLI","component":"admission-controller","version":"1.29","name":"kwctl-cli","url":"/admission-controller/1.29/en/reference/kwctl-cli.html","titles":[{"text":"Command-Line Help for kwctl","hash":"_command_line_help_for_kwctl","id":1},{"text":"kwctl","hash":"kwctl","id":2},{"text":"Subcommands","hash":"_subcommands","id":3},{"text":"Options","hash":"_options","id":4},{"text":"kwctl annotate","hash":"kwctl-annotate","id":5},{"text":"Arguments","hash":"_arguments","id":6},{"text":"Options","hash":"_options_2","id":7},{"text":"kwctl bench","hash":"kwctl-bench","id":8},{"text":"Arguments","hash":"_arguments_2","id":9},{"text":"Options","hash":"_options_3","id":10},{"text":"kwctl completions","hash":"kwctl-completions","id":11},{"text":"Options","hash":"_options_4","id":12},{"text":"kwctl digest","hash":"kwctl-digest","id":13},{"text":"Arguments","hash":"_arguments_3","id":14},{"text":"Options","hash":"_options_5","id":15},{"text":"kwctl docs","hash":"kwctl-docs","id":16},{"text":"Options","hash":"_options_6","id":17},{"text":"kwctl info","hash":"kwctl-info","id":18},{"text":"kwctl inspect","hash":"kwctl-inspect","id":19},{"text":"Arguments","hash":"_arguments_4","id":20},{"text":"Options","hash":"_options_7","id":21},{"text":"kwctl load","hash":"kwctl-load","id":22},{"text":"Options","hash":"_options_8","id":23},{"text":"kwctl policies","hash":"kwctl-policies","id":24},{"text":"kwctl pull","hash":"kwctl-pull","id":25},{"text":"Arguments","hash":"_arguments_5","id":26},{"text":"Options","hash":"_options_9","id":27},{"text":"kwctl push","hash":"kwctl-push","id":28},{"text":"Arguments","hash":"_arguments_6","id":29},{"text":"Options","hash":"_options_10","id":30},{"text":"kwctl rm","hash":"kwctl-rm","id":31},{"text":"Arguments","hash":"_arguments_7","id":32},{"text":"kwctl run","hash":"kwctl-run","id":33},{"text":"Arguments","hash":"_arguments_8","id":34},{"text":"Options","hash":"_options_11","id":35},{"text":"kwctl save","hash":"kwctl-save","id":36},{"text":"Arguments","hash":"_arguments_9","id":37},{"text":"Options","hash":"_options_12","id":38},{"text":"kwctl scaffold","hash":"kwctl-scaffold","id":39},{"text":"Subcommands","hash":"_subcommands_2","id":40},{"text":"kwctl scaffold admission-request","hash":"kwctl-scaffold-admission-request","id":41},{"text":"Options","hash":"_options_13","id":42},{"text":"kwctl scaffold artifacthub","hash":"kwctl-scaffold-artifacthub","id":43},{"text":"Options","hash":"_options_14","id":44},{"text":"kwctl scaffold manifest","hash":"kwctl-scaffold-manifest","id":45},{"text":"Arguments","hash":"_arguments_10","id":46},{"text":"Options","hash":"_options_15","id":47},{"text":"kwctl scaffold vap","hash":"kwctl-scaffold-vap","id":48},{"text":"Options","hash":"_options_16","id":49},{"text":"kwctl scaffold verification-config","hash":"kwctl-scaffold-verification-config","id":50},{"text":"kwctl verify","hash":"kwctl-verify","id":51},{"text":"Arguments","hash":"_arguments_11","id":52},{"text":"Options","hash":"_options_17","id":53}],"keyword":"cli, reference, kwctl"},"35":{"id":35,"text":"Kubewarden exposes relevant platform metrics allowing cluster administrators and policy developers to identify patterns and potential issues. The Policy Server component initializes and runs policies. When receiving requests from the Kubernetes API server, it forwards the request to the policy, returning the response provided by the policy to the Kubernetes API server. Baggage key-value attributes are added to the metric to provide additional information. Name Type Baggage kubewarden_policy_evaluations_total Counter Baggage Label Description policy_name Name of the policy resource_name Name of the evaluated resource resource_kind Kind of the evaluated resource resource_namespace Namespace of the evaluated resource. Not present if the resource is cluster scoped. resource_request_operation Operation type: CREATE, UPDATE, DELETE, PATCH, WATCH…​ accepted Was the request accepted? mutated Was the request mutated? error_code Error code returned by the policy if rejected, if any. Not present if the policy didn’t provide one.","title":"Metrics reference","component":"admission-controller","version":"1.29","name":"metrics-reference","url":"/admission-controller/1.29/en/reference/metrics-reference.html","titles":[{"text":"Policy Server","hash":"_policy_server","id":1},{"text":"Metrics","hash":"_metrics","id":2},{"text":"kubewarden_policy_evaluations_total","hash":"_kubewarden_policy_evaluations_total","id":3},{"text":"Baggage","hash":"_baggage","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"metrics\", \"reference\"]"},"36":{"id":36,"text":"When defining a policy, you can choose between two modes, specified in its spec.mode. You deploy a policy in mode: protect by default. The policy then accepts, rejects, or mutates requests. One can choose to deploy a policy in monitor mode. In monitor mode: The policy accepts all requests, as if the policy wasn’t installed. The policy-server traces the policy normally. If a request gets rejected or a policy proposes a mutation then the trace contains the details. The policy-server metrics get updated normally, with the mode included in the metric baggage. Therefore, it’s easy to filter policies by mode and focus on those deployed using monitor mode. The mode is an attribute included in the ClusterAdmissionPolicy and AdmissionPolicy resources. There are two values that the mode attribute can assume: monitor and protect. The mode defaults to protect if omitted. To create a policy in monitor mode you need to include the statement mode: monitor as part of the specification of the resource. For example, in the spec section (marked ➀), of this ClusterAdmissionPolicy: apiVersion: policies.kubewarden.io/v1alpha2 kind: ClusterAdmissionPolicy metadata: name: psp-capabilities spec: mode: monitor (1) policyServer: reserved-instance-for-tenant-a module: registry://ghcr.io/kubewarden/policies/psp-capabilities:v0.1.3 rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE mutating: true settings: allowed_capabilities: - CHOWN required_drop_capabilities: - NET_ADMIN 1 The mode: monitor attribute is in the spec section. For security purposes, a user with UPDATE permissions on policy resources can make the policy more restrictive. This means that you can change the mode of an existing ClusterAdmissionPolicy or AdmissionPolicy from monitor to protect. However, you can’t change the mode of an existing ClusterAdmissionPolicy or AdmissionPolicy from protect to monitor. So, to change the mode of a policy from protect to monitor, you need to delete the policy and re-create it in monitor mode. Switching a policy from protect to monitor is the same as deleting the policy so this approach assumes that the user has policy delete permissions. Mutating policies in monitor mode won’t perform a mutation on the resource. In monitor mode policies log what their action would have been. They also log the mutation patch they would have produced in protect mode. When a mutating policy is in monitor mode, later policies evaluate an unchanged, and so different resource, than when the mutating policy is in protect mode.","title":"Monitor mode","component":"admission-controller","version":"1.29","name":"monitor-mode","url":"/admission-controller/1.29/en/reference/monitor-mode.html","titles":[{"text":"Changing policy mode","hash":"_changing_policy_mode","id":1},{"text":"A note on mutating policies","hash":"_a_note_on_mutating_policies","id":2}],"keyword":"[\"kubernetes\", \"kubewarden\", \"monitor mode\"]"},"37":{"id":37,"text":"You distribute your Kubewarden policies as OCI Artifacts using regular Open Container Initiative (OCI) registries. Kubewarden policy storage is alongside container images. They don’t require extra setup or maintenance other than that needed for regular container images. You can add a registry that works with Kubewarden or correct any registry inaccuracies by using the \"Edit this page\" button at the bottom of the page Harbor. Distribution (≥ 2.7.0). Quay: Supported, but inactive by default in v3.6. GitHub Container Registry. See here. Quay.io. See projects list. Amazon ECR: See here. Google Artifact Registry. See here. Azure Container Registry. See here. Docker Hub. See here. IBM Cloud Container Registry. See here. JFrog Artifactory. See here. The Kubewarden project recommends: kwctl (our CLI tool). Skopeo (≥ 1.9.0). Crane. Currently, Docker Hub doesn’t support OCI artifacts so can’t be used to store Kubewarden policies. Docker Inc. has announced that Docker Hub will support OCI artifacts in the future. Although JFrog supports OCI artifacts, it’s only partially possible to push to it, when following their specification. Read more here.","title":"OCI registry support for Kubewarden","component":"admission-controller","version":"1.29","name":"oci-registries-support","url":"/admission-controller/1.29/en/reference/oci-registries-support.html","titles":[{"text":"Projects implementing OCI registries","hash":"_projects_implementing_oci_registries","id":1},{"text":"Hosted OCI registries","hash":"_hosted_oci_registries","id":2},{"text":"Tools that work with OCI registries","hash":"_tools_that_work_with_oci_registries","id":3},{"text":"Known issues","hash":"_known_issues","id":4},{"text":"Docker Hub","hash":"_docker_hub","id":5},{"text":"JFrog","hash":"_jfrog","id":6}],"keyword":"[\"kubewarden\", \"kubernetes\", \"oci registry support\"]"},"38":{"id":38,"text":"This feature is available starting from Kubewarden v1.5.0 for per-Policy-Server timeout, and from v1.29.0 for per-Policy timeout. Policy evaluation timeout protection is a security feature of the Policies and Policy Server. Its purpose is to limit the amount of time a request evaluation can take. You can write Kubewarden policies using both traditional programming languages (like Go, Rust and others) or using the special query language Rego. Both approaches have merits so a goal of Kubewarden is to let the policy authors choose the best tool for their needs. When using a traditional Turing-complete language, it’s possible to have issues like: Infinite loops Deadlocks Slow running code lacking optimizations Computationally intense operations The policy evaluation timeout protection feature terminates the evaluation of a request after a predefined period of time. This ensures the Policy Server always has compute resources available to process incoming requests. Currently, policy evaluation timeout protection is capable of interrupting most long running evaluations. There are certain edge cases not yet handled. This includes invoking a sleep instruction from within a policy, and deadlocks. A future release of Policy Server will address these scenarios. Finally, the policy evaluation timeout affects all the policies hosted by a Policy Server instance. Currently, there’s no way to tune policy evaluation timeout on a per-policy basis. All values of the per-Policy evaluation timeouts, the per-Policy-Server evaluation timeout, and the webhook timeouts are validated so they all are within acceptable values of each other. For example, it is not possible to set a Policy evaluation timeout value that is higher than the Kubernetes' webhook timeout. Starting with Kubewarden v1.29.0, every Kubewarden Policy can set its own timeout value via its spec.timeoutEvalSeconds attribute. This is not to be confused with spec.timeoutSeconds, used for the Webhook timeout (see section [below](#comparison-with-kubernetes-dynamic-admission-controller-timeout)). The spec.timeoutEvalSeconds is fine-grained, allowing per-Policy tuning of their evaluation timeout. This setting takes precedence over the global timeout evaluation configuration per-Policy-Server. For example, to set a longer evaluation timeout for a specific policy: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: annotations: io.kubewarden.policy.category: Secrets io.kubewarden.policy.severity: medium name: env-variable-secrets-scanner spec: module: registry://ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v1.0.6 settings: {} timeoutEvalSeconds: 10 // Set evaluation timeout mutating: false rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\"] - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"replicationcontrollers\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"apps\"] apiVersions: [\"v1\"] resources: [\"deployments\", \"replicasets\", \"statefulsets\", \"daemonsets\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"batch\"] apiVersions: [\"v1\"] resources: [\"jobs\", \"cronjobs\"] operations: [\"CREATE\", \"UPDATE\"] Starting with Kubewarden v1.5.0, Policy Servers come with a configurable evaluation timeout, enabled by default. Interruption of a request evaluation takes place after 2 seconds. This configuration affects all policies scheduled in that Policy Server. The per-Policy configurable spec.timeoutEvalSeconds timeout has precedence over this per-Policy-Server setting. You can tune this behavior by using these environment variables: KUBEWARDEN_DISABLE_TIMEOUT_PROTECTION: This disables policy evaluation entirely. Any assigned value turns off the feature. KUBEWARDEN_POLICY_TIMEOUT: This sets a different timeout value. The value is in seconds with a default value of 2. When using the PolicyServer Kubernetes Custom Resource Definition, you can set these environment variables as follows: # A Policy Server that has policy evaluation timeout disabled apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: no-policy-timeout spec: env: - name: KUBEWARDEN_DISABLE_TIMEOUT_PROTECTION value: \"true\" --- # A Policy Server that has policy evaluation timeout enabled, # with a 3 seconds timeout value apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: custom-policy-timeout spec: env: - name: KUBEWARDEN_POLICY_TIMEOUT value: \"3\" Kubewarden is a webhook implementation of the Kubernetes Dynamic Admission Controller. Internally, the Kubernetes API server makes an HTTP request to Kubewarden’s Policy Server describing an event that’s about to happen. After the HTTP request, Kubernetes API Server waits for an answer.. However, the Kubernetes API server doesn’t wait forever. After a certain amount of time it considers the request to have timed out. Quoting the official Kubernetes documentation: Because webhooks add to API request latency, they should evaluate as quickly as possible. timeoutSeconds allows configuring how long the API server should wait for a webhook to respond before treating the call as a failure. If the timeout expires before the webhook responds, the webhook call will be ignored or the API call will be rejected based on the failure policy. The timeout value must be between 1 and 30 seconds. The timeout for an admission webhook defaults to 10 seconds. That means that, regardless of the policy evaluation timeout feature, each Kubernetes admission request is subject to a timeout. Every Kubewarden Policy can set its own timeout value via the timeoutSeconds attribute of the ClusterAdmissionPolicy and AdmissionPolicy custom resources. By default, the timeout value is 10 seconds. All the Kubernetes admission requests made toa Policy Server are subject to two different timeouts: The Kubernetes API server timeout value. Set to 10 seconds by default, tunable on a per-Policy basis via the dedicated spec.timeoutSeconds attribute on the Policy Custom Resource. The policy evaluation timeout. Set in the Policy Server via environment variables or per-Policy via the spec.timeoutEvalSeconds attribute on Policy Custom Resource. Now you can examine the following scenarios to better understand the differences between Kubernetes' Webhook timeout and Kubewarden’s policy evaluation timeout. Assume you have a Policy Server that has the policy evaluation timeout feature turned off, and no policy scheduled on it has set their spec.timeoutEvalSeconds field. This Policy Server is hosting a policy affected by a bug which causes it to enter an infinite loop during evaluation. The Kubernetes API server sends an admission request for evaluation by this buggy policy. As a result, the policy evaluation enters an infinite loop. Meanwhile, the Kubernetes API server is waiting for a response. After 10 seconds, Kubernetes' webhook timeout takes place, and the request is handled according to the webhook’s failure policy. Now the Policy Server has computational resources stuck in this infinite loop. Over time, with more admission requests triggering the bugged policy, the Policy Server runs out of computational resources. It’s unable to respond to the Kubernetes API server. This is equal to a Denial Of Service (DOS) attack on the Policy Server. Assume a scenario where the same Policy Server now has the policy evaluation timeout feature enabled, either globally in the Policy Server, or in the Policy via the policy spec.timeoutEvalSeconds, and the policy evaluation timeout is 2 seconds. The Kubernetes API server sends an admission request for evaluation by this buggy policy. As a result, policy evaluation enters an infinite loop. Meanwhile, the Kubernetes API server is waiting for a response. After two seconds, Kubewarden’s policy evaluation timeout feature interrupts the policy evaluation and produces a rejection response. The response contains a message explaining that rejection happened because the policy evaluation didn’t complete in time. Setting Kubewarden’s policy evaluation timeout to a value as high as the Kubernetes' webhook timeout isn’t a good choice. While the policy evaluation is still interrupted, reducing the chances of a DOS attack, the final rejection response isn’t produced by the Policy Server. The rejection comes from the Kubernetes API server with the webhook timeout. As a result, it’s harder for users, and Kubernetes operators, to detect these slow/buggy policies. The only proof of the policy evaluation interruption is in Policy Server logs and trace events.","title":"Policy evaluation timeout protection","component":"admission-controller","version":"1.29","name":"policy-evaluation-timeout","url":"/admission-controller/1.29/en/reference/policy-evaluation-timeout.html","titles":[{"text":"Purpose","hash":"_purpose","id":1},{"text":"Limitations","hash":"_limitations","id":2},{"text":"Configuration","hash":"_configuration","id":3},{"text":"Per Policy","hash":"_per_policy","id":4},{"text":"Per Policy Server","hash":"_per_policy_server","id":5},{"text":"Comparison with Kubernetes Dynamic Admission Controller timeout","hash":"_comparison_with_kubernetes_dynamic_admission_controller_timeout","id":6},{"text":"Kubewarden policy evaluation timeout is disabled","hash":"_kubewarden_policy_evaluation_timeout_is_disabled","id":7},{"text":"Kubewarden policy evaluation timeout is enabled","hash":"_kubewarden_policy_evaluation_timeout_is_enabled","id":8}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy timeout protection\"]"},"39":{"id":39,"text":"This document contains the help content for the policy-server command-line program. Command Overview: policy-server policy-server docs Usage: policy-server [OPTIONS] [COMMAND] docs — Generates the markdown documentation for policy-server commands --addr <BIND_ADDRESS> — Bind against ADDRESS Default value: 0.0.0.0 --always-accept-admission-reviews-on-namespace <NAMESPACE> — Always accept AdmissionReviews that target the given namespace --cert-file <CERT_FILE> — Path to an X.509 certificate file for HTTPS --client-ca-file <CLIENT_CA_FILE> — Path to an CA certificate file that issued the client certificate. Required to enable mTLS --daemon — If set, runs policy-server in detached mode as a daemon --daemon-pid-file <DAEMON-PID-FILE> — Path to the PID file, used only when running in daemon mode Default value: policy-server.pid --daemon-stderr-file <DAEMON-STDERR-FILE> — Path to the file holding stderr, used only when running in daemon mode --daemon-stdout-file <DAEMON-STDOUT-FILE> — Path to the file holding stdout, used only when running in daemon mode --disable-timeout-protection — Disable policy timeout protection --docker-config-json-path <DOCKER_CONFIG> — Path to a Docker config.json-like path. Can be used to indicate registry authentication details --enable-metrics — Enable metrics --enable-pprof — Enable pprof profiling --ignore-kubernetes-connection-failure — Do not exit with an error if the Kubernetes connection fails. This will cause context-aware policies to break when there’s no connection with Kubernetes. --key-file <KEY_FILE> — Path to an X.509 private key file for HTTPS --log-fmt <LOG_FMT> — Log output format Default value: text Possible values: text, json, otlp --log-level <LOG_LEVEL> — Log level Default value: info Possible values: trace, debug, info, warn, error --log-no-color — Disable colored output for logs --policies <POLICIES_FILE> — YAML file holding the policies to be loaded and their settings Default value: policies.yml --policies-download-dir <POLICIES_DOWNLOAD_DIR> — Download path for the policies Default value: . --policy-timeout <MAXIMUM_EXECUTION_TIME_SECONDS> — Interrupt policy evaluation after the given time Default value: 2 --port <PORT> — Listen on PORT Default value: 3000 --readiness-probe-port <READINESS_PROBE_PORT> — Expose readiness endpoint on READINESS_PROBE_PORT Default value: 8081 --sigstore-cache-dir <SIGSTORE_CACHE_DIR> — Directory used to cache sigstore data Default value: sigstore-data --sources-path <SOURCES_PATH> — YAML file holding source information (https, registry insecure hosts, custom CA’s…) --verification-path <VERIFICATION_CONFIG_PATH> — YAML file holding verification information (URIs, keys, annotations…) --workers <WORKERS_NUMBER> — Number of worker threads to create Generates the markdown documentation for policy-server commands Usage: policy-server docs --output <FILE> -o, --output <FILE> — path where the documentation file will be stored This document was generated automatically by clap-markdown.","title":"Policy Server CLI","component":"admission-controller","version":"1.29","name":"policy-server-cli","url":"/admission-controller/1.29/en/reference/policy-server-cli.html","titles":[{"text":"Command-Line Help for policy-server","hash":"_command_line_help_for_policy_server","id":1},{"text":"policy-server","hash":"_policy_server","id":2},{"text":"Subcommands:","hash":"_subcommands","id":3},{"text":"Options:","hash":"_options","id":4},{"text":"policy-server docs","hash":"_policy_server_docs","id":5},{"text":"Options:","hash":"_options_2","id":6}],"keyword":"[cli, reference, policy-server]"},"40":{"id":40,"text":"You can tune the push-pull behavior of kwctl and policy-server binaries with the --sources-path argument, for specifying the path to the sources.yaml file. To configure a PolicyServer CR, set its spec.insecureSources and spec.sourceAuthorities fields. The format of these fields corresponds with the respective sections below. If you omit the --sources-path argument from the kwctl command, it tries to load the sources.yaml file from these folders: Linux: $HOME/.config/kubewarden/sources.yaml Mac: $HOME/Library/Application Support/io.kubewarden.kubewarden/sources.yaml Windows: $HOME\\AppData\\Roaming\\kubewarden\\config\\sources.yaml Its structure is as follows: insecure_sources: - \"registry-dev.example.com\" - \"registry-dev2.example.com:5500\" source_authorities: \"registry-pre.example.com\": - type: Path path: /opt/example.com/pki/ca-pre1-1.pem - type: Path path: /opt/example.com/pki/ca-pre1-2.der \"registry-pre2.example.com:5500\": - type: Data data: | -----BEGIN CERTIFICATE----- ca-pre2 PEM cert -----END CERTIFICATE----- This file is in either YAML or JSON format. All keys are optional, so the following is a valid sources.yaml file: insecure_sources: [\"dev.registry.example.com\"] As is: { \"source_authorities\": { \"host.k3d.internal:5000\": [ {\"type\": \"Data\",\"data\":\"pem cert 1\"}, {\"type\": \"Data\",\"data\":\"pem cert 2\"} ] } } Hosts in the insecure_sources section behave differently to those not listed. Hosts not listed, try: to connect using HTTPS, verifying the server identity If the connection fails, then the operation stops. Hosts listed in insecure_sources, try in order: to connect using HTTPS verifying the server identity to connect using HTTPS, skipping host verification to connect using HTTP The operation stops if all fail. It’s usually fine to use insecure_sources when using local registries or HTTP servers for development. It avoids the burden of managing certificates. Clearly, this is not for production use. The source_authorities section contains URIs and CA certificates. It forms a certificate chain for that URI. It’s used to verify the identity of OpenContainer Initiative (OCI) registries and HTTPS servers. You encode these certificates in either Privacy Enhanced Mail (PEM) or Distinguished Encoding Rule (DER) formats. For specifying DER format certificates you use a path to a file containing the certificate. In PEM format you specify either a path to the certificate file, or a string with the actual certificate. You specify both with a type key: source_authorities: \"registry-pre.example.com\": - type: Path path: /opt/example.com/pki/ca-pre1-1.pem - type: Path path: /opt/example.com/pki/ca-pre1-2.der - type: Data data: | -----BEGIN CERTIFICATE----- A string with the ca-pre1-3 PEM cert -----END CERTIFICATE----- \"registry-pre2.example.com:5500\": - type: Path path: /opt/example.com/pki/ca-pre2-1.der","title":"Reference for sources.yaml","component":"admission-controller","version":"1.29","name":"sources_yaml","url":"/admission-controller/1.29/en/reference/sources_yaml.html","titles":[{"text":"The sources.yaml file","hash":"_the_sources_yaml_file","id":1},{"text":"Insecure sources section","hash":"_insecure_sources_section","id":2},{"text":"Source authorities section","hash":"_source_authorities_section","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"sources.yaml\"]"},"41":{"id":41,"text":"The Kubernetes Security Special Interest Group (SIG) has defined an Admission Control Threat Model for Kubernetes. The Kubewarden team continuously evaluates Kubewarden against this threat model, and works to provide secure defaults. It’s recommended that Kubewarden administrators read and understand the threat model, and use it to devise their own circumstance specific threat model as needed. Details about each threat is in the document published by SIG Security. An attacker who has access to the Webhook endpoint, at the network level, could send large quantities of traffic, causing an effective denial of service to the admission controller. Webhook fails closed. if the webhook doesn’t respond in time, for any reason, the API server should reject the request. This is Kubewarden’s default behavior. Failing closed means that if, for any reason, Kubewarden stops responding or crashes, the API server rejects the request by default. This is even if the request is normally accepted by Kubewarden. An attacker, who can access the admission controller at a network level, passes requests to the admission controller requiring complex processing and causing timeouts as the admission controller uses compute power to process the workloads. Webhook fails closed and authenticate callers. This is Kubewarden’s default behavior. An attacker, who has rights to create workloads in the cluster, is able to exploit a misconfiguration to bypass the intended security control. Regular reviews of webhook configuration can help catch issues. An attacker who has Kubernetes API access, has sufficient privileges to delete the webhook object in the cluster. RBAC rights should be strictly controlled. Most of RBAC isn’t within the scope of the current discussion. However, the following is coming in due course, to help Kubewarden users: Directions around minimum RBAC to be implemented. Provision & documentation of a policy that detects and could block RBAC changes. An attacker gains access to valid client credentials for the admission controller webhook. Webhook fails closed. This is Kubewarden’s default behavior. An attacker gains access to a cluster-admin level credential in the Kubernetes cluster. N/A An attacker who has access to the container network is able to sniff traffic between the API server and the admission controller webhook. Since the webhook uses TLS encryption for all traffic, Kubewarden is safe. An attacker on the container network, who has access to the NET_RAW capability, can try to use MITM tooling to intercept traffic between the API server and admission controller webhook. Configure the cluster with mTLS authentication for the Webhooks and enable the mTLS feature in the Kubewarden stack. Alternatively, setup mTLS using a CNI that supports Network Policies. Refer to \"Secure webhooks with mutual TLS\" for more information. Use the capabilities-psp policy and configure it to drop NET_RAW capabilities. An attacker is able to redirect traffic from the intended API server, for the admission controller webhook, by spoofing. Configure the cluster with mTLS authentication for the Webhooks and enable the mTLS feature in the Kubewarden stack. Alternatively, setup mTLS using a CNI that supports Network Policies. Refer to \"Secure webhooks with mutual TLS\" for more information. An attacker is able to cause a mutating admission controller to modify a workload, such that it allows for privileged container creation. Review and test all rules. An attacker is able to deploy workloads to Kubernetes namespaces exempt from the admission controller configuration. RBAC rights are strictly controlled Most of the RBAC is out of scope regarding this decision. However, the Kubewarden team aims to: Warn users via our docs and suggest the minimum RBAC to be used. Provide a policy which detects RBAC changes and perhaps block them. An attacker created a workload manifest which uses a feature of the Kubernetes API which isn’t covered by the admission controller Review and test all rules. You should review PRs changing any rules in policies deployment. An attacker, who has rights to create workloads, bypasses a rule by exploiting bad string matching. Review and test all rules. Introduce tests to cover this rule. As always, you should review PRs changing the rules in the policies deployment. An attacker, with rights to create workloads, uses new features of the Kubernetes API (for example, a changed API version) to bypass a rule. Review and test all rules. There is a policy that tests for the use of deprecated resources. It’s available from the deprecated-api-versions-policy. deprecated-api-versions-policy only deals with Custom Resources known to it. The threat is both deprecated resource versions, and new unknown ones that are misused, hence the policy only covers part of the problem. An attacker, who has rights to deploy privileged containers to the cluster, creates a privileged container on the cluster node where the admission controller webhook operates. Admission controller uses restrictive policies to prevent privileged workloads. An attacker, who has rights to deploy hostPath volumes with workloads, creates a volume that allows for access to the admission controller pod’s files. Deploy the kubewarden-default Helm chart and enable its recommended policies, which includes the hostpaths-psp policy. This policy is configured to reduce the shared hostPath volumes. An attacker is able to log into cluster nodes as a privileged user via SSH. N/A An attacker is able to configure a policy that listens to admission requests and sends sensitive data to an external system. Configure the cluster with mTLS authentication for the Webhooks and enable the mTLS feature in the Kubewarden stack. Alternatively, setup mTLS using a CNI that supports Network Policies. By default, Kubewarden policies don’t have network access and run in a restrictive environment, strictly controlling external access on Webhooks. Assuming a trusted but new Kubernetes cluster, an attacker is able to compromise the Kubewarden stack before deployment and enforcement any of the policies securing. For example, by: using unsigned and malicious images for: Kubewarden-controller policy-server any of the Kubewarden dependencies any optional dependencies (Grafana, Prometheus, and others) by compromising the Helm charts payload Kubewarden provides a Software Bill Of Materials, which lists all images needed. This aids with Zero-Trust. The Kubernetes Administrator must verify the Kubewarden images, its dependencies' images, and charts out of the Kubernetes cluster, in a trusted environment. You can do this with cosign, for example. Incidentally, this is part of the implementation needed for air-gapped installations. Use signed Helm charts, and verified digests instead of tags for Kubewarden images in those Helm charts. This doesn’t secure dependencies though.","title":"Threat Model","component":"admission-controller","version":"1.29","name":"threat-model","url":"/admission-controller/1.29/en/reference/threat-model.html","titles":[{"text":"Kubernetes threats","hash":"_kubernetes_threats","id":1},{"text":"Threat 1 - Attacker floods webhook with traffic preventing its operation","hash":"_threat_1_attacker_floods_webhook_with_traffic_preventing_its_operation","id":2},{"text":"Scenario","hash":"_scenario","id":3},{"text":"Mitigation","hash":"_mitigation","id":4},{"text":"Threat 2 - Attacker passes workloads which require complex processing causing timeouts","hash":"_threat_2_attacker_passes_workloads_which_require_complex_processing_causing_timeouts","id":5},{"text":"Scenario","hash":"_scenario_2","id":6},{"text":"Mitigation","hash":"_mitigation_2","id":7},{"text":"Threat 3 - Attacker exploits misconfiguration of webhook to bypass","hash":"_threat_3_attacker_exploits_misconfiguration_of_webhook_to_bypass","id":8},{"text":"Scenario","hash":"_scenario_3","id":9},{"text":"Mitigation","hash":"_mitigation_3","id":10},{"text":"Threat 4 - Attacker has rights to delete or modify the Kubernetes webhook object","hash":"_threat_4_attacker_has_rights_to_delete_or_modify_the_kubernetes_webhook_object","id":11},{"text":"Scenario","hash":"_scenario_4","id":12},{"text":"Mitigation","hash":"_mitigation_4","id":13},{"text":"To-do","hash":"_to_do","id":14},{"text":"Threat 5 - Attacker gets access to valid credentials for the webhook","hash":"_threat_5_attacker_gets_access_to_valid_credentials_for_the_webhook","id":15},{"text":"Scenario","hash":"_scenario_5","id":16},{"text":"Mitigation","hash":"_mitigation_5","id":17},{"text":"Threat 6 - Attacker gains access to a cluster admin credential","hash":"_threat_6_attacker_gains_access_to_a_cluster_admin_credential","id":18},{"text":"Scenario","hash":"_scenario_6","id":19},{"text":"Mitigation","hash":"_mitigation_6","id":20},{"text":"Threat 7 - Attacker sniffs traffic on the container network","hash":"_threat_7_attacker_sniffs_traffic_on_the_container_network","id":21},{"text":"Scenario","hash":"_scenario_7","id":22},{"text":"Mitigation","hash":"_mitigation_7","id":23},{"text":"Threat 8 - Attacker carries out a MITM attack on the webhook","hash":"_threat_8_attacker_carries_out_a_mitm_attack_on_the_webhook","id":24},{"text":"Scenario","hash":"_scenario_8","id":25},{"text":"Mitigation","hash":"_mitigation_8","id":26},{"text":"Threat 9 - Attacker steals traffic from the webhook via spoofing","hash":"_threat_9_attacker_steals_traffic_from_the_webhook_via_spoofing","id":27},{"text":"Scenario","hash":"_scenario_9","id":28},{"text":"Mitigation","hash":"_mitigation_9","id":29},{"text":"Threat 10 - Abusing a mutation rule to create a privileged container","hash":"_threat_10_abusing_a_mutation_rule_to_create_a_privileged_container","id":30},{"text":"Scenario","hash":"_scenario_10","id":31},{"text":"Mitigation","hash":"_mitigation_10","id":32},{"text":"Threat 11 - Attacker deploys workloads to namespaces that are exempt from admission control","hash":"_threat_11_attacker_deploys_workloads_to_namespaces_that_are_exempt_from_admission_control","id":33},{"text":"Scenario","hash":"_scenario_11","id":34},{"text":"Mitigation","hash":"_mitigation_11","id":35},{"text":"To-do","hash":"_to_do_2","id":36},{"text":"Threat 12 - Block rule can be bypassed due to missing match (for example, missing initcontainers)","hash":"_threat_12_block_rule_can_be_bypassed_due_to_missing_match_for_example_missing_initcontainers","id":37},{"text":"Scenario","hash":"_scenario_12","id":38},{"text":"Mitigation","hash":"_mitigation_12","id":39},{"text":"Threat 13 - Attacker exploits bad string matching on a blocklist to bypass rules","hash":"_threat_13_attacker_exploits_bad_string_matching_on_a_blocklist_to_bypass_rules","id":40},{"text":"Scenario","hash":"_scenario_13","id":41},{"text":"Mitigation","hash":"_mitigation_13","id":42},{"text":"To-do","hash":"_to_do_3","id":43},{"text":"Threat 14 - Attacker uses new/old features of the Kubernetes API which have no rules","hash":"_threat_14_attacker_uses_newold_features_of_the_kubernetes_api_which_have_no_rules","id":44},{"text":"Scenario","hash":"_scenario_14","id":45},{"text":"Mitigation","hash":"_mitigation_14","id":46},{"text":"Threat 15 - Attacker deploys privileged container to node running Webhook controller","hash":"_threat_15_attacker_deploys_privileged_container_to_node_running_webhook_controller","id":47},{"text":"Scenario","hash":"_scenario_15","id":48},{"text":"Mitigation","hash":"_mitigation_15","id":49},{"text":"Threat 16 - Attacker mounts a privileged node hostpath allowing modification of Webhook controller configuration","hash":"_threat_16_attacker_mounts_a_privileged_node_hostpath_allowing_modification_of_webhook_controller_configuration","id":50},{"text":"Scenario","hash":"_scenario_16","id":51},{"text":"Threat 17 - Attacker has privileged SSH access to cluster node running admission webhook","hash":"_threat_17_attacker_has_privileged_ssh_access_to_cluster_node_running_admission_webhook","id":52},{"text":"Scenario","hash":"_scenario_17","id":53},{"text":"Mitigation","hash":"_mitigation_16","id":54},{"text":"Threat 18 - Attacker uses policies to send confidential data from admission requests to external systems","hash":"_threat_18_attacker_uses_policies_to_send_confidential_data_from_admission_requests_to_external_systems","id":55},{"text":"Scenario","hash":"_scenario_18","id":56},{"text":"Mitigation","hash":"_mitigation_17","id":57},{"text":"Kubewarden threats","hash":"_kubewarden_threats","id":58},{"text":"Kubewarden threat 1 - Bootstrapping of trust for admission controller","hash":"_kubewarden_threat_1_bootstrapping_of_trust_for_admission_controller","id":59},{"text":"Scenario","hash":"_scenario_19","id":60},{"text":"Mitigation","hash":"_mitigation_18","id":61}],"keyword":"[\"kubernetes\", \"admission control threat model\", \"kubewarden\"]"},"42":{"id":42,"text":"The Kubewarden project uses Semantic versioning to define the \"stack\" version of all its components: the version follows the MAJOR.MINOR.PATCH pattern. The supported version is the latest release. The Kubewarden components that follow the rules for the \"stack\" version are: kubewarden-crds chart, in their appVersion field. kubewarden-controller chart, in their appVersion field. kubewarden-defaults chart, in their appVersion field. policy-server image tag for manually deployed ones. The resource for the default one is already managed by the kubewarden-defaults chart. kwctl binary. The kubewarden-crds chart, kubewarden-controller chart, kubewarden-defaults chart, any manually deployed policy-server image, and kwctl should run the same MAJOR/MINOR versions. The PATCH version can increase independently though. Therefore, if the kubewarden-controller version running is 1.1.x, the policy-servers and kwctl version in use should be 1.1.x as well. Helm charts define the version field and the appVersion field. The appVersion field informs of the Kubewarden \"stack\" version as mentioned before. The version field also follows semantic versioning and describes backwards-compatible changes in the chart templates and values.yaml. When upgrading components, you can upgrade multiple PATCH stack versions in a single operation. However, the upgrade of multiple MAJOR or MINOR stack versions in a single upgrade is not supported. For example, you can upgrade components from version 1.1.10 to 1.1.nn in a single upgrade. But the upgrade from 1.1.10 to 1.5.0 isn’t supported. In these cases, you must upgrade individually to each MAJOR/MINOR version between the two versions. Therefore, it’s necessary to upgrade 1.1.10 to 1.2.0 then 1.3.0 then 1.4.0 and finally to 1.5.0. To upgrade one MAJOR version to another, you need to apply all the MINOR updates between the two MAJOR versions. %%{init: \"theme\": \"neutral\"}%% flowchart LR; accTitle: Upgrade path support graph accDescr: A diagram showing recommended and supported upgrade paths for Kubewarden. 1.0.0(1.0.0)-->1.0.1(1.0.1); 1.0.1-->1.0.2(1.0.2); 1.0.2-->1.1.0(1.1.0); 1.1.0-->1.1.2(1.1.2); 1.1.0-->1.1.1; 1.1.1-->1.1.2; 1.1.2-->|Not recommended|1.2.0(1.2.0); 1.0.2-->|Not supported|1.2.0(1.2.0); 1.1.2-->1.2.1(1.2.1); 1.2.0-->1.2.1; linkStyle 6 color:brown,stroke-width:2px,stroke-dasharray: 3 5 linkStyle 7 color:red,stroke-width:2px,stroke-dasharray: 3 5Figure 1. Example upgrade path support graph Kubewarden users should upgrade the stack starting with the kubewarden-crds chart, then the kubewarden-controller chart. After that, upgrade the policy-server (via kubewarden-defaults chart or bumping the images of custom ones) and kwctl. Downgrades are not supported, and Kubewarden doesn’t test them. Nevertheless, there’s a reasonable expectation that they should work. Policy SDKs for the different languages and policies maintained by the Kubewarden team follow their own semantic versioning. Kubewarden supports the latest release. There is no need for an upgrade path for them, just a bump to the latest release. Changes to the Kubewarden stack may mean that policies and SDKs receive updates to use the latest Kubewarden features. Kubewarden takes care to perform these updates in a backwards-compatible manner. For example, a Kubewarden minor version adding support for Audit Scanner (v1.7.0) means that policies gained a new spec.backgroundAudit field. This is optional, backwards-compatible and set to true by default.","title":"Upgrade path","component":"admission-controller","version":"1.29","name":"upgrade-path","url":"/admission-controller/1.29/en/reference/upgrade-path.html","titles":[{"text":"Kubewarden stack versioning","hash":"_kubewarden_stack_versioning","id":1},{"text":"Stack version compatibility among components","hash":"_stack_version_compatibility_among_components","id":2},{"text":"Helm chart versions","hash":"_helm_chart_versions","id":3},{"text":"Upgrade paths","hash":"_upgrade_paths","id":4},{"text":"Upgrade order","hash":"_upgrade_order","id":5},{"text":"Downgrades","hash":"_downgrades","id":6},{"text":"SDKs, policies","hash":"_sdks_policies","id":7}],"keyword":"[\"upgrade path\", \"support\"]"},"43":{"id":43,"text":"You can use the verification-config format with: policy-server to verify policy modules provenance verify-image-signatures policy to verify cluster images provenance Refer to secure supply chain for more info. The configuration has 2 root keys: allOf: You should satisfy all verification information listed here to verify container images as signed. anyOf: You must satisfy at least anyOf.minimumMatches of all listed verification information to accept a container image as signed. These two root keys accept an array of keys of type kind. A full list of accepted keys based on different use cases is below: pubKey: For signatures performed with traditional public/private key cryptography. githubAction: For signatures performed with Sigstore’s keyless workflow inside GitHub Actions. Kubewarden checks this information against the x509 certificate extension workflow_repository created by the OpenID Connect of GitHub, and not only the issuer and subject. You should use this kind if dealing with GitHub Actions. genericIssuer: For signatures performed with Sigstore’s keyless workflow, where the user needs to validate the certificate issuer and subject on their own. It accepts a subject, which can be: equal: The value passed here must match exactly the subject in the signing certificate. urlPrefix: The value passed here is post-fixed with / to prevent typo-squatting, and must be a prefix of the subject in the signing certificate. The kind key accepts an optional annotations key, with a list of key-values, that must be present in the signature. This is an example of a configuration for verifying signatures using the Sigstore workflow: --- apiVersion: v1 allOf: - kind: githubAction owner: kubewarden # mandatory repo: policy-server # optional annotations: # optional env: prod anyOf: # at least `anyOf.minimumMatches` are required to match minimumMatches: 2 # default is 1 signatures: - kind: pubKey owner: alice # optional key: | # mandatory -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQiTy5S+2JFvVlhUwWPLziM7iTM2j byLgh2IjpNQN0Uio/9pZOTP/CsJmXoUNshfpTUHd3OxgHgz/6adtf2nBwQ== -----END PUBLIC KEY----- annotations: # optional env: prod - kind: genericIssuer issuer: https://github.com/login/oauth subject: equal: alice@example.com - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: equal: https://github.com/bob/app-example/.github/workflows/release.yml@refs/heads/main annotations: # optional env: prod - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: urlPrefix: https://github.com/bob # <- it will be post-fixed with `/` for security reasons You can validate signature requirements contained in a file. Expand for an example: A file of signature requirements apiVersion: v1 allOf: - kind: githubAction owner: kubewarden # mandatory annotations: env: prod anyOf: # at least `anyOf.minimumMatches` are required to match minimumMatches: 2 # default is 1 signatures: - kind: pubKey owner: flavio # optional key: .... # mandatory annotations: # optional env: prod foo: bar - kind: pubKey owner: victor # optional key: .... # mandatory - kind: genericIssuer issuer: https://github.com/login/oauth subject: equal: alice@example.com - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: equal: https://github.com/flavio/policy-secure-pod-images/.github/workflows/release.yml@refs/heads/main - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: urlPrefix: https://github.com/flavio/ - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: urlPrefix: https://github.com/kubewarden # <- it will be post-fixed with `/` for security reasons - kind: githubAction owner: flavio # mandatory repo: policy1 # optional - kind: pubKey owner: alice # optional key: .... # mandatory The previous configuration contains the two sections, allOf and anyOf: allOf: You trust the policy only if all signature requirements are valid. anyOf: You trust the policy if the minimumMatches criterion are valid. In the example, the minimumMatches field is 2. So, you need to meet at least two of the signature requirements. The default value for the minimumMatches field is 1. For signature validation, you need to meet all the signature’s requirements from allOf and the minimum number from anyOf. To check a policy has the correct public key signature, you specify the key data and the owner of the key. In this example, you set kind to pubKey and the key has the public key. The owner field is optional, but can be useful to clarify who owns the key. - kind: pubKey owner: bob # optional key: | -----BEGIN PUBLIC KEY----- MBFKHFDGHKIJH0CAQYIKoZIzj0DAQcDQgAEX0HFTtCfTtPmkx5p1RbDE6HJSGAVD BVDF6SKFSF87AASUspkQsN3FO4iyWodCy5j3o0CdIJD/KJHDJFHDFIu6sA== -----END PUBLIC KEY----- A policy signed in keyless mode doesn’t have a public key you can verify. You can still verify the policy with the OpenID Connect (OIDC) data used during the signing process. For that, it’s necessary to define the signature validation as genericIssuer. It’s possible to verify information from the signature: issuer(mandatory): this matches the Issuer attribute in the certificate generated by Fulcio. This shows the OIDC used to sign the policy. subject: field used to match the Subject attribute in Fulcio’s certificate. The Subject (Fulcio) field contains the user used to authenticate against the OIDC provider. The verification field, subject, can have one of two sub fields: equal: the Subject (Fulcio) from the certificate must be equal to the value in the signature validation; urlPrefix: the certificate’s Subject (Fulcio) field value must be prefixed by the value defined in the signature validation. Both the cosign verify and the kwctl inspect can show information about keyless signatures. For example, this configuration means the policy must have a keyless signature from Alice using the GitHub OIDC: - kind: genericIssuer issuer: https://github.com/login/oauth subject: equal: alice@example.com This configuration needs the policy signed in GitHub actions, from a repository owned by the GitHub user flavio: - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: urlPrefix: https://github.com/flavio The \"kind\", githubAction is to validate policies signed in GitHub Actions. You can do this with the genericIssuer kind as well. To simplify the signature requirement process, use two extra fields for githubAction: owner (mandatory): GitHub ID of the user or organization to trust. repo: The name of the repository to trust. For example, the last snippet, using genericIssuer, could be rewritten as: - kind: githubAction owner: flavio All signature types can have other optional validation fields, annotations. These fields are key/value data added during the signing process. With Kubewarden, you can verify policy signature are from trusted users and have specific annotations. The next validation checks two conditions for the policy: that it’s signed with a specific key it has a production environment annotation. - kind: pubKey key: | -----BEGIN PUBLIC KEY----- MBFKHFDGHKIJH0CAQYIKoZIzj0DAQcDQgAEX0HFTtCfTtPmkx5p1RbDE6HJSGAVD BVDF6SKFSF87AASUspkQsN3FO4iyWodCy5j3o0CdIJD/KJHDJFHDFIu6sA== -----END PUBLIC KEY----- annotations: environment: production You can test if a policy passes verification using the verification configuration file. Use the --verification-config-path flag of the kwctl verify command. $ cat signatures_requirements.yaml apiVersion: v1 allOf: - kind: pubKey key: | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5Q+cN1Jj2S7N05J4AXnqwP2DyzSg Mc+raYce2Wthrd30MSgFtoh5ADAkCd/nML2Nx8UD9KBuASRb0gG5jXqgMQ== -----END PUBLIC KEY----- $ kwctl verify --verification-config-path signatures_requirements.yaml ghcr.io/kubewarden/policies/user-group-psp:latest 2022-03-29T17:34:37.847169Z INFO kwctl::verify: Policy successfully verified This last example tests if a given policy came from the Kubewarden organization: $ cat kubewarden_signatures.yaml apiVersion: v1 allOf: - kind: githubAction owner: kubewarden $ kwctl verify --verification-config-path kubewarden_signatures.yaml ghcr.io/kubewarden/policies/user-group-psp:latest 2022-03-29T18:07:39.062292Z INFO kwctl::verify: Policy successfully verified","title":"Verification configuration format","component":"admission-controller","version":"1.29","name":"verification-config","url":"/admission-controller/1.29/en/reference/verification-config.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Format","hash":"_format","id":2},{"text":"Example","hash":"_example","id":3},{"text":"Signature configuration reference","hash":"_signature_configuration_reference","id":4},{"text":"Signature validation","hash":"_signature_validation","id":5},{"text":"Public key validation","hash":"_public_key_validation","id":6},{"text":"Keyless signature validation","hash":"_keyless_signature_validation","id":7},{"text":"GitHub actions signature verification","hash":"_github_actions_signature_verification","id":8},{"text":"Signature annotations validation","hash":"_signature_annotations_validation","id":9},{"text":"Using a signature verification configuration file to check a policy OCI artifact","hash":"_using_a_signature_verification_configuration_file_to_check_a_policy_oci_artifact","id":10}],"keyword":"[\"kubewarden\", \"kubernetes\", \"verification configuration\"]"},"44":{"id":44,"text":"Artifact Hub is a website where users can find, install, and publish packages and configurations for CNCF projects. Kubewarden policies can be published on Artifact Hub and made discoverable to the wide audience of CNCF users. Artifact Hub is a content aggregation platform and doesn’t actually host the artifacts that are published on it. Artifact Hub requires you to physically host container image repositories on a container registry or a web server. Refer to the distributing policies section for more information on how to host your policies. This document focuses on the steps required to make a Kubewarden policy discoverable on Artifact Hub. Artifact Hub crawls Git repositories looking for special metadata files. There are different kind of layouts the Git repository can have. They are all documented in depth in the official Artifact Hub documentation. Artifact Hub is flexible and allows you to organize your code in these ways: Have a Git repository dedicated to Artifact Hub: this repository will not contain any policy source code. It will be a collection of the YAML files required by Artifact Hub. Add a Artifact Hub directory in the Git repository holding the source of your policy. This is an iteration of the previous approach, focusing on just one policy, that which is defined in the Git repository. This approach allows keeping multiple versions of the policy published on Artifact Hub. Add the artifacthub-pkg.yml and the artifacthub-repo.yml files to the root of the Git repository that holds the policy source code. This approach is the simplest one. The only limitation is that only the latest version of the policy will be visible on Artifact Hub. The last approach is used in our official policy templates. The Git repository that is scaffolded includes the artifacthub-repo.yml file, and our GitHub Actions generate and push the artifacthub-pkg.yml to an artifacthub branch for Artifact Hub to consume. Before publishing a policy to Artifact Hub, you must create an account there. Before publishing the policy, ensure your Git repository has the proper layout, with a well formatted metadata.yml with the obligatory annotations. If you want to do this manually, you can create the artifacthub-pkg.yml file by doing a kwctl scaffold artifacthub (with version >= 1.23). This command takes the metadata.yml in the current path and outputs an artifacthub-pkg.yml. The artifacthub-pkg.yml contains fields such as version:, createdAt:, that need to match specific format, and be up-to-date. The format of the artifacthub-pkg.yml is described here. If you use our GitHub Actions >= v4.0.0, the release workflow can be configured with the input artifacthub: true. If so configured, after a successful release (after the policy has been successfully built, signed and pushed), our GitHub Actions have a last job that generates the artifacthub-pkg.yml for you then commits, and pushes the changes to the artifacthub branch. The canonical files are always the ones in the main branch. For the behaviour of previous releases of our GitHub Actions, see the documentation versions pre 1.23. Finally, ensure your policy is published inside of a container registry or on a web server. Right now the contents of the artifacthub-repo.yml file are not relevant. Once everything is in place, log into Artifact Hub and go to your control plane. Decide whether you want to publish the policy as a user or under an Artifact Hub organization you belong to. This is done by choosing the correct \"control panel context\". Then press the \"Add\" button and fill the form: Choose \"Kubewarden policies\" as kind. Enter a \"Name\" and \"Display name\" of your choice. Enter the URL to your Git repository. Enter artifacthub as the branch to track. Finally, press the \"Add\" button. This will bring you back to the \"Repositories\" page, where you will see your freshly created repository. Each repository has several information fields. Find the \"ID\" property of the repository you just created and copy it. Go back to your Git repository and edit the artifacthub-repo.yml. Ensure the repositoryID key found inside of the document has the value you just copied from the Artifact Hub web page. The format of the artifacthub-repo.yml file is defined here. Now it’s a good time to do some further customizations to this file. Once you are done with the changes, commit the updated artifacthub-repo.yml file and push it. During the next scan, Artifact Hub will find this file and it will add the \"Verified Publisher\" badge to your Artifact Hub repository. Do not forget to update the contents of the artifacthub-pkg.yml file every time you release a new version of your policy. For example, you must update the io.kubewarden.policy.version field (which usually matches the policy OCI tag), and any other annotation you wish to change. The contents of the artifacthub-repo.yml file do not need to be changed.","title":"Publish policies to Artifact Hub","component":"admission-controller","version":"1.29","name":"publish-policy-to-artifact-hub","url":"/admission-controller/1.29/en/tutorials/publish-policy-to-artifact-hub.html","titles":[{"text":"Prepare your Git repository","hash":"_prepare_your_git_repository","id":1},{"text":"Publishing Steps","hash":"_publishing_steps","id":2},{"text":"Keeping Artifact Hub in Sync","hash":"_keeping_artifact_hub_in_sync","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"publishing policies\", \"artifact hub\"]"},"45":{"id":45,"text":"The Kubewarden stack provides different attestations and assurances: Provenance attestations: Inform of the build process, build dependencies, and aids in replicating the builds. Implement SLSA Standard (level 3 in our case). SBOMs attestations: Contain the software dependencies. Help downstream consumers ascertain vulnerabilities of Kubewarden and its dependencies. Signed artifacts: Indicate if an artifact is authentic or not, providing supply chain security. This includes the deliverables, but also the provenance and SBOM attestations. Kubewarden artifacts, provenance attestations and SBOMs are signed using Sigstore, with the keyless workflow. This means that the signing certificate contains the following info, where * matches any following characters: issuer: https://token.actions.githubusercontent.com subject: https://github.com/kubewarden/* x509 certificate extension for GHA, \"github_workflow_repository\": kubewarden/* The subject used in the --certificate-identity-regexp cosign CLI flag in this tutorial utilizes the https://github.com/kubewarden/* values to simplify the explanation. However, this allows artifacts from repositories with the same prefix to bypass validation. For example: github.com/kubewarden/policy-server1. If you want a more secure check, you need to use a full URL: https://github.com/kubewarden/policy-server/.github/workflows/container-image.yml@refs/tags/v1.18.0 Note that the URL includes the full repository path, the workflow file path, and the version tag. If you follow this best practice, you can use the cosign CLI flag --certificate-identity with the full URL. The Kubewarden team is also making efforts to improve the secure supply chain and to make the whole stack SLSA level 3 compliant. Therefore, the main artifacts also include SBOM and provenance files. In the following sections, we will show how to verify the different artifacts produced by the Kubewarden team and how to ensure the secure supply chain of the artifacts using SBOM and provenance files. To verify the keyless-signed container images produced by the Kubewarden team, you can use the cosign CLI tool. For example, to verify the kubewarden/policy-server image, you can execute the following command: cosign verify ghcr.io/kubewarden/policy-server:v1.18.0 \\ --certificate-identity-regexp 'https://github.com/kubewarden/*' \\ --certificate-oidc-issuer https://token.actions.githubusercontent.com Verification for ghcr.io/kubewarden/policy-server:v1.18.0 -- The following checks were performed on each of these signatures: - The cosign claims were validated - Existence of the claims in the transparency log was verified offline - The code-signing certificate was verified using trusted certificate authority certificates <snipped json> You can then verify that the certificate in the returned JSON contains the correct issuer, subject, and github_workflow_repository extensions. The same applies to all other images produced by the Kubewarden team, such as kubewarden/kubewarden-controller and kubewarden/audit-scanner. All container images also have SBOM and provenance files that can be used to ensure the secure supply chain of the images. You can find attestation files on the release page of the component or attached to the container image in the OCI registry. We use Docker to build the images and their attestations. However, the cosign command does not yet support the verification of the attestations generated by Docker from the OCI registry. For this reason, you need to download the files from the release page or the registry and verify them locally. If you want to download the attestation files from the OCI registry, you can follow the Docker documentation and use tools like crane or docker itself to download the files from the registry. When downloading the tarball with attestation files from the release page of the Kubewarden components, extract them, verify the signature for the checksum file, and then check the attestation files: $ tar -xvf attestation-amd64.tar.gz $ cosign verify-blob --bundle audit-scanner-attestation-amd64-checksum-cosign.bundle \\ --certificate-oidc-issuer=https://token.actions.githubusercontent.com \\ --certificate-identity=\"https://github.com/kubewarden/audit-scanner/.github/workflows/attestation.yml@refs/tags/v1.18.0\" \\ audit-scanner-attestation-amd64-checksum.txt Verified OK $ sha256sum -c audit-scanner-attestation-amd64-checksum.txt audit-scanner-attestation-amd64-provenance.json: OK audit-scanner-attestation-amd64-sbom-451fac2e52226302ff449bfe053b3831fd93409b4dad24581b6121cc24daa2c2.json: OK Now that the files integrity is verified, you can inspect the SBOM and Provenance files. You can find Admission Controller Helm charts in our https:// traditional Helm repository under https://charts.kubewarden.io. The same Helm charts are signed via Sigstore’s keyless signing, and pushed to an OCI repository that holds both the Helm chart and its provenance attestation as OCI artifacts. The Helm charts are published alongside a Hauler manifest that lists all needed artifacts. Hauler automatically verifies the artifacts on download. For more information, refer to our documentation. Since Helm 3.8.0, Helm has support for OCI registries, but because of constraints in them, they can’t be searched via helm. You can find the list of charts in GitHub Container Registry. To verify a Helm chart, you need cosign installed. Then execute the following command, for example: cosign verify ghcr.io/kubewarden/charts/kubewarden-defaults:1.5.4 \\ --certificate-identity-regexp 'https://github.com/kubewarden/*' \\ --certificate-oidc-issuer https://token.actions.githubusercontent.com Verification for ghcr.io/kubewarden/charts/kubewarden-defaults:1.5.4 -- The following checks were performed on each of these signatures: - The cosign claims were validated - Existence of the claims in the transparency log was verified offline - The code-signing certificate was verified using trusted certificate authority certificates <snipped json> You can then verify that the cert in the returned json contains the correct issuer, subject, and github_workflow_repository extensions. The chart attestations are pushed to the OCI registry as an artifact layer. See the container images section on how to verify them. Kubewarden charts ship imagelist.txt and (policylist.txt when relevant) inside of the chart. Hence, if you already verified the chart, you can use those lists to verify the consumed container images and policies. Kubewarden also follows the usual practices with regards to Helm charts. Hence, one can also find all the images in the Helm charts with a plugin such as helm-image, or with the following script: #!/usr/bin/env bash helm pull --untar kubewarden/kubewarden-controller && \\ helm pull --untar kubewarden/kubewarden-defaults && \\ { helm template ./kubewarden-controller; helm template ./kubewarden-defaults } \\ | yq '..|.image? | select(.)' \\ | sort -u | sed 's/\"//g' which gives us: ghcr.io/kubewarden/kubewarden-controller:v0.5.5 ghcr.io/kubewarden/policy-server:v0.3.1 ghcr.io/kubewarden/kubectl:v1.21.4 Now, for each image in that list you can verify their Sigstore signatures following the instructions from the previous section. kwctl binaries are signed using Sigstore’s blob signing. When you download a kwctl release each zip file contains two files that can be used for verification: kwctl.sig and kwctl.pem. In order to verify kwctl you need cosign installed, and then execute the following command: cosign verify-blob \\ --signature kwctl-linux-x86_64.sig \\ --cert kwctl-linux-x86_64.pem kwctl-linux-x86_64 --certificate-identity-regexp 'https://github.com/kubewarden/*' \\ --certificate-oidc-issuer https://token.actions.githubusercontent.com Verified OK You can then verify that the cert in the returned json contains the correct issuer, subject, and github_workflow_repository extensions. The SBOMs are signed and published in the GitHub Releases of the project. The provenance attestation for kwctl is verified by using gh attestation verify. For example with gh attestation verify kwctl-linux-x86_64 --repo kubewarden/kwctl. Policies maintained by the Kubewarden team are also signed using the Sigstore project. Similar to usual container images, one can verify them using cosign: cosign verify ghcr.io/kubewarden/policies/verify-image-signatures:v0.2.5 \\ --certificate-identity-regexp 'https://github.com/kubewarden/*' \\ --certificate-oidc-issuer https://token.actions.githubusercontent.com Verification for ghcr.io/kubewarden/policies/verify-image-signatures:v0.2.5 -- The following checks were performed on each of these signatures: - The cosign claims were validated - Existence of the claims in the transparency log was verified offline - The code-signing certificate was verified using trusted certificate authority certificates <snipped json> You can then verify that the cert in the returned json contains the correct issuer, subject, and github_workflow_repository extensions.","title":"Verifying Kubewarden","component":"admission-controller","version":"1.29","name":"verifying-kubewarden","url":"/admission-controller/1.29/en/tutorials/verifying-kubewarden.html","titles":[{"text":"Container images","hash":"container-images","id":1},{"text":"Helm charts","hash":"_helm_charts","id":2},{"text":"Verifying with Hauler","hash":"_verifying_with_hauler","id":3},{"text":"Verifying manually","hash":"_verifying_manually","id":4},{"text":"kwctl","hash":"_kwctl","id":5},{"text":"Policies","hash":"_policies","id":6}],"keyword":"[\"kubewarden\", \"kubernetes\", \"security\", \"verification\"]"},"46":{"id":46,"text":"The Audit Scanner feature is available starting from the Kubewarden 1.7.0 release The audit-scanner component constantly checks resources in the cluster. It flags the ones that not adhering to the Kubewarden policies deployed in the cluster. Policies evolve over time. There are new policy deployments and policy updates. Versions and configuration settings change. This can lead to situations where resources already inside the cluster are no longer compliant. The audit scanning feature provides Kubernetes administrators with a tool that constantly verifies the compliance state of their clusters. To explain the use of the audit scanner in Kubewarden, consider the following scenario. Assume Bob is deploying a WordPress Pod in the cluster. Bob is new to Kubernetes, makes a mistake and deploys the Pod running as a privileged container. At this point, there’s no policy preventing that so the Pod is successfully created in the cluster. A few days later, Alice, the Kubernetes administrator, enforces a Kubewarden policy that prohibits the creation of privileged containers. The Pod deployed by Bob keeps running in the cluster as it already exists. A report generated by the audit scanner lets Alice identify all the workloads that are violating creation policies. This includes the WordPress Pod created by Bob. The audit scanner operates by: identifying all the resources to audit for each resource, it builds a synthetic admission request with the resource’s data it sends each admission request to a policy server endpoint which is only for audit requests For the policy evaluating the request, there are no differences between real or audit requests. This auditing policy server endpoint has instrumentation to collect data about the evaluation. So, users can use their monitoring tools to analyze audit scanner data. You can enable the audit scanner starting from the Kubewarden 1.7.0 release. Detailed installation instructions are in the audit scanner How-to. By default, the audit scanner evaluates every policy. Operators that want to skip a policy evaluation in the audit scanner must set the spec.backgroundAudit field to false in the policy definition. Also, policies in Kubewarden now support two optional annotations: The io.kubewarden.policy.severity annotation lets you specify the severity level of the policy violation, such as critical, high, medium, low or info. The io.kubewarden.policy.category annotation lets you categorize the policy based on a specific domain or purpose, such as PSP, compliance, or performance. See the policy authors documentation for more information. The audit scanner in Kubewarden requires specific Role Based Access Control (RBAC) configurations to be able to scan Kubernetes resources and save the results. Installation creates a correct default Service Account with those permissions. The user can create their own ServiceAccount to configure access to resources. The default audit scanner ServiceAccount binds to the view ClusterRole provided by Kubernetes. This ClusterRole permits read-only access to a wide range of Kubernetes resources within a namespace. You can find more details about this role in the Kubernetes documentation. The audit scanner binds to a ClusterRole that grants read access to Kubewarden resource types and read-write access to the PolicyReport CRDs. These permissions let the scanner fetch resources for conducting audit evaluations and creating policy reports based on the evaluation results.","title":"What is the Audit Scanner?","component":"admission-controller","version":"1.29","name":"audit-scanner","url":"/admission-controller/1.29/en/explanations/audit-scanner/audit-scanner.html","titles":[{"text":"Enable audit scanner","hash":"_enable_audit_scanner","id":1},{"text":"Policies","hash":"_policies","id":2},{"text":"Permissions and ServiceAccounts","hash":"_permissions_and_serviceaccounts","id":3}],"keyword":"[\"kubewarden\", \"audit scanner\", \"kubernetes\"]"},"47":{"id":47,"text":"Policies can inspect CREATE, UPDATE, and DELETE events. The audit scanner can’t simulate UPDATE events, as it doesn’t know which part of the resource requires changing. So, the audit scanner ignores a policy concerned only with UPDATE events. scanner. The audit-scanner v1.7.0 release supports only CREATE events. Handling of DELETE events is coming soon. Each Kubernetes admission request object has information about which user (or ServiceAccount) initiated the event, and to which group they belong. All the events simulated by the audit scanner originate from the same hard coded user and group. Because of that, policies that rely on these values to make their decisions won’t produce meaningful results. For these cases, configure the policy as not auditable. checks. Policies can request and use external data when performing an evaluation. You can evaluate these policies with the audit checks but their outcomes can change depending on the external data. Both the AdmissionPolicy and the ClusterAdmissionPolicy custom resources have the following fields: spec: rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE - UPDATE The apiGroups, apiVersions and resources attributes can use the wildcard . This wildcard symbol causes the policy to match all the values used in the field. The audit scanner ignores policies that use the symbol.","title":"Audit Scanner - Limitations","component":"admission-controller","version":"1.29","name":"limitations","url":"/admission-controller/1.29/en/explanations/audit-scanner/limitations.html","titles":[{"text":"Supported event types","hash":"_supported_event_types","id":1},{"text":"Policies relying on user and user group information","hash":"_policies_relying_on_user_and_user_group_information","id":2},{"text":"Policies relying on external data","hash":"_policies_relying_on_external_data","id":3},{"text":"Usage of * by policies","hash":"_usage_of_by_policies","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"audit scanner\"]"},"48":{"id":48,"text":"When using the Kubewarden Audit Scanner, you store the results of policy scans using the PolicyReport Custom Resource. The PolicyReport CRDs are under development in the wg-policy Kubernetes group. Therefore, this documentation becomes out of date if a new version release of the CRDs. Check the wg-policy group repository for more information about the CRDs. These CRDs offer a structured way to store and manage the audit results. You store audit scanner policy scan results using PolicyReport and ClusterPolicyReport. The audit scanner creates a PolicyReport or a ClusterPolicyReport for each resource scanned, depending on the scope of the resource. PolicyReport objects are available in the resource’s namespace, while ClusterPolicyReport objects are available in the cluster scope. The audit results generated by the scanner include: the policy evaluated the resource scanned the result of the evaluation (pass, fail, or skip) a timestamp indicating when the evaluation took place. You can also define severity and category annotations for your policies. Operators can query the reports by using kubectl. They can also use the optional UI provided by the policy-reporter open-source project for monitoring and observability of the PolicyReport CRDs. Using the kubectl CLI, it’s possible to query the results of the scan: List the reports in the default namespace: $ kubectl get polr -o wide NAME KIND NAME PASS FAIL WARN ERROR SKIP AGE 009805e4-6e16-4b70-80c9-cb33b6734c82 Deployment deployment1 5 1 0 0 0 1h 011e8ca7-40d5-4e76-8c89-6f820e24f895 Deployment deployment2 2 4 0 0 0 1h 02c28ab7-e332-47a2-9cc2-fe0fad5cd9ad Pod pod1 10 0 0 0 0 1h 04937b2b-e68b-47d5-909d-d0ae75527f07 Pod pod2 9 1 0 0 0 1h … List the cluster-wide reports: $ kubectl get cpolr -o wide NAME KIND NAME PASS FAIL WARN ERROR SKIP AGE 261c9492-deec-4a09-8aa9-cd464bb4b8d1 Namespace namespace1 3 1 0 0 0 1h 35ca342f-685b-4162-a342-8d7a52a61749 Namespace namespace2 0 4 0 0 0 1h 3a8f8a88-338b-4905-b9e4-f13397a0d7b5 Namespace namespace3 4 0 0 0 0 15h Get the details of a specific PolicyReport: kubectl get polr 009805e4-6e16-4b70-80c9-cb33b6734c82 -o yaml Get the details of a specific ClusterPolicyReport: kubectl get cpolr 261c9492-deec-4a09-8aa9-cd464bb4b8d1 -o yaml The following example shows a PolicyReport for the Deployment resource deployment1 in the default namespace. The report indicates that the Pod failed the safe-labels AdmissionPolicy. apiVersion: wgpolicyk8s.io/v1beta1 kind: PolicyReport metadata: creationTimestamp: “2024-02-29T06:55:37Z” generation: 6 labels: app.kubernetes.io/managed-by: kubewarden kubewarden.io/policyreport-version: v2 name: 009805e4-6e16-4b70-80c9-cb33b6734c82 namespace: default ownerReferences: - apiVersion: apps/v1 kind: Deployment name: deployment1 uid: 009805e4-6e16-4b70-80c9-cb33b6734c82 resourceVersion: “2685996” uid: c5a88847-d678-4733-8120-1b83fd6330cb results: - category: Resource validation message: “The following mandatory labels are missing: cost-center” policy: namespaced-default-safe-labels properties: policy-resource-version: “2684810” policy-uid: 826dd4ef-9db5-408e-9482-455f278bf9bf policy-name: “safe-labels” policy-namespace: “default” validating: “true” resourceSelector: {} result: fail scored: true severity: low source: kubewarden timestamp: nanos: 0 seconds: 1709294251 scope: apiVersion: apps/v1 kind: Deployment name: deployment1 namespace: default resourceVersion: “3” uid: 009805e4-6e16-4b70-80c9-cb33b6734c82 summary: error: 0 fail: 1 pass: 0 skip: 0 warn: 0 The following example shows a ClusterPolicyReport for the Namespace resource default. The report indicates that the resource has failed the safe-annotations ClusterAdmissionPolicy validation. apiVersion: wgpolicyk8s.io/v1beta1 kind: ClusterPolicyReport metadata: creationTimestamp: “2024-02-28T14:44:37Z” generation: 3 labels: app.kubernetes.io/managed-by: kubewarden kubewarden.io/policyreport-version: v2 name: 261c9492-deec-4a09-8aa9-cd464bb4b8d1 ownerReferences: - apiVersion: v1 kind: Namespace name: default uid: 261c9492-deec-4a09-8aa9-cd464bb4b8d1 resourceVersion: “2403034” uid: 20a3d00e-e955-4f21-a887-317d40f3f052 results: - category: Resource validation message: “The following mandatory annotations are not allowed: owner” policy: clusterwide-safe-annotations properties: policy-resource-version: “2396437” policy-uid: 46780d6e-e51a-4d65-8572-a6af01380aa7 policy-name: “safe-annotations” validating: “true” resourceSelector: {} result: fail scored: true severity: low source: kubewarden timestamp: nanos: 0 seconds: 1709294251 scope: apiVersion: v1 kind: Namespace name: default resourceVersion: “37” uid: 261c9492-deec-4a09-8aa9-cd464bb4b8d1 summary: error: 0 fail: 1 pass: 0 skip: 0 warn: 0 The Policy Reporter ships as a subchart of kubewarden-controller. Refer to the Audit Scanner Installation page for more information. The Policy Reporter UI provides a dashboard showing all violations. See the screenshot below: Kubewarden ships the Policy Reporter UI with a preconfigured filter that only shows Kubewarden policies, along with expanded information: Other features of Policy Reporter include forwarding of results to different clients (like Grafana Loki, Elasticsearch, chat applications), metrics endpoints, and more. See the policy-reporter’s community docs for more information.","title":"Audit Scanner - Policy Reports","component":"admission-controller","version":"1.29","name":"policy-reports","url":"/admission-controller/1.29/en/explanations/audit-scanner/policy-reports.html","titles":[{"text":"Querying the reports","hash":"_querying_the_reports","id":1},{"text":"PolicyReport example","hash":"_policyreport_example","id":2},{"text":"ClusterPolicyReport example","hash":"_clusterpolicyreport_example","id":3},{"text":"Policy Reporter UI","hash":"_policy_reporter_ui","id":4}],"keyword":"[“kubewarden”, “kubernetes”, “audit scanner”]"},"49":{"id":49,"text":"This page is from August 2023. Both projects may have evolved since then. If you find something is missing or inaccurate, please file an issue or open a PR using the link at the bottom of the page. Both OPA Gatekeeper and Kubewarden are open source projects, and part of CNCF. This table provides a comparison between OPA Gatekeeper and Kubewarden. Topics requiring more information have links to further explanation. Feature OPA Gatekeeper Kubewarden Validation ✅ ✅ Mutation ✅ ✅ Policy language [1] Rego Rego, CEL, Go, Rust,…​ Context aware [2] ✅ ✅ Kubernetes integration [3] cluster wide CRD cluster wide and namespaced CRDs Policy distribution [4] embedded into Kubernetes CR Container registry, or embedded into Kubernetes CR (CEL) CI/CD integration [5] ✅ ✅ Policy enforcement modes deny, warn deny, warn Deployment mode [6] single evaluation server multiple evaluation servers Background checks [7] ✅ ✅ Both OPA Gatekeeper and Kubernetes can write validation and mutation policies. These policies can target any kind of Kubernetes resource, including Custom Resources. You write OPA Gatekeeper policies using Rego. Rego is a query language created by the Open Policy Agent project. You can only use Rego to write validating policies. Mutating policies don’t use Rego, instead using ad-hoc rules defined in YAML (see here). You can write Kubewarden policies using different paradigms. Policy authors can use both traditional programming languages (like Go, Rust and others) or Domain Specific Languages like Rego and CEL. In Kubewarden’s you write validating and mutating policies the same way. The kube-mgmt open source project, part of the Open Policy Agent project, uses Rego. Despite using the same language, policies written for kube-mgmt aren’t compatible with OPA Gatekeeper and vice versa. Kubewarden can use Rego policies written for both Open Policy Agent and for OPA Gatekeeper. More information is here. Sometimes a policy needs data about the current state of the cluster to make a validation or mutation decision. For example, a policy validating Ingress resources might need to know other Ingress resources already defined in the cluster to ensure no clashes happen. Kubewarden calls these policies \"context aware\". Both OPA Gatekeeper and Kubewarden support these types of policies. When deploying OPA Gatekeeper, a Kubernetes administrator decides which type of cluster data to make available to the policies at evaluation time. It’s important to highlight how this data is then accessible by all the policies deployed. For example, if an OPA Gatekeeper policy requires access to Kubernetes Secrets, all the other policies deployed are able to read this data as well. Conversely, Kubewarden provides a granular access to cluster resources. Each policy has access only to the resources that the Kubernetes administrator specifies. Attempting to read unauthorized data is immediately blocked and reported to the cluster administrators. OPA Gatekeeper has a cluster wide Custom Resource, permitting policy definition, and how and where to enforce them. Kubewarden has two different types of Custom Resources used to declare policies. One works at the Cluster level, the other is namespaced. The name of the namespaced Custom Resource is AdmissionPolicy. Policies deployed via a AdmissionPolicy resource affect only the resources created within the namespace they belong to. Because of that, you can allow non-administration Kubernetes users to have the RBAC privileges necessary to manage AdmissionPolicy resources, in the namespaces they can access. This allows Kubernetes administrators to delegate policy-related work. OPA Gatekeeper and Kubewarden policies have policy source code (Rego for OPA Gatekeeper, CEL for Kubewarden) in the Custom Resource defining a policy in Kubernetes. Also, Kubewarden policies can have the source code of the policy managed like container images (for Rego, Go, Rust, …​). Once built, they’re pushed into container registries as OCI artifacts. You can sign and verify Kubewarden policies using container image tools like cosign, from the Sigstore project. You can distribute Kubewarden policies among geographically distributed container registries using the traditional tools and processes adopted for container images. Both OPA Gatekeeper and Kubewarden are managed using GitOps methodologies. However, for OPA Gatekeeper, there’s a coupling between the policy’s Rego code and the Custom Resource used to deploy it in Kubernetes. This introduces extra steps in CI/CD pipelines. Rego has testing tools allowing the creation of unit test suites. Writing tests and executing them in a CI/CD pipeline is essential to ensure policies behave as expected. To use these testing tools, the source code of the policy must be available in dedicated text files. It’s impossible to read the source code from the YAML files used to declare the OPA Gatekeeper policy. The CI/CD pipeline must synchronize the Rego source code to test with the code defined in the OPA Gatekeeper Custom Resource. You can do this using third party tools. Kubewarden policies have CI/CD pipelines like traditional microservices. Usually their source code lives in a Git repository and then, using traditional CI/CD systems, unit tests run against it. You write unit tests using the testing frameworks of the language used to write the policy. Once all the tests pass, you compile the policy to WebAssembly and push it to a container registry. This kind of pipeline is usually maintained by the policy author. Kubernetes administrators typically maintain other automation pipelines that react to new releases of the policy (using automation tools like Dependabot, Renovate bot, updatecli and others), or to changes to the policy configuration. The pipeline tests the policy against different types of requests. You can do the testing using the kwctl CLI tool, without requiring a running Kubernetes cluster. The kwctl CLI tool uses the same evaluation engine used by the Kubewarden stack deployed in a Kubernetes cluster. Both OPA Gatekeeper and Kubewarden can deploy policies using two different operation modes: deny: violation of a policy rejects the request warn: violation of a policy doesn’t cause rejection and is logged The same server evaluates all the OPA Gatekeeper policies. Conversely, Kubewarden allows definition of multiple evaluation servers. You define these servers by a Custom Resource called PolicyServer. When declaring a Kubewarden policy, the Kubernetes administrator decides which PolicyServer host it. The PolicyServer object is a high level abstraction introduced by Kubewarden. Behind the scenes a Deployment with a specific replica size is created. Each PolicyServer can have a different replica size from others. This allows interesting scenarios like the following ones: Deploy critical policies to a dedicated Policy Server pool. Deploy the policies of a noisy tenant to a dedicated Policy Server pool. As policies are added, removed, and reconfigured the resources already in the cluster might become non-compliant. Both OPA Gatekeeper and Kubewarden have a scanner that operates in the background. This scanner evaluates resources already defined in the cluster and flags non-compliant ones. The only difference between OPA Gatekeeper and Kubewarden is how the scanner results get saved. OPA Gatekeeper adds the violation details to the status field of a given Constraint Custom Resource (see here). Kubewarden instead stores the results inside of a set of the Policy Report Custom Resources defined by the Policy Report working group.","title":"Kubewarden vs OPA Gatekeeper","component":"admission-controller","version":"1.29","name":"opa-comparison","url":"/admission-controller/1.29/en/explanations/comparisons/opa-comparison.html","titles":[{"text":"Types of policies","hash":"_types_of_policies","id":1},{"text":"Writing policies","hash":"_writing_policies","id":2},{"text":"Context aware","hash":"_context_aware","id":3},{"text":"Kubernetes integration","hash":"_kubernetes_integration","id":4},{"text":"Policy distribution","hash":"_policy_distribution","id":5},{"text":"CI/CD integration","hash":"_cicd_integration","id":6},{"text":"Policy enforcement modes","hash":"_policy_enforcement_modes","id":7},{"text":"Deployment mode","hash":"_deployment_mode","id":8},{"text":"Background checks","hash":"_background_checks","id":9}],"keyword":"[\"kubewarden\", \"kubernetes\", \"opa gatekeeper\", \"comparison\"]"},"50":{"id":50,"text":"Private registry that supports OCI artifacts. It’s needed for storing container images and policies. There is a list of supported Open Container Initiative (OCI) registries here. kwctl 1.3.1 or later. docker v20.10.6 or later.","title":"Requirements for installing Kubewarden in an air-gapped installation","component":"admission-controller","version":"1.29","name":"01-requirements","url":"/admission-controller/1.29/en/howtos/airgap/01-requirements.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"air gap installation\"]"},"51":{"id":51,"text":"This guide shows you how to install Kubewarden in air-gapped environments. For an air-gapped installation of Kubewarden, you need a private Open Container Initiative (OCI) registry accessible by your Kubernetes cluster. Kubewarden Policies are WebAssembly modules, therefore you can store them in an OCI-compliant registry as OCI artifacts. You need to add Kubewarden’s images and policies to this OCI registry. You can refer to a list of Kubewarden artifacts in the Artifacts reference page. The following sections describe the process. Download kubewarden-images.txt from the Kubewarden release page. Alternatively, you can use the imagelist.txt and policylist.txt shipped inside the helm charts containing the used container images and policy Wasm modules, respectively. Optionally, you can verify the signatures of the helm charts and container images Download kubewarden-save-images.sh and kubewarden-load-images.sh from the utilities repository. Save Kubewarden container images into a .tar.gz file: ./kubewarden-save-images.sh \\ --image-list ./kubewarden-images.txt \\ --images kubewarden-images.tar.gz Docker begins pulling the images used for an air gap install. Be patient. This process takes a few minutes. When complete, your current directory, where you ran the command, has a tarball, kubewarden-images.tar.gz. Add all the policies you want to use to a policies.txt file. A file with a list of default policies is in the Kubewarden defaults release page. Download kubewarden-save-policies.sh and kubewarden-load-policies.sh from the kwctl repository Save policies into a .tar.gz file: ./kubewarden-save-policies.sh --policies-list policies.txt You use kwctl to download the policies. The kubewarden-policies.tar.gz archive contains the policies. You need to download the following helm charts to your workstation: helm pull kubewarden/kubewarden-crds helm pull kubewarden/kubewarden-controller helm pull kubewarden/kubewarden-defaults Move these files to the air gap environment: kubewarden-policies.tar.gz, kubewarden-images.tar.gz, kubewarden-load-images.sh, kubewarden-load-policies.sh and policies.txt Load Kubewarden images into the private registry. You need to authenticate the Docker client against the local registry . ./kubewarden-load-images.sh \\ --image-list ./kubewarden-images.txt \\ --images kubewarden-images.tar.gz \\ --registry <REGISTRY.YOURDOMAIN.COM:PORT> Load Kubewarden policies into the private registry. You should authenticate kwctl the local registry (kwctl uses the same mechanism to authenticate as docker, a ~/.docker/config.json file) ./kubewarden-load-policies.sh \\ --policies-list policies.txt \\ --policies kubewarden-policies.tar.gz \\ --registry <REGISTRY.YOURDOMAIN.COM:PORT> \\ --sources-path sources.yml The kwctl command needs the sources.yaml file to connect to registries in these categories: Authentication is required Self signed certificate is being used No TLS termination is done Please refer to the section on custom certificate authorities in the documentation to learn about configuring the sources.yaml file Now that your private registry has everything required you can install Kubewarden. The only difference to a standard Kubewarden installation is that you need to change the registry in the container images and policies to be the private registry. Install the Kubewarden stack: helm install --wait -n kubewarden \\ kubewarden-crds kubewarden-crds.tgz helm install --wait -n kubewarden \\ kubewarden-controller kubewarden-controller.tgz \\ --set global.cattle.systemDefaultRegistry=<REGISTRY.YOURDOMAIN.COM:PORT> To use the Policy Reported subchart available in the kubewarden-controller chart you need to define other values specific for the subchart in an air-gapped environment. An example is below: helm install --wait -n kubewarden kubewarden-controller kubewarden-controller.tgz \\ --set global.cattle.systemDefaultRegistry=<REGISTRY.YOURDOMAIN.COM:PORT> \\ --set auditScanner.policyReporter=true \\ --set policy-reporter.image.registry=<REGISTRY.YOURDOMAIN.COM:PORT> \\ --set policy-reporter.ui.image.registry=<REGISTRY.YOURDOMAIN.COM:PORT> \\ --set policy-reporter.image.repository=kyverno/policy-reporter \\ --set policy-reporter.ui.image.repository=kyverno/policy-reporter-ui It’s necessary to define auditScanner.policyReporter to enable the subchart and 4 more values, to configure the registry and repository where you store the Policy Reporter images. For more information about the policy report subchart values refer to the Policy Reporter documentation. helm install --wait -n kubewarden \\ kubewarden-defaults kubewarden-defaults.tgz \\ --set global.cattle.systemDefaultRegistry=<REGISTRY.YOURDOMAIN.COM:PORT> To download the recommended policies installed by the kubewarden-defaults Helm Chart from a registry other than global.cattle.systemDefaultRegistry, you can use the recommendedPolicies.defaultPoliciesRegistry configuration. This configuration lets users specify a registry dedicated to pulling the OCI artifacts of the policies. It’s particularly useful when their container image repository doesn’t support OCI artifacts. To install, and wait for the installation to complete, use the following command: helm install --wait -n kubewarden \\ kubewarden-defaults kubewarden-defaults.tgz \\ --set global.cattle.systemDefaultRegistry=<REGISTRY.YOURDOMAIN.COM:PORT> \\ --set recommendedPolicies.defaultPoliciesRegistry=<REGISTRY.YOURDOMAIN.COM:PORT> If the recommendedPolicies.defaultPoliciesRegistry configuration isn’t set, the global.cattle.systemDefaultRegistry is used as the default registry. Finally, you need to configure Policy Server to fetch policies from your private registry. Refer to the using private registry section of the documentation. Now you can create Kubewarden policies in your cluster. Policies must be available in your private registry. kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: privileged-pods spec: module: registry://<REGISTRY.YOURDOMAIN.COM:PORT>/kubewarden/policies/pod-privileged:v0.2.2 rules: - apiGroups: [\"\"] apiVersions: [“v1”] resources: [“pods”] operations: - CREATE mutating: false EOF PolicyServer resources must use the image available in your private registry. For example: apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: reserved-instance-for-tenant-a spec: image: <REGISTRY.YOURDOMAIN.COM:PORT>/kubewarden/policy-server:v1.3.0 replicas: 2 serviceAccountName: sa","title":"Air gap installation","component":"admission-controller","version":"1.29","name":"02-install","url":"/admission-controller/1.29/en/howtos/airgap/02-install.html","titles":[{"text":"Save container images in your workstation","hash":"_save_container_images_in_your_workstation","id":1},{"text":"Save policies in your workstation","hash":"_save_policies_in_your_workstation","id":2},{"text":"Helm charts","hash":"_helm_charts","id":3},{"text":"Populate private registry","hash":"_populate_private_registry","id":4},{"text":"Install Kubewarden","hash":"_install_kubewarden","id":5}],"keyword":"[“kubewarden”, “kubernetes”, “air gap installation”]"},"52":{"id":52,"text":"This guide shows you how to install Kubewarden in air-gapped environments using Hauler. Hauler is a tool that helps users run workloads in air-gapped environments. It moves the required resources for apps into those air-gapped environments. Kubewarden uses Hauler capabilities by providing a manifest file with all the required resources to run Kubewarden in a private environment. This documentation describes how you can use it. Refer to the Hauler documentation to learn more about it. The basic workflow using the Hauler manifest is: Get it from a Kubewarden release page Load all the resources required to run Kubewarden into a local store Export them into a file Move the file into the private environment Load the resources into Hauler running inside the private environment Copy everything into a registry, to be used in the installation process, in your air-gapped environment Download hauler_manifest.yml from the Kubewarden release page. Synchronize the resources defined in the manifest to your Hauler store: hauler store sync --filename hauler_manifest.yaml Hauler downloads all the resources from the manifest to the local store. This process takes a few minutes. When complete, you can see the synchronized resources with the hauler store info command. Run the Hauler command to export all the resources previously loaded in the store to a file: hauler store save --filename kubewarden-resources.tar.zst Kubewarden container images support x86_64 and Arm architectures. Therefore, when you save the resource into the file, you can see warning messages like this: 2025-08-12 18:55:54 WRN specify an export platform to prevent potential platform mismatch on import of index [ghcr.io/kyverno/policy-reporter:3.3.3] 2025-08-12 18:55:54 WRN specify an export platform to prevent potential platform mismatch on import of index [ghcr.io/kyverno/policy-reporter-ui:2.4.1] 2025-08-12 18:55:54 WRN specify an export platform to prevent potential platform mismatch on import of index [ghcr.io/kubewarden/policy-server:v1.27.0] 2025-08-12 18:55:54 WRN specify an export platform to prevent potential platform mismatch on import of index [ghcr.io/kubewarden/audit-scanner:v1.27.0] 2025-08-12 18:55:54 WRN specify an export platform to prevent potential platform mismatch on import of index [ghcr.io/rancher/kuberlr-kubectl:v5.0.0] 2025-08-12 18:55:54 WRN specify an export platform to prevent potential platform mismatch on import of index [ghcr.io/kubewarden/kubewarden-controller:v1.27.0] To avoid this warning message, you can set the --platform CLI flag to define which platform architecture you want to save into the file. Now that you have all the Kubewarden resources in kubewarden-resources.tar.zst, copy it into your air-gapped environment and load it into the Hauler store there: hauler store load --filename kubewarden-resources.tar.zst # Check if the resources are loaded hauler store info Now all the resources required to install Kubewarden are in the Hauler store in your isolated environment. To use the resources from your Hauler store, it’s necessary to make them available in an internal registry. You can use Hauler commands to copy them into your private registry. hauler store copy registry://localhost:5000 You can also run Hauler to start a registry with all the resources from the store. This registry is insecure, you will need to adapt the cluster configuration: # Find IP address of your host # hostname -I # Update registries.yaml for k3s based cluster to allow insecure access # mirrors: # \"<HOST_IP>:5000\": # endpoint: # - \"http://<HOST_IP>:5000\" # configs: # \"<HOST_IP>:5000\": # tls: # insecure_skip_verify: true # Configure policy-server to allow pulling policies from insecure sources # helm install .. kubewarden-defaults .. --set policyServer.insecureSources[0]=<HOST_IP:5000> hauler store serve registry This starts a registry at the localhost:5000 address. From this point, you can use other commands like Skopeo to copy all the container images, policy modules and Helm charts used by Kubewarden into your private registry. Now that your private registry has everything required, you can install Kubewarden. The difference from a standard Kubewarden installation is that you need to change the registry in the container images and policies to be the private registry. Additionally, you need to install the Helm charts from OCI artifacts. Install the Kubewarden stack: helm install --wait -n kubewarden kubewarden-crds --create-namespace \\ oci://<REGISTRY.YOURDOMAIN.COM:PORT>/hauler/kubewarden-crds helm install --wait -n kubewarden kubewarden-controller \\ --set \"global.cattle.systemDefaultRegistry=<REGISTRY.YOURDOMAIN.COM:PORT>\" \\ oci://<REGISTRY.YOURDOMAIN.COM:PORT>/hauler/kubewarden-controller To use the PolicyReporter sub-chart available in the kubewarden-controller chart you need to define other values specific for the sub-chart in an air-gapped environment. See an example below: helm install --wait -n kubewarden kubewarden-controller oci://<REGISTRY.YOURDOMAIN.COM:PORT>/hauler/kubewarden-controller \\ --set global.cattle.systemDefaultRegistry=<REGISTRY.YOURDOMAIN.COM:PORT> \\ --set auditScanner.policyReporter=true \\ --set policy-reporter.image.registry=<REGISTRY.YOURDOMAIN.COM:PORT> \\ --set policy-reporter.image.repository=kyverno/policy-reporter \\ --set policy-reporter.ui.image.registry=<REGISTRY.YOURDOMAIN.COM:PORT> \\ --set policy-reporter.ui.image.repository=kyverno/policy-reporter-ui It’s necessary to define auditScanner.policyReporter and four other values to enable the sub-chart and to configure the registry and repository where the Policy Reporter images are stored. For more information about the policy report sub-chart values, refer to Policy Reporter documentation. helm install --wait -n kubewarden \\ kubewarden-defaults oci://<REGISTRY.YOURDOMAIN.COM:PORT>/hauler/kubewarden-defaults \\ --set global.cattle.systemDefaultRegistry=<REGISTRY.YOURDOMAIN.COM:PORT> Finally, you need to configure each Policy Server to fetch policies from your private registry. See the using private registry section of the documentation. Now you can create Kubewarden policies in your cluster. Policies must be available in your private registry. kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: privileged-pods spec: module: registry://<REGISTRY.YOURDOMAIN.COM:PORT>/kubewarden/policies/pod-privileged:v0.2.2 rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: - CREATE mutating: false EOF PolicyServer resources must use the image available in your private registry. For example: apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: reserved-instance-for-tenant-a spec: image: <REGISTRY.YOURDOMAIN.COM:PORT>/kubewarden/policy-server:v1.3.0 replicas:","title":"Air gap installation with Hauler","component":"admission-controller","version":"1.29","name":"03-hauler","url":"/admission-controller/1.29/en/howtos/airgap/03-hauler.html","titles":[{"text":"Download Hauler manifest from Helm chart release page","hash":"_download_hauler_manifest_from_helm_chart_release_page","id":1},{"text":"Generate the tarball file with all Kubewarden resources","hash":"_generate_the_tarball_file_with_all_kubewarden_resources","id":2},{"text":"Transfer the tarball into your isolated environment","hash":"_transfer_the_tarball_into_your_isolated_environment","id":3},{"text":"Populate private registry","hash":"_populate_private_registry","id":4},{"text":"Install Kubewarden","hash":"_install_kubewarden","id":5}],"keyword":"kubewarden, kubernetes, air gap installation, hauler"},"53":{"id":53,"text":"This section describes how to verify applications and images from the Rancher Application Collection with Kubewarden. You perform image verification by deploying the Verify Image Signatures policy and configuring the PolicyServers to pull the images' signature layers from the Application Collection. You need an access token or service account authentication to Application Collection. Following the Application Collection documentation, create an access token and configure the cluster to pull from the Application Collection registry, with a Docker Config Secret: $ kubectl create secret docker-registry application-collection \\ --docker-server=dp.apps.rancher.io \\ --docker-username=<mymail> \\ --docker-password=<mytoken> The PolicyServer in use needs configuration so it can pull the image layers that contain the signatures. Follow the private registries how-to for Policy Servers to create a Docker Config Secret in the PolicyServer namespace. You do this by instantiating a Secret with the same contents as the previous application-collection. For PolicyServer default, installed with the kubewarden-defaults Helm chart under the kubewarden namespace, it would be: $ kubectl create secret docker-registry application-collection-kw -n kubewarden \\ --docker-server=dp.apps.rancher.io \\ --docker-username=<mymail> \\ --docker-password=<mytoken> If using the PolicyServer default from the kubewarden-defaults Helm chart, configure it with the imagePullSecret application-collection-kw. This in the same namespace and is done by setting the following values for the chart: $ helm upgrade -i --wait --namespace kubewarden \\ --create-namespace kubewarden-defaults kubewarden/kubewarden-defaults \\ --reuse-values \\ --set policyServer.imagePullSecret=application-collection-kw If you are using other PolicyServers, set their spec.imagePullSecret. The Secret must be in the same namespace as the PolicyServer. You can apply a ClusterAdmissionPolicy by making use of the Verify Image Signatures policy. This policy checks all container images from dp.apps.rancher.io/containers/*. The policy supports OCI registries and artifacts. You can configure the policy settings with the public key from Application Collection (at the time of writing) in the pubKeys array. $ kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: annotations: artifacthub/pkg: verify-image-signatures/verify-image-signatures/0.2.9 name: check-appcollection-signatures spec: backgroundAudit: true mode: protect module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.2.9 mutating: true policyServer: default # On first policy call, the policy-server downloads the image layers to # verify the signatures. Later on it's cached. It may be useful to increase # this timeout: timeoutSeconds: 30 # default 10 seconds. rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"replicationcontrollers\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"apps\"] apiVersions: [\"v1\"] resources: [\"deployments\", \"replicasets\", \"statefulsets\", \"daemonsets\"] operations: [\"CREATE\", \"UPDATE\"] - apiGroups: [\"batch\"] apiVersions: [\"v1\"] resources: [\"jobs\", \"cronjobs\"] operations: [\"CREATE\", \"UPDATE\"] settings: modifyImagesWithDigest: true rule: PublicKey signatures: - image: dp.apps.rancher.io/containers/* pubKeys: # Note: this array constitutes an AND in validation, not an OR. - |- -----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA02FtEt5gBywiyxbmkVsb CujcBg5lur0kpEbfDk10gCcs9shVEqEO3ZsOXHursgoaDAWqdPtsYhsgczGeJz9w Aw+r6BuRV8YOkE37A8s/7IOQUW0tlqtnt11OKhIiZ9+e5l3ed2H1ymKQO3dgreSy rShqYdA3hrItswyp41ApF6zhjSPlR6lAmq3X4wMYLAPptmzfxigTnR4hxB5UNPhs i2qA4vLrUM/i+NohECuLr1EAymvupH26HLEdM+eZnlQn+WbhIP5Grc4ba7XrBv7K kywgTC7CxkiJZR0mUcUD2wTX/Je8Ewj6oPSalx09e2jtzvmU5Kr9XUyMF7Zsj5CA IwIDAQAB -----END PUBLIC KEY----- EOF $ kubectl apply -f mypolicy.yml $ kubectl get admissionpolicies -n default # wait for status active To test it, deploy a Pod with a signed image from Application Collection: $ kubectl run nginx --image [dp.apps.rancher.io/containers/nginx:1.24.0](http://dp.apps.rancher.io/containers/nginx:1.24.0) --overrides='{\"spec\": {\"imagePullSecrets\":[{\"name\": \"application-collection\"}]}}' pod/nginx created You can inspect the logs of your policy-server Pod to see that the verification took place.","title":"Verify Rancher Application Collection images","component":"admission-controller","version":"1.29","name":"01-verify-images","url":"/admission-controller/1.29/en/howtos/application-collection/01-verify-images.html","titles":[{"text":"Authenticating to Rancher Application Collection","hash":"_authenticating_to_rancher_application_collection","id":1},{"text":"Create Secret for the PolicyServer so they can pull from Rancher Application Collection","hash":"_create_secret_for_the_policyserver_so_they_can_pull_from_rancher_application_collection","id":2},{"text":"Configure PolicyServers to use the new Secret","hash":"_configure_policyservers_to_use_the_new_secret","id":3},{"text":"Apply the policy","hash":"_apply_the_policy","id":4}],"keyword":"[\"rancher\", \"application collection\", \"appco\", \"signature\", \"verification\", \"verify\"]"},"54":{"id":54,"text":"Admission Controller welcomes suggestions for improvement from all contributors, whether new or experienced. You can contribute to Admission Controller documentation by: Improving existing content Creating new content (Upcoming) Helping with translation of the documentation Everybody is welcome to suggest changes by submitting a pull request. You can also report a bug or typo with the help of a GitHub issue to the rancher/kubewarden-product-docs repository. To get involved with the documentation: Familiarize yourself with the documentation repository and the static site generator. Antora makes use of the AsciiDoc syntax. Understand how to suggest an improvement and open a pull request.","title":"Contributing to Admission Controller documentation","component":"admission-controller","version":"1.29","name":"contributing","url":"/admission-controller/1.29/en/howtos/contribution-guide/contributing.html","titles":[{"text":"Getting started","hash":"_getting_started","id":1}],"keyword":"[\"kubewarden\", \"documentation\", \"contributing\"]"},"55":{"id":55,"text":"Admission Controller welcomes all contributors, whether new or experienced.","title":"Contribution guide","component":"admission-controller","version":"1.29","name":"contribution-guide","url":"/admission-controller/1.29/en/howtos/contribution-guide/contribution-guide.html","titles":[],"keyword":"[\"kubewarden\", \"contributing\"]"},"56":{"id":56,"text":"If you notice an issue with Admission Controller documentation or want to suggest new content, then open an issue. You only require access to a GitHub account and a browser. Usually, any new documentation work for Admission Controller begins with an issue in GitHub. The Admission Controller documentation team reviews, categorizes, and tags them. documentation team] reviews, categorizes, and tags them. ] Everybody is welcome to work on any issue, including the reporter, but you should assign it to yourself before commencing any work to avoid duplicate efforts. To suggest improvements to existing documentation content or report an error, open an issue. Click the GitHub Octocat icon at the top. This redirects you to the documentation repository for Admission Controller. Navigate to the Issues tab and click New issue. Describe the issue or suggestion for improvement. The more details, the better. Click Submit new issue. After submitting the issue, you can either assign it to yourself or wait for a community member to pick it up. Members of the documentation team and the community might request clarifications before they can act on your issue. You should actively check your issue or turn on GitHub notifications. To suggest new content, please file an issue as using one of these mechanisms: Choose an existing page in the section you think the content belongs in and click Create an issue. OR Navigate to GitHub and file the issue directly. No contribution is too big or small. However, so the community derives maximum value, we request that you follow the below when reporting an issue: Focus on providing a clear description of the issue. Some key points to consider would be describing what’s missing, outdated, erroneous, or requires qualitative and technical improvement. Describe the specific impact the issue has on users. Limit the scope of the issue. If the scope is large, break it down to smaller tasks within an issue. For example, \"Creating a Contribution Guide\" is wide in scope since there would be multiple tasks associated with the issue. However, \"Fixing a grammatical error on the Quickstart page\" is a more narrowly scoped issue that would require only a single pull request. Crosscheck existing issues to avoid duplicate work. Check for an existing pull request or issue. Check you reference the existing issue or pull request within the issue you’re opening to give context for contributors who may want to work on it.","title":"Suggesting a documentation improvement","component":"admission-controller","version":"1.29","name":"suggesting-an-improvement","url":"/admission-controller/1.29/en/howtos/contribution-guide/suggesting-an-improvement.html","titles":[{"text":"Opening an issue","hash":"_opening_an_issue","id":1},{"text":"New content suggestions","hash":"_new_content_suggestions","id":2},{"text":"How you can make a contribution count?","hash":"_how_you_can_make_a_contribution_count","id":3}],"keyword":"[\"kubewarden\", \"documentation\", \"suggesting an improvement\"]"},"57":{"id":57,"text":"It’s possible to specify and configure the Certificate Authorities that a PolicyServer uses when pulling the ClusterAdmissionPolicy artifacts from the policy registry. The following spec fields configure the deployed policy-server executable to that effect. The default behavior of kwctl and policy-server is to enforce HTTPS with trusted certificates matching the system CA store. You can interact with registries using untrusted certificates or even without TLS, by using the insecure_sources setting. This approach is highly discouraged for environments closer to production. To configure the PolicyServer to accept insecure connections to specific registries, use the spec.insecureSources field of PolicyServer. This field accepts a list of insecure URIs. For example: spec: insecureSources: - localhost:5000 - host.k3d.internal:5000 See Custom Certificates Authority for more information on how the policy-server executable treats insecure URIs. You can configure the PolicyServer with a custom certificate chain of 1 or more certificates for a specific URI. To do this you use the field spec.sourceAuthorities. This field is a map of URIs, each with its own list of strings that contain Privacy Enhanced Mail (PEM) encoded certificates. For example: spec: sourceAuthorities: \"registry-pre.example.com\": - | -----BEGIN CERTIFICATE----- ca-pre1-1 PEM cert -----END CERTIFICATE----- - | -----BEGIN CERTIFICATE----- ca-pre1-2 PEM cert -----END CERTIFICATE----- \"registry-pre2.example.com:5500\": - | -----BEGIN CERTIFICATE----- ca-pre2 PEM cert -----END CERTIFICATE----- See Custom Certificate Authorities for more information on how the policy-server executable treats them.","title":"Using custom certificate authorities","component":"admission-controller","version":"1.29","name":"01-custom-cas","url":"/admission-controller/1.29/en/howtos/policy-servers/01-custom-cas.html","titles":[{"text":"Custom Certificate Authorities for Policy registries","hash":"_custom_certificate_authorities_for_policy_registries","id":1},{"text":"Insecure sources","hash":"_insecure_sources","id":2},{"text":"Custom Certificate Authorities","hash":"_custom_certificate_authorities","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"custom certificate authorities\"]"},"58":{"id":58,"text":"It’s possible to configure PolicyServers to use credentials of private OCI registries. This permits those PolicyServers to download policies from public and private registries. Once you configure PolicyServer to access private registries, policies running on it can also access those registries. This works when policies use the provided SDKs or host capability APIs. This is because PolicyServers expose that functionality through the defined policy SDKs and the lower level host capability API. This is the case, for example, in policies that verify signatures of container images. To achieve this, you should create a Secret containing the private registry credentials. Then configure your PolicyServers' resources, and then your Helm chart to use it. PolicyServers support the usual Docker configuration Secrets , either of type kubernetes.io/dockercfg or type kubernetes.io/dockerconfigjson. You can create these secrets with kubectl create secret docker-registry. You create the secret in the namespace where you run your PolicyServer. This follows the principle of least privilege, and lets different PolicyServers validate OCI artifacts, from different registries, independently. You create this Secret for the PolicyServer with the following command: kubectl --namespace kubewarden create secret docker-registry secret-ghcr-docker \\ --docker-username=myuser \\ --docker-password=mypass123 \\ --docker-server=myregistry.io For more information on how to create the Docker Secrets, see the Kubernetes documentation. Once you have the Secret created, it’s necessary to configure the PolicyServer instance. Set the spec.imagePullSecret field with the name of the Secret that contains the credentials: # Example of a PolicyServer using a private registry apiVersion: policies.kubewarden.io/v1 kind: PolicyServer metadata: name: default spec: image: ghcr.io/kubewarden/policy-server:v1.1.1 serviceAccountName: policy-server replicas: 1 annotations: imagePullSecret: \"secret-ghcr-docker\" When deployed from the kubewarden-defaults Helm chart, you can set the policyServer.imagePullSecret value to the Secret name. Then, the created default policy server is able to download policies from your private registry as well: # values file example policyServer: telemetry: enabled: False imagePullSecret: secret-ghcr-docker","title":"Configuring PolicyServers to use private registries","component":"admission-controller","version":"1.29","name":"02-private-registry","url":"/admission-controller/1.29/en/howtos/policy-servers/02-private-registry.html","titles":[{"text":"Creating the Secret","hash":"_creating_the_secret","id":1},{"text":"Consuming the Secret in PolicyServers","hash":"_consuming_the_secret_in_policyservers","id":2},{"text":"Consuming the Secret in Helm charts","hash":"_consuming_the_secret_in_helm_charts","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policyservers\", \"private registries\"]"},"59":{"id":59,"text":"Please refer to the PolicyServer configuration section in the Production deployments documentation.","title":"Configuring PolicyServers for production","component":"admission-controller","version":"1.29","name":"03-production-deployments","url":"/admission-controller/1.29/en/howtos/policy-servers/03-production-deployments.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"policyservers\", \"production\", \"poddisruptionbudget\", \"affinity\", \"limits\", \"priorityClass\"]"},"60":{"id":60,"text":"A secure supply chain infrastructure can verify the validity of its parts, or links. It lets users and developers show the chain of custody of its software components, or artifacts. It’s an active approach to mitigate security issues. The Sigstore project provides tools and infrastructure for this. It’s for validating the integrity of the artifact supply chain. Admission Controller uses cosign together with the fulcio and rekor infrastructure offered by the Sigstore project. Cluster operators can configure Admission Controller to only run policies signed by trusted entities. Policy developers can sign their policies and publish them in a registry. In the following sections, you need to install a few tools. These are so users can sign and verify OCI artifacts signatures. The examples show the use of cosign and kwctl utilities for signing and inspecting policies. To use GitHub to sign policies you need to install GitHub actions. Keyless signing uses the default fulcio and rekor instances provided by the Sigstore project. Check the Sigstore documentation for details on how to use your own infrastructure for this, if needed. Admission Controller recommends using Sigstore’s cosign utility to sign policies. This section shows a key-based method of signing policies. You need to generate a private-public key-pair for this. The generated keys help to verify if the signed artifacts came from the expected user. To generate this key-pair use this cosign generate-key-pair command: cosign generate-key-pair Resulting in a prompt to type and verify a password: Enter password for private key: ●●●●●●●● Enter password for private key again: ●●●●●●●● Private key written to cosign.key Public key written to cosign.pub Now you can use this key to sign policies. Don’t share the private key file, cosign.key. This is a secret file for use only by the key owner for signing policies. To sign a policy you can use cosign sign passing the --key command line argument with your private key file: cosign sign --key cosign.key ghcr.io/kubewarden/policies/user-group-psp:latest Resulting in a prompt for the password, for the specified private key: an error occurred: no provider found for that key reference, will try to load key from disk... Enter password for private key: ●●●●●●●● Pushing signature to: ghcr.io/kubewarden/policies/user-group-psp This command signs the policy by creating a new signature object. The signature object is then uploaded into the registry, along with the policy. Now the policy is ready to use in a Admission Controller installation using signature verification. The same policy can be signed multiple times, by the same user or different ones. These signatures are added to the signature object along with the original signature. For more information about how the signing process works, check out the Sigstore project documentation. Often policies are automatically built using CI/CD pipelines. This complicates the key generation process. This Sigstore keyless workflow is for these situations. Instead of using long-lived singing keys, the keyless workflow uses certificate authorities (CAs) and certificate chains. You link the generated, short-lived certificate key into a chain of trust. It’s done through an identity challenge to confirm the signer’s identity. The lifetime of the certificate key is long enough for the signing to occur. The identity challenge takes place by authenticating against an OpenID Connect (OIDC) provider. Sigstore’s Fulcio public infrastructure provides the chain of trust. Signing uses Sigstore’s cosign utility. $ cosign sign ghcr.io/kubewarden/policies/user-group-psp:latest cosign output Generating ephemeral keys... Retrieving signed certificate... Your browser will now be opened to: https://oauth2.sigstore.dev/auth/auth?access_type=online&client_id=sigstore&code_challenge=<REDACTED>&code_challenge_method=S256&nonce=<REDACTED>&redirect_uri=http%3A%2F%2Flocalhost%3A34021%2Fauth%2Fcallback&response_type=code&scope=openid+email&state=<REDACTED> client.go:196: root pinning is not supported in Spec 1.0.19 Successfully verified SCT... tlog entry created with index: 1819248 Pushing signature to: ghcr.io/kubewarden/policies/user-group-psp This signs the policy and pushes it to the repository. There are no keys generated as a byproduct. When using keyless signing, in a GitHub action, cosign doesn’t need the user to log in to an OIDC provider. A GitHub token is available during the execution of the GitHub workflow. It’s used to authenticate the user and generate the ephemeral keys. The signing process is the same used in the keyless mode. This is an example of how the Admission Controller project signs its policies: YAML describing Admission Controller policy signing # ... beginning of the workflow file ... jobs: build: name: Build container image runs-on: ubuntu-latest steps: # ... other steps building the container image ... - name: Login to GitHub Container Registry uses: docker/login-action@v1 with: registry: ghcr.io username: ${{ github.repository_owner }} password: ${{ inputs.GITHUB_TOKEN }} - name: Publish Wasm policy artifact to OCI registry with the 'latest' tag shell: bash if: ${{ startsWith(github.ref, 'refs/heads/') }} env: COSIGN_EXPERIMENTAL: 1 run: | set -ex echo Pushing policy to OCI container registry IMMUTABLE_REF=$(kwctl push -o json ${{ PATH_TO_BUILT_WASM_FILE }} ghcr.io/myorg/policies/my-great-policy:latest | jq -r .immutable_ref) echo Keyless signing of policy using cosign cosign sign ${IMMUTABLE_REF} # ... other build steps ... # ... remainder of the workflow file ... Policy developers can use the Kubewarden policy templates. They have GitHub actions to build, test, sign and publish policies. You can check the signature in a published policy with kwctl inspect. This shows the information about the policy and its signatures as shown below: kwctl inspect registry://ghcr.io/kubewarden/policies/us…​. $ kwctl inspect registry://ghcr.io/kubewarden/policies/user-group-psp:v0.2.0 Details title: psp-user-group description: Short description author: José Guilherme Vanz <jguilhermevanz@suse.com> url: https://github.com/kubewarden/user-group-psp-policy source: https://github.com/kubewarden/user-group-psp-policy license: Apache-2.0 mutating: true context aware: false execution mode: kubewarden-wapc protocol version: 1 Annotations io.kubewarden.kwctl 0.2.5-rc2 Rules ──────────────────── --- - apiGroups: - \"\" apiVersions: - v1 resources: - pods operations: - CREATE ──────────────────── Usage This policy enforce the user and group used in the container. Sigstore signatures Digest: sha256:026af67682a85d424e7d95db460171635f5c3957d67b53499bece912cc0413cc Media type: application/vnd.dev.cosign.simplesigning.v1+json Size: 258 Annotations dev.sigstore.cosign/certificate -----BEGIN CERTIFICATE----- MIIDRzCCAsygAwIBAgITbPUZlUFkkAHtbzc3rzC/3zXj1DAKBggqhkjOPQQDAzAq MRUwEwYDVQQKEwxzaWdzdG9yZS5kZXYxETAPBgNVBAMTCHNpZ3N0b3JlMB4XDTIy MDIyNTE2MzAwMloXDTIyMDIyNTE2NDAwMVowEzERMA8GA1UEChMIc2lnc3RvcmUw WTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAR/O5c6ZI5BzBweoEIam4uWu5fqzHx0 3PTCgfXyyvIjorz9wX08bsndkHdWfFObU+PztbxX78An43Yw9/fHtO93o4IB5jCC AeIwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMAwGA1UdEwEB /wQCMAAwHQYDVR0OBBYEFCP/v7NEJQglbDmyC5VMgnvhiuBUMB8GA1UdIwQYMBaA FFjAHl+RRaVmqXrMkKGTItAqxcX6MHgGA1UdEQRxMG+GbWh0dHBzOi8vZ2l0aHVi LmNvbS9rdWJld2FyZGVuL2dpdGh1Yi1hY3Rpb25zLy5naXRodWIvd29ya2Zsb3dz L3JldXNhYmxlLXJlbGVhc2UtcG9saWN5LXJ1c3QueW1sQHJlZnMvaGVhZHMvdjEw NgYKKwYBBAGDvzABAwQoMmJiMGQ4NjZjMzFmOGMyZTQ3NDMxMDI4M2ExNmFkMWFi NjBlZjA1YjAuBgorBgEEAYO/MAEFBCBrdWJld2FyZGVuL3VzZXItZ3JvdXAtcHNw LXBvbGljeTAcBgorBgEEAYO/MAEEBA5SZWxlYXNlIHBvbGljeTASBgorBgEEAYO/ MAECBARwdXNoMDkGCisGAQQBg78wAQEEK2h0dHBzOi8vdG9rZW4uYWN0aW9ucy5n aXRodWJ1c2VyY29udGVudC5jb20wHgYKKwYBBAGDvzABBgQQcmVmcy90YWdzL3Yw LjIuMDAKBggqhkjOPQQDAwNpADBmAjEAyGQbNCkOifStO7yCCfF8yXyc144ANn2x Ty92WYC0pTaVhviOED47fgD6TncKf+92AjEAjBfjLmCG/Mwrh8t+gfHJEAWWEc9Q +j9NR4wF66uABS/TTh5CYlrnIuqSD+GBHGwV -----END CERTIFICATE----- dev.sigstore.cosign/timestamp {\"signatures\":[{\"keyid\":\"b6710623a30c010738e64c5209d367df1c0a18cf90e6ab5292fb01680f83453d\",\"sig\":\"3046022100f666a7f4b3d85d8003f2c166e27827dfa0c4ab9282e9dab19485f4e702c61700022100dfe826e0edab5f80a40f08cc87b87777a4db30775d85684fe4950e797f2f565c\"}],\"signed\":{\"_type\":\"timestamp\",\"spec_version\":\"1.0\",\"version\":15,\"expires\":\"2022-03-08T19:14:05Z\",\"meta\":{\"snapshot.json\":{\"length\":1655,\"hashes\":{\"sha256\":\"36cf063d0717f6dc03e23027721adcd69b684d293956d3a1a7db7b0848f711d7\",\"sha512\":\"f90946d0a2dc58dae4505cfb91517a40299adf9e8719f52af187e2025aad69fcdeaeded271ec25db24869841c16fbe24f3fc56f56af8fdbb8808dccec4636b64\"},\"version\":15}}}} dev.sigstore.cosign/bundle {\"SignedEntryTimestamp\":\"MEUCIEfu4qR+HsexSDk5h2QXMduvoRCX10J+4CLQWtYw5VD6AiEAyYCEjvJdv2Sr5tZ4LApnddH/4v+CoV1QkuvbCQ3iIUM=\",\"Payload\":{\"body\":\"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIwMjZhZjY3NjgyYTg1ZDQyNGU3ZDk1ZGI0NjAxNzE2MzVmNWMzOTU3ZDY3YjUzNDk5YmVjZTkxMmNjMDQxM2NjIn19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FWUNJUUNXNWZRZ1BUUTdaTlNuRkhzbHJOTlFrS2dTSVFpOGNSMTU5UEExc0s4VGlRSWhBSndMOWJPcUJKbVduN1lLZG9Tem80c2xPZ2s4SkJCanFYZHNydDNyeVF0QiIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUlNla05EUVhONVowRjNTVUpCWjBsVVlsQlZXbXhWUm10clFVaDBZbnBqTTNKNlF5OHplbGhxTVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUY2UVhFS1RWSlZkMFYzV1VSV1VWRkxSWGQ0ZW1GWFpIcGtSemw1V2xNMWExcFlXWGhGVkVGUVFtZE9Wa0pCVFZSRFNFNXdXak5PTUdJelNteE5RalJZUkZSSmVRcE5SRWw1VGxSRk1rMTZRWGROYkc5WVJGUkplVTFFU1hsT1ZFVXlUa1JCZDAxV2IzZEZla1ZTVFVFNFIwRXhWVVZEYUUxSll6SnNibU16VW5aamJWVjNDbGRVUVZSQ1oyTnhhR3RxVDFCUlNVSkNaMmR4YUd0cVQxQlJUVUpDZDA1RFFVRlNMMDgxWXpaYVNUVkNla0ozWlc5RlNXRnROSFZYZFRWbWNYcEllREFLTTFCVVEyZG1XSGw1ZGtscWIzSjZPWGRZTURoaWMyNWthMGhrVjJaR1QySlZLMUI2ZEdKNFdEYzRRVzQwTTFsM09TOW1TSFJQT1ROdk5FbENOV3BEUXdwQlpVbDNSR2RaUkZaU01GQkJVVWd2UWtGUlJFRm5aVUZOUWsxSFFURlZaRXBSVVUxTlFXOUhRME56UjBGUlZVWkNkMDFFVFVGM1IwRXhWV1JGZDBWQ0NpOTNVVU5OUVVGM1NGRlpSRlpTTUU5Q1FsbEZSa05RTDNZM1RrVktVV2RzWWtSdGVVTTFWazFuYm5ab2FYVkNWVTFDT0VkQk1WVmtTWGRSV1UxQ1lVRUtSa1pxUVVoc0sxSlNZVlp0Y1ZoeVRXdExSMVJKZEVGeGVHTllOazFJWjBkQk1WVmtSVkZTZUUxSEswZGlWMmd3WkVoQ2VrOXBPSFphTW13d1lVaFdhUXBNYlU1MllsTTVjbVJYU214a01rWjVXa2RXZFV3eVpIQmtSMmd4V1dreGFGa3pVbkJpTWpWNlRIazFibUZZVW05a1YwbDJaREk1ZVdFeVduTmlNMlI2Q2t3elNteGtXRTVvV1cxNGJFeFlTbXhpUjFab1l6SlZkR05IT1hOaFYwNDFURmhLTVdNelVYVmxWekZ6VVVoS2JGcHVUWFpoUjFab1draE5kbVJxUlhjS1RtZFpTMHQzV1VKQ1FVZEVkbnBCUWtGM1VXOU5iVXBwVFVkUk5FNXFXbXBOZWtadFQwZE5lVnBVVVROT1JFMTRUVVJKTkUweVJYaE9iVVpyVFZkR2FRcE9ha0pzV21wQk1WbHFRWFZDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa05DY21SWFNteGtNa1o1V2tkV2RVd3pWbnBhV0VsMFdqTktkbVJZUVhSalNFNTNDa3hZUW5aaVIyeHFaVlJCWTBKbmIzSkNaMFZGUVZsUEwwMUJSVVZDUVRWVFdsZDRiRmxZVG14SlNFSjJZa2RzYW1WVVFWTkNaMjl5UW1kRlJVRlpUeThLVFVGRlEwSkJVbmRrV0U1dlRVUnJSME5wYzBkQlVWRkNaemM0ZDBGUlJVVkxNbWd3WkVoQ2VrOXBPSFprUnpseVdsYzBkVmxYVGpCaFZ6bDFZM2sxYmdwaFdGSnZaRmRLTVdNeVZubFpNamwxWkVkV2RXUkROV3BpTWpCM1NHZFpTMHQzV1VKQ1FVZEVkbnBCUWtKblVWRmpiVlp0WTNrNU1GbFhaSHBNTTFsM0NreHFTWFZOUkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPY0VGRVFtMUJha1ZCZVVkUllrNURhMDlwWmxOMFR6ZDVRME5tUmpoNVdIbGpNVFEwUVU1dU1uZ0tWSGs1TWxkWlF6QndWR0ZXYUhacFQwVkVORGRtWjBRMlZHNWpTMllyT1RKQmFrVkJha0ptYWt4dFEwY3ZUWGR5YURoMEsyZG1TRXBGUVZkWFJXTTVVUW9yYWpsT1VqUjNSalkyZFVGQ1V5OVVWR2cxUTFsc2NtNUpkWEZUUkN0SFFraEhkMVlLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89In19fX0=\",\"integratedTime\":1645806604,\"logIndex\":1506651,\"logID\":\"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d\"}} dev.sigstore.cosign/chain -----BEGIN CERTIFICATE----- MIIB9zCCAXygAwIBAgIUALZNAPFdxHPwjeDloDwyYChAO/4wCgYIKoZIzj0EAwMw KjEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MREwDwYDVQQDEwhzaWdzdG9yZTAeFw0y MTEwMDcxMzU2NTlaFw0zMTEwMDUxMzU2NThaMCoxFTATBgNVBAoTDHNpZ3N0b3Jl LmRldjERMA8GA1UEAxMIc2lnc3RvcmUwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAT7 XeFT4rb3PQGwS4IajtLk3/OlnpgangaBclYpsYBr5i+4ynB07ceb3LP0OIOZdxex X69c5iVuyJRQ+Hz05yi+UF3uBWAlHpiS5sh0+H2GHE7SXrk1EC5m1Tr19L9gg92j YzBhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRY wB5fkUWlZql6zJChkyLQKsXF+jAfBgNVHSMEGDAWgBRYwB5fkUWlZql6zJChkyLQ KsXF+jAKBggqhkjOPQQDAwNpADBmAjEAj1nHeXZp+13NWBNa+EDsDP8G1WWg1tCM WP/WHPqpaVo0jhsweNFZgSs0eE7wYI4qAjEA2WB9ot98sIkoF3vZYdd3/VtWB5b9 TNMea7Ix/stJ5TfcLLeABLE4BNJOsQ4vnBHJ -----END CERTIFICATE----- dev.cosignproject.cosign/signature MEYCIQCW5fQgPTQ7ZNSnFHslrNNQkKgSIQi8cR159PA1sK8TiQIhAJwL9bOqBJmWn7YKdoSzo4slOgk8JBBjqXdsrt3ryQtB You can check if a policy is correctly signed with cosign or kwctl. They have similar command line options for checking policy signatures. To check the signature binary with a key, use kwctl like this: $ kwctl verify -k cosign.pub ghcr.io/kubewarden/policies/user-group-psp:latest 2022-03-29T14:49:31.878180Z INFO kwctl::verify: Policy successfully verified Or cosign : $ cosign verify --key cosign.pub ghcr.io/kubewarden/policies/user-group-psp:latest Verification for ghcr.io/kubewarden/policies/user-group-psp:latest -- The following checks were performed on each of these signatures: - The cosign claims were validated - The signatures were verified against the specified public key - Any certificates were verified against the Fulcio roots. [{\"critical\":{\"identity\":{\"docker-reference\":\"ghcr.io/kubewarden/policies/user-group-psp\"},\"image\":{\"docker-manifest-digest\":\"sha256:af520a8ccee03811d426c48634b7007f1220c121cc23e14962bb64510585ce97\"},\"type\":\"cosign container image signature\"},\"optional\":null}] You can configure Admission Controller with a ConfigMap to only run trusted policies. The ConfigMap structure is described in Signature Configuration Reference. It’s used to verify a policy using kwctl. The ConfigMap should define allowable configurations under the verification-config field. For example, you want to run policies signed by the Kubewarden GitHub organization. Then a sample ConfigMap for this scenario would be: $ cat kubewarden_signatures.yaml $ cat kubewarden_signatures.yaml apiVersion: v1 allOf: - kind: githubAction owner: kubewarden # note that the data is stored under verification-config field $ kubectl create configmap my-signatures-configuration --from-file=verification-config=kubewarden_signatures.yaml $ kubectl get configmap -o yaml my-signatures-configuration apiVersion: v1 data: verification-config: | apiVersion: v1 allOf: - kind: githubAction owner: kubewarden kind: ConfigMap metadata: creationTimestamp: \"2022-03-29T18:27:20Z\" name: my-signatures-configuration namespace: default resourceVersion: \"10279\" uid: d53e1c56-1fee-45de-92f5-9bd73b8cead4 You can use kwctl scaffold verification-config to generate a default verification configuration file for the ConfigMap: $ kwctl scaffold verification-config > verification_config.yaml $ cat verification_config.yaml $ kwctl scaffold verification-config > verification_config.yaml $ cat verification_config.yaml # Default Kubewarden verification config # # With this config, the only valid policies are those signed by Kubewarden # infrastructure. # # This config can be saved to its default location (for this OS) with: # kwctl scaffold verification-config > /home/kubewarden/.config/kubewarden/verification-config.yml # # Providing a config in the default location enables Sigstore verification. # See https://docs.kubewarden.io for more Sigstore verification options. --- apiVersion: v1 allOf: - kind: githubAction owner: kubewarden repo: ~ annotations: ~ anyOf: ~ You can use this verification_config.yml to create the ConfigMap. $ kubectl create configmap my-signatures-configuration --from-file==verification_config.yaml configmap/my-signatures-configuration created Then we can inspect with get configmap. kubectl get configmap $ kubectl get configmap -o yaml my-signatures-configuration apiVersion: v1 data: verification-config: |+ # Default Kubewarden verification config # # With this config, the only valid policies are those signed by Kubewarden # infrastructure. # # This config can be saved to its default location (for this OS) with: # kwctl scaffold verification-config > /home/kubewarden/.config/kubewarden/verification-config.yml # # Providing a config in the default location enables Sigstore verification. # See https://docs.kubewarden.io for more Sigstore verification options. --- apiVersion: v1 allOf: - kind: githubAction owner: kubewarden repo: ~ annotations: ~ anyOf: ~ kind: ConfigMap metadata: creationTimestamp: \"2022-04-07T11:54:27Z\" name: my-signatures-configuration namespace: default resourceVersion: \"1317\" uid: 74dec846-7fcd-4b4b-8184-700c816f685a After creating the ConfigMap to store the signature requirements, you can configure a Policy Server. To start validating policy signatures by setting the ConfigMap name in the field verificationConfig (marked ➀). apiVersion: policies.kubewarden.io/v1alpha2 kind: PolicyServer metadata: name: default finalizers: - kubewarden spec: image: ghcr.io/kubewarden/policy-server:v0.2.7 serviceAccountName: policy-server replicas: 1 //highlight-next-l # name of the confimap with the signatures requirements verificationConfig: your_configmap (1) env: - name: KUBEWARDEN_ENABLE_METRICS value: \"1\" - name: KUBEWARDEN_LOG_FMT value: otlp - name: \"KUBEWARDEN_LOG_LEVEL\" value: \"info\" 1 verificationConfig If you deploy the default Policy Server using the kubewarden-defaults Helm chart then you configure this field by setting the ConfigMap name in the policyServer.verificationConfig value. Now, the PolicyServer rejects untrusted AdmissionPolicies and ClusterAdmissionPolicies by refusing to start. You need to remove the untrusted policy, or change the signatures requirement, for a running PolicyServer. You can validate signature requirements contained in a file. Here is an example: A file of signature requirements apiVersion: v1 allOf: (1) - kind: githubAction owner: kubewarden # mandatory annotations: env: prod anyOf: # at least `anyOf.minimumMatches` are required to match (2) minimumMatches: 2 # default is 1 signatures: - kind: pubKey owner: flavio # optional key: .... # mandatory annotations: # optional env: prod foo: bar - kind: pubKey owner: victor # optional key: .... # mandatory - kind: genericIssuer issuer: https://github.com/login/oauth subject: equal: alice@example.com - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: equal: https://github.com/flavio/policy-secure-pod-images/.github/workflows/release.yml@refs/heads/main - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: urlPrefix: https://github.com/flavio/ - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: urlPrefix: https://github.com/kubewarden # <- it will be post-fixed with `/` for security reasons - kind: githubAction owner: flavio # mandatory repo: policy1 # optional - kind: pubKey owner: alice # optional key: .... # mandatory 1 allOf 2 anyOf The configuration above contains the two highlighted sections, allOf and anyOf: allOf: the policy is trusted only if all signature requirements here are valid. anyOf: the policy is trusted if the minimumMatches criterion is met. Above, the minimumMatches field is 2. So, at least two of the signature requirements must be met. The default value for minimumMatches field is 1. All the signatures requirements from allOf and the minimum number from anyOf must be met. To check a policy is signed with the correct public key, you specify the key data and the owner of the key. In this example, you set kind, to pubKey and the key has the public key. The owner field is optional, but can be useful to clarify who owns the key. - kind: pubKey owner: bob # optional key: | -----BEGIN PUBLIC KEY----- MBFKHFDGHKIJH0CAQYIKoZIzj0DAQcDQgAEX0HFTtCfTtPmkx5p1RbDE6HJSGAVD BVDF6SKFSF87AASUspkQsN3FO4iyWodCy5j3o0CdIJD/KJHDJFHDFIu6sA== -----END PUBLIC KEY----- A policy signed in keyless mode doesn’t have a public key to verify. You can still verify the policy with the OIDC data used during the signing process. For that, it’s necessary to define the signature validation as genericIssuer. It’s possible to verify information from the signature: issuer(mandatory): This matches the Issuer attribute in the certificate generated by Fulcio. This shows the OIDC used to sign the policy. subject: Field used to match the Subject attribute in Fulcio’s certificate. The Subject (Fulcio) field contains the user used to authenticate against the OIDC provider. The verification field, subject, can have one of two sub fields: equal: The Subject (Fulcio) from the certificate must be equal to the value in the signature validation; urlPrefix: The certificate’s Subject (Fulcio) field value must be prefixed by the value defined in the signature validation. Both the cosign verify and the kwctl inspect can show information about keyless signatures. For example, this configuration means the policy must have a keyless signature from Alice using the GitHub OIDC: - kind: genericIssuer issuer: https://github.com/login/oauth subject: equal: alice@example.com This configuration needs the policy to be signed in GitHub actions, from a repository owned by the GitHub user flavio: - kind: genericIssuer issuer: https://token.actions.githubusercontent.com subject: urlPrefix: https://github.com/flavio The \"kind\", githubAction is to validate policies signed in GitHub Actions. You can do this with the genericIssuer kind as well. To simplify the signature requirement process, use two extra fields for githubAction: owner (mandatory): GitHub ID of the user or organization to trust repo: the name of the repository to trust For example, the last snippet, using genericIssuer, could be rewritten as: - kind: githubAction owner: flavio All signature types can have other optional validation fields, annotations. These fields are key/value data added during the signing process. With Admission Controller, you can check the policy signature is by trusted users and that they have specific annotations. The next validation checks 2 conditions for the policy: that it’s signed with a specific key it has a production environment annotation - kind: pubKey key: | -----BEGIN PUBLIC KEY----- MBFKHFDGHKIJH0CAQYIKoZIzj0DAQcDQgAEX0HFTtCfTtPmkx5p1RbDE6HJSGAVD BVDF6SKFSF87AASUspkQsN3FO4iyWodCy5j3o0CdIJD/KJHDJFHDFIu6sA== -----END PUBLIC KEY----- annotations: environment: production You can test if a policy passes verification using the verification config file. Use the --verification-config-path flag of the kwctl verify command $ cat signatures_requirements.yaml apiVersion: v1 allOf: - kind: pubKey key: | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5Q+cN1Jj2S7N05J4AXnqwP2DyzSg Mc+raYce2Wthrd30MSgFtoh5ADAkCd/nML2Nx8UD9KBuASRb0gG5jXqgMQ== -----END PUBLIC KEY----- $ kwctl verify --verification-config-path signatures_requirements.yaml ghcr.io/kubewarden/policies/user-group-psp:latest 2022-03-29T17:34:37.847169Z INFO kwctl::verify: Policy successfully verified This last example tests if a given policy came from the Kubewarden organization: $ cat kubewarden_signatures.yaml apiVersion: v1 allOf: - kind: githubAction owner: kubewarden $ kwctl verify --verification-config-path kubewarden_signatures.yaml ghcr.io/kubewarden/policies/user-group-psp:latest 2022-03-29T18:07:39.062292Z INFO kwctl::verify: Policy successfully verified","title":"Secure supply chain","component":"admission-controller","version":"1.29","name":"secure-supply-chain","url":"/admission-controller/1.29/en/howtos/security-hardening/secure-supply-chain.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Signing policies","hash":"_signing_policies","id":2},{"text":"Keyless signing","hash":"_keyless_signing","id":3},{"text":"How to sign artifacts in GitHub workflows","hash":"_how_to_sign_artifacts_in_github_workflows","id":4},{"text":"Listing policy signatures","hash":"_listing_policy_signatures","id":5},{"text":"Verifying policies","hash":"_verifying_policies","id":6},{"text":"Configuring the policy server to check policy signatures","hash":"_configuring_the_policy_server_to_check_policy_signatures","id":7},{"text":"Signature configuration reference","hash":"_signature_configuration_reference","id":8},{"text":"Signature validation","hash":"_signature_validation","id":9},{"text":"Public key validation","hash":"_public_key_validation","id":10},{"text":"Keyless signature validation","hash":"_keyless_signature_validation","id":11},{"text":"GitHub actions signature verification","hash":"_github_actions_signature_verification","id":12},{"text":"Signature annotations validation","hash":"_signature_annotations_validation","id":13},{"text":"Using a signature verification configuration file to check a policy OCI artifact","hash":"_using_a_signature_verification_configuration_file_to_check_a_policy_oci_artifact","id":14}],"keyword":"[\"kubewarden\", \"kubernetes\", \"secure supply chain\", \"infrastructure\"]"},"61":{"id":61,"text":"Admission Controller strives to be secure with little configuration. In this section and its subpages, you can find hardening tips (with their trade-offs) to secure Admission Controller itself. Please refer to the threat model for more information. Operators can obtain a secure deployment by installing all the Kubewarden Helm charts. It’s recommended to install the kubewarden-defaults Helm chart and enable its recommended policies with: helm install --wait -n kubewarden kubewarden-defaults kubewarden/kubewarden-defaults \\ --set recommendedPolicies.enabled=True \\ --set recommendedPolicies.defaultPolicyMode=protect This provides a default PolicyServer and default policies, in protect mode, to ensure the Admission Controller stack is safe from other workloads. Refer to the Verifying Admission Controller tutorial. Admission Controller describes RBAC configurations in different Explanations sections. Users can fine-tune the needed permissions for the Audit Scanner feature, as well as per Policy Server Service Account for the context-aware feature. To view all Roles: kubectl get clusterroles,roles -A | grep kubewarden For context-aware policies, operators specify fine-grained permissions per policy under its spec.contextAwareResources, and those work in conjunction with the Service Account configured for the Policy Server where the policy runs. By default, Admission Controller excludes specific Namespaces from Admission Controller coverage. This is done to simplify first-time use and interoperability with other workloads. Security-conscious operators can tune these Namespaces list via the .global.skipNamespaces value for both the kubewarden-controller and kubewarden-defaults Helm charts. From 1.23, Admission Controller’s stack is able to run in a Namespace where the restricted` Pod Security Standards are in place, with current Pod hardening best practices. To do that, you need to add the pod-security.kubernetes.io/enforce: restricted label to the Admission Controller deployment Namespace. kubectl label namespace kubewarden pod-security.kubernetes.io/enforce=restricted --overwrite See the official documentation of Kubernetes' Pod Security Admission for more details. The kubewarden-controller Helm chart configures the SecurityContexts and exposes them in its values.yaml. The kubewarden-defaults Helm chart allows for configuring the default Policy Server .spec.securityContexts under .Values.policyServer.securityContexts. For Policy Servers managed by operators, you can configure them via their spec.securityContexts.","title":"Security hardening","component":"admission-controller","version":"1.29","name":"security-hardening","url":"/admission-controller/1.29/en/howtos/security-hardening/security-hardening.html","titles":[{"text":"kubewarden-defaults Helm chart","hash":"_kubewarden_defaults_helm_chart","id":1},{"text":"Verifying Admission Controller artifacts","hash":"_verifying_admission_controller_artifacts","id":2},{"text":"RBAC","hash":"_rbac","id":3},{"text":"Per-policy permissions","hash":"_per_policy_permissions","id":4},{"text":"Workload coverage","hash":"_workload_coverage","id":5},{"text":"Pod Security Admission","hash":"_pod_security_admission","id":6},{"text":"SecurityContexts","hash":"_securitycontexts","id":7}],"keyword":"kubewarden, kubernetes, security"},"62":{"id":62,"text":"This guide shows you how to enable mutual Transport Layer Security (mTLS) for Admission Controller stack webhooks when using K3s as your Kubernetes distribution. For more information on how to harden the webhooks, refer to the reference page. Before installing K3s, you need to create a certificate authority (CA) and a client certificate. You use to secure the communication between the Admission Controller webhooks and the Kubernetes API server. As a first step, create the /etc/rancher/k3s/admission/certs directory: sudo mkdir -p /etc/rancher/k3s/admission/certs As root user, change directory to the /etc/rancher/k3s/admission/certs directory and create all needed certificates: export FQDN=mtls.kubewarden.io # Create openssl config file cat > openssl.cnf <<EOL [ req ] default_keyfile = rootCA.key distinguished_name = req_distinguished_name x509_extensions = v3_ca string_mask = utf8only [ req_distinguished_name ] countryName = Country Name (2 letter code) countryName_default = US stateOrProvinceName = State or Province Name (full name) localityName = Locality Name (eg, city) organizationName = Organization Name (eg, company) commonName = Common Name (eg, your domain or your CA name) [ v3_ca ] subjectKeyIdentifier = hash authorityKeyIdentifier = keyid:always,issuer basicConstraints = critical, CA:true, pathlen:1 keyUsage = critical, keyCertSign, cRLSign EOL # Create CA openssl req -nodes -batch -x509 -sha256 -days 3650 -newkey rsa:4096 -keyout rootCA.key -out rootCA.crt \\ -config openssl.cnf # Create CSR openssl req -nodes -batch -newkey rsa:4096 -keyout client.key -out client.csr \\ -addext \"subjectAltName = DNS:$FQDN\" -config openssl.cnf # Create CRT openssl x509 -req -CA rootCA.crt -CAkey rootCA.key -in client.csr -out client.crt -days 3650 -CAcreateserial \\ -extfile <(echo \"subjectAltName=DNS:$FQDN\") # Print CRT openssl x509 -text -noout -in client.crt This creates the following files: client.crt client.csr client.key rootCA.crt rootCA.key rootCA.srl Create the /etc/rancher/k3s/admission/admission.yaml file with the following content: # /etc/rancher/k3s/admission/admission.yaml apiVersion: apiserver.config.k8s.io/v1 kind: AdmissionConfiguration plugins: - name: ValidatingAdmissionWebhook configuration: apiVersion: apiserver.config.k8s.io/v1 kind: WebhookAdmissionConfiguration kubeConfigFile: \"/etc/rancher/k3s/admission/kubeconfig\" - name: MutatingAdmissionWebhook configuration: apiVersion: apiserver.config.k8s.io/v1 kind: WebhookAdmissionConfiguration kubeConfigFile: \"/etc/rancher/k3s/admission/kubeconfig\" Finally, create a kubeconfig file at /etc/rancher/k3s/admission/kubeconfig: # /etc/rancher/admission/kubeconfig apiVersion: v1 kind: Config users: - name: \"*.kubewarden.svc\" # namespace where the kubewarden stack is deployed user: client-certificate: /etc/rancher/k3s/admission/certs/client.crt client-key: /etc/rancher/k3s/admission/certs/client.key Create a K3s configuration file at /etc/rancher/k3s/config.yaml: # /etc/rancher/k3s/config.yaml kube-apiserver-arg: - admission-control-config-file=/etc/rancher/k3s/admission/admission.yaml Install K3s using the following command: curl -sfL https://get.k3s.io | sh - Wait for the installation to complete. The certificate of the root CA, that issued the Kubernetes client certificate, needs to be available to the Kubewarden stack. The root CA is available at /etc/rancher/k3s/admission/certs/rootCA.crt on the Kubernetes node. You need its content in a ConfigMap under the kubewarden namespace. You store the contents of the rootCA.crt file in the key named client-ca.crt. First, create the kubewarden namespace: kubectl create namespace kubewarden Then create the ConfigMap in it. The following command, run on the Kubernetes node, does that: kubectl create configmap -n kubewarden api-server-mtls \\ --from-file=client-ca.crt=/etc/rancher/k3s/admission/certs/rootCA.crt The name of the resulting ConfigMap is api-server-mtls. Install the Kubewarden stack as described in the quickstart guide. Follow all the steps, but when installing the kubewarden-controller Helm chart, make sure to enable the following values: mTLS.enable: must be true. mTLS.configMapName: must the name of the previously created ConfigMap. The ConfigMap name is api-server-mtls. The Helm command to install the kubewarden-controller is: helm install --wait -n kubewarden kubewarden-controller kubewarden/kubewarden-controller \\ --set mTLS.enable=true \\ --set mTLS.configMapName=api-server-mtls Once this command finishes, mTLS secures the installation of the Admission Controller stack and its webhooks.","title":"Secure webhooks with mutual TLS with K3s","component":"admission-controller","version":"1.29","name":"webhook-mtls","url":"/admission-controller/1.29/en/howtos/security-hardening/webhook-mtls.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Create a root CA and the client certificate","hash":"_create_a_root_ca_and_the_client_certificate","id":2},{"text":"Create the Kubernetes configuration file","hash":"_create_the_kubernetes_configuration_file","id":3},{"text":"Create a K3s configuration file","hash":"_create_a_k3s_configuration_file","id":4},{"text":"Install K3s","hash":"_install_k3s","id":5},{"text":"Install the Kubewarden stack","hash":"_install_the_kubewarden_stack","id":6},{"text":"Prerequisites","hash":"_prerequisites_2","id":7},{"text":"Install the Kubewarden stack","hash":"_install_the_kubewarden_stack_2","id":8}],"keyword":"kubewarden, kubernetes, security"},"63":{"id":63,"text":"OpenTelemetry is a Cloud Native Computing Foundation (CNCF) framework for observability. It enables your microservices to provide metrics, logs and traces. Admission Controller’s components, using the OpenTelemetry SDK, report data to an OpenTelemetry collector — called the agent. This guide explains how to deploy the OpenTelemetry collector in sidecar mode by using the official Kubernetes Helm chart. This is a simple deployment pattern using OpenTelemetry. It’s final setup looks like this: Each Pod of the Admission Controller stack (Policy Server, Controller) has an OpenTelemetry sidecar. The sidecar receives tracing and monitoring information from the Admission Controller component via the OpenTelemetry Protocol (OTLP) The OpenTelemetry collector: Sends the trace events to a central Jaeger instance Exposes Prometheus metrics on a specific port The Admission Controller Helm chart doesn’t cover all the possible deployment scenarios of the OpenTelemetry collector. It’s also possible to configure Admission Controller to send data to an OpenTelemetry collector. Documentation for that scenario is in the custom OpenTelemetry guide. You first deploy OpenTelemetry in a Kubernetes cluster, so you can use it in the following sections addressing specifically tracing and metrics. This section has step-by-step instructions for creating a Kubernetes cluster with an ingress controller enabled. Feel free to skip this section if you already have a Kubernetes cluster where you can define Ingress resources. You can create a Kubernetes cluster for testing using minikube. Minikube has many backends, for this case you can use the kvm2 driver which relies on libvirt. Assuming libvirtd is correctly running on your machine, issue the following command: minikube start --driver=kvm2 The command produces an output similar to the following: $ minikube start --driver=kvm2 😄 minikube v1.23.2 on Opensuse-Leap 15.3 ✨ Using the kvm2 driver based on user configuration 👍 Starting control plane node minikube in cluster minikube 🔥 Creating kvm2 VM (CPUs=2, Memory=6000MB, Disk=20000MB) ... 🐳 Preparing Kubernetes v1.22.2 on Docker 20.10.8 ... ▪ Generating certificates and keys ... ▪ Booting up control plane ... ▪ Configuring RBAC rules ... 🔎 Verifying Kubernetes components... ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5 🌟 Enabled addons: storage-provisioner, default-storageclass 🏄 Done! kubectl is now configured to use \"minikube\" cluster and \"default\" namespace by default Now you need to enable the Ingress add-on: minikube addons enable ingress This produces an output similar to the following one: $ minikube addons enable ingress ▪ Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.0 ▪ Using image registry.k8s.io/ingress-nginx/controller:v1.0.0-beta.3 ▪ Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.0 🔎 Verifying ingress addon... 🌟 The 'ingress' addon is enabled You use the OpenTelemetry Operator to manage the automatic injection of the OpenTelemetry Collector sidecar into the PolicyServer pod. The OpenTelemetry Operator requires installation of cert-manager in the cluster. At the time of writing (2022-06-21), only specific versions of OpenTelemetry are compatible with Cert Manager, see the compat chart. You should install the latest cert-manager Helm chart: At the time of writing (2024-07-17) the latest cert-manager chart version is v1.15.1 helm repo add jetstack https://charts.jetstack.io helm install --wait \\ --namespace cert-manager \\ --create-namespace \\ --set crds.enabled=true \\ --version 1.15.1 \\ cert-manager jetstack/cert-manager Once cert-manager is running, you can install the OpenTelemetry operator Helm chart: At the time of writing (2024-11-11) the latest OpenTelemetry operator chart version is 0.65.0 helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts helm install --wait \\ --namespace open-telemetry \\ --create-namespace \\ --version 0.65.0 \\ --set \"manager.collectorImage.repository=otel/opentelemetry-collector-contrib\" \\ my-opentelemetry-operator open-telemetry/opentelemetry-operator You can now move to the next chapters to enable application metrics (via Prometheus integration) and application tracing (via Jaeger integration).","title":"Open Telemetry quick start","component":"admission-controller","version":"1.29","name":"10-opentelemetry-qs","url":"/admission-controller/1.29/en/howtos/telemetry/10-opentelemetry-qs.html","titles":[{"text":"Setting up a Kubernetes cluster","hash":"_setting_up_a_kubernetes_cluster","id":1},{"text":"Install OpenTelemetry","hash":"install-opentelemetry","id":2},{"text":"OpenTelemetry integration","hash":"_opentelemetry_integration","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"opentelemetry\", \"open telemetry\", \"quickstart\"]"},"64":{"id":64,"text":"This section shows how to enable tracing support for Policy Server. Before continuing, make sure you completed the previous OpenTelemetry section of this documentation. It’s required for this section to work correctly. Tracing lets you collect fine grained details about policy evaluations. It can be a useful tool for debugging issues in your Admission Controller deployment and policies. You use Jaeger — used to receive, store and visualize trace events. You use the Jaeger Operator to manage all the different Jaeger components. You can install the Jaeger Operator using Helm charts. At the time of writing (2022-06-21), only specific versions of Jaeger are compatible with Cert Manager, see the compatibility chart. To install the Helm Chart: helm repo add jaegertracing https://jaegertracing.github.io/helm-charts helm upgrade -i --wait \\ --namespace jaeger \\ --create-namespace \\ --version 2.49.0 \\ jaeger-operator jaegertracing/jaeger-operator \\ --set rbac.clusterRole=true This is not suitable for production deployment. You should consult read Jaeger’s official documentation. To create a Jaeger resource: kubectl apply -f - <<EOF apiVersion: jaegertracing.io/v1 kind: Jaeger metadata: name: my-open-telemetry namespace: jaeger spec: ingress: enabled: true annotations: kubernetes.io/ingress.class: nginx EOF After creation of Jaeger Operator resources, you have a Service under my-open-telemetry-collector.jaeger.svc.cluster.local. The Jaeger Query UI is reachable at the following address: echo http://`minikube ip` Now you can proceed to the deployment of Admission Controller in the usual way. The cert-manager is a requirement of OpenTelemetry, but you have already installed it in a previous section of this documentation. As a first step, you add the Helm repository that contains Admission Controller: helm repo add kubewarden https://charts.kubewarden.io Then you install the Custom Resource Definitions (CRDs) defined by Admission Controller: helm install --wait \\ --namespace kubewarden \\ --create-namespace \\ kubewarden-crds kubewarden/kubewarden-crds Now you can deploy the rest of the Admission Controller stack. The official kubewarden-defaults helm chart creates a PolicyServer named default. You want this PolicyServer instance to have tracing enabled. To do that, you need to specify some extra values for the kubewarden-controller chart. You should create a values.yaml file with the following contents: telemetry: mode: sidecar tracing: True sidecar: tracing: jaeger: endpoint: \"my-open-telemetry-collector.jaeger.svc.cluster.local:4317\" tls: insecure: true For simplicity, there is no encryption of the communication between the OpenTelemetry collector and the Jaeger endpoint. Again, this is unsuitable for a production deployment. Consult Jaeger’s official documentation. Then you can proceed with the installation of the helm charts: helm install --wait --namespace kubewarden --create-namespace \\ --values values.yaml \\ kubewarden-controller kubewarden/kubewarden-controller helm install --wait --namespace kubewarden --create-namespace \\ kubewarden-defaults kubewarden/kubewarden-defaults This creates the default instance of PolicyServer: kubectl get policyservers.policies.kubewarden.io NAME AGE default 3m7s Looking closer at the Pod running the PolicyServer instance, you can see it has two containers in it. The policy-server and the OpenTelemetry Collector sidecar otc-container. You start by deploying the safe-labels policy. You want the policy enforced only in Namespaces that have a label environment with a value of production. To a Namespace that has such a label: kubectl apply -f - <<EOF apiVersion: v1 kind: Namespace metadata: name: team-alpha-prod labels: environment: production EOF Next, you can define a ClusterAdmissionPolicy: kubectl apply -f - <<EOF apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: safe-labels spec: module: registry://ghcr.io/kubewarden/policies/safe-labels:v0.1.6 settings: mandatory_labels: - owner rules: - apiGroups: - apps apiVersions: - v1 resources: - deployments operations: - CREATE - UPDATE namespaceSelector: matchExpressions: - key: environment operator: In values: [\"production\"] mutating: false EOF You need to wait for the policy to become active: kubectl wait --for=condition=PolicyActive clusteradmissionpolicy/safe-labels Once the policy is active, you can try it: kubectl apply -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment namespace: team-alpha-prod labels: owner: octocat spec: selector: matchLabels: app: nginx replicas: 0 template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:latest ports: - containerPort: 80 EOF The policy permits the creation of this Deployment object as it doesn’t violate the policy. The policy blocks this Deployment object: kubectl apply -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment-without-labels namespace: team-alpha-prod spec: selector: matchLabels: app: nginx replicas: 0 template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:latest ports: - containerPort: 80 EOF The policy isn’t enforced in another Namespace. This command creates a new Namespace called team-alpha-staging: kubectl apply -f - <<EOF apiVersion: v1 kind: Namespace metadata: name: team-alpha-staging labels: environment: staging EOF The policy permits the creation of a Deployment resource, without any labels, in the team-alpha-staging Namespace: kubectl apply -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment-without-labels namespace: team-alpha-staging spec: selector: matchLabels: app: nginx replicas: 0 template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:latest ports: - containerPort: 80 EOF As expected, this resource is successfully created. You can see the trace events sent by the PolicyServer instance to Jaeger, as there is a new service kubewarden-policy-server listed in the UI: The Jaeger collector is receiving the traces generated by your PolicyServer. To access the Jaeger UI, you can create an ingress or use kubectl -n jaeger port-forward service/my-open-telemetry-query 16686 then go to http://localhost:16686.","title":"Tracing quickstart","component":"admission-controller","version":"1.29","name":"20-tracing-qs","url":"/admission-controller/1.29/en/howtos/telemetry/20-tracing-qs.html","titles":[{"text":"Install Jaeger","hash":"_install_jaeger","id":1},{"text":"Install Admission Controller","hash":"_install_admission_controller","id":2},{"text":"Enforcing a policy","hash":"_enforcing_a_policy","id":3},{"text":"Exploring the Jaeger UI","hash":"_exploring_the_jaeger_ui","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"tracing\", \"quickstart\"]"},"65":{"id":65,"text":"This section documents how to enable metrics reporting on the Policy Server. Before continuing, make sure you completed the previous OpenTelemetry section of this book. You need it for this section to work correctly. You use Prometheus to collect metrics exposed by the Policy Server. You use Prometheus Operator, that lets us define Prometheus' targets. There are many ways to install and set up Prometheus. For ease of deployment, you should use the Prometheus community Helm chart. The Prometheus Operator deployed with this Helm chart uses Service Monitors, to define which services Prometheus monitors. In your case, you are adding a ServiceMonitor targeting the kubewarden namespace for services that match labels app=kubewarden-policy-server-default and app.kubernetes.io/name: kubewarden-controller. This configures the Prometheus Operator to inspect which Kubernetes Endpoints belong to services matching these conditions. You can create the two ServiceMonitors named kubewarden-controller and kubewarden-policy-server for use by the default Prometheus instance installed by the Helm chart. To do that, you should create the following values file: cat <<EOF > kube-prometheus-stack-values.yaml prometheus: additionalServiceMonitors: - name: kubewarden selector: matchLabels: app: kubewarden-policy-server-default namespaceSelector: matchNames: - kubewarden endpoints: - port: metrics interval: 10s - name: kubewarden-controller selector: matchLabels: app.kubernetes.io/name: kubewarden-controller namespaceSelector: matchNames: - kubewarden endpoints: - port: metrics interval: 10s EOF You should install the Prometheus stack Helm Chart: At the time of writing (2023-11-17) the latest chart version is 51.5.3 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm install --wait --create-namespace \\ --namespace prometheus \\ --version 51.5.3 \\ --values kube-prometheus-stack-values.yaml \\ prometheus prometheus-community/kube-prometheus-stack You can now install Admission Controller, in the recommended way with Helm charts. The cert-manager is a requirement of OpenTelemetry, but you have already installed it in a previous section of this documentation. First, you should add the Helm repository that contains Admission Controller: helm repo add kubewarden https://charts.kubewarden.io Then you install the Custom Resource Definitions (CRDs) defined by Admission Controller: helm install --wait \\ --namespace kubewarden --create-namespace \\ kubewarden-crds kubewarden/kubewarden-crds Now you can deploy the rest of the Admission Controller stack. The official Helm chart creates a PolicyServer named default. You should configure the Helm chart so that you have metrics enabled in Admission Controller. The kubewarden-values.yaml file should have the following contents: telemetry: mode: sidecar metrics: True sidecar: metrics: port: 8080 Now, install the Helm charts: helm install --wait \\ --namespace kubewarden \\ --create-namespace \\ --values kubewarden-values.yaml \\ kubewarden-controller kubewarden/kubewarden-controller helm install --wait \\ --namespace kubewarden \\ --create-namespace \\ kubewarden-defaults kubewarden/kubewarden-defaults \\ --set recommendedPolicies.enabled=True \\ --set recommendedPolicies.defaultPolicyMode=monitor This creates the default instance of PolicyServer: kubectl get policyservers.policies.kubewarden.io NAME AGE default 3m7s By default, this policy server doesn’t have metrics enabled. Prometheus exposes a UI that you can use to inspect metrics exposed by different components within your Kubernetes cluster. You can forward the Prometheus port so you can access it. kubectl port-forward -n prometheus --address 0.0.0.0 svc/prometheus-operated 9090 Now, you can visit Prometheus on port 9090 and perform a query, for example: kubewarden_policy_evaluations_total. You can see that the number of evaluations grows over time as more requests go through the policy. You can forward the Grafana service so you can access it. kubectl port-forward -n prometheus --address 0.0.0.0 svc/prometheus-grafana 8080:80 You can now login with the default username admin and password prom-operator. Admission Controller has a Grafana dashboard with basic metrics giving an overview about how Admission Controller behaves in the cluster. This dashboard is available in the GitHub releases of the Admission Controller policy-server repository as a JSON file or at the Grafana website. To import the dashboard into your environment, you can download the JSON file from the Grafana website or the repository: curl https://github.com/kubewarden/policy-server/releases/latest/download/kubewarden-dashboard.json Once you have the file you should access the Grafana dashboard and import it. Visit /dashboard/import in the Grafana dashboard and follow these steps: Copy and paste the JSON file contents into the Import via panel json box in the Grafana UI. Click the Load button. Choose Prometheus as the source. Click the Import button. Another option is import it directly from the grafana.com website. For this: Copy the dashboard ID from the dashboard page, Paste it into the Import via grafana.com field Click the load button. After importing the dashboard, define the Prometheus data source to use and finish the import process. The Grafana dashboard has panes showing the state of all policies managed by Admission Controller. It also has policy-specific panels. You can obtain detailed metrics for a specific policy by changing the value of the policy_name variable to match the required policy’s name. You should be able to see a dashboard similar to this:","title":"Metrics quickstart","component":"admission-controller","version":"1.29","name":"30-metrics-qs","url":"/admission-controller/1.29/en/howtos/telemetry/30-metrics-qs.html","titles":[{"text":"Install Prometheus","hash":"_install_prometheus","id":1},{"text":"Install Admission Controller","hash":"_install_admission_controller","id":2},{"text":"Accessing Prometheus","hash":"_accessing_prometheus","id":3},{"text":"Accessing Grafana","hash":"_accessing_grafana","id":4},{"text":"Using the Admission Controller Grafana dashboard","hash":"_using_the_admission_controller_grafana_dashboard","id":5}],"keyword":"[\"kubewarden\", \"kubernetes\", \"metrics quickstart\"]"},"66":{"id":66,"text":"This guide explains how to configure Admission Controller to send telemetry data to an OpenTelemetry collector already deployed on the cluster. You should deploy only one instance of the OpenTelemetry Collector in the cluster. First, begin by installing the dependencies of OpenTelemetry Collector. You need encrypted communication between the Admission Controller components and the collector. You can use cert-manager to manage all the certificates required for secure communication. OpenTelemetry Collector traces get sent to a Jaeger instance. The Admission Controller stack sends metrics to the OpenTelemetry Collector. This one exposes the metrics as a Prometheus endpoint. The metrics are then collected by a Prometheus instance and stored in its database. The same Prometheus instance also exposes a UI to view and use the metrics. Resources you create get defined in the kubewarden Namespace, or expect its existence. Due to that, you should begin by creating the Namespace: kubectl create namespace kubewarden You install cert-manager and OpenTelemetry operator in this way: helm repo add jetstack https://charts.jetstack.io helm install --wait \\ --namespace cert-manager \\ --create-namespace \\ --set crds.enabled=true \\ --version 1.15.1 \\ cert-manager jetstack/cert-manager helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts helm install --wait \\ --namespace open-telemetry \\ --create-namespace \\ --version 0.65.0 \\ --set \"manager.collectorImage.repository=otel/opentelemetry-collector-contrib\" \\ my-opentelemetry-operator open-telemetry/opentelemetry-operator You setup communication between Admission Controller components and the OpenTelemetry Collector using mTLS. To do that, you need to create the whole Public Key Infrastructure (PKI): # pki.yaml file apiVersion: cert-manager.io/v1 kind: Certificate metadata: name: my-client-certificate namespace: kubewarden spec: dnsNames: - kubewarden.kubewarden.svc - kubewarden.kubewarden.svc.cluster.local issuerRef: kind: Issuer name: my-selfsigned-issuer secretName: my-client-cert --- apiVersion: cert-manager.io/v1 kind: Certificate metadata: name: my-certificate namespace: kubewarden spec: dnsNames: - my-collector-collector.kubewarden.svc - my-collector-collector.kubewarden.svc.cluster.local issuerRef: kind: Issuer name: my-selfsigned-issuer secretName: my-server-cert --- apiVersion: cert-manager.io/v1 kind: Issuer metadata: name: my-selfsigned-issuer namespace: kubewarden spec: selfSigned: {} Apply the manifest: kubectl apply -f pki.yaml After that, you install Jaeger to store and visualize trace events. helm repo add jaegertracing https://jaegertracing.github.io/helm-charts helm upgrade -i --wait \\ --namespace jaeger \\ --create-namespace \\ --version 2.49.0 \\ jaeger-operator jaegertracing/jaeger-operator \\ --set rbac.clusterRole=true kubectl apply -f - <<EOF apiVersion: jaegertracing.io/v1 kind: Jaeger metadata: name: my-open-telemetry namespace: jaeger spec: ingress: enabled: true annotations: kubernetes.io/ingress.class: nginx EOF Now you install Prometheus to store and visualize metrics. cat <<EOF > kube-prometheus-stack-values.yaml prometheus: additionalServiceMonitors: - name: kubewarden selector: matchLabels: app.kubernetes.io/instance: kubewarden.my-collector namespaceSelector: matchNames: - kubewarden endpoints: - port: prometheus interval: 10s EOF helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm install --wait --create-namespace \\ --namespace prometheus \\ --version 51.5.3 \\ --values kube-prometheus-stack-values.yaml \\ prometheus prometheus-community/kube-prometheus-stack The Prometheus service monitor obtains the Admission Controller metrics by scraping the OpenTelemetry collector running in the kubewarden Namespace. Now you can deploy a custom OpenTelemetry Collector in the kubewarden Namespace. # otel-collector.yaml file apiVersion: opentelemetry.io/v1beta1 kind: OpenTelemetryCollector metadata: name: my-collector namespace: kubewarden spec: mode: deployment # This configuration is omittable. volumes: - name: server-certificate secret: secretName: my-server-cert - name: client-certificate secret: secretName: my-client-cert volumeMounts: - name: server-certificate mountPath: /tmp/etc/ssl/certs/my-server-cert readOnly: true - name: client-certificate mountPath: /tmp/etc/ssl/certs/my-client-cert readOnly: true config: receivers: otlp: protocols: grpc: tls: cert_file: /tmp/etc/ssl/certs/my-server-cert/tls.crt key_file: /tmp/etc/ssl/certs/my-server-cert/tls.key client_ca_file: /tmp/etc/ssl/certs/my-client-cert/ca.crt processors: {} exporters: debug: verbosity: normal prometheus: endpoint: \":8080\" otlp/jaeger: endpoint: \"my-open-telemetry-collector.jaeger.svc.cluster.local:4317\" tls: insecure: true service: pipelines: metrics: receivers: [otlp] processors: [] exporters: [debug, prometheus] traces: receivers: [otlp] processors: [] exporters: [debug, otlp/jaeger] Apply the manifest: kubectl apply -f otel-collector.yaml That configuration uses a trivial processing pipeline to receive trace events and to forward them to Jaeger. It also receives metrics and exposes them for collection by Prometheus. You secure communication between the Admission Controller stack and the OpenTelemetry Collector using mTLS. However the communication between the OpenTelemetry Collector and Jaeger isn’t secured, to reduce the complexity of the example. When the OpenTelemetry Collector is running, you can deploy Admission Controller in the usual way. You need to configure the Admission Controller components so they send events and metrics to the OpenTelemetry Collector. # values.yaml telemetry: mode: custom metrics: True tracing: True custom: endpoint: \"https://my-collector-collector.kubewarden.svc:4317\" insecure: false otelCollectorCertificateSecret: \"my-server-cert\" otelCollectorClientCertificateSecret: \"my-client-cert\" The Secret referenced by the otelCollectorCertificateSecret key must have an entry named ca.crt. That holds the certificate of the CA that issued the certificate used by the OpenTelemetry Collector. The Secret referenced by the otelCollectorClientCertificateSecret key must have the following entries: tls.crt and tls.key keys. These are the client certificate and its key used by the Admission Controller stack to authenticate against the OpenTelemetry Collector. Leave these values empty if you don’t use encryption or mTLS. Install the Admission Controller stack: helm install --wait \\ --namespace kubewarden --create-namespace \\ kubewarden-crds kubewarden/kubewarden-crds helm install --wait \\ --namespace kubewarden \\ --create-namespace \\ --values values.yaml \\ kubewarden-controller kubewarden/kubewarden-controller helm install --wait \\ --namespace kubewarden \\ --create-namespace \\ kubewarden-defaults kubewarden/kubewarden-defaults \\ --set recommendedPolicies.enabled=True \\ --set recommendedPolicies.defaultPolicyMode=monitor Now everything is in place. You can see the trace events generated by Admission Controller by using the Jaeger web UI. They’re grouped under the kubewarden-policy-server service: To access the Jaeger UI, you can create an Ingress or you can do a port forwarding to your local machine: kubectl -n jaeger port-forward service/my-open-telemetry-query 16686 The web UI is reachable at http://localhost:16686. You can access the Prometheus UI by port forwarding to your local machine: kubectl port-forward -n prometheus --address 0.0.0.0 svc/prometheus-operated 9090 The web UI is now reachable at http://localhost:9090.","title":"Custom OpenTelemetry Collector","component":"admission-controller","version":"1.29","name":"40-custom-otel-collector","url":"/admission-controller/1.29/en/howtos/telemetry/40-custom-otel-collector.html","titles":[{"text":"Install dependencies","hash":"_install_dependencies","id":1},{"text":"Install cert-manager and OpenTelemetry","hash":"_install_cert_manager_and_opentelemetry","id":2},{"text":"Install Jaeger and Prometheus","hash":"_install_jaeger_and_prometheus","id":3},{"text":"Install OpenTelemetry Collector","hash":"_install_opentelemetry_collector","id":4},{"text":"Install Admission Controller stack","hash":"_install_admission_controller_stack","id":5},{"text":"Exploring the Jaeger UI","hash":"_exploring_the_jaeger_ui","id":6},{"text":"Exploring the Prometheus UI","hash":"_exploring_the_prometheus_ui","id":7}],"keyword":"kubewarden, kubernetes, metrics, tracing, opentelemetry"},"67":{"id":67,"text":"This section describes installing the Admission Controller UI as an extension of Rancher Manager. You install the Admission Controller UI as a global extension, however, you install the Admission Controller controller through the Rancher UI as a cluster scoped resource. For air-gapped installations, follow these steps. Within the Extensions page, select the \"Enable\" button and choose the option to add the Rancher Extensions Repository. When enabled, the \"Admission Controller\" extension item appears automatically. Select this item to install the extension. Once installed, you can install Admission Controller into the required cluster. Following the previous steps, within your cluster a new item appears in the side-menu for Admission Controller. This dashboard page guides you through the installation process, completing the prerequisites. During the \"App Install\" step of the installation wizard, the \"Install Admission Controller\" button may remain grayed out. If this happens, refresh the page and navigate back to this step. After completing the installation the dashboard page and side menu now contain new items, namely Policy Servers, Cluster Admission Policies, and Admission Policies. From here you can create Policy Servers and Policies to control behavior within your cluster. Dashboard view Within the dashboard page you can select the \"Install Chart\" button to install the kubewarden-defaults Helm chart. This chart includes the default Policy Server and a few curated policies. After installing the chart, you can view the default Policy Server details with the related policies in a sortable table. Policy Server detail view When creating policies, you are initially given a \"Custom Policy\" option from the Policy Grid. Provide the required information for your policy’s Name, Module, and Rules. It’s recommended to add the Policy Catalog repository to access Admission Controller’s official policies. Creating a custom policy Follow the instructions to include Monitoring or Tracing. As Admission Controller is a Rancher Official Extension, the Rancher team provides a mechanism to automatically generate an Extension Catalog Image. This becomes added to the rancher-images.txt file when installing Rancher Manager for air-gapped instances. Once this image is mirrored to a registry accessible to your air-gapped cluster, you can import the image within the Rancher UI. This creates a local Helm repository with the Admission Controller UI chart for installation. Create a registry secret within the cattle-ui-plugin-system namespace. Enter the domain of the image address in the Registry Domain Name field. Navigate back to the Extensions page (for example, https://cluster-ip/dashboard/c/local/uiplugins). On the top right, select Manage Extension Catalogs. Select the Import Extension Catalog button. Enter the image address in the Catalog Image Reference field. Select the secret you just created from the Pull Secrets drop-down menu. Click Load. The extension will now be Pending. Return to the Extensions page. Select the Available tab, and click the Reload button to make sure that the list of extensions is up to date. Find the Admission Controller extension you just added, and select the Install button.","title":"Rancher UI extension quickstart","component":"admission-controller","version":"1.29","name":"01-install","url":"/admission-controller/1.29/en/howtos/ui-extension/01-install.html","titles":[{"text":"Install Admission Controller UI Extension","hash":"_install_admission_controller_ui_extension","id":1},{"text":"Install Admission Controller","hash":"_install_admission_controller","id":2},{"text":"Post-Installation","hash":"_post_installation","id":3},{"text":"Enabling the default Policy Server and policies","hash":"_enabling_the_default_policy_server_and_policies","id":4},{"text":"Creating policies","hash":"_creating_policies","id":5},{"text":"Additional features","hash":"_additional_features","id":6},{"text":"Air-gapped installation","hash":"_air_gapped_installation","id":7},{"text":"Installation steps","hash":"_installation_steps","id":8}],"keyword":"[\"kubewarden\", \"kubernetes\", \"rancher ui extension\"]"},"68":{"id":68,"text":"Rancher has a Cluster Tool for monitoring that leverages Grafana and Prometheus. You can use this tool, integrating it with Admission Controller, to view overall metrics for a Policy Server or metrics for a given policy. You need a cluster with at least 4 cores to install the Monitoring tool. You need the Prometheus Operator. Follow these instructions to install it. Import the manifest to create the ServiceMonitors. You need to specify the Admission Controller installation namespace These steps are an adpatation from the telemetry metrics instructions. apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: kubewarden-controller namespace: cattle-kubewarden-system spec: endpoints: - interval: 10s port: metrics namespaceSelector: matchNames: - cattle-kubewarden-system selector: matchLabels: app.kubernetes.io/name: kubewarden-controller --- apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: kubewarden-policy-server namespace: cattle-kubewarden-system spec: endpoints: - interval: 10s port: metrics namespaceSelector: matchNames: - cattle-kubewarden-system selector: matchLabels: app: kubewarden-policy-server-default Navigate to Apps & Marketplace → Installed Apps. Select the Edit/Upgrade action for your rancher-kubewarden-controller resource. Edit the YAML for telemetry to be enabled: \"true\" and verify that the metrics port is correct. telemetry: metrics: true mode: sidecar sidecar: metrics: port: 8080 You may need to redeploy your Monitoring resources for the new ConfigMap to load. You can do this from Workloads → Deployments. Select all the resources in the cattle-monitoring-system namespace and select the Redeploy action. This method is suitable for air-gapped installations. The dashboards are unique between Policy Server and Policies, so you need to separate creation. Within the detail view for a Policy Server or a specific Policy: Navigate to the \"Metrics\" tab. Follow the prompt to create the ConfigMap. Reload the page to update the Grafana view (Grafana may be slow to acknowledge the new dashboard). You should be able to view the metrics for a Policy Server, or any given Policy on the detail page for each respective resource. You can also view the Admission Controller dashboards within the Grafana UI, or the events from the Prometheus UI.","title":"Monitoring","component":"admission-controller","version":"1.29","name":"02-metrics","url":"/admission-controller/1.29/en/howtos/ui-extension/02-metrics.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Install","hash":"_install","id":2},{"text":"Create the ServiceMonitors","hash":"_create_the_servicemonitors","id":3},{"text":"Enable telemetry for your rancher-kubewarden-controller resource","hash":"_enable_telemetry_for_your_rancher_kubewarden_controller_resource","id":4},{"text":"Create the Grafana dashboard ConfigMap for Policies and Policy Server","hash":"_create_the_grafana_dashboard_configmap_for_policies_and_policy_server","id":5}],"keyword":"[\"kubewarden\", \"kubernetes\", \"user interface extension\", \"metrics\", \"monitoring\"]"},"69":{"id":69,"text":"Tracing allows collection of fine-grained details about policy evaluations. It’s a useful tool for debugging issues in your Admission Controller deployment and policies. Admission Controller uses Jaeger to receive, store, and visualize trace events. Policy tracing logs You need Cert-Manager and OpenTelemetry. Follow these instructions to install Cert Manager and the OpenTelemetry Operator. Apply the installation steps from the tracing quickstart. Once the Jaeger operator creates all the resources, there is a Service under my-open-telemetry-collector.jaeger.svc.cluster.local. The Jaeger Query UI is reachable at the following address: https://<CLUSTER_IP>/api/v1/namespaces/jaeger/services/http:my-open-telemetry-query:16686/proxy/search This endpoint may be unique depending on your configuration. You can find the endpoint listed for your Jaeger resource under the Services page. You’ll need to edit the rancher-kubewarden-controller resource to add the Jaeger endpoint \"my-open-telemetry-collector.jaeger.svc.cluster.local:4317\". For instance: telemetry: tracing: true mode: sidecar sidecar: tracing: jaeger: endpoint: my-open-telemetry-collector.jaeger.svc.cluster.local:4317 tls: insecure: true The installation of the service, my-open-telemetry-collector, is under the jaeger namespace. For simplicity, we’re not encrypting the communication between the OpenTelemetry collector and the Jaeger endpoint. This is unsuitable for production deployment. You should you read Jaeger’s documentation. You should now be able to view any failed requests for policies tied to a specific Policy Server. You can also see the detail view for any given policy. You can get a more in-depth view of the traces by using the Jaeger UI.","title":"Tracing","component":"admission-controller","version":"1.29","name":"03-tracing","url":"/admission-controller/1.29/en/howtos/ui-extension/03-tracing.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Install Jaeger","hash":"_install_jaeger","id":2},{"text":"Update rancher-kubewarden-controller with Jaeger endpoint","hash":"_update_rancher_kubewarden_controller_with_jaeger_endpoint","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"tracing\"]"},"70":{"id":70,"text":"Workaround for Kubewarden v1.16.0 and earlier This workaround is only needed for Kubewarden v1.16.0 and earlier. Starting from v1.17.0, the controller automatically renews the policy server certificates. During the release process for v1.14, a bug related to the policy server certificate rotation was discovered. The Root CA is configured to expire in 10 years, but each policy-server certificate secret has a one-year expiry. However, the controller is currently unable to renew them automatically. In the v1.14 release, we have ensured that policy-server secrets are created with a 10-year expiry. For future releases we’ll implement an automated renewal process. Until then, users can manually delete the expired certificate secret (policy-server-default) and trigger a controller reconciliation. You do this by adding, removing, or updating a policy or by adjusting the number of replicas of a PolicyServer.","title":"Policy Server certificate rotation issue","component":"admission-controller","version":"1.29","name":"policy-server-certificate-expiry","url":"/admission-controller/1.29/en/howtos/workarounds/policy-server-certificate-expiry.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy server certificates\"]"},"71":{"id":71,"text":"The Kubewarden stack uses webhooks to enforce policies in a Kubernetes cluster. Each PolicyServer instance exposes a webhook that the Kubernetes API server calls to validate and mutate resources. Moreover, the kubewarden-controller exposes webhooks to validate and mutate the custom resources provided by the Kubewarden project. To decrease their attack surface, you should limit access to these webhooks to the only valid callers they have: the Kubernetes API server the audit scanner component. You can do this using network policies and authentication independently, or together, to harden the webhooks against attacks. Webhooks are only expected to accept requests from the Kubernetes API server and the audit scanner component. By default, however, webhooks can accept traffic from any source. If you are using a Container Network Interface (CNI) that supports Network Policies, you can create a policy that blocks traffic that doesn’t originate from the API server. The built-in NetworkPolicy resource in Kubernetes can’t block or admit traffic from the cluster hosts. Also, the kube-apiserver process is always running on the host network. Therefore, you must use the advanced network policy resources from the CNI in use. Examples for Calico and Cilium follow. Consult the documentation for your CNI for more details. Use the NetworkPolicy resource in the crd.projectcalico.org/v1 API group, to define a network policy like the following one: apiVersion: crd.projectcalico.org/v1 kind: NetworkPolicy metadata: name: allow-k8s-and-audit-scanner namespace: kubewarden spec: selector: 'app.kubernetes.io/component in {\"kubewarden-controller\", \"policy-server\"}' types: - Ingress ingress: - action: Allow protocol: TCP source: nets: - 192.168.42.0/24 destination: selector: 'app.kubernetes.io/component in {\"kubewarden-controller\", \"policy-server\"}' - action: Allow protocol: TCP source: namespaceSelector: 'kubernetes.io/metadata.name == \"kubewarden\"' destination: selector: 'app.kubernetes.io/component in {\"kubewarden-controller\", \"policy-server\"}' This network policy uses label selectors introduced in Kubewarden 1.23.0. If you are using an older version, update the labels in the policy to match your deployment. More sprecifically, write the selector: 'app.kubernetes.io/component in {\"kubewarden-controller\", \"policy-server\"}' selectors as: selector: 'app.kubernetes.io/name == \"kubewarden-controller\" || has(kubewarden/policy-server)' Use the CiliumNetworkPolicy resource in the cilium.io/v2 API group to define a network policy like the following one: apiVersion: \"cilium.io/v2\" kind: CiliumNetworkPolicy metadata: name: allow-k8s-and-audit-scanner namespace: kubewarden spec: endpointSelector: matchExpressions: - key: app.kubernetes.io/component operator: In values: - policy-server - controller ingress: - fromEntities: - host - remote-node - fromEndpoints: - matchLabels: k8s:io.kubernetes.pod.namespace: kubewarden This network policy uses label selectors introduced in Kubewarden 1.23.0. If you are using an older version, update the labels in the policy to match your deployment. More specifically, write the matchExpressions: - key: app.kubernetes.io/component operator: In values: - policy-server - controller expression as: endpointSelector: matchExpressions: - key: app.kubernetes.io/name operator: In values: - kubewarden-controller - key: kubewarden/policy-server operator: Exists Refer to webook mTLS how-to for a step-by-step guide on configuring the Kubernetes API server of K3s to authenticate to the webhook. The webhooks exposed by the Kubewarden stack should only accept requests from the Kubernetes API server or from the audit scanner component. By default, these webhooks don’t require clients to authenticate to them. They accept any request. You can configure the webhooks to require credentials so that only the API server and the audit scanner processes can access them. Refer to the Kubernetes documentation for more information. Configure the API server to present a client certificate to the webhook, pointing to an AdmissionConfiguration file to configure the ValidatingAdmissionWebhook and MutatingAdmissionWebhook plug-ins: Create a file named admission.yaml with the following contents: apiVersion: apiserver.config.k8s.io/v1 kind: AdmissionConfiguration plugins: - name: ValidatingAdmissionWebhook configuration: apiVersion: apiserver.config.k8s.io/v1 kind: WebhookAdmissionConfiguration kubeConfigFile: \"/etc/k8s/admission/kubeconfig\" - name: MutatingAdmissionWebhook configuration: apiVersion: apiserver.config.k8s.io/v1 kind: WebhookAdmissionConfiguration kubeConfigFile: \"/etc/k8s/admission/kubeconfig\" This is the same configuration file used to configure other plug-ins, such as PodSecurity. If your distribution or setup uses additional admission plug-ins, you should also configure those. Create the kubeconfig file the admission plug-ins refer to. Kubewarden only supports client certificate authentication, so generate a TLS key pair, and set the kubeconfig to use either client-certificate and client-key or client-certificate-data and client-key-data. For example: apiVersion: v1 kind: Config users: - name: '*.kubewarden.svc' user: client-certificate: /path/to/client/cert client-key: /path/to/client/key Start the kube-apiserver binary with the flag --admission-control-config-file pointing to your AdmissionConfiguration file. The way to do this varies by distribution, and it isn’t supported universally, such as in hosted Kubernetes providers. Consult the documentation for your Kubernetes distribution. Make the certificate of the root CA that issued the API server client certificate available to the Kubewarden stack. Put its content into a ConfigMap under the kubewarden namespace using a key named client-ca.crt. Assuming the root CA is available at /etc/k8s/admission/certs/rootCA.crt, create the ConfigMap with the following command: kubectl create configmap -n kubewarden api-server-mtls \\ --from-file=client-ca.crt=/etc/k8s/admission/certs/rootCA.crt Finally, when installing the kubewarden-controller Helm chart, make sure to enable the following values: Set mTLS.enable to true. Set mTLS.configMapName to the name of the ConfigMap that was previously created. The ConfigMap name is api-server-mtls, so the Helm command to install the kubewarden-controller is: helm install --wait -n kubewarden kubewarden-controller kubewarden/kubewarden-controller \\ --set mTLS.enable=true \\ --set mTLS.configMapName=api-server-mtls The Kubewarden controller creates a client certificate for use by the audit scanner component. The certificate is automatically rotated by the controller when needed.","title":"Hardening the Kubewarden webhooks","component":"admission-controller","version":"1.29","name":"webhooks-hardening","url":"/admission-controller/1.29/en/reference/security-hardening/webhooks-hardening.html","titles":[{"text":"Block external traffic using network policies","hash":"_block_external_traffic_using_network_policies","id":1},{"text":"Calico","hash":"_calico","id":2},{"text":"Cilium","hash":"_cilium","id":3},{"text":"Require the Kubernetes API Server to authenticate to the webhook","hash":"_require_the_kubernetes_api_server_to_authenticate_to_the_webhook","id":4}],"keyword":"kubewarden, kubernetes, security"},"72":{"id":72,"text":"The policy evaluator interacts with Kubewarden policies using a well-defined API. The purpose of this section is to document the API used by the host (be it policy-server or kwctl) to communicate with Kubewarden’s policies.","title":"Policy communication specification","component":"admission-controller","version":"1.29","name":"01-intro-spec","url":"/admission-controller/1.29/en/reference/spec/01-intro-spec.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"policy communication\"]"},"73":{"id":73,"text":"Policy behavior isn’t rigid, you can configure it by providing configuration details to the policy at runtime. The policy author has the freedom to define the structure of policy settings. Kubewarden takes care of serializing the policy settings into JSON and provides them to the policy each time it’s invoked. Policies should validate the settings a user provides to check correctness. Each policy registers a waPC function called validate_settings that validates the policy settings. The validate_settings function receives as input a JSON representation of the settings provided by the user. This function validates them and returns as a response a SettingsValidationResponse object. The structure of the SettingsValidationResponse object is: { # mandatory \"valid\": <boolean>, # optional, ignored if accepted - recommended for rejections \"message\": <string>, } If the user provided settings are valid, validate_settings ignores the message contents. Otherwise, validate_settings displays the message contents. Kubewarden’s policy-server validates all the policy settings provided by users at start time. The policy-server exits immediately with an error if at least one of its policies received wrong configuration parameters. As an example, consider the psp-capabilities policy which has the following configuration format: allowed_capabilities: - CHOWN required_drop_capabilities: - NET_ADMIN default_add_capabilities: - KILL The validate_settings function receives as input the following JSON document: { \"allowed_capabilities\": [ \"CHOWN\" ], \"required_drop_capabilities\": [ \"NET_ADMIN\" ], \"default_add_capabilities\": [ \"KILL\" ] } Each policy must register a waPC function, validate_settings.","title":"Policy settings","component":"admission-controller","version":"1.29","name":"02-settings","url":"/admission-controller/1.29/en/reference/spec/02-settings.html","titles":[{"text":"Settings validation","hash":"_settings_validation","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Recap","hash":"_recap","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"policy settings\"]"},"74":{"id":74,"text":"The Kubewarden policy server receives: Kubernetes AdmissionReview objects from the Kubernetes API server. It then forwards the value of its request attribute, of type AdmissionRequest, to the policy for evaluation. or: A JSON request attribute containing the free-form request document, in case of a raw policy. Check the Raw policies section for more details. The policy evaluates the request and states whether it should accept it or not. When request rejection happens, the policy might provide the explanation message and an error code to display to the end user. By convention, of the policy-server project, the guest has to expose a function named validate, through the waPC guest SDK, so that the policy-server (waPC host) can invoke it. The validate function receives a ValidationRequest JSON object and returns a ValidationResponse JSON object. The ValidationRequest is a JSON object received by the validate function. It looks like: { \"request\": <AdmissionReview.request data> | <RawReviewRequest.request data>, \"settings\": { # your policy configuration } } The settings key points to a free-form JSON document holds the policy specific settings. The previous chapter focused on policies and settings. Given the following Kubernetes AdmissionReview: Expand to see AdmissionReview { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"request\": { # Random uid uniquely identifying this admission call \"uid\": \"705ab4f5-6393-11e8-b7cc-42010a800002\", # Fully-qualified group/version/kind of the incoming object \"kind\": {\"group\":\"autoscaling\",\"version\":\"v1\",\"kind\":\"Scale\"}, # Fully-qualified group/version/kind of the resource being modified \"resource\": {\"group\":\"apps\",\"version\":\"v1\",\"resource\":\"deployments\"}, # subresource, if the request is to a subresource \"subResource\": \"scale\", # Fully-qualified group/version/kind of the incoming object in the original request to the API server. # This only differs from `kind` if the webhook specified `matchPolicy: Equivalent` and the # original request to the API server was converted to a version the webhook registered for. \"requestKind\": {\"group\":\"autoscaling\",\"version\":\"v1\",\"kind\":\"Scale\"}, # Fully-qualified group/version/kind of the resource being modified in the original request to the API server. # This only differs from `resource` if the webhook specified `matchPolicy: Equivalent` and the # original request to the API server was converted to a version the webhook registered for. \"requestResource\": {\"group\":\"apps\",\"version\":\"v1\",\"resource\":\"deployments\"}, # subresource, if the request is to a subresource # This only differs from `subResource` if the webhook specified `matchPolicy: Equivalent` and the # original request to the API server was converted to a version the webhook registered for. \"requestSubResource\": \"scale\", # Name of the resource being modified \"name\": \"my-deployment\", # Namespace of the resource being modified, if the resource is namespaced (or is a Namespace object) \"namespace\": \"my-namespace\", # operation can be CREATE, UPDATE, DELETE, or CONNECT \"operation\": \"UPDATE\", \"userInfo\": { # Username of the authenticated user making the request to the API server \"username\": \"admin\", # UID of the authenticated user making the request to the API server \"uid\": \"014fbff9a07c\", # Group memberships of the authenticated user making the request to the API server \"groups\": [\"system:authenticated\",\"my-admin-group\"], # Arbitrary extra info associated with the user making the request to the API server. # This is populated by the API server authentication layer and should be included # if any SubjectAccessReview checks are performed by the webhook. \"extra\": { \"some-key\":[\"some-value1\", \"some-value2\"] } }, # object is the new object being admitted. # It is null for DELETE operations. \"object\": {\"apiVersion\":\"autoscaling/v1\",\"kind\":\"Scale\",...}, # oldObject is the existing object. # It is null for CREATE and CONNECT operations. \"oldObject\": {\"apiVersion\":\"autoscaling/v1\",\"kind\":\"Scale\",...}, # options contains the options for the operation being admitted, like meta.k8s.io/v1 CreateOptions, UpdateOptions, or DeleteOptions. # It is null for CONNECT operations. \"options\": {\"apiVersion\":\"meta.k8s.io/v1\",\"kind\":\"UpdateOptions\",...}, # dryRun indicates the API request is running in dry run mode and will not be persisted. # Webhooks with side effects should avoid actuating those side effects when dryRun is true. # See http://k8s.io/docs/reference/using-api/api-concepts/#make-a-dry-run-request for more details. \"dryRun\": false } } The ValidationRequest object would look like: Expand to see the ValidationRequest { \"request\": { # Random uid uniquely identifying this admission call \"uid\": \"705ab4f5-6393-11e8-b7cc-42010a800002\", # Fully-qualified group/version/kind of the incoming object \"kind\": {\"group\":\"autoscaling\",\"version\":\"v1\",\"kind\":\"Scale\"}, # Fully-qualified group/version/kind of the resource being modified \"resource\": {\"group\":\"apps\",\"version\":\"v1\",\"resource\":\"deployments\"}, # subresource, if the request is to a subresource \"subResource\": \"scale\", # Fully-qualified group/version/kind of the incoming object in the original request to the API server. # This only differs from `kind` if the webhook specified `matchPolicy: Equivalent` and the # original request to the API server was converted to a version the webhook registered for. \"requestKind\": {\"group\":\"autoscaling\",\"version\":\"v1\",\"kind\":\"Scale\"}, # Fully-qualified group/version/kind of the resource being modified in the original request to the API server. # This only differs from `resource` if the webhook specified `matchPolicy: Equivalent` and the # original request to the API server was converted to a version the webhook registered for. \"requestResource\": {\"group\":\"apps\",\"version\":\"v1\",\"resource\":\"deployments\"}, # subresource, if the request is to a subresource # This only differs from `subResource` if the webhook specified `matchPolicy: Equivalent` and the # original request to the API server was converted to a version the webhook registered for. \"requestSubResource\": \"scale\", # Name of the resource being modified \"name\": \"my-deployment\", # Namespace of the resource being modified, if the resource is namespaced (or is a Namespace object) \"namespace\": \"my-namespace\", # operation can be CREATE, UPDATE, DELETE, or CONNECT \"operation\": \"UPDATE\", \"userInfo\": { # Username of the authenticated user making the request to the API server \"username\": \"admin\", # UID of the authenticated user making the request to the API server \"uid\": \"014fbff9a07c\", # Group memberships of the authenticated user making the request to the API server \"groups\": [\"system:authenticated\",\"my-admin-group\"], # Arbitrary extra info associated with the user making the request to the API server. # This is populated by the API server authentication layer and should be included # if any SubjectAccessReview checks are performed by the webhook. \"extra\": { \"some-key\":[\"some-value1\", \"some-value2\"] } }, # object is the new object being admitted. # It is null for DELETE operations. \"object\": {\"apiVersion\":\"autoscaling/v1\",\"kind\":\"Scale\",...}, # oldObject is the existing object. # It is null for CREATE and CONNECT operations. \"oldObject\": {\"apiVersion\":\"autoscaling/v1\",\"kind\":\"Scale\",...}, # options contains the options for the operation being admitted, like meta.k8s.io/v1 CreateOptions, UpdateOptions, or DeleteOptions. # It is null for CONNECT operations. \"options\": {\"apiVersion\":\"meta.k8s.io/v1\",\"kind\":\"UpdateOptions\",...}, # dryRun indicates the API request is running in dry run mode and will not be persisted. # Webhooks with side effects should avoid actuating those side effects when dryRun is true. # See http://k8s.io/docs/reference/using-api/api-concepts/#make-a-dry-run-request for more details. \"dryRun\": false }, \"settings\": { # policy settings } } The validate function returns the outcome of its validation using a ValidationResponse object. The ValidationResponse has this structure: { # mandatory \"accepted\": <boolean>, # optional, ignored if accepted - recommended for rejections \"message\": <string>, # optional, ignored if accepted \"code\": <integer>, # optional, used by mutation policies \"mutated_object\": <string> } You can specify these message and code attributes when the request isn’t accepted. The message is a free-form textual error and code represents an HTTP error code. The Kubernetes API server ignores the message and code values on request acceptance. On request denial and if the message or code are present, then the Kubernetes API server returns this information. The information is part of the body of the error, and the server returns it to the Kubernetes API client that issued the rejected request. The mutated_object is an optional field used only by mutating policies. This is the topic of the next chapter.","title":"Validating policies","component":"admission-controller","version":"1.29","name":"03-validating-policies","url":"/admission-controller/1.29/en/reference/spec/03-validating-policies.html","titles":[{"text":"The ValidationRequest object","hash":"_the_validationrequest_object","id":1},{"text":"An example","hash":"_an_example","id":2},{"text":"The ValidationResponse object","hash":"_the_validationresponse_object","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"policy validation\"]"},"75":{"id":75,"text":"The structure of mutating policies is the same as validating ones: They have to register validate and validate_settings waPC functions. The communication API used between the host and the policy is the same as that used by validating policies. Mutating policies accept a request and can propose a mutation of the incoming object by returning a ValidationResponse object that looks like this: { \"accepted\": true, \"mutated_object\": <object to be created> } The mutated_object field contains the object the policy wants creating in the Kubernetes cluster, serialized to JSON. Assume the policy received this ValidationRequest: { \"settings\": {}, \"request\": { \"operation\": \"CREATE\", \"object\": { \"apiVersion\": \"v1\", \"kind\": \"Pod\", \"metadata\": { \"name\": \"security-context-demo-4\" }, \"spec\": { \"containers\": [ { \"name\": \"sec-ctx-4\", \"image\": \"gcr.io/google-samples/node-hello:1.0\", \"securityContext\": { \"capabilities\": { \"add\": [\"NET_ADMIN\", \"SYS_TIME\"] } } } ] } } } } Only important fields are in the request object for this example. This request generation happens because someone tried to create a Pod that would look like this: apiVersion: v1 kind: Pod metadata: name: security-context-demo-4 spec: containers: - name: sec-ctx-4 image: gcr.io/google-samples/node-hello:1.0 securityContext: capabilities: add: - NET_ADMIN - SYS_TIME Assume the policy replies with the following ValidationResponse: { \"accepted\": true, \"mutated_object\": { \"apiVersion\": \"v1\", \"kind\": \"Pod\", \"metadata\": { \"name\": \"security-context-demo-4\" }, \"spec\": { \"containers\": [ { \"name\": \"sec-ctx-4\", \"image\": \"gcr.io/google-samples/node-hello:1.0\", \"securityContext\": { \"capabilities\": { \"add\": [ \"NET_ADMIN\", \"SYS_TIME\" ], \"drop\": [ \"BPF\" ] } } } ] } } } That would lead to request acceptance, but the final Pod would look like this: apiVersion: v1 kind: Pod metadata: name: security-context-demo-4 spec: containers: - name: sec-ctx-4 image: gcr.io/google-samples/node-hello:1.0 securityContext: capabilities: add: - NET_ADMIN - SYS_TIME drop: - BPF As you can see, the policy altered the securityContext.capabilities.drop section of the only container declared in the Pod. The container is now dropping the BPF capability due to the policy. These are the functions a mutating policy must implement: waPC function name Input payload Output payload validate \\{ \"request\": \\{ // AdmissionReview.request data \\}, \"settings\": \\{ // your policy configuration \\}\\} \\{ **// mandatory** \"accepted\": boolean, // optional, ignored if accepted // recommended for rejections \"message\": string, // optional, ignored if accepted \"code\": integer, // JSON Object to be created // Can be used only when the // request is accepted \"mutated_object\": object\\} validate_settings \\{ // your policy configuration\\} \\{ **// mandatory** \"validate\": boolean, // optional, ignored if accepted // recommended for rejections \"message\": string,\\}","title":"Mutating policies","component":"admission-controller","version":"1.29","name":"04-mutating-policies","url":"/admission-controller/1.29/en/reference/spec/04-mutating-policies.html","titles":[{"text":"A concrete example","hash":"_a_concrete_example","id":1},{"text":"Recap","hash":"_recap","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"mutating policies\"]"},"76":{"id":76,"text":"The policy-server has the capability to expose cluster information to policies, so that they can take decisions based on other existing resources, and not only based on the details provided by the admission request. The Policy Server hosting the policy retrieves Kubernetes resources. RBAC rules applied to the Policy Server Service Account regulates access to Kubernetes. The default Policy Server deployed by Kubewarden Helm charts has access to the following Kubernetes resources: Namespaces Services Ingresses The policy server performs caching of the results obtained from the Kubernetes API server to reduce the amount of load on this core part of Kubernetes. That means information might be stale or missing. Policy type Support Notes Traditional programming languages ✅ - Rego ✅ Since Kubewarden 1.9 release WASI ✅ Since Kubewarden 1.10.0 release, only for Go SDK Kubewarden’s priority is to reduce the number of queries against the Kubernetes API server. Kubewarden considers two restraints: Memory usage: The Policy Server process caches data fetched from Kubernetes in memory. The more data fetched, the more the Policy Server Pods consume memory. Consistency: The cache kept by Policy Server could contain stale data. New resources might be missing, deleted resources might still be available and changed ones could have old data. This could affect policy evaluation. Kubewarden policies can fetch multiple resources at the same time. For example, they can make a query like \"get all the Pods defined inside of the default namespace that have the label color set to green\". With such a query, the Policy Server fetches all the resources matching the user criteria. Resources fetching is in batches to reduce the load on the Kubernetes API server. Before storing the resources in memory, Policy Server drops the managedFields attribute of each resource to reduce the amount of memory consumed. This attribute isn’t useful for policies and takes a significant amount of memory. The Policy Server then creates a Kubernetes watch to keep the cached list of objects updated. The Policy Server doesn’t control the speed at which the Kubernetes API Server sends notifications about resource changes. This depends on different external factors, like the number of watches created against the Kubernetes API server and its load. Finally, the current code has the following limitation. Given these two queries: kubectl get pods -n default kubectl get pods -n default -l color=green Policy Server creates two watches and duplicates all the Pods of the second query. This limitation is to be removed in future releases of Kubewarden. Kubewarden policies can get a specific resource defined inside of the cluster. For example, they can make a query like \"get the Pod named psql-0 defined inside of the db namespace\". By default, this query fetches the object and stores it in an in-memory cache for five seconds. During this five seconds policies receive cached data. The policy author can also decide to make a direct query, skipping the cache. Fresh data is always served. This causes more load on the Kubernetes API server (depending on the frequency of policy triggering) and introduces more latency evaluating an admission request. The direct, or cached, query behavior is configured on a per-query level by the policy author using the Kubewarden SDKs. ClusterAdmissionPolicies have the field spec.contextAwareResources. This field provides a list a GroupVersionKind resources that the policy needs to access. This permits policy writers to ship the \"permissions\" that the policy needs together with the policy. Moreover, this permits policy operators to review the \"permissions\" needed by the policy at deployment time. Besides running policies in a cluster for end-to-end tests, you can use the kwctl CLI utility to run policies and mock requests against the cluster. For this, kwctl run can first record all the interactions with the cluster into a file: kwctl run \\ --allow-context-aware \\ -r request.json \\ --record-host-capabilities-interactions replay-session.yml \\ annotated-policy.wasm which creates the following replay-session.yml file: # replay-session.yml --- - type: Exchange request: | !KubernetesGetResource api_version: /v1 kind: Pod name: p-testing namespace: local disable_cache: true response: type: Success payload: '{\"apiVersion\":\"\",\"kind\":\"Pod\", <snipped> }' Using the replay session, you can now simulate the cluster interactions without the need of a cluster, which is ideal for CI and end-to-end tests: kwctl run \\ --allow-context-aware \\ -r request.json \\ --replay-host-capabilities-interactions replay-session.yml \\ annotated-policy.wasm Language SDK’s that support cluster context expose functions that permit policies to retrieve the current state of the cluster. If you want more information about the waPC function used by the SDKs, check the Kubernetes capabilities reference documentation. See the functions exposing this functionality at the Rust SDK reference documentation. See the functions exposing this functionality at the Go SDK reference documentation. The context aware information exposure is under the data.inventory key, like Gatekeeper. Population of the inventory is with the resources the policy has access to via the spec.contextAwareResources field. Exposure of context aware information is under the data.kubernetes key, like kube-mgmt does by default. Population of the inventory is with resources the policy has access to via the spec.contextAwareResources field.","title":"Context aware policies","component":"admission-controller","version":"1.29","name":"05-context-aware-policies","url":"/admission-controller/1.29/en/reference/spec/05-context-aware-policies.html","titles":[{"text":"Support matrix","hash":"_support_matrix","id":1},{"text":"Constraints","hash":"_constraints","id":2},{"text":"Listing multiple resources","hash":"_listing_multiple_resources","id":3},{"text":"Fetching a specific resource","hash":"_fetching_a_specific_resource","id":4},{"text":"ClusterAdmissionPolicies","hash":"_clusteradmissionpolicies","id":5},{"text":"Testing context aware policies locally","hash":"_testing_context_aware_policies_locally","id":6},{"text":"Language SDKs","hash":"_language_sdks","id":7},{"text":"Rust","hash":"_rust","id":8},{"text":"Go","hash":"_go","id":9},{"text":"Rego policies","hash":"_rego_policies","id":10},{"text":"Gatekeeper","hash":"_gatekeeper","id":11},{"text":"Open Policy Agent","hash":"_open_policy_agent","id":12}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"context aware policies\"]"},"77":{"id":77,"text":"Kubewarden policies are regular programs compiled as WebAssembly (Wasm). As with any kind of program, good test coverage is important. Policy authors can use their favorite development environments. You can use familiar tools, and testing frameworks to verify development. These Kubewarden policies are examples written in Rust and Go: psp-apparmor ingress-policy They have test suites using standard testing for their development environments. The policies use GitHub Actions for their CI pipelines. You can also write tests that execute against the Wasm binary containing your policy. To do this without having to deploy a Kubernetes cluster you can use these tools: bats: is to write tests and automate their execution. kwctl: Kubewarden’s default CLI tool that helps you with policy-related operations; pull, inspect, annotate, push, and run. To use kwctl run you need the following: The Wasm binary file reference of the policy to run. The Kubewarden policy can be loaded from: the local filesystem (file://) a HTTP(s) server (https:// an OCI registry (registry://). The admission request object to test. You give it via the --request-path argument, or on stdin by setting --request-path to -. The policy settings for runtime as an inline JSON via --settings-json flag. Or a JSON, or a YAML file, loaded from the file system via --settings-path. After the test kwctl, prints the ValidationResponse object to standard output. This is how you use kwctl to test the Wasm binary of the ingress-policy mentioned previously: $ curl https://raw.githubusercontent.com/kubewarden/ingress-policy/v0.1.8/test_data/ingress-wildcard.json 2> /dev/null | \\ kwctl run \\ --settings-json '{\"allowPorts\": [80], \"denyPorts\": [3000]}' \\ --request-path - \\ registry://ghcr.io/kubewarden/policies/ingress:v0.1.8 | jq You can download pre-built binaries of kwctl here. Using bats you can write a test that runs this command and looks for the expected outputs: A bats test @test \"all is good\" { run kwctl run \\ --request-path test_data/ingress-wildcard.json \\ --settings-json '{\"allowPorts\": [80], \"denyPorts\": [3000]}' \\ ingress-policy.wasm # this prints the output when one the checks below fails echo \"output = ${output}\" # settings validation passed [[ \"$output\" == *\"valid: true\"* ]] # request accepted [[ \"$output\" == *\"allowed: true\"* ]] } You can put the code in a file, e2e.bats, for example, and then invoke bats by: $ bats e2e.bats ✓ all is good 1 tests, 0 failures This section of the documentation has more about writing end-to-end tests of your policies.","title":"Testing for policy authors","component":"admission-controller","version":"1.29","name":"02-policy-authors","url":"/admission-controller/1.29/en/tutorials/testing-policies/02-policy-authors.html","titles":[{"text":"End-to-end tests","hash":"_end_to_end_tests","id":1}],"keyword":"[\"kubewarden\", \"policy testing\", \"policy author\", \"rust\", \"go\", \"assemblyscript\", \"development environment\"]"},"78":{"id":78,"text":"As a Kubernetes cluster operator, you’ll want to perform testing for Kubewarden policies you want to use. You’ll have questions like: What are the correct policy settings to get the validation/mutation outcome needed? How can I be sure everything keeps working as expected when I: upgrade the policy to a newer version? add/change Kubernetes resources? change the configuration parameters of the policy? and so forth? Kubewarden has a utility, kwctl, that permits testing of the policies outside of Kubernetes. To use kwctl you invoke it with following inputs: A WebAssembly binary file URI of the policy to be run. The Kubewarden policy can load from the: local filesystem file:// a HTTP(s) server https:// an OCI registry registry://. The admission request object to test. You give it with the --request-path argument. Use stdin by setting --request-path to -. The policy settings for runtime as an inline JSON via --settings-json flag. Or a JSON, or a YAML file, loaded from the file system via --settings-path. After the test kwctl, prints the ValidationResponse object to the standard output. You can download pre-built binaries of kwctl here. This section describes how to test the psp-apparmor policy with different configurations and validation request objects. You need to create files holding the AdmissionReview objects to test the policy. You can create a file named pod-req-no-specific-apparmor-profile.json with the following contents: pod-req-no-specific-apparmor-profile.json { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"kind\": { \"kind\": \"Pod\", \"version\": \"v1\" }, \"object\": { \"metadata\": { \"name\": \"no-apparmor\" }, \"spec\": { \"containers\": [ { \"image\": \"nginx\", \"name\": \"nginx\" } ] } }, \"operation\": \"CREATE\", \"requestKind\": {\"version\": \"v1\", \"kind\": \"Pod\"}, \"userInfo\": { \"username\": \"alice\", \"uid\": \"alice-uid\", \"groups\": [\"system:authenticated\"] } } This request tries to create a Pod that doesn’t specify any AppArmor profile to use. This is because it doesn’t have an annotation with the container.apparmor.security.beta.kubernetes.io/<container-name> key. You can create a file named pod-req-apparmor-unconfined.json with the following contents: pod-req-apparmor-unconfined.json { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"kind\": { \"kind\": \"Pod\", \"version\": \"v1\" }, \"object\": { \"metadata\": { \"name\": \"privileged-pod\", \"annotations\": { \"container.apparmor.security.beta.kubernetes.io/nginx\": \"unconfined\" } }, \"spec\": { \"containers\": [ { \"image\": \"nginx\", \"name\": \"nginx\" } ] } }, \"operation\": \"CREATE\", \"requestKind\": {\"version\": \"v1\", \"kind\": \"Pod\"}, \"userInfo\": { \"username\": \"alice\", \"uid\": \"alice-uid\", \"groups\": [\"system:authenticated\"] } } This request tries to create a Pod with a container called nginx running with the unconfined AppArmor profile. This is for tutorial purposes only. Running in unconfined mode is a bad security practice. Now you can create a file named pod-req-apparmor-custom.json with the following contents: pod-req-apparmor-custom.json { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"kind\": { \"kind\": \"Pod\", \"version\": \"v1\" }, \"object\": { \"metadata\": { \"name\": \"privileged-pod\", \"annotations\": { \"container.apparmor.security.beta.kubernetes.io/nginx\": \"localhost/nginx-custom\" } }, \"spec\": { \"containers\": [ { \"image\": \"nginx\", \"name\": \"nginx\" } ] } }, \"operation\": \"CREATE\", \"requestKind\": {\"version\": \"v1\", \"kind\": \"Pod\"}, \"userInfo\": { \"username\": \"alice\", \"uid\": \"alice-uid\", \"groups\": [\"system:authenticated\"] } } These are all simplified AdmissionReview objects. Only the fields relevant to our testing of the policy are used. Now you can use kwctl to test the creation of a Pod not specifying an AppArmor profile: $ kwctl run \\ --request-path pod-req-no-specific-apparmor-profile.json \\ registry://ghcr.io/kubewarden/policies/psp-apparmor:v0.1.4 \\ | jq The policy accepts the request and produces output like: { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": true } The policy rejects the creation of a Pod with an unconfined AppArmor profile: $ kwctl run \\ --request-path pod-req-apparmor-unconfined.json \\ registry://ghcr.io/kubewarden/policies/psp-apparmor:v0.1.4 \\ | jq { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": false, \"status\": { \"message\": \"These AppArmor profiles are not allowed: [\\\"unconfined\\\"]\" } } On both occasions you ran the policy without providing any kind of setting. As the policy’s documentation states, this results in preventing the usage of non-default profiles. The Pod using a custom nginx profile gets rejected by the policy too: $ kwctl run \\ --request-path pod-req-apparmor-custom.json \\ registry://ghcr.io/kubewarden/policies/psp-apparmor:v0.1.4 \\ | jq { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": false, \"status\": { \"message\": \"These AppArmor profiles are not allowed: [\\\"localhost/nginx-custom\\\"]\" } } You can change the default behavior, allowing chosen AppArmor profiles to be used: $ kwctl run \\ --request-path pod-req-apparmor-custom.json \\ --settings-json '{\"allowed_profiles\": [\"runtime/default\", \"localhost/nginx-custom\"]}' \\ registry://ghcr.io/kubewarden/policies/psp-apparmor:v0.1.4 \\ | jq Now the request succeeds: { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": true } You can automate all these steps using bats. You can write a series of tests and integrate their execution inside your existing CI and CD pipelines. The commands can be \"wrapped\" into a bats test: A batstest @test \"all is good\" { run kwctl run \\ --request-path pod-req-no-specific-apparmor-profile.json \\ registry://ghcr.io/kubewarden/policies/psp-apparmor:v0.1.4 # this prints the output when one the checks below fails echo \"output = ${output}\" # request accepted [ $(expr \"$output\" : '.*\"allowed\":true.*') -ne 0 ] } @test \"reject\" { run kwctl run \\ --request-path pod-req-apparmor-custom.json \\ registry://ghcr.io/kubewarden/policies/psp-apparmor:v0.1.4 # this prints the output when one the checks below fails echo \"output = ${output}\" # request rejected [ $(expr \"$output\" : '.*\"allowed\":false.*') -ne 0 ] } If the bats code is in the file e2e.bats, you can run the test as: $ bats e2e.bats ✓ all is good ✓ reject 2 tests, 0 failures This section has more about writing end-to-end tests for your policies.","title":"Testing for cluster operators","component":"admission-controller","version":"1.29","name":"03-cluster-operators","url":"/admission-controller/1.29/en/tutorials/testing-policies/03-cluster-operators.html","titles":[{"text":"A testing example","hash":"_a_testing_example","id":1},{"text":"Create AdmissionReview requests","hash":"_create_admissionreview_requests","id":2},{"text":"Test the policy","hash":"_test_the_policy","id":3},{"text":"Automation","hash":"_automation","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"cluster operators\", \"testing\"]"},"79":{"id":79,"text":"This section covers the topic of testing Kubewarden Policies. There are two personas interested in testing policies: Policy developer: you’re writing a Kubewarden Policy and you want to make sure your code behaves the way you expect. Cluster operator: you found a Kubewarden Policy and you want to test and tune the policy settings before deploying it. You want to keep testing these settings in your CI/CD pipelines, and other administrative tasks. The next sections of the documentation shows how these personas can test Kubewarden policies.","title":"Policy testing","component":"admission-controller","version":"1.29","name":"index","url":"/admission-controller/1.29/en/tutorials/testing-policies/index.html","titles":[{"text":"Policy testing personas","hash":"_policy_testing_personas","id":1}],"keyword":"[\"kubewarden\", \"persons\", \"policy author\", \"cluster operator\"]"},"80":{"id":80,"text":"Currently, .NET Core has experimental support for the WebAssembly WASI platform. This is from the dotnet-wasi-sdk project. You don’t need a Windows installation to write or run .NET Core code. Everything can be done also on a Linux or on an macOS machine. Policy authors can use the following resources: Kubewarden .NET Core SDK: this provides a set of objects and functions that simplify the process of writing policies. Kubewarden policy example: this is an example of a working policy. No limitations are known. The SDK enables writing both validating and mutating policies. It’s possible to use the KubernetesClient.Models library to deal with the Kubernetes objects. Currently, we don’t have a project template that can scaffold a C# policy. Please, open an issue if interested.","title":"C#","component":"admission-controller","version":"1.29","name":"dotnet","url":"/admission-controller/1.29/en/tutorials/writing-policies/dotnet.html","titles":[{"text":"Current state","hash":"_current_state","id":1},{"text":"Project template","hash":"_project_template","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"c#\", \".net\"]"},"81":{"id":81,"text":"This section introduces Kubewarden policies using traditional computing analogies. A Kubewarden policy is like a program that does one job. It receives input data, performs computation with that data and returns a result. The input data is Kubernetes admission requests. The result of the computation is a validation response, which tells Kubernetes whether to accept, reject, or mutate the input data, the admission request. The policy-server component of Kubewarden performs these operations. The policy server doesn’t include any data processing capability. You add processing capabilities at runtime with add-ons. These add-ons are the Kubewarden policies. So, a Kubewarden policy is like a traditional plug-in of the \"policy server\" program. To recap: Kubewarden policies are plug-ins that expose a set of well-defined functionalities (validate a Kubernetes request object, validate policy settings provided by the user, and other functions) using a well-defined API Policy server is the \"main\" program that loads the plug-ins (aka policies) and uses their exposed functionalities to accept, reject, or mutate Kubernetes requests Writing Kubewarden policies consists of writing the validation business logic and then exposing it through a well-defined API. You supply Kubewarden policies as WebAssembly binaries. Policy authors can write policies using any programming language that supports WebAssembly as a compilation target. The list of supported language is constantly evolving, this page provides a nice overview of the WebAssembly landscape. Currently, WebAssembly doesn’t have an official way to share complex data types between the host and a WebAssembly guest. To overcome this limitation Kubewarden policies use the waPC project, which provides a bi-directional communication channel. So, your programming language of choice must have an available waPC guest SDK. If that’s not the case, feel free to reach out. The project team can help you overcome this limitation.","title":"Writing Kubewarden policies","component":"admission-controller","version":"1.29","name":"index","url":"/admission-controller/1.29/en/tutorials/writing-policies/index.html","titles":[{"text":"Programming language requirements","hash":"_programming_language_requirements","id":1}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\"]"},"82":{"id":82,"text":"The Kubewarden metadata file, metadata.yaml, is a configuration file containing important information and settings related to the policies used within Kubewarden. This documentation is overview of the purpose and usage of the metadata file. The policy metadata.yaml file has defaults for the policy, as well as metadata such as author and description, set by the policy author. The kwctl annotate command uses the file to annotate the .wasm file containing the policy. Therefore, all the relevant information required to run the policy is available. More information about how to annotate the policy is in the Distributing Policies guide. When policy users want to use a policy, they generate a YAML manifest using kwctl scaffold. This command reads the policy metadata embedded in the shipped Wasm module, performs checks, and returns a YAML manifest that the author can use as-is or modify. As a policy author, you can adapt the metadata.yaml file provided during the scaffolding of your policy. See the following example of a metadata.yaml: rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\"] mutating: false contextAwareResources: [] executionMode: kubewarden-wapc policyType: kubernetes backgroundAudit: true annotations: # kubewarden specific: io.kubewarden.policy.title: My policy io.kubewarden.policy.version: 0.1.0 # should match the OCI tag io.kubewarden.policy.description: Short description io.kubewarden.policy.author: myself io.kubewarden.policy.url: https://github.com/yourorg/my-policy io.kubewarden.policy.source: https://github.com/yourorg/my-policy io.kubewarden.policy.license: Apache-2.0 # The next two annotations are used in the policy report generated by the # Audit scanner. Severity indicates policy check result criticality and # Category indicates policy category. See more here at docs.kubewarden.io io.kubewarden.policy.severity: medium io.kubewarden.policy.category: Resource validation # artifacthub specific: (optional, to release in Artifact Hub) io.kubewarden.policy.ociUrl: ghcr.io/myorg/my-policy io.artifacthub.displayName: Policy Name io.artifacthub.resources: Pod io.artifacthub.keywords: pod, cool policy, kubewarden The metadata file includes a flag, backgroundAudit, that enables the background audit checks for a specific policy. By default, this flag is set to true. There are policies that, due to the way they work or to the type of events they’re concerned with, should have this field set to false. You can find more information in the audit scanner documentation, under the limitations section. Within the metadata file, using the contextAwareResources field, users can define which Kubernetes resources the policy can access. For example, if the policy needs access to the Namespace resource. The policy author can define the contextAwareResources as: [...] contextAwareResources: - apiVersion: v1 kind: Namespace [...] The metadata file has a flag, mutating, that lets users configure a policy as either mutating or non-mutating. A mutating policy modifies the incoming requests or the resources being managed. A non-mutating policy observes and enforces restrictions without making any changes. This distinction is crucial in determining how policies interact with the Kubernetes resources and their impact on the cluster. The metadata file has a flag, policyType, that lets users to mark a policy as either kubernetes or raw. A Kubernetes policy is a policy that validates Kubernetes resources. A Raw policy is a policy that validates arbitrary JSON documents. By default, if not specified by the user, this field is set to kubernetes when annotating a policy. Refer to the Raw Policies section for more information. The metadata file provides users with the ability to define the rules within the rules field, which determines the resource types to which the policy applies. This feature empowers users to exercise precise control over policy enforcement, guaranteeing that policies are only applied to the intended resource types. With this fine-grained control, users can guarantee that policies are targeted accurately, aligning with their specific requirements and avoiding any unintended application of policies to unrelated resource types.","title":"Policy metadata","component":"admission-controller","version":"1.29","name":"metadata","url":"/admission-controller/1.29/en/tutorials/writing-policies/metadata.html","titles":[{"text":"Enabling background audit checks","hash":"_enabling_background_audit_checks","id":1},{"text":"Defining Kubernetes resources that policies can access","hash":"_defining_kubernetes_resources_that_policies_can_access","id":2},{"text":"Specifying policies as mutating or non-mutating","hash":"_specifying_policies_as_mutating_or_non_mutating","id":3},{"text":"Specify policy type as Kubernetes or Raw","hash":"_specify_policy_type_as_kubernetes_or_raw","id":4},{"text":"Defining resource type targets","hash":"_defining_resource_type_targets","id":5}],"keyword":"[\"kubewarden\", \"kubernetes policy development\", \"policy metadata\"]"},"83":{"id":83,"text":"Kubewarden Policies can be written with any programming language that can produce WebAssembly modules targeting the WASI interface. Please open a Pull Request or a GitHub Issue here if you know of a programming language that can be used to write Kubewarden Policies.","title":"Other languages","component":"admission-controller","version":"1.29","name":"other-languages","url":"/admission-controller/1.29/en/tutorials/writing-policies/other-languages.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"other languages\"]"},"84":{"id":84,"text":"As stated on the official website: Swift is a general-purpose programming language that’s approachable for newcomers and powerful for experts. It is fast, modern, safe, and a joy to write. The swift compiler doesn’t yet have WebAssembly support, however the SwiftWasm project provides a patched compiler with this capability. The SwiftWasm team is working to merge these changes into the Swift project. In the meantime, you can use the tool chain provided by the SwiftWasm project to build Kubewarden policies. You don’t need an Apple system to write or run Swift code. Everything can be done also on a Linux machine or on Windows (by using Docker for Windows). Policy authors can use the following resources: Kubewarden Swift SDK: this provides a set of structs and functions that simplify the process of writing policies. Kubewarden Swift template project: use this template to scaffold a Swift-based policy. The template comes with a working policy and a set of GitHub Actions to automate its lifecycle. There are no severe limitations with Swift, only some minor issues: It’s critical to perform some post-build optimizations before using the policy \"in production\": Strip the Wasm module via wasm-strip to reduce its size Optimize the Wasm module via wasm-opt The GitHub Action provided by the template repository already takes care of that. This GitHub repository branch has a Kubewarden Policy written in Swift.","title":"Swift","component":"admission-controller","version":"1.29","name":"swift","url":"/admission-controller/1.29/en/tutorials/writing-policies/swift.html","titles":[{"text":"Current State","hash":"_current_state","id":1},{"text":"More examples","hash":"_more_examples","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"swift\"]"},"85":{"id":85,"text":"As stated on the official website: TypeScript extends JavaScript by adding types. By understanding JavaScript, TypeScript saves you time catching errors and providing fixes before you run code. TypeScript can’t target WebAssembly, however AssemblyScript is a subset of TypeScript designed for WebAssembly. Currently, there’s no Kubewarden SDK for AssemblyScript. Resources permitting, we hope to have on in the near future. However, there are limitations affecting AssemblyScript: There’s no built-in way to serialize and deserialize Classes to and from JSON. See this issue It seems there’s no JSON path library for AssemblyScript This GitHub repository branch has a Kubewarden Policy written in AssemblyScript. This repository has a series of GitHub Actions that automate the following tasks: Run unit tests and code linting on pull requests and after code is merged into the main branch Build the policy in release mode and push it to an OCI registry as an artifact","title":"Typescript","component":"admission-controller","version":"1.29","name":"typescript","url":"/admission-controller/1.29/en/tutorials/writing-policies/typescript.html","titles":[{"text":"Current state","hash":"_current_state","id":1},{"text":"Example","hash":"_example","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"typescript\"]"},"86":{"id":86,"text":"During evaluation, Kubewarden policies can access extra capabilities offered by the host environment. This mechanism uses an approach similar to traditional RPC. This is what happens when a request is issued by a Kubewarden policy: Kubewarden policy: Invokes the capability offered by the host environment. The invocation is a blocking operation, hence the policy code will wait until the host provides an answer. Host environment: A capability invocation is received. The host performs the operation. The host provides an answer to the policy, which could be either a success or a failure. Kubewarden policy: The code receives the answer from the host and resumes execution. The host response is handled accordingly. The host capabilities feature is implemented using waPC. Each capability uses these details: waPC function name: The name of the capability exposed by the host. Input payload: The body of the request made by the policy. This is always encoded in JSON format. Output payload: The body of the response coming from the host. This is always encoded in JSON format. When something goes wrong, the host replies with an error. This is done using the error type of the programming language used by the policy. The error is a UTF-8 string that holds an explanation message.","title":"Host capabilities specification","component":"admission-controller","version":"1.29","name":"01-intro-host-capabilities","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/01-intro-host-capabilities.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"host capabilities\"]"},"87":{"id":87,"text":"Kubewarden implements support for the Sigstore project. This allows implementing a \"Secure Supply Chain\" for your cluster. Part of the function of the secure supply chain is to ensure that all container images running in the cluster are signed and verified. This proves that they come from their stated authors, with no tampering. For further reading, check the docs on how we implement a Secure Supply Chain for the policies themselves. Sigstore signatures are stored inside of container registries, next to the OCI object being signed. They can be a container image or a more generic OCI artifact, like a Kubewarden policy. When an object is signed, its signatures are stored as layers of an OCI object created by Sigstore. Policies needing to check signatures of containers need to check those layers, and need to pull the signature layers to check the signatures themselves. Obtaining and operating with those OCI layers needs to happen outside the WebAssembly guest (the policy). Hence, this is done by the WebAssembly runtime, Kubewarden’s policy-server or kwctl. The different language SDKs for Kubewarden policies take care of this. They provide functions for verification of container image, Kubewarden policies, Helm charts and other kinds of OCI artifact. This ensures a safe and tested code path for verification. Pulling data from a registry and cryptographically verifying signatures can be time and computationally expensive, so the WebAssembly runtime (PolicyServer, kwctl) ensures both signature pulls and verification computations are cached. The cached entries are automatically expired after 60 seconds to help prevent stale data from being served. Signature verification results are cached for one minute. The SDKs provide functions similar to the following: verify_pub_keys_image( image_url: string, vector_of_pub_keys: vector<string>, vector_of_sigstore_annotations: Vector<(key, value: string)> ) returns (is_trusted: bool, digest_of_verified_image: string) verify_keyless_exact_match( image_url: string, vector_of_tuples_issuer_and_subject: vector<(issuer, subject: string)>, vector_of_sigstore_annotations: vector<(key, value: string)> ) returns (is_trusted: bool, digest_of_verified_image: string) Both functions verify that the image is signed and satisfy the constraints. On success, the functions return the digest of the verified image. It is now policy responsibility to ensure that containers are instantiated from that digest, and not from a tag that may not match that checksum digest (and therefore be compromised). The Kubewarden team provides a verifier policy that enforces Sigstore signatures for all containers. It’s built using Rust and with the Rust SDK. The policy ensures that the containers are signed, and optionally, mutates the requests. The mutation appends the verified checksum to the tag of the image. Check the documentation for specifics. This policy may cover all your needs, but in case you would prefer a different UX, of course you can build on top of it or any of the other SDKs. In case you are implementing your own language SDK, these are the functions a policy, that verifies signatures, can use: { type: \"SigstorePubKeyVerify\", # **mandatory**: image URI to verify \"image\": string, \"pub_keys\": [ # PEM-encoded public keys string ], # optional: \"annotations\": [ # signature annotations { \"key\": string, \"value\": string }, ] } { # true if image verified \"is_trusted\": boolean, # digest of verified image \"digest\": string } { type: \"SigstoreKeylessVerify\", # mandatory: image URI to verify \"image\": string, \"keyless\": [ # list of (issuer, subject) tuples { # OIDC issuer \"issuer\": string, # signature subject (mail, CI URL, ...) \"subject\": string } ], # optional: \"annotations\": [ # signature annotations { \"key\": string, \"value\": string }, ] } { # true if image verified \"is_trusted\": boolean, # digest of verified image \"digest\": string } { type: \"SigstoreKeylessPrefixVerify\", # mandatory: image URI to verify \"image\": string, \"keyless_prefix\": [ # list of (issuer, url_prefix) tuples { # OIDC issuer \"issuer\": string, # URL Prefix of subject (CI URL, ...) \"url_prefix\": string } ], # optional: \"annotations\": [ # signature annotations { \"key\": string, \"value\": string }, ] } { # true if image verified \"is_trusted\": boolean, # digest of verified image \"digest\": string } { type: \"SigstoreGithubActionsVerify\", # mandatory: image URI to verify \"image\": string, # GitHub owner \"owner\": string, # optional: # GitHub repository \"repo\": string \"annotations\": [ # signature annotations { \"key\": string, \"value\": string }, ] } { # true if image verified \"is_trusted\": boolean, # digest of verified image \"digest\": string } { type: \"SigstoreCertificateVerify\", # mandatory: image URI to verify \"image\": string, # PEM-encoded certificated used to # verify the signature. # The certificate is UTF-8 encoded. # It's an array of bytes of the unicode code pointers of a PEM encoded # certificate string. \"certificate\": [byte(int), ..., byte(int)], # Optional - certificate chain used to # verify the provided certificate. # When not specified, the certificate # is assumed to be trusted. # The certificate is UTF-8 encoded. # It's an array of bytes of the unicode code pointers of a PEM encoded # certificate string. \"certificate_chain\": [ [byte(int), ..., byte(int)], ... [byte(int), ..., byte(int)] ], # Require the signature layer to have # a Rekor bundle. # Having a Rekor bundle allows further # checks to be performed, e.g. ensuring # the signature has been produced during # the validity time frame of the cert. # Recommended to set to `true` require_rekor_bundle: bool, # Optional: \"annotations\": [ # signature annotations { \"key\": string, \"value\": string }, ] } { # true if image verified \"is_trusted\": boolean, # digest of verified image \"digest\": string } { \"SigstorePubKeyVerify\": { # **mandatory**: image URI to verify \"image\": string, \"pub_keys\": [ # PEM-encoded public keys string ], # optional: \"annotations\": [ # signature annotations { \"key\": string, \"value\": string }, ] } } { # true if image verified \"is_trusted\": boolean, # digest of verified image \"digest\": string } { \"SigstoreKeylessVerify\": { # mandatory: image URI to verify \"image\": string, \"keyless\": [ # list of (issuer, subject) tuples { # OIDC issuer \"issuer\": string, # signature subject (mail, CI URL, ...) \"subject\": string } ], # optional: \"annotations\": [ # signature annotations { \"key\": string, \"value\": string }, ] } } { # true if image verified \"is_trusted\": boolean, # digest of verified image \"digest\": string }","title":"Signature verifier policies","component":"admission-controller","version":"1.29","name":"02-signature-verifier-policies","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/02-signature-verifier-policies.html","titles":[{"text":"Caching","hash":"_caching","id":1},{"text":"An example","hash":"_an_example","id":2},{"text":"WaPC protocol contract","hash":"_wapc_protocol_contract","id":3},{"text":"waPC function - v2/verify","hash":"_wapc_function_v2verify","id":4},{"text":"SigstorePubKeyVerify input","hash":"_sigstorepubkeyverify_input","id":5},{"text":"SigstorePubKeyVerify output","hash":"_sigstorepubkeyverify_output","id":6},{"text":"SigstoreKeylessVerify input","hash":"_sigstorekeylessverify_input","id":7},{"text":"SigstoreKeylessVerify output","hash":"_sigstorekeylessverify_output","id":8},{"text":"SigstoreKeylessPrefixVerify input","hash":"_sigstorekeylessprefixverify_input","id":9},{"text":"SigstoreKeylessPrefixVerify output","hash":"_sigstorekeylessprefixverify_output","id":10},{"text":"SigstoreGithubActionsVerify input","hash":"_sigstoregithubactionsverify_input","id":11},{"text":"SigstoreGithubActionsVerify output","hash":"_sigstoregithubactionsverify_output","id":12},{"text":"SigstoreCertificateVerify input","hash":"_sigstorecertificateverify_input","id":13},{"text":"SigstoreCertificateVerify output","hash":"_sigstorecertificateverify_output","id":14},{"text":"waPC function - v1/verify","hash":"_wapc_function_v1verify","id":15},{"text":"SigstorePubKeyVerify input","hash":"_sigstorepubkeyverify_input_2","id":16},{"text":"SigstorePubKeyVerify output","hash":"_sigstorepubkeyverify_output_2","id":17},{"text":"SigstoreKeylessVerify input","hash":"_sigstorekeylessverify_input_2","id":18},{"text":"SigstoreKeylessVerify output","hash":"_sigstorekeylessverify_output_2","id":19}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"signature verifier\"]"},"88":{"id":88,"text":"Container registries can be used to distribute many types of OCI objects. From well-known container images to generic OCI Artifacts. OCI Artifacts are used to store objects such as Kubewarden policies, Helm charts, and more. These are the capabilities exposed by the Kubewarden host, to interact with container registries. This callback computes the digest of an OCI manifest. The digest can be used to identify an object stored in an OCI registry. This is an immutable way, as opposed to tags which are mutable. Computing the digest involves a series of network requests between the Kubewarden policy host and the remote registry. These operations can be time expensive, so the results are cached for 1 minute. Interactions with private registries require the Kubewarden policy host to authenticate against the remote registry. The policy host will use the same set of credentials used to fetch policies from the remote registry. This is the description of the waPC protocol used to expose this capability: # OCI URI - JSON encoded string string { # digest of the OCI object \"digest\": string } For example, when requesting the manifest digest of the busybox:latest image, the payload would be: Input payload: \"busybox:latest\" Output payload: { \"digest\": \"sha256:69e70a79f2d41ab5d637de98c1e0b055206ba40a8145e7bddb55ccc04e13cf8f\"} This callback fetches the OCI objects manifest. When available, this information can be used to identify specific images manifests, for one or more platforms. Or a single image manifest for the image. Fetching this information involves network requests between the Kubewarden policy host and the remote registry. These operations can be time expensive so the results are cached for 1 minute. Interactions with private registries require the Kubewarden policy host to authenticate against the remote registry. The policy host uses the same set of credentials as that used to fetch policies from the remote registry. This is the description of the waPC protocol used to expose this capability: # OCI URI - JSON encoded string string { \"schemaVersion\": 2, \"mediaType\": \"application/vnd.oci.image.index.v1+json\", \"manifests\": [ { \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\", \"digest\": \"sha256:7d5e84b9314ba7058bfa209881919146ffc4a89c5ba14cfa8270a18c8d418c44\", \"size\": 1048, \"platform\": { \"architecture\": \"amd64\", \"os\": \"linux\" } }, { \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\", \"digest\": \"sha256:ae1e98105555f3983496c15c70dafc87639b77830953d6470694b47e0e063e25\", \"size\": 1048, \"platform\": { \"architecture\": \"arm64\", \"os\": \"linux\" } }, { \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\", \"digest\": \"sha256:e9fc0f86e26366abf29fd29e8c09d00df717f9038fd4298eaa39a0a2b4361fa4\", \"size\": 566, \"annotations\": { \"vnd.docker.reference.digest\": \"sha256:7d5e84b9314ba7058bfa209881919146ffc4a89c5ba14cfa8270a18c8d418c44\", \"vnd.docker.reference.type\": \"attestation-manifest\" }, \"platform\": { \"architecture\": \"unknown\", \"os\": \"unknown\" } }, { \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\", \"digest\": \"sha256:e8904ebb2841dc19ae458436eb01ddea3e8d6ea653c7d9476537f4029b1f45a2\", \"size\": 566, \"annotations\": { \"vnd.docker.reference.digest\": \"sha256:ae1e98105555f3983496c15c70dafc87639b77830953d6470694b47e0e063e25\", \"vnd.docker.reference.type\": \"attestation-manifest\" }, \"platform\": { \"architecture\": \"unknown\", \"os\": \"unknown\" } } ] } OR { \"schemaVersion\": 2, \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\", \"config\": { \"mediaType\": \"application/vnd.oci.image.config.v1+json\", \"digest\": \"sha256:61dc3269b9e8faeea32128560cdbd355e8c1dff31e32abc0223be039c5cc5e2d\", \"size\": 1775 }, \"layers\": [ { \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\", \"digest\": \"sha256:67d998e418791ec2955ec99753eb55f03ca96538976e5ccebfec08eae20056b5\", \"size\": 57033795 }, { \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\", \"digest\": \"sha256:be6185edcab66334dd5c7c2273fd6254100ece960e087541f3dba0616c440038\", \"size\": 188411978 }, { \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\", \"digest\": \"sha256:58a13f6770904193ca67beb50d424e69a39579e1581dbf8e02e1751f3b75f932\", \"size\": 70078992 } ], \"annotations\": { \"org.opencontainers.image.base.digest\": \"sha256:67a7c41ccd5dfcb08face86546f0d25c0740f0d0225e39fecb8bbae8b95b847a\", \"org.opencontainers.image.base.name\": \"docker.io/library/debian:latest\" } } For example, when requesting the manifest of the ghcr.io/kubewarden/policy-server:v1.10.0 image, the payload would be: Input payload: \"ghcr.io/kubewarden/policy-server:v1.10.0\" Output payload: the body of the successful response obtained from the registry. It can be an OCI index image or an OCI image manifest. The details may change depending on the registry and image. This callback fetches the OCI images manifest and its configuration. This information can be used to get the container image manifest and the configuration information used by the container runtime to run it. Fetching this information involves network requests between the Kubewarden policy host and the remote registry. These operations can be time expensive so the results are cached for 1 minute. Interactions with private registries require the Kubewarden policy host to authenticate against the remote registry. The policy host uses the same set of credentials as that used to fetch policies from the remote registry. This is the description of the waPC protocol used to expose this capability: # OCI URI - JSON encoded string string { \"manifest\": { \"schemaVersion\": 2, \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\", \"config\": { \"mediaType\": \"application/vnd.oci.image.config.v1+json\", \"digest\": \"sha256:bc3511804cb29da6333f0187a333eba13a43a3a0a1737e9b50227a5cf057af74\", \"size\": 1592 }, \"layers\": [ { \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\", \"digest\": \"sha256:294efa324e89a020b06df261f77903fb9f46fdee79c54e4f6589f786f6c31bec\", \"size\": 428 }, { \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\", \"digest\": \"sha256:f0936413f7d0757b41777a624e5be83da28789d0c4b8b3f46853ca9c3bb6300f\", \"size\": 422 }, { \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\", \"digest\": \"sha256:cd2adfe5e808335e0c30eff616a9852a94cfbf8ecd455d1b893e1c858ddc3aeb\", \"size\": 22357278 }, { \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\", \"digest\": \"sha256:6c7ec51ccec3d4438c94e697258085ddf825c1e711df4d923b1794794196cf06\", \"size\": 37415 } ] }, \"digest\": \"sha256:6ebc3e17a9804a8d385fee819554ad95a05072d022c5bd2dd27556a5752d47f5\", \"config\": { \"created\": \"2024-06-05T13:48:01.671482413Z\", \"architecture\": \"amd64\", \"os\": \"linux\", \"config\": { \"User\": \"65533:65533\", \"ExposedPorts\": { \"3000/tcp\": {} }, \"Env\": [ \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" ], \"Entrypoint\": [ \"/policy-server\" ], \"WorkingDir\": \"/\" }, \"rootfs\": { \"type\": \"layers\", \"diff_ids\": [ \"sha256:79f61adc25589b7b467a6becca5756f3b722ab7f9d0c18c205e89c08fdc8d45d\", \"sha256:2a5e7791442784b3614921dcb51afdbe94ae9bfd3752e22e5eb81ce731f5bfbf\", \"sha256:0d893e5416389fd105bc81d3694a5d5dbffc41237291df0aaa4efbc26632e91c\", \"sha256:018ce7bd6fd46306e129aca44c1c103675dbe29e3aa842a0b7fb01507e8d02d2\" ] }, \"history\": [ { \"created\": \"2024-06-05T13:48:00.432722149Z\", \"created_by\": \"COPY /etc/passwd /etc/passwd # buildkit\", \"comment\": \"buildkit.dockerfile.v0\" }, { \"created\": \"2024-06-05T13:48:00.469118621Z\", \"created_by\": \"COPY /etc/group /etc/group # buildkit\", \"comment\": \"buildkit.dockerfile.v0\" }, { \"created\": \"2024-06-05T13:48:01.653480931Z\", \"created_by\": \"COPY --chmod=0755 policy-server-x86_64 /policy-server # buildkit\", \"comment\": \"buildkit.dockerfile.v0\" }, { \"created\": \"2024-06-05T13:48:01.671482413Z\", \"created_by\": \"ADD Cargo.lock /Cargo.lock # buildkit\", \"comment\": \"buildkit.dockerfile.v0\" }, { \"created\": \"2024-06-05T13:48:01.671482413Z\", \"created_by\": \"USER 65533:65533\", \"comment\": \"buildkit.dockerfile.v0\", \"empty_layer\": true }, { \"created\": \"2024-06-05T13:48:01.671482413Z\", \"created_by\": \"EXPOSE map[3000/tcp:{}]\", \"comment\": \"buildkit.dockerfile.v0\", \"empty_layer\": true }, { \"created\": \"2024-06-05T13:48:01.671482413Z\", \"created_by\": \"ENTRYPOINT [\\\"/policy-server\\\"]\", \"comment\": \"buildkit.dockerfile.v0\", \"empty_layer\": true } ] } } For example, when requesting the image manifest and configuration of the ghcr.io/kubewarden/policy-server:v1.13.0 image, the payload would be: Input payload: \"ghcr.io/kubewarden/policy-server:v1.13.0\" Output payload: the body of the successful response obtained from the registry. It will contain the OCI image manifest , image digest and the OCI image configuration.","title":"Container registry capabilities","component":"admission-controller","version":"1.29","name":"03-container-registry","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/03-container-registry.html","titles":[{"text":"Get OCI manifest digest","hash":"_get_oci_manifest_digest","id":1},{"text":"Caching","hash":"_caching","id":2},{"text":"Authentication","hash":"_authentication","id":3},{"text":"Communication protocol","hash":"_communication_protocol","id":4},{"text":"waPC function - v1/manifest_digest input","hash":"_wapc_function_v1manifest_digest_input","id":5},{"text":"waPC function - v1/manifest_digest output","hash":"_wapc_function_v1manifest_digest_output","id":6},{"text":"OCI manifest","hash":"_oci_manifest","id":7},{"text":"Caching","hash":"_caching_2","id":8},{"text":"Authentication","hash":"_authentication_2","id":9},{"text":"Communication protocol","hash":"_communication_protocol_2","id":10},{"text":"waPC function - v1/oci_manifest input","hash":"_wapc_function_v1oci_manifest_input","id":11},{"text":"waPC function - v1/oci_manifest output","hash":"_wapc_function_v1oci_manifest_output","id":12},{"text":"OCI manifest and config","hash":"_oci_manifest_and_config","id":13},{"text":"Caching","hash":"_caching_3","id":14},{"text":"Authentication","hash":"_authentication_3","id":15},{"text":"Communication protocol","hash":"_communication_protocol_3","id":16},{"text":"waPC function - v1/oci_manifest_config input","hash":"_wapc_function_v1oci_manifest_config_input","id":17},{"text":"waPC function - v1/oci_manifest_config output","hash":"_wapc_function_v1oci_manifest_config_output","id":18}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"registry capabilities\"]"},"89":{"id":89,"text":"Kubewarden policies cannot make network request from within the WebAssembly execution context. Network operations can be done by leveraging a series of capabilities exposed by the host. This function performs a DNS lookup starting from the FQDN given by the policy. Lookup results are cached for 1 minute. This is the description of the waPC protocol used to expose this capability: # hostname - JSON encoded string string { # list of IPs \"ips\": [string] } All the IP addresses associated with the given FQDN, are going to be returned as strings in the response. Both IPv4 and IPv6 entries are returned as part of the same response. For example, when requesting the manifest digest of the busybox:latest image, the payloads would be: Input payload: \"google.com\" Output payload: { \"ips\": [\"127.0.0.1\"]}","title":"Network capabilities","component":"admission-controller","version":"1.29","name":"04-net","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/04-net.html","titles":[{"text":"DNS host lookup","hash":"_dns_host_lookup","id":1},{"text":"Caching","hash":"_caching","id":2},{"text":"Communication protocol","hash":"_communication_protocol","id":3},{"text":"waPC function - v1/dns_lookup_host input","hash":"_wapc_function_v1dns_lookup_host_input","id":4},{"text":"waPC function - v1/dns_lookup_host output","hash":"_wapc_function_v1dns_lookup_host_output","id":5}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"network capabilities\"]"},"90":{"id":90,"text":"Because of Wasm constraints at the time of writing, some cryptographic libraries can’t be compiled to Wasm. In the meantime, Kubewarden policies needing those libraries can perform callbacks to evaluate the cryptographic functions on the host side. They receive the result, and continue with their tasks. The Wasm host relies on rustls-wepki for the implementation of x.509 and PKI certificates. This means: Key usage: We have elected to accept any key usage, which helps covering several use cases (as usual, please get in contact if you would like to discuss different approaches). Certificate chains: A certificate will be considered untrusted if its intermediate CA is expired. Certificate expiration dates: If a certificate chain is provided, we will always validate the certificate’s entire validity period. Wepki does not check the expiration of the root CA. We always validate the certificate, and if no chain is provided, the Mozilla’s CA is used. If you are implementing your own language SDK, these are the functions performing cryptographic checks exposed by the host: # Certificate: { # **mandatory**: Which encoding is used by the certificate # Either the string \"Pem\" or \"Der\". \"encoding\": string, # Actual certificate # The certificate is UTF-8 encoded. # It's an array of bytes of the unicode code pointers of a PEM/DER encoded # certificate string. \"data\": [byte(int), ..., byte(int)] } { # **mandatory**: PEM-encoded certificate to verify \"cert\": Certificate, # optional: \"cert_chain\": [ # list of certs, ordered by trust # usage (intermediates first, root last) # If not provided, Mozilla's CA is used. Certificate, ... Certificate, ], # RFC 3339 time format string, to check expiration # against. # If missing, time is now. \"not_after\": string } { # true if certificate verified: \"trusted\": boolean, # empty if trusted == true: \"reason\": string }","title":"Cryptographic capabilities","component":"admission-controller","version":"1.29","name":"05-crypto","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/05-crypto.html","titles":[{"text":"Behavior","hash":"_behavior","id":1},{"text":"WaPC protocol contract","hash":"_wapc_protocol_contract","id":2},{"text":"waPC function - v1/is_certificate_trusted input","hash":"_wapc_function_v1is_certificate_trusted_input","id":3},{"text":"waPC function - v1/is_certificate_trusted output","hash":"_wapc_function_v1is_certificate_trusted_output","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"cryptographic capabilities\"]"},"91":{"id":91,"text":"Kubewarden context aware policies require access to resources from the Kubernetes cluster where they are running. For that, the Kubewarden SDKs expose functions that use the waPC communication protocol to talk with the host system asking for data about the cluster. Internally, the SDKs rely on these functions exposed by the policy host environment: list_resources_by_namespace : Given a resource type and a namespace, list all the resources of that type that are defined in it. This cannot be used to list cluster-wide resources, like Namespace. list_resources_all: Given a resource type, list all the resources of that type that are defined inside the whole cluster. This can be used to list cluster-wide resources, like Namespace. get_resource: Find the exact resource identified by the given resource type, given name and an optional namespace identifier. This guest-host communication is performed using the standard waPC host calling mechanism. Any guest implementing the waPC intercommunication mechanism is able to request this information from the host. waPC has the following function arguments when performing a call from the guest to the host: Binding - kubewarden Namespace - kubernetes Operation - list_resources_all, list_resources_by_namespace, or get_resource Payload - input payload - see below and returns: Payload - output payload - see below By contract, or by convention, policies can retrieve the Kubernetes cluster information by calling the host in the following ways: { # API Group version. Use `v1` for the `core` group and `groupName/groupVersion` for all other groups \"api_version\": string, # Resource kind \"kind\": string, # Label selector to filter the resources \"label_selector\": string, # Field selector to filter the resources \"field_selector\": string } Return a Kubernetes List, which is a collection of Kubernetes objects of the same type. Use this API function to fetch cluster-wide resources (e.g. namespaces) { # API Group version. Use `v1` for the `core` group and `groupName/groupVersion` for all other groups \"api_version\": string, # Resource kind \"kind\": string, # Namespace where the requested resource lives in \"namespace\": string, # Label selector to filter the resources \"label_selector\": string, # Field selector to filter the resources \"field_selector\": string } Return a Kubernetes List, which is a collection of Kubernetes objects of the same type. This API function returns an error when used to fetch cluster-wide resources (for example, namespaces). Use the list_resources_all when dealing with cluster-wide resources. The result of the get_resource operation is cached for five seconds by default to improve performance and reduce unnecessary load on the Kubernetes API server. Use the disable_cache field to bypass the cache when fresh data is required. { # API Group version. Use `v1` for the `core` group and `groupName/groupVersion` for all other groups \"api_version\": string, # Singular PascalCase name of the resource \"kind\": string, # Namespace scoping the search \"namespace\": string, # The name of the resource \"name\": string, # Disable caching of results obtained from Kubernetes API Server \"disable_cache\": bool } Result of GET /apis/$api_version/namespaces/$namespace/$kind/$name","title":"Kubernetes capabilities","component":"admission-controller","version":"1.29","name":"06-kubernetes","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/06-kubernetes.html","titles":[{"text":"waPC protocol contract","hash":"_wapc_protocol_contract","id":1},{"text":"Operation - list_resources_all","hash":"_operation_list_resources_all","id":2},{"text":"Input","hash":"_input","id":3},{"text":"Output","hash":"_output","id":4},{"text":"Operation - list_resources_by_namespace","hash":"_operation_list_resources_by_namespace","id":5},{"text":"Input","hash":"_input_2","id":6},{"text":"Output","hash":"_output_2","id":7},{"text":"Operation - get_resource","hash":"_operation_get_resource","id":8},{"text":"Caching","hash":"_caching","id":9},{"text":"Input","hash":"_input_3","id":10},{"text":"Output","hash":"_output_3","id":11}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy specification\", \"kubernetes capabilities\"]"},"92":{"id":92,"text":"The Common Expression Language (CEL) is a general-purpose expression language designed to be fast, portable, and safe to execute. CEL as a language is memory-safe, side-effect free, terminating (programs cannot loop forever), and strong & dynamically typed. You can learn more about CEL at cel.dev, and practice it in the CEL playground. CEL was chosen as the language for Kubernetes validation rules as CEL expressions can be easily inlined into CRD schemas, and compiled and type-checked \"ahead-of-time\" (when CRDs are created and updated). For these reasons and its general characteristics, it’s a perfect candidate for extending the Kubernetes API. Marked as stable with Kubernetes 1.30, one can use CEL on ValidatingAdmissionPolicies and other validation rules. For more info, see the Kubernetes docs here. Kubernetes CEL validation rules have access to several function libraries: CEL standard functions CEL standard macros CEL extended string function library Kubernetes CEL extension libraries, with supplemental functions for lists, regex, URLs, authorizers, quantities, optional types, numerical comparisons, etc. Kubewarden provides cel-policy. This is a policy that builds and bundles the upstream cel-go interpreter, and also the different libraries listed above and available for CEL in Kubernetes from apiextensions-apiserver. In addition, cel-policy bundles a Kubewarden CEL extension library that exposes Kubewarden’s host capabilities as native CEL: Sigstore verification OCI interaction Cryptographic functions Network operations Access to Kubernetes resources This means that cel-policy is a superset of Kubernetes CEL, and backwards-compatible. One can reuse CEL written for vanilla Kubernetes, and/or make use of the features added by Kubewarden. The cel-policy is shipped compiled and behaves as a CEL interpreter. Users of the policy pass the desired CEL expressions in the spec.settings of the (Cluster)AdmissionPolicy, and thanks to CEL features, the expression gets compiled and typed-checked for correctness when creating or updating the (Cluster)AdmissionPolicy. This means there’s no need for custom builds of the cel-policy. The Kubewarden cel-policy: It’s CEL code is backwards-compatible with ValidatingAdmissionPolicies. Contrary to ValidatingAdmissionPolicies, it doesn’t need a binding such as ValidatingAdmissionPolicyBinding, as this is included in Kubewarden’s (Cluster)Admissionpolicies definitions. Can be deployed to clusters that lack ValidatingAdmissionPolicies support. Is context-aware, and makes use of Kubewarden’s fine-grained permissions for context awareness. Is deployed as (Cluster)AdmissionPolicy. Benefits from Kubewarden’s tracing and telemetry on policies. It will be taken into account by the Audit Scanner. Can be developed and tested out-of-cluster thanks to kwctl.","title":"Introduction to CEL","component":"admission-controller","version":"1.29","name":"01-intro-cel","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/01-intro-cel.html","titles":[{"text":"CEL in Kubernetes","hash":"_cel_in_kubernetes","id":1},{"text":"Kubernetes function libraries","hash":"_kubernetes_function_libraries","id":2},{"text":"CEL in Kubewarden: cel-policy","hash":"_cel_in_kubewarden_cel_policy","id":3},{"text":"Benefits of Kubewarden’s cel-policy in comparison with ValidatingAdmissionPolicies","hash":"_benefits_of_kubewardens_cel_policy_in_comparison_with_validatingadmissionpolicies","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"introduction\"]"},"93":{"id":93,"text":"Kubernetes vanilla Validating policies consist of the following resources: ValidatingAdmissionPolicy: describes the logic in CEL. It optionally accepts also parameters in spec.paramKind. ValidatingAdmissionPolicyBinding: scopes the policy. Let’s see a concrete example. These and others can be reused with Kubewarden’s cel-policy with little effort. The following ValidatingAdmissionPolicy comes from the Kubernetes docs. This policy checks that the number of Replicas in Deployments is less or equal to 5. It is bound with a ValidatingAdmissionPolicyBinding so it only affects Namespaces that have a label environment set to test. apiVersion: admissionregistration.k8s.io/v1 kind: ValidatingAdmissionPolicy metadata: name: \"replicalimit-policy.example.com\" spec: failurePolicy: Fail # (1) matchConstraints: # (2) resourceRules: - apiGroups: [\"apps\"] apiVersions: [\"v1\"] operations: [\"CREATE\", \"UPDATE\"] resources: [\"deployments\"] variables: # (3) - name: maxreplicas expression: int(5) validations: # (4) - expression: \"object.spec.replicas \\≤ variables.maxreplicas\" messageExpression: \"'the number of replicast must be less than or equal to ' + string(variables.maxreplicas)\" -- apiVersion: admissionregistration.k8s.io/v1 kind: ValidatingAdmissionPolicyBinding metadata: name: \"replicalimit-binding-test.example.com\" spec: policyName: \"replicalimit-policy.example.com\" validationActions: [Deny] # (5) matchResources: # (6) namespaceSelector: matchLabels: environment: test Here we have an equivalent Kubewarden policy: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: annotations: io.kubewarden.policy.category: Resource validation # (7) io.kubewarden.policy.severity: low # (7) name: \"cel-policy-replica-example\" spec: module: registry://ghcr.io/kubewarden/policies/cel-policy:v1.0.0 failurePolicy: Fail # (1). Defaults to \"Fail\" mode: protect # (5). Defaults to \"protect\" rules: # (2) - apiGroups: [\"apps\"] apiVersions: [\"v1\"] operations: [\"CREATE\", \"UPDATE\"] resources: [\"deployments\"] settings: variables: # (3) - name: \"replicas\" expression: \"object.spec.replicas\" - name: maxreplicas expression: int(5) validations: # (4) - expression: \"variables.replicas ≤ variables.maxreplicas\" messageExpression: \"'the number of replicast must be less than or equal to ' + string(variables.maxreplicas)\" backgroundAudit: true # (7). Defaults to \"true\" namespaceSelector: # (6) matchLabels: environment: test Notice the commented numbers on both the YAML manifests. Let’s expand on them: # VAP field cel-policy field Description 1 failurePolicy failurePolicy Both inform on behaviour when the policy server errors. Not to confuse with (5). 2 matchConstraints rules Both accept the same RuleWithOperations that informs on what kind of Resource the policy applies to. 3 variables settings.variables In Kubewarden’s cel-policy, expressions that define variables are separated into settings.variables. Apart from that, they are equivalent. 4 validations settings.validations In Kubewarden’s cel-policy, expressions that define validations are separated into settings.validations. Apart from that, they are equivalent. 5 validationActions mode mode has as options protect and monitor. Auditing is more full featured in Kubewarden, see (7). 6 matchResources namespaceSelector, objectSelector Define ways to constraint using Selectors. Kubewarden’s policies have them as namespaceSelector and objectSelector. 7 auditAnnotations backgroundAudit, annotations These Kubewarden fields set the policy usage in Audit Scanner, and its category and severity for PolicyReports. 8 matchConditions matchConditions Kubewarden’s policies have matchConditions. --- Kubewarden-only features For other features, see the rest of tutorial CEL examples. You can use the kwctl tool to migrate a VAP policy to Kubewarden. This VAP migration how-to describes how to do so. There are some VAP features that aren’t yet implemented. If look forward to them, please get in contact with us. These are: VAP authorizer library. VAP Parameters (ValidatingAdmissionPolicy spec.paramKind & ValidatingAdmissionPolicyBinding spec.paramRef). VAP Audit Annotations (ValidatingAdmissionPolicy spec.auditAnnotations when ValidatingAdmissionPolicyBinding spec.validationActions is set to \"Audit\"). This is covered by Kubewarden’s Audit Scanner and PolicyReports, which allows to audit resources already in the cluster. CEL resource constraints and estimated cost limit. This is partially covered by Kubewarden’s general policy timeout protection. As normal, we can deploy our policy by instantiating its manifest: $ kubectl apply -f ./cel-policy-example.yaml And then test it by instantiating a deployment: $ kubectl apply -f - <<EOF apiVersion: v1 kind: Namespace metadata: name: test labels: environment: test --- apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment namespace: test spec: replicas: 6 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.14.2 EOF namespace/test created Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-cel-policy-replica-example.kubewarden.admission\" denied the request: The number of replicas must be less than or equal to 5","title":"Reusing ValidatingAdmissionPolicies","component":"admission-controller","version":"1.29","name":"02-reusing-vap","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/02-reusing-vap.html","titles":[{"text":"ValidatingAdmissionPolicy","hash":"_validatingadmissionpolicy","id":1},{"text":"Kubewarden’s cel-policy","hash":"_kubewardens_cel_policy","id":2},{"text":"Yet to be implemented equivalences","hash":"_yet_to_be_implemented_equivalences","id":3},{"text":"Applying the policy","hash":"_applying_the_policy","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"ValidatingAdmissionPolicies\"]"},"94":{"id":94,"text":"Kubewarden’s cel-policy supports the context awareness feature. The policy has the capability to read cluster information and take decisions based on other existing resources besides the resource that triggered the policy evaluation via admission request. To achieve this, we can use the Kubewarden’s CEL extension libraries for host capabilities included in the policy. Let’s write a policy that, upon creation or update of Ingresses, checks that Ingress is unique, so hosts have at most one Ingress rule. For that, we declare that the policy is context-aware. We also declare the fine-grained permissions we need to read other Ingress resources. This is achieved with spec.contextAwareResources (1). We can get a starting point as usual by using kwctl: $ kwctl scaffold manifest -t ClusterAdmissionPolicy \\ registry://ghcr.io/kubewarden/policies/cel-policy:v1.0.0` \\ --allow-context-aware Which then we can edit to be relevant to our Ingress resources: ./cel-policy-ingress.yaml apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: \"unique-ingress\" annotations: io.kubewarden.policy.category: Best practices io.kubewarden.policy.severity: low spec: module: ghcr.io/kubewarden/policies/cel-policy:v1.0.0 failurePolicy: Fail rules: - apiGroups: [\"networking.k8s.io\"] apiVersions: [\"v1\"] resources: [\"ingresses\"] operations: [\"CREATE\", \"UPDATE\"] contextAwareResources: # (1) - apiVersion: networking.k8s.io/v1 kind: Ingress Now, we need to write the CEL code that will fetch the existing Ingresses in the cluster. For that, we use the [Kubewarden CEL extension library](https://github.com/kubewarden/cel-policy?tab=readme-ov-file#host-capabilities). Particularly, the kw.k8s host capabilities, which allows us to query the cluster for GroupVersionKinds. You can see the available docs for the CEL functions [here](https://pkg.go.dev/github.com/kubewarden/cel-policy/internal/cel/library). The library uses a builder pattern just as the upstream Kubernetes CEL extensions; calling a CEL function method returns a CEL object which on its own has specific function methods. This simplifies being certain of the scope and returns of our CEL code. In this case, we will use kw.k8s.apiVersion(\"v1\").kind(\"Ingress\"); here we call the apiVersion() function of the kw.k8s library, which returns us a <ClientBuilder> object. This object has the <ClientBuilder>.kind() method, that returns a list of all resources, in an array called items. With that, we save the list of Ingresses in the cluster in a variable: variables: - name: knownIngresses expression: kw.k8s.apiVersion(\"networking.k8s.io/v1\").kind(\"Ingress\").list().items Then, we build a list of hosts from those Ingresses. Note that there can be several hosts per Ingress, so this expression holds an array of arrays (which is a current limitation of the CEL language): variables: - name: knownHosts expression: | variables.knownIngresses.map(i, i.spec.rules.map(r, r.host)) Yet, this doesn’t take care of UPDATE operations correctly; for that, we need to remove the current object and extract the hosts from the remaining Ingresses. We can do that with a filter() on the current object at object. With this, UPDATE operations are correctly checked. This also means that the policy will correctly report results to the Audit Scanner, too. It will look like this: variables: - name: knownHosts expression: | variables.knownIngresses .filter(i, (i.metadata.name != object.metadata.name) && (i.metadata.namespace != object.metadata.namespace)) .map(i, i.spec.rules.map(r, r.host)) We also need a list of hosts in the current Ingress request to compare against: variables: - name: desiredHosts expression: | object.spec.rules.map(r, r.host) With those 2 variables, we can do a set intersection between the known hosts and the desired hosts, and if there’s any, we reject: validations: - expression: | !variables.knownHost.exists_one(hosts, sets.intersects(hosts, variables.desiredHosts)) message: \"Cannot reuse a host across multiple ingresses\" Putting it all together, the policy looks as follows: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: \"unique-ingress\" annotations: io.kubewarden.policy.category: Best practices io.kubewarden.policy.severity: low spec: module: ghcr.io/kubewarden/policies/cel-policy:v1.0.0 failurePolicy: Fail rules: - apiGroups: [\"networking.k8s.io\"] apiVersions: [\"v1\"] resources: [\"ingresses\"] operations: [\"CREATE\", \"UPDATE\"] contextAwareResources: - apiVersion: networking.k8s.io/v1 kind: Ingress settings: variables: - name: knownIngresses expression: | kw.k8s.apiVersion(\"networking.k8s.io/v1\").kind(\"Ingress\").list().items - name: knownHosts expression: | variables.knownIngresses .filter(i, (i.metadata.name != object.metadata.name) && (i.metadata.namespace != object.metadata.namespace)) .map(i, i.spec.rules.map(r, r.host)) - name: desiredHosts expression: | object.spec.rules.map(r, r.host) validations: - expression: | !variables.knownHosts.exists_one(hosts, sets.intersects(hosts, variables.desiredHosts)) message: \"Cannot reuse a host across multiple ingresses\" As normal, we can deploy our policy by instantiating its manifest: $ kubectl apply -f ./cel-policy-example.yaml Now we can test it by instantiating Ingresses. The first one will succeed as there’s no other targeting that host: $ kubectl apply -f - <<EOF apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: ingress-host-foobar-1 spec: rules: - host: \"foo.bar.com\" http: paths: - pathType: Prefix path: \"/bar\" backend: service: name: service1 port: number: 80 EOF But the second one will result in a rejection: $ kubectl apply -f - <<EOF apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: ingress-host-foobar-2 spec: rules: - host: \"foo.bar.com\" http: paths: - pathType: Prefix path: \"/foo\" backend: service: name: service2 port: number: 80 EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-unique-ingress.kubewarden.admission\" denied the request: Cannot reuse a host across multiple ingresses","title":"Context-aware CEL policies","component":"admission-controller","version":"1.29","name":"03-context-aware","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/03-context-aware.html","titles":[{"text":"Example: Unique Ingress","hash":"_example_unique_ingress","id":1},{"text":"Deploying the policy","hash":"_deploying_the_policy","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"context-aware\", \"context\", \"aware\", \"ingress\"]"},"95":{"id":95,"text":"As an example of another usage of host capabilities on kubewarden’s cel-policy, let’s create a policy that verifies all container images in a Pod by checking their Sigstore keyless signatures. This policy will check all container images in the Pod Sigstore, and verify that the images are signed and trusted. In this case, we will check for a Sigstore keyless signature performed in GitHub Actions. These type of keyless signatures are tied to GitHub’s OIDC issuer when creating the cryptographic certificates, so we will only need to know the GitHub organization under where the container image is published. You can read more about the host capabilities for Sigstore here. To achieve this in CEL, we use the Kubewarden’s CEL extension libraries for host capabilities in the policy, particularly the githubAction function. As always, we can start with kwctl: $ kwctl scaffold manifest -t ClusterAdmissionPolicy \\ registry://ghcr.io/kubewarden/policies/cel-policy:v1.0.0` Which then we can edit to be relevant to our container verification policy: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: \"cel-sigstore-keyless-verification\" spec: module: ghcr.io/kubewarden/policies/cel-policy:v1.0.0 namespaceSelector: matchLabels: kubernetes.io/metadata.name: default rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\", \"UPDATE\"] Now, let’s to the CEL part. We will obtain a list of container images in the current Pod object, and then check that they are verified by a signature matching our organization of choosing (in this case, github.com/opencontainers): apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: \"cel-sigstore-keyless-verification\" spec: module: ghcr.io/kubewarden/policies/cel-policy:v1.0.0 namespaceSelector: matchLabels: kubernetes.io/metadata.name: default rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\", \"UPDATE\"] settings: variables: - name: containerImages expression: | object.spec.containers.map(c, c.image) - name: containerImagesNotVerified expression: | variables.containerImages.filter(image, !kw.sigstore.image(image).githubAction(\"opencontainers\").verify().isTrusted()) validations: - expression: | size(variables.containerImagesNotVerified) == 0 messageExpression: \"'These container images are not signed by the kubewarden GitHub organization: ' + variables.containerImagesNotVerified.join(', ')\" But wait, we must not forget that InitContainers can be also part of Pods. So let’s add another variable and validation: apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: \"cel-sigstore-keyless-verification\" spec: module: ghcr.io/kubewarden/policies/cel-policy:v1.0.0 namespaceSelector: matchLabels: kubernetes.io/metadata.name: default rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\", \"UPDATE\"] settings: variables: - name: containerImages expression: | object.spec.containers.map(c, c.image) - name: initContainerImages expression: | has(object.spec.initContainerImages) ? object.spec.initContainers.map(c, c.image) : [] - name: containerImagesNotVerified expression: | variables.containerImages.filter(image, !kw.sigstore.image(image).githubAction(\"opencontainers\").verify().isTrusted()) - name: initContainerImagesNotVerified expression: | variables.initContainerImages.filter(image, !kw.sigstore.image(image).githubAction(\"opencontainers\").verify().isTrusted()) validations: - expression: | size(variables.containerImagesNotVerified) == 0 messageExpression: \"'These container images are not signed by the kubewarden GitHub organization: ' + variables.containerImagesNotVerified.join(', ')\" - expression: | size(variables.initContainerImagesNotVerified) == 0 messageExpression: \"'These init container images are not signed by the kubewarden GitHub organization: ' + variables.initContainerImagesNotVerified.join(', ')\" As usual with CEL, we can add several validations under settings.validations, and they are evaluated in parallel, joined with an AND operation, which is short-circuited. We can now deploy the policy, and try to deploy a Pod with unsigned images: $ kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: golanci-lint-example spec: containers: - name: nginx image: ghcr.io/opencontainers/golangci-lint:v1.52.1 ports: - containerPort: 80 EOF Error from server: error when creating \"STDIN\": admission webhook \"clusterwide-cel-sigstore-keyless-verification.kubewarden.admission\" denied the request: failed to verify image: Callback evaluation failure: no signatures found for image: ghcr.io/opencontainers/golangci-lint:v1.52.1","title":"Sigstore host capabilities","component":"admission-controller","version":"1.29","name":"04-example-sigstore","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/04-example-sigstore.html","titles":[{"text":"Example: Sigstore verification policy","hash":"_example_sigstore_verification_policy","id":1}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"sigstore\", \"signature\", \"verification\"]"},"96":{"id":96,"text":"Go’s support for WebAssembly is fast evolving. This page was last revised in December 2023. The official Go compiler can produce WebAssembly binaries, for execution outside a browser, since v1.21. There’s another Go compiler that can build WebAssembly binaries usable by Kubewarden. This compiler project is TinyGo: TinyGo brings the Go programming language to embedded systems and to the modern web by creating a new compiler based on LLVM. You can compile and run TinyGo programs on over 94 different microcontroller boards such as the BBC micro:bit and the Arduino Uno. TinyGo can also produce WebAssembly (Wasm) code which is very compact in size. You can compile programs for web browsers, as well as for server and edge computing environments that support the WebAssembly System Interface (WASI) family of interfaces. The Kubewarden project currently suggests using TinyGo for two reasons: binaries are smaller support for waPC by the ability to export functions to the runtime TinyGo doesn’t yet support all the Go features, see the TinyGo language support page to see the current project status. Currently, its largest limitation is the lack of a fully supported reflect package. This means that official Kubernetes Go API types (e.g.: k8s.io/api/core/v1) don’t compile. Kubewarden policies need to process JSON data such as policy settings and the request received by Kubernetes. Despite TinyGo’s current limitations, it’s still easy to write Kubewarden validation policies with it. Writing Kubewarden policies requires a version of TinyGo greater than v0.28.1. However, use the latest version, for the best results. Using older versions of TinyGo results in runtime errors due to the limited support for Go reflection. These Go libraries are useful when writing a Kubewarden policy: Kubewarden Go SDK: Provides structures and functions reducing the amount of code necessary. It also provides test helpers. Kubernetes Go types: The official Kubernetes Go Types can’t be used with TinyGo. This module provides all the Kubernetes Types in a TinyGo-friendly way. gjson: This provides a query language for quick navigation of JSON documents and data retrieval. This library doesn’t use the encoding/json package provided by Go’s stdlib, hence it’s usable with TinyGo. mapset: Provides a Go implementation of the Set data structure. This library reduces the amount of code to write as operations such as Set union, intersection, difference are common operation in Kubewarden policies. Lastly, the Kubewarden project provides a template Go policy project you can use to create Kubewarden Go policies. The easiest way to get TinyGo is by using the upstream container images. Official releases are here, while builds from the development branch are automatically pushed here. If needed, try TinyGo’s getting started page for more information. During this tutorial you need these tools on your development machine: docker or another container engine: used to build the WebAssembly policy. You’ll be using the compiler shipped in the official TinyGo container image. bats: used to write the tests and automate their execution. kwctl: CLI tool provided by Kubewarden to run its policies outside of Kubernetes, among other actions. It’s covered in this section of the documentation.","title":"Writing policies in Go","component":"admission-controller","version":"1.29","name":"01-intro-go","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/01-intro-go.html","titles":[{"text":"TinyGo limitations","hash":"_tinygo_limitations","id":1},{"text":"Tooling","hash":"_tooling","id":2},{"text":"Getting TinyGo dependencies","hash":"_getting_tinygo_dependencies","id":3},{"text":"Tutorial prerequisites","hash":"_tutorial_prerequisites","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies in Go\"]"},"97":{"id":97,"text":"This tutorial covers creating a policy that validates the labels of Pod objects. The policy is to reject all Pods that use one or more labels on the deny-list. The policy also validates certain labels using a regular expression provided by the user. To summarize, the policy settings should look like this: # List of labels that cannot be used denied_labels: - foo - bar # Labels that are validated with user-defined regular expressions constrained_labels: priority: \"[123]\" cost-center: \"^cc-\\d+\" The policy rejects the creation of this Pod: apiVersion: v1 kind: Pod metadata: name: nginx labels: foo: hello world spec: containers: - name: nginx image: nginx:latest It also rejects the creation of this Pod: apiVersion: v1 kind: Pod metadata: name: nginx labels: cost-center: cc-marketing spec: containers: - name: nginx image: nginx:latest You can use the policy’s settings to force using a label specification, regardless of content: constrained_labels: mandatory-label: \".*\" # <- this label must be present, we don't care about its value You can create a new policy project using the template repository. Select the \"Use this template\" green button near the top of the page and follow GitHub’s wizard. Clone the repository locally and set the module directive in the go.mod file to look like: module <path to your repository> A real policy would use a repository path, like github.com/kubewarden/go-policy-template. Provided the necessary tools are in place a make test command uses Docker to pull a TinyGo compiler image using it to build and test the policy template. The default make command builds the policy.wasm target. Then make test runs the defined Go tests. The command make e2e-tests runs tests using bats within a Kubewarden cluster. After cloning the go-policy-template, running these commands checks you have the tools in place for the tutorial. Output from the make commands make test docker run \\ --rm \\ -e GOFLAGS=\"-buildvcs=false\" \\ -v /home/jhk/projects/suse/tmp/go-kw-demo:/src \\ -w /src tinygo/tinygo:0.30.0 \\ tinygo build -o policy.wasm -target=wasi -no-debug . Unable to find image 'tinygo/tinygo:0.30.0' locally 0.30.0: Pulling from tinygo/tinygo 9aaefb8797c4: Pull complete 24ab7ca26e01: Pull complete ca4ea8be6361: Pull complete 50380d0859d2: Pull complete 4f4fb700ef54: Pull complete ea0ddd497f04: Pull complete 01ba28116afb: Pull complete Digest: sha256:5cbf5e50aec3a00fcff8bb4ae070a07eea8198187a97b21dff6d873d2274ce7a Status: Downloaded newer image for tinygo/tinygo:0.30.0 go test -v === RUN TestParsingSettingsWithNoValueProvided --- PASS: TestParsingSettingsWithNoValueProvided (0.00s) === RUN TestIsNameDenied --- PASS: TestIsNameDenied (0.00s) === RUN TestEmptySettingsLeadsToApproval NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | --- PASS: TestEmptySettingsLeadsToApproval (0.00s) === RUN TestApproval NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | --- PASS: TestApproval (0.00s) === RUN TestApproveFixture NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | --- PASS: TestApproveFixture (0.00s) === RUN TestRejectionBecauseNameIsDenied NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"info\",\"message\":\"rejecting pod object\",\"name\":\"test-pod\",\"denied_names\":\"foo,test-pod\"} | --- PASS: TestRejectionBecauseNameIsDenied (0.00s) PASS ok github.com/kubewarden/go-policy-template 0.004s and make e2e-tests bats e2e.bats e2e.bats ✓ reject because name is on deny list ✓ accept because name is not on the deny list ✓ accept because the deny list is empty 3 tests, 0 failures","title":"Creating a new validation policy","component":"admission-controller","version":"1.29","name":"02-scaffold","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/02-scaffold.html","titles":[{"text":"Scaffolding new policy project","hash":"_scaffolding_new_policy_project","id":1},{"text":"Testing","hash":"_testing","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies in Go\", \"new validation policy\"]"},"98":{"id":98,"text":"Firstly, you need to define the structure that holds the policy settings. You do this by modifying the code in the settings.go file (from your local version of the Go policy template). You need to add two extra lines to the import section, change the Settings structure, and add the RegularExpression structure. It should match the following code: import ( \"encoding/json\" \"fmt\" \"regexp\" mapset \"github.com/deckarep/golang-set/v2\" kubewarden \"github.com/kubewarden/policy-sdk-go\" kubewarden_protocol \"github.com/kubewarden/policy-sdk-go/protocol\" ) type Settings struct { DeniedLabels mapset.Set[string] `json:\"denied_labels\"` ConstrainedLabels map[string]*RegularExpression `json:\"constrained_labels\"` } type RegularExpression struct { *regexp.Regexp } DeniedNames is no longer required in the Settings structure defined in settings.go. As DeniedNames is no longer defined, you should also delete the function IsNameDefined in settings.go. You should also remove the function that references it in settings_test.go, TestIsNameDenied. You’re using the regexp package to handle regular expression objects and the mapset.Set type to store the list of denied labels. Since regexp.Regexp doesn’t handle deserialization, you need to define custom functions to handle marshaling and unmarshaling of regular expressions: // UnmarshalText satisfies the encoding.TextMarshaler interface, // also used by json.Unmarshal. func (r *RegularExpression) UnmarshalText(text []byte) error { nativeRegExp, err := regexp.Compile(string(text)) if err != nil { return err } r.Regexp = nativeRegExp return nil } // MarshalText satisfies the encoding.TextMarshaler interface, // also used by json.Marshal. func (r *RegularExpression) MarshalText() ([]byte, error) { if r.Regexp != nil { return []byte(r.Regexp.String()), nil } return nil, nil } Also, you need the UnmarshalJSON method to handle the deserialization of the Settings struct: func (s *Settings) UnmarshalJSON(data []byte) error { rawSettings := struct { DeniedLabels []string `json:\"denied_labels\"` ConstrainedLabels map[string]*RegularExpression `json:\"constrained_labels\"` }{} err := json.Unmarshal(data, &rawSettings) if err != nil { return err } s.DeniedLabels = mapset.NewThreadUnsafeSet[string](rawSettings.DeniedLabels...) s.ConstrainedLabels = rawSettings.ConstrainedLabels return nil } A Kubewarden policy exposes two different functions that receive the policy settings as input: validate: Use this function when Kubernetes object requires validation by the policy. The settings are part of a ValidationRequest object. validate_settings: Call this function when the policy is first loaded by Kubewarden. The function receives the policy settings as input and checks validity. You need to create a helper function that creates a Settings object starting from the JSON payload: func NewSettingsFromValidationReq(validationReq *kubewarden_protocol.ValidationRequest) (Settings, error) { settings := Settings{} err := json.Unmarshal(validationReq.Settings, &settings) if err != nil { return Settings{}, err } return settings, nil } All the mapset.Set objects are created using the thread-unsafe variant. The WebAssembly code executes in a single thread, hence there are no concurrency issues. The WebAssembly standard doesn’t cover threads yet. See the official proposal for more details. All Kubewarden policies have to implement settings validation. You do this by adding a Valid method to the Settings instances: func (s *Settings) Valid() (bool, error) { constrainedLabels := mapset.NewThreadUnsafeSet[string]() for label := range s.ConstrainedLabels { constrainedLabels.Add(label) } constrainedAndDenied := constrainedLabels.Intersect(s.DeniedLabels) if constrainedAndDenied.Cardinality() != 0 { return false, fmt.Errorf(\"These labels cannot be constrained and denied at the same time: %v\", constrainedAndDenied) } return true, nil } The Valid method ensures no \"denied\" label is also part of the \"constrained\" map. Usage of the Intersect method provided by mapset.Set simplifies the check. The Valid method invocation is on an already instantiated Setting object. This means the validation of the regular expression provided by the user already took place in of the Settings unmarshaler. Finally, you need the validateSettings function, provided by the scaffolding, to change to look like this: func validateSettings(payload []byte) ([]byte, error) { settings := Settings{} err := json.Unmarshal(payload, &settings) if err != nil { return kubewarden.RejectSettings( kubewarden.Message(fmt.Sprintf(\"Provided settings are not valid: %v\", err))) } valid, err := settings.Valid() if valid { return kubewarden.AcceptSettings() } return kubewarden.RejectSettings( kubewarden.Message(fmt.Sprintf(\"Provided settings are not valid: %v\", err))) } You can see the function takes advantage of the helper functions provided by Kubewarden’s SDK. It’s important to have good test coverage of the code you write. The code you are using, from the scaffolding, comes with a series of unit tests defined in the settings_test.go file. You have to change the contents of this file to reflect the new behavior of the Settings class. Include the Go packages you are using: import ( \"testing\" \"encoding/json\" kubewarden_protocol \"github.com/kubewarden/policy-sdk-go/protocol\" ) You can start by writing a unit test that ensures you can assign a Settings instance from a ValidationRequest object: func TestParseValidSettings(t *testing.T) { settingsJSON := []byte(` { \"denied_labels\": [ \"foo\", \"bar\" ], \"constrained_labels\": { \"cost-center\": \"cc-\\\\d+\" } }`) settings := Settings{} err := json.Unmarshal(settingsJSON, &settings) if err != nil { t.Errorf(\"Unexpected error %+v\", err) } expected_denied_labels := []string{\"foo\", \"bar\"} for _, exp := range expected_denied_labels { if !settings.DeniedLabels.Contains(exp) { t.Errorf(\"Missing value %s\", exp) } } re, found := settings.ConstrainedLabels[\"cost-center\"] if !found { t.Error(\"Didn't find the expected constrained label\") } expected_regexp := `cc-\\d+` if re.String() != expected_regexp { t.Errorf(\"Expected regexp to be %v - got %v instead\", expected_regexp, re.String()) } } Next, you need a test that checks a Settings instance isn’t generated when the user provides a broken regular expression: func TestParseSettingsWithInvalidRegexp(t *testing.T) { settingsJSON := []byte(` { \"denied_labels\": [ \"foo\", \"bar\" ], \"constrained_labels\": { \"cost-center\": \"cc-[a+\" } }`) err := json.Unmarshal(settingsJSON, &Settings{}) if err == nil { t.Errorf(\"Didn't get expected error\") } } Now, you can define a test that checks the behavior of the validate_settings entry point. You look at the SettingsValidationResponse object returned by your validateSettings function: func TestDetectValidSettings(t *testing.T) { settingsJSON := []byte(` { \"denied_labels\": [ \"foo\", \"bar\" ], \"constrained_labels\": { \"cost-center\": \"cc-\\\\d+\" } }`) responsePayload, err := validateSettings(settingsJSON) if err != nil { t.Errorf(\"Unexpected error %+v\", err) } var response kubewarden_protocol.SettingsValidationResponse if err := json.Unmarshal(responsePayload, &response); err != nil { t.Errorf(\"Unexpected error: %+v\", err) } if !response.Valid { t.Errorf(\"Expected settings to be valid: %s\", *response.Message) } } Finally, you write two more tests to check the validateSettings function rejects invalid settings with the right messages: func TestDetectNotValidSettingsDueToBrokenRegexp(t *testing.T) { settingsJSON := []byte(` { \"denied_labels\": [ \"foo\", \"bar\" ], \"constrained_labels\": { \"cost-center\": \"cc-[a+\" } } `) responsePayload, err := validateSettings(settingsJSON) if err != nil { t.Errorf(\"Unexpected error %+v\", err) } var response kubewarden_protocol.SettingsValidationResponse if err := json.Unmarshal(responsePayload, &response); err != nil { t.Errorf(\"Unexpected error: %+v\", err) } if response.Valid { t.Error(\"Expected settings to not be valid\") } if *response.Message != \"Provided settings are not valid: error parsing regexp: missing closing ]: `[a+`\" { t.Errorf(\"Unexpected validation error message: %s\", *response.Message) } } func TestDetectNotValidSettingsDueToConflictingLabels(t *testing.T) { settingsJSON := []byte(` { \"denied_labels\": [ \"foo\", \"bar\", \"cost-center\" ], \"constrained_labels\": { \"cost-center\": \".*\" } }`) responsePayload, err := validateSettings(settingsJSON) if err != nil { t.Errorf(\"Unexpected error %+v\", err) } var response kubewarden_protocol.SettingsValidationResponse if err := json.Unmarshal(responsePayload, &response); err != nil { t.Errorf(\"Unexpected error: %+v\", err) } if response.Valid { t.Error(\"Expected settings to not be valid\") } if *response.Message != \"Provided settings are not valid: These labels cannot be constrained and denied at the same time: Set{cost-center}\" { t.Errorf(\"Unexpected validation error message: %s\", *response.Message) } } Now you can run the tests that you have defined so far by using the following command: go test -v settings.go settings_test.go All the tests will pass with the following output: === RUN TestParseValidSettings --- PASS: TestParseValidSettings (0.00s) === RUN TestParseSettingsWithInvalidRegexp --- PASS: TestParseSettingsWithInvalidRegexp (0.00s) === RUN TestDetectValidSettings --- PASS: TestDetectValidSettings (0.00s) === RUN TestDetectNotValidSettingsDueToBrokenRegexp --- PASS: TestDetectNotValidSettingsDueToBrokenRegexp (0.00s) === RUN TestDetectNotValidSettingsDueToConflictingLabels --- PASS: TestDetectNotValidSettingsDueToConflictingLabels (0.00s) PASS ok command-line-arguments 0.002s You can now implement the actual validation code in the next section.","title":"Defining policy settings","component":"admission-controller","version":"1.29","name":"03-policy-settings","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/03-policy-settings.html","titles":[{"text":"Building Settings instances","hash":"_building_settings_instances","id":1},{"text":"Implementing Settings validation","hash":"_implementing_settings_validation","id":2},{"text":"Testing the settings code","hash":"_testing_the_settings_code","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"defining policy settings\", \"Go\"]"},"99":{"id":99,"text":"The validation logic goes be in the validate.go file. Your validation logic needs to: Extract the relevant information from the incoming payload object. Return a response based on the input and the policy settings. The incoming payload is a JSON object, described in this document, and you can get the data from it in two ways: Unmarshal the JSON data into Go types. Perform JSON queries (something similar to jq). This section of the documentation focuses on the first approach, using Go types. A description of the second approach is in a later validation with queries section. Relying on Kubernetes objects, instead of doing jq-like searches, leads to generation of bigger WebAssembly modules. A policy using Kubernetes objects can be around 1.5 MB while one using gjson is around 300 KB. Apart from size, the policy using Kubernetes objects take much more time during first execution. Following invocations are fast because Kubewarden uses Wasmtime’s cache feature. The first execution can take about 20 seconds with kwctl, later executions, 1 to 2 seconds. So, Kubewarden Policy Server has a slower start-up time but then policy evaluation times aren’t usually effected by the usage of Kubernetes objects. The policy provided by the scaffold template, in validate.go, already has a validate function. You need to make few changes to it for this tutorial. This is how the function should be when complete: func validate(payload []byte) ([]byte, error) { // NOTE 1 // Create a ValidationRequest instance from the incoming payload validationRequest := kubewarden_protocol.ValidationRequest{} err := json.Unmarshal(payload, &validationRequest) if err != nil { return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.Code(400)) } // NOTE 2 // Create a Settings instance from the ValidationRequest object settings, err := NewSettingsFromValidationReq(&validationRequest) if err != nil { return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.Code(400)) } // NOTE 3 // Access the **raw** JSON that describes the object podJSON := validationRequest.Request.Object // NOTE 4 // Try to create a Pod instance using the RAW JSON we got from the // ValidationRequest. pod := &corev1.Pod{} if err := json.Unmarshal([]byte(podJSON), pod); err != nil { return kubewarden.RejectRequest( kubewarden.Message( fmt.Sprintf(\"Cannot decode Pod object: %s\", err.Error())), kubewarden.Code(400)) } logger.DebugWithFields(\"validating pod object\", func(e onelog.Entry) { e.String(\"name\", pod.Metadata.Name) e.String(\"namespace\", pod.Metadata.Namespace) }) // NOTE 5 for label, value := range pod.Metadata.Labels { if err := validateLabel(label, value, &settings); err != nil { return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.NoCode) } } return kubewarden.AcceptRequest() } The code has NOTE sections: Create a kubewarden_protocol.ValidationRequest by unmarshaling the JSON payload. Create a Settings object by using the function you earlier defined in the settings.go file. Access the raw JSON representation of the Pod that’s part of the ValidationRequest. Unmarshal the Pod object. Iterate over the labels of the Pod. You use a new function called validateLabel to identify labels violating the policy. You also need to define the validateLabel function in the validate.go file: func validateLabel(label, value string, settings *Settings) error { if settings.DeniedLabels.Contains(label) { return fmt.Errorf(\"Label %s is on the deny list\", label) } regExp, found := settings.ConstrainedLabels[label] if found { // This is a constrained label if !regExp.Match([]byte(value)) { return fmt.Errorf(\"The value of %s doesn't pass user-defined constraint\", label) } } return nil } Now you can write unit tests to check the validation code is behaving. Locate the tests in the validate_test.go file. You should replace the contents of the scaffolding file to match this: validate_test.go package main import ( \"regexp\" \"testing\" \"encoding/json\" mapset \"github.com/deckarep/golang-set/v2\" corev1 \"github.com/kubewarden/k8s-objects/api/core/v1\" metav1 \"github.com/kubewarden/k8s-objects/apimachinery/pkg/apis/meta/v1\" kubewarden_protocol \"github.com/kubewarden/policy-sdk-go/protocol\" kubewarden_testing \"github.com/kubewarden/policy-sdk-go/testing\" ) func TestValidateLabel(t *testing.T) { // NOTE 1 cases := []struct { podLabels map[string]string deniedLabels mapset.Set[string] constrainedLabels map[string]*RegularExpression expectedIsValid bool }{ { // ➀ // Pod has no labels -> should be accepted podLabels: map[string]string{}, deniedLabels: mapset.NewThreadUnsafeSet[string](\"owner\"), constrainedLabels: map[string]*RegularExpression{}, expectedIsValid: true, }, { // ➁ // Pod has labels, none is denied -> should be accepted podLabels: map[string]string{ \"hello\": \"world\", }, deniedLabels: mapset.NewThreadUnsafeSet[string](\"owner\"), constrainedLabels: map[string]*RegularExpression{}, expectedIsValid: true, }, { // ➂ // Pod has labels, one is denied -> should be rejected podLabels: map[string]string{ \"hello\": \"world\", }, deniedLabels: mapset.NewThreadUnsafeSet[string](\"hello\"), constrainedLabels: map[string]*RegularExpression{}, expectedIsValid: false, }, { // ➃ // Pod has labels, one has constraint that is respected -> should be accepted podLabels: map[string]string{ \"cc-center\": \"team-123\", }, deniedLabels: mapset.NewThreadUnsafeSet[string](\"hello\"), constrainedLabels: map[string]*RegularExpression{ \"cc-center\": { Regexp: regexp.MustCompile(`team-\\d+`), }, }, expectedIsValid: true, }, { // ➄ // Pod has labels, one has constraint that are not respected -> should be rejected podLabels: map[string]string{ \"cc-center\": \"team-kubewarden\", }, deniedLabels: mapset.NewThreadUnsafeSet[string](\"hello\"), constrainedLabels: map[string]*RegularExpression{ \"cc-center\": { Regexp: regexp.MustCompile(`team-\\d+`), }, }, expectedIsValid: false, }, { // ➅ // Settings have a constraint, pod doesn't have this label -> should be rejected podLabels: map[string]string{ \"owner\": \"team-kubewarden\", }, deniedLabels: mapset.NewThreadUnsafeSet[string](\"hello\"), constrainedLabels: map[string]*RegularExpression{ \"cc-center\": { Regexp: regexp.MustCompile(`team-\\d+`), }, }, expectedIsValid: false, }, } // NOTE 2 for _, testCase := range cases { settings := Settings{ DeniedLabels: testCase.deniedLabels, ConstrainedLabels: testCase.constrainedLabels, } pod := corev1.Pod{ Metadata: &metav1.ObjectMeta{ Name: \"test-pod\", Namespace: \"default\", Labels: testCase.podLabels, }, } payload, err := kubewarden_testing.BuildValidationRequest(&pod, &settings) if err != nil { t.Errorf(\"Unexpected error: %+v\", err) } responsePayload, err := validate(payload) if err != nil { t.Errorf(\"Unexpected error: %+v\", err) } var response kubewarden_protocol.ValidationResponse if err := json.Unmarshal(responsePayload, &response); err != nil { t.Errorf(\"Unexpected error: %+v\", err) } if testCase.expectedIsValid && !response.Accepted { t.Errorf(\"Unexpected rejection: msg %s - code %d with pod labels: %v, denied labels: %v, constrained labels: %v\", *response.Message, *response.Code, testCase.podLabels, testCase.deniedLabels, testCase.constrainedLabels) } if !testCase.expectedIsValid && response.Accepted { t.Errorf(\"Unexpected acceptance with pod labels: %v, denied labels: %v, constrained labels: %v\", testCase.podLabels, testCase.deniedLabels, testCase.constrainedLabels) } } } The test uses a \"test-case driven\" approach. You start by defining a struct that holds the data needed by a test case, see NOTE 1: struct { podLabels map[string]string deniedLabels mapset.Set[string] constrainedLabels map[string]*RegularExpression expectedIsValid bool } You then declare several test cases. They have the start lines marked ➀ to ➅ in the large, collapsible, code block above. For example, you should consider a Pod that has no labels to be valid. You can test this with these input values: { podLabels: map[string]string{}, deniedLabels: mapset.NewThreadUnsafeSet[string](\"owner\"), constrainedLabels: map[string]*RegularExpression{}, expectedIsValid: true, } The test defines new scenarios in this way until NOTE 2. This is where you iterate over the different test cases using the following code: Create a BasicSettings object by using the data provided by the testCase. Create a Pod object, assign to it the labels defined in testCase. Create a payload object. Do this using a helper function of the Kubewarden SDK: kubewarden_testing.BuildValidationRequest. This function takes as input the object the request is about, the Pod, and the object that describes the settings, the BasicSettings instance. Finally, the code invokes your validate function and performs a check on the result. You can now run all the unit tests, including the one defined in settings_test.go, by using: make test This produces the following output: Output from make test make test go test -v === RUN TestParsingSettingsWithNoValueProvided --- PASS: TestParsingSettingsWithNoValueProvided (0.00s) === RUN TestIsNameDenied --- PASS: TestIsNameDenied (0.00s) === RUN TestParseValidSettings --- PASS: TestParseValidSettings (0.00s) === RUN TestParseSettingsWithInvalidRegexp --- PASS: TestParseSettingsWithInvalidRegexp (0.00s) === RUN TestDetectValidSettings --- PASS: TestDetectValidSettings (0.00s) === RUN TestDetectNotValidSettingsDueToBrokenRegexp --- PASS: TestDetectNotValidSettingsDueToBrokenRegexp (0.00s) === RUN TestDetectNotValidSettingsDueToConflictingLabels --- PASS: TestDetectNotValidSettingsDueToConflictingLabels (0.00s) === RUN TestValidateLabel NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | validate_test.go:126: Unexpected acceptance with pod labels: map[owner:team-kubewarden], denied labels: Set{hello}, constrained labels: map[cc-center:team-\\d+] --- FAIL: TestValidateLabel (0.00s) FAIL exit status 1 FAIL github.com/kubewarden/go-policy-template 0.003s make: *** [Makefile:29: test] Error 1 As you can see all the Settings tests are passing, but there’s one test case of the TestValidateLabel that isn’t: validate_test.go:126: Unexpected acceptance with pod labels: map[owner:team-kubewarden], denied labels: Set{hello}, constrained labels: map[cc-center:team-\\d+] In this scenario, your policy settings says that Pods must have a label, with a key cc-center, that satisfies the team-\\d+ regular expression. The Pod tested doesn’t have this label, so you should reject it. This isn’t happening however, so you can fix this in the next section. You might be wondering why the output of the unit tests features lines like NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} The logger statements in the policy produce this output. This happens only when the code runs outside the WebAssembly context. This doesn’t happen when the policy evaluates in Kubewarden, in that context the logger statements emit OpenTelemetry events instead. To fix the broken test you discovered you have to make a change in your validation function, validate in validate.go. Currently, the core of your validation logic is the following lines: for label, value := range pod.Metadata.Labels { if err := validateLabel(label, value, &settings); err != nil { return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.NoCode) } } Here you iterate over each label to check that it’s not denied and that it doesn’t violate one of the constraints specified by the user. However, you’re not making sure that the Pod has all the labels specified in Settings.ConstrainedLabels. Add the new code, right after the for loop: for requiredLabel := range settings.ConstrainedLabels { _, found := pod.Metadata.Labels[requiredLabel] if !found { return kubewarden.RejectRequest( kubewarden.Message(fmt.Sprintf( \"Constrained label %s not found inside of Pod\", requiredLabel), ), kubewarden.NoCode) } } Run the unit tests again: make test This outputs: Output from final make test make test go test -v === RUN TestParsingSettingsWithNoValueProvided --- PASS: TestParsingSettingsWithNoValueProvided (0.00s) === RUN TestIsNameDenied --- PASS: TestIsNameDenied (0.00s) === RUN TestParseValidSettings --- PASS: TestParseValidSettings (0.00s) === RUN TestParseSettingsWithInvalidRegexp --- PASS: TestParseSettingsWithInvalidRegexp (0.00s) === RUN TestDetectValidSettings --- PASS: TestDetectValidSettings (0.00s) === RUN TestDetectNotValidSettingsDueToBrokenRegexp --- PASS: TestDetectNotValidSettingsDueToBrokenRegexp (0.00s) === RUN TestDetectNotValidSettingsDueToConflictingLabels --- PASS: TestDetectNotValidSettingsDueToConflictingLabels (0.00s) === RUN TestValidateLabel NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | NATIVE: |{\"level\":\"debug\",\"message\":\"validating pod object\",\"name\":\"test-pod\",\"namespace\":\"default\"} | --- PASS: TestValidateLabel (0.00s) PASS ok github.com/kubewarden/go-policy-template 0.003s As you can see, this time all the tests pass. You can now move to the next step, writing the end-to-end tests.","title":"Writing the validation logic","component":"admission-controller","version":"1.29","name":"04-validation","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/04-validation.html","titles":[{"text":"The validate function","hash":"_the_validate_function","id":1},{"text":"Testing the validation code","hash":"_testing_the_validation_code","id":2},{"text":"Fix the broken unit test","hash":"_fix_the_broken_unit_test","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"golang\", \"go\"]"},"100":{"id":100,"text":"So far, you have tested the policy using a set of Go unit tests. This section shows how you can write end-to-end tests running against the actual WebAssembly binary produced by TinyGo. Recall, you need these tools on your development machine: Docker, or another container engine: Used to build the WebAssembly policy. You’ll use the compiler shipped within the official TinyGo container image. bats: Used to write the tests and automate their execution. kwctl: CLI tool provided by Kubewarden to run its policies outside of Kubernetes, among other actions. It’s covered in this section of the documentation. You’ll be using bats to write and automate your tests. Each test has the following steps: Run the policy using kwctl. Perform assertions against the output produced by the kwctl. All the end-to-end tests go in a file called e2e.bats. The project scaffolding project already includes an example e2e.bats. You need to change its contents to reflect how your policy behaves. You can remove the contents from the scaffolding file and replace them with the contents below as you work through this tutorial. For the end-to-end tests, you use the same test fixtures files you used in the Go unit tests. The first test ensures request approval when there are no settings provided: @test \"accept when no settings are provided\" { run kwctl run -r test_data/pod.json policy.wasm # this prints the output when one the checks below fails echo \"output = ${output}\" # request is accepted [ $(expr \"$output\" : '.*\"allowed\":true.*') -ne 0 ] } You execute the end-to-end tests by using this command: make e2e-tests This produces the following output: bats e2e.bats ✓ accept when no settings are provided 1 test, 0 failures You should write a test ensuring request approval when respecting a user-defined constraint: @test \"accept because label is satisfying a constraint\" { run kwctl run annotated-policy.wasm \\ -r test_data/pod.json \\ --settings-json '{\"constrained_labels\": {\"cc-center\": \"\\\\d+\"}}' # this prints the output when one the checks below fails echo \"output = ${output}\" [ \"$status\" -eq 0 ] [ $(expr \"$output\" : '.*allowed.*true') -ne 0 ] } Next, you can write a test checking request acceptance when none of the labels is on the deny list: @test \"accept labels are not on deny list\" { run kwctl run \\ -r test_data/pod.json \\ --settings-json '{\"denied_labels\": [\"foo\", \"bar\"]}' \\ policy.wasm # this prints the output when one the checks below fails echo \"output = ${output}\" [ $(expr \"$output\" : '.*\"allowed\":true.*') -ne 0 ] } You can improve the test coverage by adding a test that rejects a request because one of the labels is on the deny list: @test \"reject because label is on deny list\" { run kwctl run annotated-policy.wasm \\ -r test_data/pod.json \\ --settings-json '{\"denied_labels\": [\"foo\", \"owner\"]}' # this prints the output when one the checks below fails echo \"output = ${output}\" [ \"$status\" -eq 0 ] [ $(expr \"$output\" : '.*allowed.*false') -ne 0 ] [ $(expr \"$output\" : \".*Label owner is on the deny list.*\") -ne 0 ] } The following test ensures a request rejection when one of its labels doesn’t satisfy the constraint provided by the user. @test \"reject because label is not satisfying a constraint\" { run kwctl run annotated-policy.wasm \\ -r test_data/pod.json \\ --settings-json '{\"constrained_labels\": {\"cc-center\": \"team-\\\\d+\"}}' # this prints the output when one the checks below fails echo \"output = ${output}\" [ \"$status\" -eq 0 ] [ $(expr \"$output\" : '.*allowed.*false') -ne 0 ] [ $(expr \"$output\" : \".*The value of cc-center doesn't pass user-defined constraint.*\") -ne 0 ] } Now you can make sure the validation fails if one of the constrained labels is not found: @test \"reject because constrained label is missing\" { run kwctl run annotated-policy.wasm \\ -r test_data/pod.json \\ --settings-json '{\"constrained_labels\": {\"organization\": \"\\\\d+\"}}' # this prints the output when one the checks below fails echo \"output = ${output}\" [ \"$status\" -eq 0 ] [ $(expr \"$output\" : '.*allowed.*false') -ne 0 ] [ $(expr \"$output\" : \".*Constrained label organization not found inside of Pod.*\") -ne 0 ] } You want to check settings validation is working correctly. You can do this with the following tests: @test \"fail settings validation because of conflicting labels\" { run kwctl run \\ -r test_data/pod.json \\ --settings-json '{\"denied_labels\": [\"foo\", \"cc-center\"], \"constrained_labels\": {\"cc-center\": \"^cc-\\\\d+$\"}}' \\ policy.wasm # this prints the output when one the checks below fails echo \"output = ${output}\" # settings validation failed [ $(expr \"$output\" : \".*Provided settings are not valid: These labels cannot be constrained and denied at the same time: Set{cc-center}.*\") -ne 0 ] } @test \"fail settings validation because of invalid constraint\" { run kwctl run \\ -r test_data/pod.json \\ --settings-json '{\"constrained_labels\": {\"cc-center\": \"^cc-[12$\"}}' \\ policy.wasm # this prints the output when one the checks below fails echo \"output = ${output}\" # settings validation failed [ $(expr \"$output\" : \".*Provided settings are not valid: error parsing regexp.*\") -ne 0 ] } The eight end-to-end tests now give a good level of coverage, you can run them all: $ make e2e-tests bats e2e.bats e2e.bats ✓ accept when no settings are provided ✓ accept because label is satisfying a constraint ✓ accept labels are not on deny list ✓ reject because label is on deny list ✓ reject because label is not satisfying a constraint ✓ reject because constrained label is missing ✓ fail settings validation because of conflicting labels ✓ fail settings validation because of invalid constraint 8 tests, 0 failures","title":"End-to-end testing","component":"admission-controller","version":"1.29","name":"05-e2e-tests","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/05-e2e-tests.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Writing tests","hash":"_writing_tests","id":2},{"text":"Conclusion","hash":"_conclusion","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"end-to-end testing\", \"golang\", \"go\"]"},"101":{"id":101,"text":"The Go SDK integrates with the onelog project, almost out of the box. The project has chosen this library as: It works with WebAssembly binaries. Other popular logging solutions can’t compile to target WebAssembly. It provides good performance. It supports structured logging. You need to initialize a logger structure. By performing this initialization in a global variable, you can log from the two main policy entry points: validate and validate_settings. In the main package, main.go there is initialization for the logger: var ( logWriter = kubewarden.KubewardenLogWriter{} logger = onelog.New( &logWriter, onelog.ALL, // shortcut for onelog.DEBUG|onelog.INFO|onelog.WARN|onelog.ERROR|onelog.FATAL ) ) Now, you can use the logger object to log from wherever required your policy: func validate(payload []byte) ([]byte, error) { // ... logger.Info(\"validating request\") // ... } You can add structured logging: func validate(payload []byte) ([]byte, error) { // ... logger.WarnWithFields(\"logging something important\", func(e onelog.Entry) { e.String(\"one_field\", \"a value\") e.String(\"another_field\", \"another value\") }) // ... } You can refer to the onelog documentation for more information. Policy logging goes to the policy evaluator (for example, kwctl or policy-server), and they log on behalf of the policy. They use mechanisms that are interoperable with other components that enable distributed tracing such as Jaeger.","title":"Logging","component":"admission-controller","version":"1.29","name":"06-logging","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/06-logging.html","titles":[{"text":"Initialize logger","hash":"_initialize_logger","id":1},{"text":"Consuming the logger","hash":"_consuming_the_logger","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"golang\", \"go\", \"logging\"]"},"102":{"id":102,"text":"This section describes how you can use GitHub Actions to automate tasks. The project scaffolding already includes all the GitHub actions you need. You can find the Actions in the .github/workflows/test.yml and .github/workflows/release.yml files. You can adapt these principles to use a different CI system. Automation of the unit tests and of the end-to-end tests works out of the box. It uses the jobs defined in .github/workflows/test.yml. The project scaffolding has a release job in .github/workflows/release.yml. This job performs the following steps: Checkout code Build the WebAssembly policy Push the policy to an Open Container Initiative (OCI) registry Create a new GitHub Release To enable the job, adjust the oci-target action input for the reusable workflow (reusable-release-policy-go.yml) called in the release.yml file. The job acts differently based on the commit that triggered its execution. Regular commits lead to the creation of an OCI artifact called <policy-name>:latest. A GitHub release isn’t created for these commits. Creating a tag that matches the v* pattern leads to: Creation of an OCI artifact called <policy-name>:<tag>. Creation of a GitHub release named Release <full tag name>. The release includes the assets, the source code of the policy, and the WebAssembly binary. Assume a policy named safe-labels and that it needs publishing as ghcr.io/kubewarden/policies/safe-labels. The contents of the jobs.push-to-oci-registry.env section of ci.yml should look like: jobs: push-to-oci-registry: runs-on: ubuntu-latest env: WASM_BINARY_NAME: policy.wasm OCI_TARGET: ghcr.io/kubewarden/policies/safe-labels Pushing a tag named v0.1.0 leads to the creation and publishing of the OCI artifact called ghcr.io/kubewarden/policies/safe-labels:v0.1.0. It creates a GitHub release named Release v0.1.0. The release includes the following assets: Source code compressed as zip and tar.gz A file named policy.wasm; this is the actual WebAssembly policy","title":"Integrating with GitHub Actions","component":"admission-controller","version":"1.29","name":"07-automate","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/07-automate.html","titles":[{"text":"Automation","hash":"_automation","id":1},{"text":"Testing","hash":"_testing","id":2},{"text":"Release","hash":"_release","id":3},{"text":"An example","hash":"_an_example","id":4}],"keyword":"[\"kubewarden\", \"kubernetes\", \"github\", \"integration\"]"},"103":{"id":103,"text":"It’s been a lengthy, and hopefully enjoyable, wander through the Go tutorial, congratulations for having made it this far 🎉. During this tutorial you’ve recreated the safe-labels-policy. There’s nothing special to do when it comes to distributing a policy. If you followed this guide, you have already published your policy using the GitHub release.yml Action defined in the last chapter. The topic of distributing policies is covered in greater depth in the \"distributing policies\" section of Kubewarden’s documentation.","title":"Distributing policy","component":"admission-controller","version":"1.29","name":"08-distribute","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/08-distribute.html","titles":[],"keyword":"[\"kubewarden\", \"kubernetes\", \"distributing kubewarden policies\"]"},"104":{"id":104,"text":"An earlier section shows how to write a validation policy by using Go types describing Kubernetes objects. There is another way to write validation logic, by extracting the relevant data from the JSON document using ad-hoc queries. This \"jq-like\" approach can be useful when the policy has to look deep inside a Kubernetes object. It’s especially helpful when dealing with optional inner objects. This document re-implements the earlier code using JSON queries instead of unmarshaling the JSON payload into Go types. You can use the policy you just created and change its validate function to not use the Go types that define Kubernetes objects. You can instead use the gjson library to extract data from the raw JSON object. Firstly, you need to change the requirement section. This is how the code should look: import ( \"encoding/json\" \"fmt\" mapset \"github.com/deckarep/golang-set/v2\" kubewarden \"github.com/kubewarden/policy-sdk-go\" kubewarden_protocol \"github.com/kubewarden/policy-sdk-go/protocol\" \"github.com/tidwall/gjson\" ) Change the validate function to look like: validate function func validate(payload []byte) ([]byte, error) { // Create a ValidationRequest instance from the incoming payload validationRequest := kubewarden_protocol.ValidationRequest{} err := json.Unmarshal(payload, &validationRequest) if err != nil { return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.Code(400)) } // Create a Settings instance from the ValidationRequest object settings, err := NewSettingsFromValidationReq(&validationRequest) if err != nil { return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.Code(400)) } // Access the **raw** JSON that describes the object podJSON := validationRequest.Request.Object // NOTE 1 data := gjson.GetBytes( podJSON, \"metadata.labels\") var validationErr error labels := mapset.NewThreadUnsafeSet[string]() data.ForEach(func(key, value gjson.Result) bool { // NOTE 2 label := key.String() labels.Add(label) // NOTE 3 validationErr = validateLabel(label, value.String(), &settings) // keep iterating if there are no errors return validationErr == nil }) // NOTE 4 if validationErr != nil { return kubewarden.RejectRequest( kubewarden.Message(validationErr.Error()), kubewarden.NoCode) } // NOTE 5 for requiredLabel := range settings.ConstrainedLabels { if !labels.Contains(requiredLabel) { return kubewarden.RejectRequest( kubewarden.Message(fmt.Sprintf(\"Constrained label %s not found inside of Pod\", requiredLabel)), kubewarden.NoCode) } } return kubewarden.AcceptRequest() } The first part of the validate function is similar as before. 'NOTE’s mark the changes. You use a gjson selector to get the label map provided by the object embedded into the request You use a gjson helper to iterate over the results of the query. If the query has no results, the loop never takes place. You use the validateLabel function to validate the label and its value, as before. You’re also adding the labels found in the Pod to a previously defined mapset.Set. If the validation produced an error, you immediately return with a validation rejection reply. As before, you iterate over the constrainedLabels to check all are specified in the Pod. The code has been slightly changed to make use of the previously populated mapset.Set. The unit tests and the end-to-end tests don’t need any change, you can run them as before: make test go test -v === RUN TestParseValidSettings --- PASS: TestParseValidSettings (0.00s) === RUN TestParseSettingsWithInvalidRegexp --- PASS: TestParseSettingsWithInvalidRegexp (0.00s) === RUN TestDetectValidSettings --- PASS: TestDetectValidSettings (0.00s) === RUN TestDetectNotValidSettingsDueToBrokenRegexp --- PASS: TestDetectNotValidSettingsDueToBrokenRegexp (0.00s) === RUN TestDetectNotValidSettingsDueToConflictingLabels --- PASS: TestDetectNotValidSettingsDueToConflictingLabels (0.00s) === RUN TestValidateLabel --- PASS: TestValidateLabel (0.00s) PASS ok github.com/kubewarden/go-policy-template 0.002s make e2e-tests bats e2e.bats e2e.bats ✓ accept when no settings are provided ✓ accept because label is satisfying a constraint ✓ accept labels are not on deny list ✓ reject because label is on deny list ✓ reject because label is not satisfying a constraint ✓ reject because constrained label is missing ✓ fail settings validation because of conflicting labels ✓ fail settings validation because of invalid constraint 8 tests, 0 failures All the tests are working as expected.","title":"Validation using JSON queries","component":"admission-controller","version":"1.29","name":"09-validation-with-queries","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/09-validation-with-queries.html","titles":[{"text":"The validate function","hash":"_the_validate_function","id":1},{"text":"Testing the validation code","hash":"_testing_the_validation_code","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"validation using JSON queries\"]"},"105":{"id":105,"text":"Raw policies are policies that can evaluate arbitrary JSON documents. For more information about raw policies, please refer to the raw policies page. The following examples should look familiar if you completed the validation section of this tutorial. Remember to mark the policy as raw by using the policyType field in the metadata.yml configuration. Please refer to the metadata specification for more information. metadata.yml with policyType: raw rules: - apiGroups: [\"\"] apiVersions: [\"v1\"] resources: [\"pods\"] operations: [\"CREATE\"] mutating: false contextAware: false executionMode: kubewarden-wapc policyType: raw # Consider the policy for the background audit scans. Default is true. Note the # intrinsic limitations of the background audit feature on docs.kubewarden.io; # If your policy hits any limitations, set to false for the audit feature to # skip this policy and not generate false positives. backgroundAudit: true annotations: # kubewarden specific: io.kubewarden.policy.title: policy-name io.kubewarden.policy.version: 0.1.0 # should match the OCI tag io.kubewarden.policy.description: Short description io.kubewarden.policy.author: \"Author name <author-email@example.com>\" io.kubewarden.policy.url: https://github.com/yourorg/policy-name io.kubewarden.policy.source: https://github.com/yourorg/policy-name io.kubewarden.policy.license: Apache-2.0 # The next two annotations are used in the policy report generated by the # Audit scanner. Severity indicates policy check result criticality and # Category indicates policy category. See more here at docs.kubewarden.io io.kubewarden.policy.severity: medium # one of info, low, medium, high, critical. See docs. io.kubewarden.policy.category: Resource validation # artifacthub specific: (optional, to release in Artifact Hub) io.kubewarden.policy.ociUrl: ghcr.io/yourorg/policies/policy-name # must match release workflow oci-target io.artifacthub.displayName: Policy Name io.artifacthub.resources: Pod io.artifacthub.keywords: pod, cool policy, kubewarden You want to write a policy that accepts a request in the following format: { \"request\": { \"user\": \"alice\", \"action\": \"delete\", \"resource\": \"products\" } } and validates that: user is in the list of valid users action is in the list of valid actions resource is in the list of valid resources Start by scaffolding the policy by using the go policy template. Make sure everything is in place with a make, make test and make e2e-tests. Firstly, define the types representing the payload of the request. You need to declare a custom RawValidationRequest type (create a file request.go), containing the RawValidationRequest and the Settings structures, instead of using the ValidationRequest type provided by the SDK: // RawValidationRequest represents the request that is sent to the validate function by the Policy Server. type RawValidationRequest struct { Request Request `json:\"request\"` // Raw policies can have settings. Settings Settings `json:\"settings\"` } // Request represents the payload of the request. type Request struct { User string `json:\"user\"` Action string `json:\"action\"` Resource string `json:\"resource\"` } Then you need to define the Settings type and the Valid and validateSettings functions in settings.go: The Settings structure and the Valid and validateSettings functions in settings.go. // Settings represents the settings of the policy. type Settings struct { ValidUsers []string `json:\"validUsers\"` ValidActions []string `json:\"validActions\"` ValidResources []string `json:\"validResources\"` } // Valid returns true if the settings are valid. func (s *Settings) Valid() (bool, error) { if len(s.ValidUsers) == 0 { return false, fmt.Errorf(\"validUsers cannot be empty\") } if len(s.ValidActions) == 0 { return false, fmt.Errorf(\"validActions cannot be empty\") } if len(s.ValidResources) == 0 { return false, fmt.Errorf(\"validResources cannot be empty\") } return true, nil } // validateSettings validates the settings. func validateSettings(payload []byte) ([]byte, error) { logger.Info(\"validating settings\") settings := Settings{} err := json.Unmarshal(payload, &settings) if err != nil { return kubewarden.RejectSettings(kubewarden.Message(fmt.Sprintf(\"Provided settings are not valid: %v\", err))) } valid, err := settings.Valid() if err != nil { return kubewarden.RejectSettings(kubewarden.Message(fmt.Sprintf(\"Provided settings are not valid: %v\", err))) } if valid { return kubewarden.AcceptSettings() } logger.Warn(\"rejecting settings\") return kubewarden.RejectSettings(kubewarden.Message(\"Provided settings are not valid\")) } Finally, you replace the validate function (in validate.go): The validate function in validate.go. func validate(payload []byte) ([]byte, error) { // Unmarshal the payload into a RawValidationRequest instance validationRequest := RawValidationRequest{} err := json.Unmarshal(payload, &validationRequest) if err != nil { // If the payload is not valid, reject the request return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.Code(400)) } request := validationRequest.Request settings := validationRequest.Settings // Validate the payload if slices.Contains(settings.ValidUsers, request.User) && slices.Contains(settings.ValidActions, request.Action) && slices.Contains(settings.ValidResources, request.Resource) { return kubewarden.AcceptRequest() } return kubewarden.RejectRequest( kubewarden.Message(\"The request cannot be accepted.\"), kubewarden.Code(400)) } You can set up a test in e2e.bats: e2e.bats #!/usr/bin/env bats @test \"accept\" { run kwctl run annotated-policy.wasm -r test_data/request.json -s test_data/settings.json # this prints the output when one the checks below fails echo \"output = ${output}\" # request allowed [ \"$status\" -eq 0 ] [ $(expr \"$output\" : '.*allowed.*true') -ne 0 ] } Then the outputs of make, make test and make e2e are: Outputs make && make test && make e2e-tests docker run \\ --rm \\ -e GOFLAGS=\"-buildvcs=false\" \\ -v /home/jhk/projects/suse/tmp/fab-goraw:/src \\ -w /src tinygo/tinygo:0.30.0 \\ tinygo build -o policy.wasm -target=wasi -no-debug . go test -v === RUN TestAcceptValidSettings --- PASS: TestAcceptValidSettings (0.00s) === RUN TestRejectSettingsWithEmptyValidUsers --- PASS: TestRejectSettingsWithEmptyValidUsers (0.00s) === RUN TestRejectSettingsWithEmptyValidActions --- PASS: TestRejectSettingsWithEmptyValidActions (0.00s) === RUN TestRejectSettingsWithEmptyValidResources --- PASS: TestRejectSettingsWithEmptyValidResources (0.00s) === RUN TestValidateRequestAccept --- PASS: TestValidateRequestAccept (0.00s) === RUN TestValidateRequestReject --- PASS: TestValidateRequestReject (0.00s) PASS ok github.com/kubewarden/go-policy-template 0.002s kwctl annotate -m metadata.yml -u README.md -o annotated-policy.wasm policy.wasm bats e2e.bats e2e.bats ✓ accept 1 test, 0 failures You need to change the earlier example to mutate the request instead of rejecting it. The settings should contain the defaultUser, defaultAction and defaultRequest to use to mutate the request if the user, the action or the resource isn’t valid. You need to update the Settings type with the new fields: // Settings defines the settings of the policy. type Settings struct { ValidUsers []string `json:\"validUsers\"` ValidActions []string `json:\"validActions\"` ValidResources []string `json:\"validResources\"` DefaultUser string `json:\"defaultUser\"` DefaultAction string `json:\"defaultAction\"` DefaultResource string `json:\"defaultResource\"` } // Valid returns true if the settings are valid. func (s *Settings) Valid() (bool, error) { if len(s.ValidUsers) == 0 { return false, fmt.Errorf(\"validUsers cannot be empty\") } if len(s.ValidActions) == 0 { return false, fmt.Errorf(\"validActions cannot be empty\") } if len(s.ValidResources) == 0 { return false, fmt.Errorf(\"validResources cannot be empty\") } if s.DefaultUser == \"\" { return false, fmt.Errorf(\"defaultUser cannot be empty\") } if s.DefaultAction == \"\" { return false, fmt.Errorf(\"defaultUser cannot be empty\") } if s.DefaultResource == \"\" { return false, fmt.Errorf(\"defaultResource cannot be empty\") } return true, nil } Also, the validate function to introduce the mutation: func validate(payload []byte) ([]byte, error) { // Unmarshal the payload into a RawValidationRequest instance validationRequest := RawValidationRequest{} err := json.Unmarshal(payload, &validationRequest) if err != nil { // If the payload is not valid, reject the request return kubewarden.RejectRequest( kubewarden.Message(err.Error()), kubewarden.Code(400)) } request := validationRequest.Request settings := validationRequest.Settings logger.Info(\"validating request\") // Accept the request without mutating it if it is valid if slices.Contains(settings.ValidUsers, request.User) && slices.Contains(settings.ValidActions, request.Action) && slices.Contains(settings.ValidResources, request.Resource) { return kubewarden.AcceptRequest() } logger.Info(\"mutating request\") // Mutate the request if it is not valid if !slices.Contains(settings.ValidUsers, request.User) { request.User = settings.DefaultUser } if !slices.Contains(settings.ValidActions, request.Action) { request.Action = settings.DefaultAction } if !slices.Contains(settings.ValidResources, request.Resource) { request.Resource = settings.DefaultResource } return kubewarden.MutateRequest(request) }","title":"Writing raw policies","component":"admission-controller","version":"1.29","name":"10-raw-policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/10-raw-policies.html","titles":[{"text":"Examples","hash":"_examples","id":1},{"text":"Validation","hash":"_validation","id":2},{"text":"Mutation","hash":"_mutation","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"raw\", \"go\"]"},"106":{"id":106,"text":"Rego support is available from these releases: kwctl: v0.2.0 policy-server: v0.2.0 Rego policies support context aware data from the Kubewarden 1.9 release. The Rego language is a domain specific language to enable policies as code. Rego is a language inspired by Datalog. There are two ways of writing Rego policies to implement policies as code in Kubernetes, Open Policy Agent and Gatekeeper. The next couple of sections shows how the two frameworks are different, even though using the same language. If you’re more interested in the Kubewarden implementation, you can directly visit the framework-specific documentation linked below. Open Policy Agent Gatekeeper Open Policy Agent is a project that allowing you to implement policies as code in any project. You can use OPA for any policy based check your application needs. In this context, writing policies for Kubernetes is simply exercising OPA. By using Kubernetes admission webhooks, it’s possible to evaluate requests using OPA, which executes the policies written in Rego. OPA has optional integration with Kubernetes through its kube-mgmt sidecar. When deployed on Kubernetes, and with the OPA server evaluating the Rego policies, it’s able to replicate the configured Kubernetes resources into Rego. So, those Kubernetes resources are visible to all policies. With OPA you can define policies inside Kubernetes' ConfigMap objects. You can read more about it on its project page. Gatekeeper focuses, only, on use in Kubernetes, and takes advantage of that as much as possible, making Kubernetes workflows easier than OPA in certain cases. Both OPA and Gatekeeper policies use Rego to describe policies as code. Each solution has differences when it comes to writing policies in Rego, as shown in the next sections. The entry point is the name of a rule within a package, and is the rule invoked by the runtime when the policy runs. Context-aware policies are policies that don’t evaluate the input request in isolation. They take other factors into account to take a decision. For example, a policy that evaluates namespaced resources, and uses an annotation, on the parent namespace to configure something in the policy. Another example would be a policy that evaluates Ingress resources, but to make a decision also has the list of the existing Ingress resources. The idea of context-aware policies can also extend to custom resources, so your policy might want to evaluate a request based on currently used custom resources as well. Both OPA and Gatekeeper support context-aware policies, starting from the Kubewarden 1.9 release. More details about context aware policies are here. Gatekeeper has support for mutating policies, but Kubewarden hasn’t yet implemented mutating policies with Gatekeeper compatibility. You can use policies that use the Kubewarden SDK to write mutating policies, but currently, you can’t run Gatekeeper mutating policies in Kubewarden.","title":"Rego","component":"admission-controller","version":"1.29","name":"01-intro-rego","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/01-intro-rego.html","titles":[{"text":"One language, two frameworks","hash":"_one_language_two_frameworks","id":1},{"text":"Open Policy Agent (OPA)","hash":"_open_policy_agent_opa","id":2},{"text":"Gatekeeper","hash":"_gatekeeper","id":3},{"text":"Looking at the differences","hash":"_looking_at_the_differences","id":4},{"text":"Entry point","hash":"_entry_point","id":5},{"text":"Current limitations","hash":"_current_limitations","id":6},{"text":"Context-aware policies","hash":"_context_aware_policies","id":7},{"text":"Mutating policies","hash":"_mutating_policies","id":8}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"rego\"]"},"107":{"id":107,"text":"Additionally, to building a policy for the wasm target, it needs running. The Open Policy Agent (OPA) team has a page you can check for built-in support. When building a Rego policy into a WebAssembly module, certain of these built-in functions are in the Wasm file itself. They’re the built-ins marked with a green check in the linked built-in page. The WebAssembly runtime evaluating the module, provides the others. The built-ins marked as SDK-dependent are the ones that the host has to implement, in this case, Kubewarden. OPA and Gatekeeper may use them depending on the needs of the policy. In any case, these built-ins are exposed to the policy and any new or existing policy could depend on them. There are still ceratin built-ins that aren’t yet provided by Kubewarden, however, based on the policies seen in the open, the ones already supported should be enough for the most Kubernetes users. This GitHub issue keeps track of the Rego built-ins we’ve still to implement. Feel free to comment there to help prioritize our work. When a policy is run with kwctl or with policy-server, the list of built-ins used by the policy is inspected. If any of the used built-ins are missing, the program stops execution logging a fatal error reporting the missing built-ins.","title":"Builtin support","component":"admission-controller","version":"1.29","name":"02-builtin-support","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/02-builtin-support.html","titles":[{"text":"Executing policies with missing built-ins","hash":"_executing_policies_with_missing_built_ins","id":1}],"keyword":"[\"kubewarden\", \"kubernetes\", \"builtin wasm support\"]"},"108":{"id":108,"text":"Rust is the most mature programming language that can generate WebAssembly modules. WebAssembly is a first-class citizen in the Rust world so many of the tools and crates from the Rust ecosystem work out of the box. Kubewarden provides a Rust SDK that simplifies the process of writing policies. There is also a template project to provide scaffolding for a policy project using the cargo-generate utility. This documentation shows how to use these projects to write Kubewarden policies using Rust. It doesn’t cover the details of Kubewarden’s Rust SDK. The details are in the crate documentation. Install the Rust compiler and its tools using rustup. Refer to the rustup install documentation. Once you have installed rustup add the WebAssembly System Interface (WASI) target: rustup target add wasm32-wasip1 To use cargo-generate you need to add the Xcode tool set. If it isn’t installed through Xcode the following command gives you the dependencies needed: xcode-select --install","title":"Rust","component":"admission-controller","version":"1.29","name":"01-intro-rust","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/01-intro-rust.html","titles":[{"text":"Getting the Rust dependencies","hash":"_getting_the_rust_dependencies","id":1},{"text":"OSX dependencies","hash":"_osx_dependencies","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"introduction\"]"},"109":{"id":109,"text":"As an example, you create a simple validation policy that processes Pod creation requests. The policy looks at the metadata.name attribute of the Pod and rejects pods having an invalid name. It’s list of invalid names should be configurable by end users of the policy. The policy settings look something like: invalid_names: - bad_name1 - bad_name2 The policy should accept the creation of a Pod like the following one: apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx:latest It should reject the creation of a Pod like: apiVersion: v1 kind: Pod metadata: name: bad_name1 spec: containers: - name: nginx image: nginx:latest You can create a new policy project by using cargo generate with the template project. First, install cargo-generate. This requires openssl-devel. cargo install cargo-generate Now scaffold the project as follows: cargo generate --git https://github.com/kubewarden/rust-policy-template \\ --branch main \\ --name demo The command produces output like: 🔧 Creating project called `demo`... ✨ Done! New project created /<some-path-name>/demo This creates the new policy project in the demo sub-directory. If you plan to make use of the GitHub container registry functionality in the demo, you need to enable improved container support. You can try: cargo test This tests the generated scaffolding. If everything is correctly in place you’ll see a series of compilation messages ending with output like: running 4 tests test settings::tests::validate_settings ... ok test tests::accept_request_with_non_pod_resource ... ok test tests::accept_pod_with_valid_name ... ok test tests::reject_pod_with_invalid_name ... ok test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s","title":"Creating a policy","component":"admission-controller","version":"1.29","name":"02-create-policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/02-create-policy.html","titles":[{"text":"Scaffolding the new policy project","hash":"_scaffolding_the_new_policy_project","id":1},{"text":"Testing","hash":"_testing","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy creation\"]"},"110":{"id":110,"text":"Firstly, define the structure that holds the policy settings. Open the demo/src/settings.rs file and change the definition of the Settings struct to look like: pub(crate) struct Settings { pub invalid_names: HashSet<String>, } This automatically puts the list of invalid names in a Set collection. Next, write a settings validation function to make sure the policy is always run with at least one invalid name. You do this by changing the implementation of the Validatable trait. Change the scaffolding implementation defined in src/settings.rs to look like: impl kubewarden::settings::Validatable for Settings { fn validate(&self) -> Result<(), String> { if self.invalid_names.is_empty() { Err(String::from(\"No invalid name specified. Specify at least one invalid name to match\")) } else { Ok(()) } } } Now you can write a unit test to make sure the settings validation is working. You can do this in the usual Rust way. There are already a few default tests at the bottom of the src/settings.rs file. Replace the automatically generated code to look like this: #[cfg(test)] mod tests { use super::*; use kubewarden_policy_sdk::settings::Validatable; #[test] fn accept_settings_with_a_list_of_invalid_names() -> Result<(), ()> { let mut invalid_names = HashSet::new(); invalid_names.insert(String::from(\"bad_name1\")); invalid_names.insert(String::from(\"bad_name2\")); let settings = Settings { invalid_names }; assert!(settings.validate().is_ok()); Ok(()) } #[test] fn reject_settings_without_a_list_of_invalid_names() -> Result<(), ()> { let invalid_names = HashSet::<String>::new(); let settings = Settings { invalid_names }; assert!(settings.validate().is_err()); Ok(()) } } You can now run the unit tests by doing: cargo test This produces an output similar to the following: Compiling demo v0.1.0 (/home/jhk/projects/suse/tmp/demo) Finished test [unoptimized + debuginfo] target(s) in 0.59s Running unittests src/lib.rs (target/debug/deps/demo-bea8e11b21717093) running 5 tests test settings::tests::accept_settings_with_a_list_of_invalid_names ... ok test settings::tests::reject_settings_without_a_list_of_invalid_names ... ok test tests::reject_pod_with_invalid_name ... ok test tests::accept_request_with_non_pod_resource ... ok test tests::accept_pod_with_valid_name ... ok test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s","title":"Defining policy settings","component":"admission-controller","version":"1.29","name":"03-define-policy-settings","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/03-define-policy-settings.html","titles":[{"text":"The policy settings structure","hash":"_the_policy_settings_structure","id":1},{"text":"The settings validation function","hash":"_the_settings_validation_function","id":2},{"text":"Add unit tests","hash":"_add_unit_tests","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"policy settings\", \"rust\"]"},"111":{"id":111,"text":"It’s time to write the actual validation code. It’s defined in the src/lib.rs file. In this file you can find a function called validate. This is the scaffolding provided function: fn validate(payload: &[u8]) -> CallResult { let validation_request: ValidationRequest<Settings> = ValidationRequest::new(payload)?; (1) info!(LOG_DRAIN, \"starting validation\"); if validation_request.request.kind.kind != apicore::Pod::KIND { warn!(LOG_DRAIN, \"Policy validates Pods only. Accepting resource\"; \"kind\" => &validation_request.request.kind.kind); return kubewarden::accept_request(); } // TODO: you can unmarshal any Kubernetes API type you are interested in (2) match serde_json::from_value::<apicore::Pod>(validation_request.request.object) { Ok(pod) => { // TODO: your logic goes here (3) if pod.metadata.name == Some(\"invalid-pod-name\".to_string()) { let pod_name = pod.metadata.name.unwrap(); info!( LOG_DRAIN, \"rejecting pod\"; \"pod_name\" => &pod_name ); kubewarden::reject_request( Some(format!(\"pod name {} is not accepted\", &pod_name)), None, None, None, ) } else { info!(LOG_DRAIN, \"accepting resource\"); kubewarden::accept_request() } } Err(_) => { // TODO: handle as you wish // We were forwarded a request we cannot unmarshal or // understand, just accept it warn!(LOG_DRAIN, \"cannot unmarshal resource: this policy does not know how to evaluate this resource; accept it\"); kubewarden::accept_request() (4) } } } Walking through the code listing: In the line marked ➀. Parse the incoming payload into a ValidationRequest<Setting> object. This automatically populates the Settings instance inside the ValidationRequest with the parameters provided by the user. In line marked ➁. Convert the Kubernetes raw JSON object embedded into the request into an instance of the Pod struct In line marked ➂. The request has a Pod object, the code approves only the requests that don’t have metadata.name equal to the hard-coded value invalid-pod-name In line marked ➃. The request doesn’t contain a Pod object, hence the policy accepts the request. As you can see, the code is already doing a validation that resembles the one you want to implement. You just have to remove the hard-coded value and use the values provided by the user via the policy settings. You can do by replacing the scaffolding validate function, in src/lib.rs, with this one: fn validate(payload: &[u8]) -> CallResult { let validation_request: ValidationRequest<Settings> = ValidationRequest::new(payload)?; info!(LOG_DRAIN, \"starting validation\"); if validation_request.request.kind.kind != apicore::Pod::KIND { warn!(LOG_DRAIN, \"Policy validates Pods only. Accepting resource\"; \"kind\" => &validation_request.request.kind.kind); return kubewarden::accept_request(); } match serde_json::from_value::<apicore::Pod>(validation_request.request.object) { Ok(pod) => { let pod_name = pod.metadata.name.unwrap_or_default(); if validation_request .settings .invalid_names .contains(&pod_name) { kubewarden::reject_request( Some(format!(\"pod name {:?} is not accepted\", pod_name)), None, None, None, ) } else { kubewarden::accept_request() } } Err(_) => { // We were forwarded a request we cannot unmarshal or // understand, just accept it kubewarden::accept_request() } } } Finally, you can create unit tests to check the validation code works as expected. The lib.rs file already has tests defined at the bottom of the file, and as you can see, Kubewarden’s Rust SDK provides test helpers too. Moreover, the scaffold project already ships with default test fixtures in the test_data directory. You are going to use of these recorded admission requests to write your unit tests. Change the contents of the test section at the end of src/lib.rs to look like this: #[cfg(test)] mod tests { use super::*; use kubewarden_policy_sdk::test::Testcase; use std::collections::HashSet; #[test] fn accept_pod_with_valid_name() -> Result<(), ()> { let mut invalid_names = HashSet::new(); invalid_names.insert(String::from(\"bad_name1\")); let settings = Settings { invalid_names }; let request_file = \"test_data/pod_creation.json\"; let tc = Testcase { name: String::from(\"Pod creation with valid name\"), fixture_file: String::from(request_file), expected_validation_result: true, settings, }; let res = tc.eval(validate).unwrap(); assert!( res.mutated_object.is_none(), \"Something mutated with test case: {}\", tc.name, ); Ok(()) } #[test] fn reject_pod_with_invalid_name() -> Result<(), ()> { let mut invalid_names = HashSet::new(); invalid_names.insert(String::from(\"nginx\")); let settings = Settings { invalid_names }; let request_file = \"test_data/pod_creation.json\"; let tc = Testcase { name: String::from(\"Pod creation with invalid name\"), fixture_file: String::from(request_file), expected_validation_result: false, settings, }; let res = tc.eval(validate).unwrap(); assert!( res.mutated_object.is_none(), \"Something mutated with test case: {}\", tc.name, ); Ok(()) } #[test] fn accept_request_with_non_pod_resource() -> Result<(), ()> { let mut invalid_names = HashSet::new(); invalid_names.insert(String::from(\"prod\")); let settings = Settings { invalid_names }; let request_file = \"test_data/ingress_creation.json\"; let tc = Testcase { name: String::from(\"Ingress creation\"), fixture_file: String::from(request_file), expected_validation_result: true, settings, }; let res = tc.eval(validate).unwrap(); assert!( res.mutated_object.is_none(), \"Something mutated with test case: {}\", tc.name, ); Ok(()) } } You now have three unit tests defined in lib.rs: accept_pod_with_valid_name: accepts a Pod with a valid name reject_pod_with_invalid_name: rejects a Pod with an invalid name accept_request_with_non_pod_resource: accept requests that don’t have a Pod as an object You can run the unit tests again: $ cargo test Compiling demo v0.1.0 (/home/flavio/hacking/kubernetes/kubewarden/demo) Finished test [unoptimized + debuginfo] target(s) in 3.45s Running target/debug/deps/demo-24670dd6a538fd72 running 5 tests test settings::tests::accept_settings_with_a_list_of_invalid_names ... ok test settings::tests::reject_settings_without_a_list_of_invalid_names ... ok test tests::accept_request_with_non_pod_resource ... ok test tests::accept_pod_with_valid_name ... ok test tests::reject_pod_with_invalid_name ... ok test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s That’s all that’s required if you need to write a simple validating policy.","title":"Writing validation logic","component":"admission-controller","version":"1.29","name":"04-write-validation-logic","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/04-write-validation-logic.html","titles":[{"text":"Unit tests","hash":"_unit_tests","id":1}],"keyword":"[\"kubewarden\", \"kubernetes\", \"policy\", \"writing\", \"rust\", \"validation logic\"]"},"112":{"id":112,"text":"Mutating policies are similar to validating ones, but also have the ability to mutate an incoming object. They can: Reject a request Accept a request without changing the incoming object Mutate the incoming object as they need to and accept the request Writing a Kubewarden mutation policy is uncomplicated. You’ll use the validating policy created in the previous sections, and with a few changes, turn it into a mutating one. Your policy uses the same validation logic defined before, but it also adds an annotation to all the Pods that have a valid name. Attempting to create a Pod like this: apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx:latest Leads to the creation of this Pod: apiVersion: v1 kind: Pod metadata: name: nginx annotations: kubewarden.policy.demo/inspected: true spec: containers: - name: nginx image: nginx:latest The mutation code is in the validate function. You should change this function to approve the request using mutate_request instead of accept_request. This is how the validate function in lib.rs should look: fn validate(payload: &[u8]) -> CallResult { let validation_request: ValidationRequest<Settings> = ValidationRequest::new(payload)?; info!(LOG_DRAIN, \"starting validation\"); if validation_request.request.kind.kind != apicore::Pod::KIND { warn!(LOG_DRAIN, \"Policy validates Pods only. Accepting resource\"; \"kind\" => &validation_request.request.kind.kind); return kubewarden::accept_request(); } match serde_json::from_value::<apicore::Pod>(validation_request.request.object) { // NOTE 1 Ok(mut pod) => { let pod_name = pod.metadata.name.clone().unwrap_or_default(); if validation_request .settings .invalid_names .contains(&pod_name) { kubewarden::reject_request( Some(format!(\"pod name {:?} is not accepted\", pod_name)), None, None, None, ) } else { // NOTE 2 let mut new_annotations = pod.metadata.annotations.clone().unwrap_or_default(); new_annotations.insert( String::from(\"kubewarden.policy.demo/inspected\"), String::from(\"true\"), ); pod.metadata.annotations = Some(new_annotations); // NOTE 3 let mutated_object = serde_json::to_value(pod)?; kubewarden::mutate_request(mutated_object) } } Err(_) => { // We were forwarded a request we cannot unmarshal or // understand, just accept it kubewarden::accept_request() } } } Compared to the previous code, you have made three changes: We defined the pod object as mutable, see the mut keyword. This is needed because we will extend its metadata.annotations attribute. This is the code that takes the existing annotations, adds the new one, and finally puts the updated annotations object back into the original pod instance. Serialize the pod object into a generic serde_json::Value and then return a mutation response. Having done these changes, it’s time to run unit tests again: $ cargo test Compiling demo-a v0.1.0 (/home/jhk/projects/suse/tmp/demo) Finished test [unoptimized + debuginfo] target(s) in 0.95s Running unittests src/lib.rs (target/debug/deps/demo_a-634b88b0dcb6e707) running 5 tests test settings::tests::reject_settings_without_a_list_of_invalid_names ... ok test settings::tests::accept_settings_with_a_list_of_invalid_names ... ok test tests::accept_request_with_non_pod_resource ... ok test tests::reject_pod_with_invalid_name ... ok test tests::accept_pod_with_valid_name ... FAILED failures: ---- tests::accept_pod_with_valid_name stdout ---- {\"column\":5,\"file\":\"src/lib.rs\",\"level\":\"info\",\"line\":34,\"message\":\"starting validation\",\"policy\":\"sample-policy\"} thread 'tests::accept_pod_with_valid_name' panicked at src/lib.rs:98:9: Something mutated with test case: Pod creation with valid name note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace failures: tests::accept_pod_with_valid_name test result: FAILED. 4 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s As you can see, the accept_pod_with_valid_name fails because the response contains a mutated object. It looks like our code is working. You can update the accept_pod_with_valid_name in lib.rs to look like this: #[test] fn accept_pod_with_valid_name() -> Result<(), ()> { let mut invalid_names = HashSet::new(); invalid_names.insert(String::from(\"bad_name1\")); let settings = Settings { invalid_names }; let request_file = \"test_data/pod_creation.json\"; let tc = Testcase { name: String::from(\"Pod creation with valid name\"), fixture_file: String::from(request_file), expected_validation_result: true, settings, }; let res = tc.eval(validate).unwrap(); // NOTE 1 assert!( res.mutated_object.is_some(), \"Expected accepted object to be mutated\", ); // NOTE 2 let final_pod = serde_json::from_value::<apicore::Pod>(res.mutated_object.unwrap()).unwrap(); let final_annotations = final_pod.metadata.annotations.unwrap(); assert_eq!( final_annotations.get_key_value(\"kubewarden.policy.demo/inspected\"), Some(( &String::from(\"kubewarden.policy.demo/inspected\"), &String::from(\"true\") )), ); Ok(()) } Compared to the first test, there are two changes: Change the assert! statement so that the request is still accepted, but it also includes a mutated object Created a Pod instance starting from the mutated object that’s part of the response. Assert the mutated Pod object has the right metadata.annotations. Run the tests again, this time all shall pass: $ cargo test Compiling demo-a v0.1.0 (/home/jhk/projects/suse/tmp/demo) Finished test [unoptimized + debuginfo] target(s) in 1.25s Running unittests src/lib.rs (target/debug/deps/demo_a-634b88b0dcb6e707) running 5 tests test settings::tests::accept_settings_with_a_list_of_invalid_names ... ok test settings::tests::reject_settings_without_a_list_of_invalid_names ... ok test tests::accept_request_with_non_pod_resource ... ok test tests::reject_pod_with_invalid_name ... ok test tests::accept_pod_with_valid_name ... ok test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s As you can see, the creation of a mutation policy is straightforward.","title":"Creating a new mutation policy","component":"admission-controller","version":"1.29","name":"05-mutation-policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/05-mutation-policy.html","titles":[{"text":"Write the mutation code","hash":"_write_the_mutation_code","id":1},{"text":"Update the unit tests","hash":"_update_the_unit_tests","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"creating a new mutation policy\", \"mutation policy\", \"rust\"]"},"113":{"id":113,"text":"You can have your policy perform logging. The policy-server or kwctl forwards those log entries with the appropriate information. The logging library chosen for the Rust SDK is slog. It’s a popular, well known crate and integrates cleanly with Kubewarden. The project recommends you create a global sink you can log to, from where needed in your policy. For this, use the lazy_static crate: use slog::{o, Logger}; lazy_static! { static ref LOG_DRAIN: Logger = Logger::root( logging::KubewardenDrain::new(), o!(\"policy\" => \"sample-policy\") ); } Now, from within the validate, or validate_settings functions, you can log using the macros exported by slog that match each supported logging level: use slog::{info, o, warn, Logger}; fn validate(payload: &[u8]) -> CallResult { // ... info!(LOG_DRAIN, \"starting validation\"); // ... warn!( LOG_DRAIN, \"structured log\"; \"some_resource_name\" => &some_resource_name ); // ... } The slog library sends all logs to the drain initialized in the global variable. This synchronizes to the policy evaluator executing the policy. This is either kwctl or the policy-server. Then the policy evaluator logs this information, adding further known contextual information, such as the Kubernetes request uid. More information about the logging macros offered by slog are in its documentation.","title":"Logging","component":"admission-controller","version":"1.29","name":"06-logging","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/06-logging.html","titles":[{"text":"Initialize logger","hash":"_initialize_logger","id":1},{"text":"Consuming the logger","hash":"_consuming_the_logger","id":2}],"keyword":"[\"Kubewarden\", \"kubernetes\", \"logging\"]"},"114":{"id":114,"text":"Thus far, you’ve built the policy with a compilation target of the same operating system and architecture of your development machine. It’s now time to build the policy as a WebAssembly binary, a .wasm file. You use the command: make policy.wasm This command builds the code in release mode, with a WebAssembly compilation target. The build produces a policy.wasm file: $ file policy.wasm policy.wasm: WebAssembly (wasm) binary module version 0x1 (MVP) Kubewarden documents policy distribution in the distributing policies section. You can find more Rust Kubewarden policies in Kubewarden’s GitHub space. This query can help you find them. The Kubewarden policy repositories, shown by that query, have GitHub Actions that automate the following tasks: Run unit tests and code linting on pull requests and after code merges into the main branch. Build the policy in release mode and push it to an OCI registry as an artifact.","title":"Building and distributing policies","component":"admission-controller","version":"1.29","name":"07-build-and-distribute","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/07-build-and-distribute.html","titles":[{"text":"Building the policy","hash":"_building_the_policy","id":1},{"text":"Distributing the policy","hash":"_distributing_the_policy","id":2},{"text":"More examples","hash":"_more_examples","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"writing policies\", \"rust\", \"build and distribute\"]"},"115":{"id":115,"text":"Raw policies are policies that can evaluate arbitrary JSON documents. For more information about raw policies, please refer to the raw policies page. The following examples should look familiar if you completed the validation page of this tutorial. Remember to mark the policy as raw by using the policyType field in the metadata.yml configuration. Please refer to the metadata specification for more information. Let’s write a policy that accepts a request in the following format: { \"request\": { \"user\": \"alice\", \"action\": \"delete\", \"resource\": \"products\" } } and validates that: user is in the list of valid users action is in the list of valid actions resource is in the list of valid resources Start by scaffolding the policy by using the rust policy template. First, we define the types that represent the payload of the request. We will declare a custom RawValidationRequest type that contains the Request and the Settings, instead of using the ValidationRequest type that is provided by the SDK: /// RawValidationRequest represents the request that is sent to the validate function by the Policy Server. #[derive(Deserialize)] pub(crate) struct RawValidationRequest { pub(crate) request: Request, pub(crate) settings: Settings, } #[derive(Serialize, Deserialize)] /// Request represents the payload of the request. pub(crate) struct Request { pub(crate) user: String, pub(crate) resource: String, pub(crate) action: String, } Then we need to define the Settings type and implement the Validatable trait: /// Settings represents the settings of the policy. #[derive(Serialize, Deserialize, Default, Debug)] #[serde(default, rename_all = \"camelCase\")] pub(crate) struct Settings { pub(crate) valid_users: Vec<String>, pub(crate) valid_actions: Vec<String>, pub(crate) valid_resources: Vec<String>, } impl kubewarden::settings::Validatable for Settings { fn validate(&self) -> Result<(), String> { info!(LOG_DRAIN, \"starting settings validation\"); if self.valid_users.is_empty() { return Err(\"validUsers cannot be empty\".to_string()); } if self.valid_actions.is_empty() { return Err(\"validActions cannot be empty\".to_string()); } if self.valid_resources.is_empty() { return Err(\"validResources cannot be empty\".to_string()); } Ok(()) } } Finally, we define the validate function: fn validate(payload: &[u8]) -> CallResult { let validation_request: RawValidationRequest = if let Ok(validation_request) = serde_json::from_slice(payload) { validation_request } else { return kubewarden::reject_request( Some(\"cannot unmarshal request\".to_string()), None, None, None, ); }; info!(LOG_DRAIN, \"starting validation\"); let request = validation_request.request; let settings = validation_request.settings; if settings.valid_users.contains(&request.user) && settings.valid_actions.contains(&request.action) && settings.valid_resources.contains(&request.resource) { info!(LOG_DRAIN, \"accepting resource\"); kubewarden::accept_request() } else { kubewarden::reject_request( Some(\"this request is not accepted\".to_string()), None, None, None, ) } } Let’s modify the previous example to mutate the request instead of rejecting it. In this case, the settings will contain the defaultUser, defaultAction and defaultRequest that will be used to mutate the request if the user, the action or the resource is not valid. We need to update the Settings type with the new fields: /// Settings represents the settings of the policy. #[derive(Serialize, Deserialize, Default, Debug)] #[serde(default, rename_all = \"camelCase\")] pub(crate) struct Settings { pub(crate) valid_users: Vec<String>, pub(crate) valid_actions: Vec<String>, pub(crate) valid_resources: Vec<String>, pub(crate) default_user: String, pub(crate) default_action: String, pub(crate) default_resource: String, } impl kubewarden::settings::Validatable for Settings { fn validate(&self) -> Result<(), String> { info!(LOG_DRAIN, \"starting settings validation\"); if self.valid_users.is_empty() { return Err(\"validUsers cannot be empty\".to_string()); } if self.valid_actions.is_empty() { return Err(\"validActions cannot be empty\".to_string()); } if self.valid_resources.is_empty() { return Err(\"validResources cannot be empty\".to_string()); } if self.default_user.is_empty() { return Err(\"defaultUser cannot be empty\".to_string()); } if self.default_action.is_empty() { return Err(\"defaultAction cannot be empty\".to_string()); } if self.default_resource.is_empty() { return Err(\"defaultResource cannot be empty\".to_string()); } Ok(()) } } and the validate function to introduce the mutation: fn validate(payload: &[u8]) -> CallResult { let validation_request: RawValidationRequest = if let Ok(validation_request) = serde_json::from_slice(payload) { validation_request } else { return kubewarden::reject_request( Some(\"cannot unmarshal request\".to_string()), None, None, None, ); }; info!(LOG_DRAIN, \"starting validation\"); let request = validation_request.request; let settings = validation_request.settings; if settings.valid_users.contains(&request.user) && settings.valid_actions.contains(&request.action) && settings.valid_resources.contains(&request.resource) { info!(LOG_DRAIN, \"accepting request\"); return kubewarden::accept_request(); } info!(LOG_DRAIN, \"mutating request\"); let mut request = request; if !settings.valid_users.contains(&request.user) { request.user = settings.default_user; } if !settings.valid_actions.contains(&request.action) { request.action = settings.default_action; } if !settings.valid_resources.contains(&request.resource) { request.resource = settings.default_resource; } let mutated_request = serde_json::to_value(request)?; kubewarden::mutate_request(mutated_request) }","title":"Raw policies","component":"admission-controller","version":"1.29","name":"08-raw-policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/08-raw-policies.html","titles":[{"text":"Examples","hash":"_examples","id":1},{"text":"Validation","hash":"_validation","id":2},{"text":"Mutation","hash":"_mutation","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"raw policies\", \"rust\"]"},"116":{"id":116,"text":"The WebAssembly System Interface (WASI) is a WebAssembly standard providing a set of interfaces allowing execution of WebAssembly outside of browser. Authors writing regular policies should never use plain WASI system interfaces to write policies. This page is for Kubewarden maintainers or low level policy authors who want to experiment with bleeding edge WASM platforms. Using WASI, you can have a WebAssembly module that interacts with system primitives like STDOUT, STDERR, STDIN, environment variables and more. Many of the compilers used to compile Kubewarden policies produce WebAssembly modules that target WASI interfaces. However, Kubewarden policies use the waPC project to implement bi-directional communication between the policy and the policy runtime (kwctl or policy-server). Kubewarden use of the communication protocol is described here. There are special cases when the waPC project can’t be used yet. In these circumstances you can write a policy using the interfaces provided by WASI. Kubewarden supports WASI policies from the Kubewarden 1.7.0 release forward. You shouldn’t use WASI policies under regular circumstances because they suffer from the following limitations: No bi-directional communication, hence host capabilities aren’t available Context-aware capabilities only through the Go SDK (though see the following note) Inferior performance at evaluation time compared to waPC/Rego based policies Host capabilities can be used also by WASI policies. Currently only the Kubewarden Go SDK exposes them to WASI policies. If this is of interest to you, please get in touch. We can then prioritize the effort. The only reason to write a \"plain WASI\" policy is when you can’t use the waPC communication mechanism. Currently, (as of June 2023), the only good reason to do this is when using the official Go compiler to produce a WebAssembly module. Starting from the 1.21 release, the official Go compiler is able to produce WebAssembly modules targeting the WASI interface. However, these modules can’t yet export functions to the WebAssembly runtime. This limitation, tracked by this dedicated issue, prevents the adoption of the waPC protocol. The Kubewarden project team advise that you write Kubewarden Go policies using the TinyGo compiler, as described here. However, certain complex Go code bases can’t be compiled using the TinyGo compiler. This includes, for example, code bases like CEL-go or Kyverno. In these circumstances, usage of the official Go compiler can help. This section describes how to write a plain WASI policy. You need to write the code as a regular CLI program. The program must take the following sub-commands: validate: this command is invoked by the policy engine to evaluate an admission request validate-settings: this command is invoked by the policy engine to validate the policy settings In both cases, the data to be validated is provided via STDIN. The policy must provide the answer via STDOUT. You can use STDERR for debug or error messages. The validation of a request happens when invoking the policy CLI program using the validate sub-command. STDIN must contain a JSON document describing a ValidationRequest object. The policy must write to STDOUT a JSON document that containing a ValidationResponse object. Both the ValidationRequest and ValidationResponse objects are described here. Mutating policies work in the same way as validating ones. The policy CLI program is invoked using the validate sub-command. STDIN must contain a JSON document describing a ValidationRequest object. The policy must write to STDOUT a JSON document containing a ValidationResponse object. Both the ValidationRequest and ValidationResponse objects are described here. When a mutation is needed, the ValidationResponse object must have a key, mutated_object, containing the object to be created. This process is described here. Only supported via the Go SDK for now. The Go SDK exposes the context-aware capabilities as usual, for more information see here. As an example of a WASI Go context-aware policy, see the go-wasi-context-aware-test-policy. The policy must provide a sub-command named validate-settings. This command is used to validate the settings provided by the user. The program must receive on STDIN, a JSON object that holds the settings provided by the user. It then validates them and writes a SettingsValidationResponse object to STDOUT. The format of the SettingsValidationResponse and the settings validation process is described here. Each Kubewarden policy must be annotated via the kwctl annotate command. The policy metadata of a plain WASI policy must have this value: executionMode: wasi This GitHub repository contains a template of a Go-based policy using the WASI protocol.","title":"WASI","component":"admission-controller","version":"1.29","name":"01-intro-wasi","url":"/admission-controller/1.29/en/tutorials/writing-policies/wasi/01-intro-wasi.html","titles":[{"text":"Limitations","hash":"_limitations","id":1},{"text":"Use cases","hash":"_use_cases","id":2},{"text":"Communication protocol","hash":"_communication_protocol","id":3},{"text":"Validation","hash":"_validation","id":4},{"text":"Mutation","hash":"_mutation","id":5},{"text":"Context-aware","hash":"_context_aware","id":6},{"text":"Settings validation","hash":"_settings_validation","id":7},{"text":"Policy metadata","hash":"_policy_metadata","id":8},{"text":"Template project","hash":"_template_project","id":9}],"keyword":"[\"kubewarden\", \"kubernetes\", \"wasi\"]"},"117":{"id":117,"text":"Raw policies are policies that can evaluate arbitrary JSON documents. For more information about raw policies, please refer to the raw policies page. Please refer to Introduction to WASI for an overview of the WASI execution mode. You mark the policy as raw by using the policyType field in the metadata.yml configuration. Please refer to the metadata specification for more information. As an example you can write a policy that accepts a request in the following format: { \"request\": { \"user\": \"alice\", \"action\": \"delete\", \"resource\": \"products\" } } and validates that: user is in the list of valid users action is in the list of valid actions resource is in the list of valid resources Start by scaffolding the policy by using the go WASI policy template. First, you need to define the types that represent the payload of the request. You should declare a custom RawValidationRequest type containing the Request and the Settings, instead of using the ValidationRequest type provided by the kw_sdk.go: // RawValidationRequest represents the request that is sent to the validate function by the Policy Server. type RawValidationRequest struct { Request Request `json:\"request\"` // Raw policies can have settings. Settings Settings `json:\"settings\"` } // Request represents the payload of the request. type Request struct { User string `json:\"user\"` Action string `json:\"action\"` Resource string `json:\"resource\"` } Then you define the Settings type and the validateSettings function in the settings.go file: // Settings represents the settings of the policy. type Settings struct { ValidUsers []string `json:\"validUsers\"` ValidActions []string `json:\"validActions\"` ValidResources []string `json:\"validResources\"` } func validateSettings(input []byte) []byte { var response SettingsValidationResponse settings := &Settings{} if err := json.Unmarshal(input, &settings); err != nil { response = RejectSettings(Message(fmt.Sprintf(\"cannot unmarshal settings: %v\", err))) } else { response = validateCliSettings(settings) } responseBytes, err := json.Marshal(&response) if err != nil { log.Fatalf(\"can not marshal validation response: %v\", err) } return responseBytes } func validateCliSettings(settings *Settings) SettingsValidationResponse { if len(settings.ValidUsers) == 0 { return RejectSettings(Message( \"At least one valid user must be specified\")) } if len(settings.ValidActions) == 0 { return RejectSettings(Message( \"At least one valid action must be specified\")) } if len(settings.ValidResources) == 0 { return RejectSettings(Message( \"At least one valid resource must be specified\")) } return AcceptSettings() } Finally, you update the validation logic in validate.go: func validate(input []byte) []byte { var validationRequest RawValidationRequest validationRequest.Settings = Settings{} decoder := json.NewDecoder(strings.NewReader(string(input))) decoder.DisallowUnknownFields() err := decoder.Decode(&validationRequest) if err != nil { return marshalValidationResponseOrFail( RejectRequest( Message(fmt.Sprintf(\"Error deserializing validation request: %v\", err)), Code(400))) } return marshalValidationResponseOrFail( validateRequest(validationRequest.Settings, validationRequest.Request)) } func marshalValidationResponseOrFail(response ValidationResponse) []byte { responseBytes, err := json.Marshal(&response) if err != nil { log.Fatalf(\"cannot marshal validation response: %v\", err) } return responseBytes } func validateRequest(settings Settings, request Request) ValidationResponse { if slices.Contains(settings.ValidUsers, request.User) && slices.Contains(settings.ValidActions, request.Action) && slices.Contains(settings.ValidResources, request.Resource) { return AcceptRequest() } return RejectRequest( Message(\"The request cannot be accepted.\"), Code(403)) } You can change the earlier example to mutate the request instead of rejecting it. In this case, the settings should contain the defaultUser, defaultAction and defaultRequest to use to mutate the request if the user, the action, or the resource isn’t valid. You need to update the Settings type with the new fields: // Settings represents the settings of the policy. type Settings struct { ValidUsers []string `json:\"validUsers\"` ValidActions []string `json:\"validActions\"` ValidResources []string `json:\"validResources\"` DefaultUser string `json:\"defaultUser\"` DefaultAction string `json:\"defaultAction\"` DefaultResource string `json:\"defaultResource\"` } func validateCliSettings(settings *Settings) SettingsValidationResponse { if len(settings.ValidUsers) == 0 { return RejectSettings(Message( \"At least one valid user must be specified\")) } if len(settings.ValidActions) == 0 { return RejectSettings(Message( \"At least one valid action must be specified\")) } if len(settings.ValidResources) == 0 { return RejectSettings(Message( \"At least one valid resource must be specified\")) } if settings.DefaultUser == \"\" { return RejectSettings(Message( \"Default user must be specified\")) } if settings.DefaultAction == \"\" { return RejectSettings(Message( \"Default action must be specified\")) } if settings.DefaultResource == \"\" { return RejectSettings(Message( \"Default resource must be specified\")) } return AcceptSettings() } You also need to update the ValidationResponse struct and the MutateRequest function in kw_sdk.go to remove the Kubernetes-specific types and use Kubewarden types instead: // ValidationResponse defines the response given when validating a request type ValidationResponse struct { Accepted bool `json:\"accepted\"` // Optional - ignored if accepted Message *string `json:\"message,omitempty\"` // Optional - ignored if accepted Code *uint16 `json:\"code,omitempty\"` // Optional - used only by mutating policies MutatedObject *Request `json:\"mutated_object,omitempty\"` } // MutateRequest accepts the request. The given `mutatedObject` is how // the evaluated object must look once accepted func MutateRequest(mutatedObject *Request) ValidationResponse { return ValidationResponse{ Accepted: true, MutatedObject: mutatedObject, } } Now you can update the validate function to mutate the request if not valid: func validateRequest(settings Settings, request Request) ValidationResponse { if slices.Contains(settings.ValidUsers, request.User) && slices.Contains(settings.ValidActions, request.Action) && slices.Contains(settings.ValidResources, request.Resource) { return AcceptRequest() } if !slices.Contains(settings.ValidUsers, request.User) { request.User = settings.DefaultUser } if !slices.Contains(settings.ValidActions, request.Action) { request.Action = settings.DefaultAction } if !slices.Contains(settings.ValidResources, request.Resource) { request.Resource = settings.DefaultResource } return MutateRequest(&request) }","title":"Writing raw policies","component":"admission-controller","version":"1.29","name":"02-raw-policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/wasi/02-raw-policies.html","titles":[{"text":"Examples","hash":"_examples","id":1},{"text":"Validation","hash":"_validation","id":2},{"text":"Mutation","hash":"_mutation","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"raw policies\"]"},"118":{"id":118,"text":"Gatekeeper support starts from these releases: kwctl: v0.2.0 policy-server: v0.2.0 Gatekeeper is a project targeting Kubernetes with out-of-the-box features for integration. All existing Gatekeeper policies should be compatible with Kubewarden as explained in this chapter. If you find this not to be true, for your Gatekeeper policies, report it, and we’ll work to ensure your Gatekeeper policy runs with Kubewarden. Policies need compilation with the opa CLI to wasm target. For policy execution, you can read more about the Open Policy Agent built-in support in Kubewarden.","title":"Gatekeeper support","component":"admission-controller","version":"1.29","name":"01-intro","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/01-intro.html","titles":[{"text":"Compatibility with existing policies","hash":"_compatibility_with_existing_policies","id":1}],"keyword":"[\"kubewarden\", \"kubernetes\", \"rego\", \"gatekeeper\"]"},"119":{"id":119,"text":"For this tutorial you’ll implement the same policy that you wrote with Open Policy Agent. Namely, a policy that rejects a resource if it’s targeting the default namespace. There is a repository template that you can use as a base to port an existing policy. You need the following tools: opa kwctl Gatekeeper policies must return none or more violation objects. If no violations are reported, the request is accepted. If one, or more violations are reported, the request is rejected. Create a new folder, named rego-policy. In it, create a policy.rego file with the contents: package policy violation[{\"msg\": msg}] { input.review.object.metadata.namespace == \"default\" msg := \"it is forbidden to use the default namespace\" } In this case, the entrypoint is policy/violation, and due to how Rego works, the policy can have the following outcomes: Return 1 violation: the object reviewed is targeting the default namespace. Return 0 violations: the object reviewed is compliant with the policy. Take a moment to compare this policy with the one written in the Open Policy Agent section. That one had to build the whole AdmissionReview response, and the inputs were slightly different. In the Gatekeeper mode, the AdmissionRequest object is provided with the input.review attribute. All attributes of the AdmissionRequest are readable along with object. Now, you can create the requests to evaluate in the next section. You first create a default-ns.json file with the following contents inside the data directory: { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"request\": { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"operation\": \"CREATE\", \"object\": { \"kind\": \"Pod\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"nginx\", \"namespace\": \"default\", \"uid\": \"04dc7a5e-e1f1-4e34-8d65-2c9337a43e64\" } } } } Now, create another AdmissionReview object that, this time, is targeting a namespace different to the default one. Name this file other-ns.json. It has the following contents: { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"request\": { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"operation\": \"CREATE\", \"object\": { \"kind\": \"Pod\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"nginx\", \"namespace\": \"other\", \"uid\": \"04dc7a5e-e1f1-4e34-8d65-2c9337a43e64\" } } } } You can see, this simulates another pod creation request, this time under a namespace called other.","title":"Creating a new Gatekeeper Rego policy","component":"admission-controller","version":"1.29","name":"02-create-policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/02-create-policy.html","titles":[{"text":"Requirements","hash":"_requirements","id":1},{"text":"The policy","hash":"_the_policy","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"gatekeeper rego policy\"]"},"120":{"id":120,"text":"You can build and run the policy in exactly the same way as a Rego policy targeting Open Policy Agent. The structure of your project is: . ├── data │ ├── default-ns.json │ └── other-ns.json └── policy.rego 1 directory, 3 files Build the policy by running the opa command: $ opa build -t wasm -e policy/violation policy.rego This builds the rego policy, with: target: wasm. We want to build the policy for the wasm target. entrypoint: policy/violation. The entry point is the violation rule inside the policy package. policy.rego: build and include the policy.rego file. The earlier command generates a bundle.tar.gz file. You can extract the Wasm module from it: $ tar -xf bundle.tar.gz /policy.wasm The project tree looks like the following: . ├── bundle.tar.gz ├── data │ ├── default-ns.json │ └── other-ns.json ├── policy.rego └── policy.wasm 1 directory, 5 files You can now execute your policy. Use kwctl to run your policy as follows: $ kwctl run -e gatekeeper --request-path data/other-ns.json policy.wasm | jq { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": true } This is your resource created in the namespace called other, it’s accepted, as expected. Now you can run a request that is rejected by the policy: $ kwctl run -e gatekeeper --request-path data/default-ns.json policy.wasm | jq { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": false, \"status\": { \"message\": \"it is forbidden to use the default namespace\" } } You can see your Gatekeeper policy rejected this resource.","title":"Build and run a Gatekeeper policy","component":"admission-controller","version":"1.29","name":"03-build-and-run","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/03-build-and-run.html","titles":[{"text":"Build","hash":"_build","id":1},{"text":"Run","hash":"_run","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"gatekeeper policy\", \"rego\"]"},"121":{"id":121,"text":"Policies have to be annotated for them to be pushed, and eventually executed by the Kubewarden policy-server in a Kubernetes cluster. Annotating and distributing a Gatekeeper policy is similar to distributing an Open Policy Agent one. You’re going to write a metadata.yaml file in your policy directory with contents: rules: - apiGroups: [\"\"] apiVersions: [\"*\"] resources: [\"*\"] operations: [\"CREATE\"] mutating: false contextAware: false executionMode: gatekeeper annotations: io.kubewarden.policy.title: no-default-namespace io.kubewarden.policy.version: 0.1.0 # should match the OCI tag io.kubewarden.policy.description: This policy will reject any resource created inside the default namespace io.kubewarden.policy.author: The Kubewarden Authors io.kubewarden.policy.url: https://github.com/kubewarden/some-policy io.kubewarden.policy.source: https://github.com/kubewarden/some-policy io.kubewarden.policy.license: Apache-2.0 io.kubewarden.policy.usage: | This policy is just an example. You can write interesting descriptions about the policy here. you can see everything is the same as the Open Policy Agent version metadata, except for the executionMode: gatekeeper bit. Go ahead and annotate the policy: $ kwctl annotate policy.wasm --metadata-path metadata.yaml --output-path annotated-policy.wasm Push your policy to an OCI registry: $ kwctl push annotated-policy.wasm registry.my-company.com/kubewarden/no-default-namespace-gatekeeper:v0.0.1 Policy successfully pushed You have to pull your policy to your kwctl local store first: $ kwctl pull registry://registry.my-company.com/kubewarden/no-default-namespace-gatekeeper:v0.0.1 pulling policy... You can now create a scaffold ClusterAdmissionPolicy resource: $ kwctl scaffold manifest registry://registry.my-company.com/kubewarden/no-default-namespace-gatekeeper:v0.0.1 --type ClusterAdmissionPolicy --- apiVersion: policies.kubewarden.io/v1alpha2 kind: ClusterAdmissionPolicy metadata: name: generated-policy spec: module: \"registry://registry.my-company.com/kubewarden/no-default-namespace-gatekeeper:v0.0.1\" settings: {} rules: - apiGroups: - \"\" apiVersions: - \"*\" resources: - \"*\" operations: - CREATE mutating: false Now use this ClusterAdmissionPolicy resource to deploy your policy to a Kubernetes cluster.","title":"Distributing a Gatekeeper policy with Kubewarden","component":"admission-controller","version":"1.29","name":"04-distribute","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/04-distribute.html","titles":[{"text":"Annotating the policy","hash":"_annotating_the_policy","id":1},{"text":"Pushing the policy","hash":"_pushing_the_policy","id":2},{"text":"Deploying on Kubernetes","hash":"_deploying_on_kubernetes","id":3}],"keyword":"[\"kubewarden\", \"kubernetes\", \"gatekeeper\", \"rego\"]"},"122":{"id":122,"text":"Open Policy Agent support has been introduced starting from these releases: kwctl: v0.2.0 policy-server: v0.2.0 Open Policy Agent (OPA) is a general purpose policy framework that uses the Rego language to write policies. Rego policies work by receiving an input to evaluate, and produce an output as a response. In this sense, OPA has no specific tooling for targeting writing policies for Kubernetes. Specifically, policies in OPA receive a JSON input and produce a JSON output. The OPA server is configured to receive admission review requests from Kubernetes. The policies receive a Kubernetes AdmissionReview object in JSON format. They have to return a valid AdmissionReview object as the evaluation results. All policies can be compiled to the wasm target (WebAssembly) with the official opa CLI tool. In terms of policy execution, you can read more about the OPA built-in support implemented in Kubewarden.","title":"Introduction to Open Policy Agent","component":"admission-controller","version":"1.29","name":"01-intro","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/01-intro.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Compatibility with existing policies","hash":"_compatibility_with_existing_policies","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"open policy agent\", \"opa\", \"rego\"]"},"123":{"id":123,"text":"You can create a sample policy that helps to understand the important concepts. There is a kubewarden/opa-policy-template that you can use to port an existing policy. You’ll write, compile and execute a policy in this section. You need these tools to complete this tutorial: opa: you’ll use the opa CLI to build your policy as a wasm target. kwctl: you’ll use kwctl to execute your built policy. You’re going to create a policy that evaluates any kind of namespaced resource. Its goal is to forbid the creation of any resource if the target namespace is default. Otherwise, the request is to accepted. Start by creating a folder called opa-policy. Create a folder named data in the opa-policy folder. This folder has the recorded AdmissionReview objects from the Kubernetes API server. They’re reduced for the sake of simplicity for the exercise, so you can focus on the bits that matter. Create a default-ns.json file with the following contents inside the data directory: { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"request\": { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"operation\": \"CREATE\", \"object\": { \"kind\": \"Pod\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"nginx\", \"namespace\": \"default\", \"uid\": \"04dc7a5e-e1f1-4e34-8d65-2c9337a43e64\" } } } } This simulates a pod operation creation inside the default namespace. Now, create another request example in other-ns.json inside the data directory: { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"request\": { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"operation\": \"CREATE\", \"object\": { \"kind\": \"Pod\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"nginx\", \"namespace\": \"other\", \"uid\": \"04dc7a5e-e1f1-4e34-8d65-2c9337a43e64\" } } } } You can see this simulates another pod creation request, this time under a namespace called other. Go back to your opa-policy folder and start writing your Rego policy. In this folder, create a file named request.rego in the opa-policy folder. The name could be anything, but you’ll use that for this exercise. This is a Rego file that has utility code regarding the request/response itself. In particular, it lets you simplify your policy code and reuse this common part across different policies. The contents are: package policy import data.kubernetes.admission main = { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"response\": response, } response = { \"uid\": input.request.uid, \"allowed\": false, \"status\": {\"message\": reason}, } { reason = concat(\", \", admission.deny) reason != \"\" } else = { \"uid\": input.request.uid, \"allowed\": true, } { true } You have no need, at this point, to go, in detail, into the Rego code. You can learn about it at its website. In this case, it returns either allowed: true or allowed: false. This depends on whether the other package , data.kubernetes.admission, has any deny statement that evaluates to true. If any data.kubernetes.admission.deny evaluates to true, the response here evaluates to the first block. Otherwise, it evaluates to the second block, leading to acceptance. Because no deny block evaluated to true, this means the policy is accepting the request. This is just the shell of the policy, the utility. Now, you create another file, called, for example, policy.rego inside our opa-policy folder with these contents: package kubernetes.admission deny[msg] { input.request.object.metadata.namespace == \"default\" msg := \"it is forbidden to use the default namespace\" } This is the important part of your policy. The deny statement evaluates to true if all statements within it evaluate to true. In this case, there is only one statement, checking if the namespace is default. By Open Policy Agent design, input has the query-able object with the AdmissionReview object, so we can inspect it conveniently. If everything went well, your tree should look like the following: . ├── data │ ├── default-ns.json │ └── other-ns.json ├── policy.rego └── request.rego 1 directory, 4 files","title":"Creating a new policy","component":"admission-controller","version":"1.29","name":"02-create-policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/02-create-policy.html","titles":[{"text":"Requirements","hash":"_requirements","id":1},{"text":"The policy","hash":"_the_policy","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"creating a policy\", \"open policy agent\", \"opa\", \"rego\"]"},"124":{"id":124,"text":"In the previous section you wrote your Rego policy. The structure looks like: . ├── data │ ├── default-ns.json │ └── other-ns.json ├── policy.rego └── request.rego 1 directory, 4 files To build: $ opa build -t wasm -e policy/main policy.rego request.rego This builds the rego policy, with: target: wasm. You want to build the policy for the wasm target. entrypoint: policy/main. The entry point is the main rule inside the policy package. policy.rego: Build and include the policy.rego file. request.rego: Build and include the request.rego file. After the build completes, opa build has generated a bundle.tar.gz file. You can extract it: $ tar -xf bundle.tar.gz /policy.wasm Now the tree looks like the following: . ├── bundle.tar.gz ├── data │ ├── default-ns.json │ └── other-ns.json ├── policy.rego ├── policy.wasm └── request.rego 1 directory, 6 file You have your policy.wasm file: $ file policy.wasm policy.wasm: WebAssembly (wasm) binary module version 0x1 (MVP) Now you run it. Use kwctl to run the policy: $ kwctl run -e opa --request-path data/other-ns.json policy.wasm | jq { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": true } This request is accepted by the policy, since this is the request pointing to the other namespace. execution-mode: opa. Rego policies can be targeting Open Policy Agent or Gatekeeper. You must tell kwctl what kind of policy you’re running. request-path: The location of the recorded request that kwctl sends the policy to for evaluation. Now try to evaluate the request that creates the pod inside the default namespace: $ kwctl run -e opa --request-path data/default-ns.json policy.wasm | jq { \"uid\": \"1299d386-525b-4032-98ae-1949f69f9cfc\", \"allowed\": false, \"status\": { \"message\": \"it is forbidden to use the default namespace\" } } The policy is rejecting the request, giving a reason back to the API server that’s returned to the user or API consumer.","title":"Build and run a OPA policy for Kubewarden","component":"admission-controller","version":"1.29","name":"03-build-and-run","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/03-build-and-run.html","titles":[{"text":"Build","hash":"_build","id":1},{"text":"Run","hash":"_run","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"build and run\", \"open policy agent\", \"opa\", \"rego\"]"},"125":{"id":125,"text":"You have written, built and run your Rego policy. Now it’s time to distribute the policy. Policies have to be annotated, so they can run in the policy-server. The policy-server is the part that executes the policies, when running in a Kubernetes cluster. Annotating a policy is a process that enriches the policy metadata with relevant information. Information like authorship, license, source code location, rules, that describe what kind of resources this policy understands and evaluates. To annotate your policy you need to write a metadata.yaml file: rules: - apiGroups: [\"\"] apiVersions: [\"*\"] resources: [\"*\"] operations: [\"CREATE\"] mutating: false contextAware: false executionMode: opa annotations: io.kubewarden.policy.title: no-default-namespace io.kubewarden.policy.version: 0.1.0 # should match the OCI tag io.kubewarden.policy.description: This policy will reject any resource created inside the default namespace io.kubewarden.policy.author: The Kubewarden Authors io.kubewarden.policy.url: https://github.com/kubewarden/some-policy io.kubewarden.policy.source: https://github.com/kubewarden/some-policy io.kubewarden.policy.license: Apache-2.0 io.kubewarden.policy.usage: | This policy is just an example. You can write interesting descriptions about the policy here. You can see several details: Rules: What resources this policy is targeting. Mutating: Whether this policy is mutating. In this case, it is just validating. Context aware: Whether this policy requires context from the cluster to evaluate the request. Execution mode: Since this is a Rego policy it’s mandatory to specify what execution mode it expects, opa or gatekeeper. This policy is written in the opa style, returning a whole AdmissionReview object. Annotations: Metadata stored in the policy itself. Go ahead and annotate your policy: $ kwctl annotate policy.wasm --metadata-path metadata.yaml --output-path annotated-policy.wasm Now you can inspect the policy by running kwctl inspect annotated-policy.wasm. Now that the policy is annotated you can push it to an OCI registry. $ kwctl push annotated-policy.wasm registry.my-company.com/kubewarden/no-default-namespace:v0.0.1 Policy successfully pushed Your Rego policy, targeting the OPA framework, has everything it needs, to be deployed in production, by creating a ClusterAdmissionPolicy. You can prepare that as well. First you need to pull the policy into the kwctl local store: $ kwctl pull registry://registry.my-company.com/kubewarden/no-default-namespace:v0.0.1 pulling policy... Create a ClusterAdmissionPolicy from it. This operation takes into account the metadata it has about the policy: $ kwctl manifest registry://registry.my-company.com/kubewarden/no-default-namespace:v0.0.1 --type ClusterAdmissionPolicy --- apiVersion: policies.kubewarden.io/v1alpha2 kind: ClusterAdmissionPolicy metadata: name: generated-policy spec: module: \"registry://registry.my-company.com/kubewarden/no-default-namespace:v0.0.1\" settings: {} rules: - apiGroups: - \"\" apiVersions: - \"*\" resources: - \"*\" operations: - CREATE mutating: false You can now use this ClusterAdmissionPolicy as a base to target the resources that you want, or deploy to Kubernetes as is.","title":"Distributing an OPA policy with Kubewarden","component":"admission-controller","version":"1.29","name":"04-distribute","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/04-distribute.html","titles":[{"text":"Annotating the policy","hash":"_annotating_the_policy","id":1},{"text":"Pushing the policy","hash":"_pushing_the_policy","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"distributing\", \"open policy agent\", \"opa\", \"rego\"]"},"126":{"id":126,"text":"Raw policies are policies that can evaluate arbitrary JSON documents. For more information about raw policies, please refer to the raw policies page. The following examples should look familiar if you completed the validation page of this tutorial. Remember to mark the policy as raw, by using the policyType field in the metadata.yml configuration. Please refer to the metadata specification for more information. You’re going to write a policy that accepts a request in the following format: { \"request\": { \"user\": \"alice\", \"action\": \"read\", \"resource\": \"products\" } } It validates that only the admin user can delete resources. Start by scaffolding a policy by using the OPA policy template. First you need to change the policy.rego file to look like this: package validation deny[msg] { input.request.action == \"delete\" input.request.user != \"admin\" msg := sprintf(\"user %v is not allowed to delete resources\", [input.request.user]) } The utility/policy.rego module needs modification to remove Kubernetes-specific code: package policy import data.validation main = { \"response\": response, } # OPA policy responses need the uid field to be set. # If the request doesn't contain a uid, set it to an empty string. default uid = \"\" uid = input.request.uid response = { \"uid\": uid, \"allowed\": false, \"status\": {\"message\": reason}, } { reason = concat(\", \", validation.deny) reason != \"\" } else = { \"uid\": uid, \"allowed\": true, } { true }","title":"Writing raw policies","component":"admission-controller","version":"1.29","name":"05-raw-policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/05-raw-policies.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Validation","hash":"_validation","id":2}],"keyword":"[\"kubewarden\", \"kubernetes\", \"raw policies\", \"open policy agent\", \"opa\", \"rego\"]"}},"components":{},"componentVersions":{"shared/latest":{"displayVersion":"latest","title":"shared","version":"latest","name":"shared","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"SUSE Security Admission Controller","elemental-product-name":"SUSE® Rancher Prime: OS Manager","fleet-product-name":"SUSE® Rancher Prime: Continuous Delivery","harvester-product-name-tm":"SUSE® Virtualization","harvester-product-name":"SUSE Virtualization","k3k-product-name":"SUSE Virtual Clusters","k3k-product-name-tm":"SUSE® Rancher Prime: Virtual Clusters","k3s-product-name":"SUSE® Rancher Prime: K3s","kubewarden-product-name":"SUSE® Rancher Prime: Admission Policy Manager","longhorn-product-name":"SUSE Storage","longhorn-product-name-tm":"SUSE® Storage","neuvector-product-name":"SUSE® Security","rancher-prime":"Cloud Native","rancher-product-name":"SUSE Rancher Prime","rancher-product-name-tm":"SUSE® Rancher Prime","rancher-short-name":"Rancher","rke2-product-name":"SUSE® Rancher Prime: RKE2","rke2-short-name":"RKE2","stackstate-product-name":"SUSE® Observability","turtles-product-name":"SUSE® Rancher Prime: Cluster API","page-project-data":[{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"Cluster API","url-part":"cluster-api","url":"https://documentation.suse.com/cloudnative/cluster-api"},{"title":"Continuous Delivery","url-part":"continuous-delivery","url":"https://documentation.suse.com/cloudnative/continuous-delivery"},{"title":"K3s","url-part":"k3s","url":"https://documentation.suse.com/cloudnative/k3s"},{"title":"OS Manager","url-part":"os-manager","url":"https://documentation.suse.com/cloudnative/os-manager"},{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"RKE2","url-part":"rke2","url":"https://documentation.suse.com/cloudnative/rke2"},{"title":"SUSE Observability","url-part":"suse-observability","url":"https://documentation.suse.com/cloudnative/suse-observability"},{"title":"SUSE Rancher Manager","url-part":"rancher-manager","url":"https://documentation.suse.com/cloudnative/rancher-manager"},{"title":"SUSE Security","url-part":"security","url":"https://documentation.suse.com/cloudnative/security"},{"title":"SUSE Storage","url-part":"storage","url":"https://documentation.suse.com/cloudnative/storage"},{"title":"SUSE Virtualization","url-part":"virtualization","url":"https://documentation.suse.com/cloudnative/virtualization"},{"title":"SUSE Virtual Clusters","url-part":"virtual-clusters","url":"https://documentation.suse.com/cloudnative/virtual-clusters"}],"page-draft-preview-only":"true","kw-build-type":"product","kw-rancher-product-name":"SUSE Security Admission Controller","kw-community-product-name":"Kubewarden","page-pagination":"","tabs-sync-option":""},"sourcemap":false,"extensions":[{},{}]},"url":"/shared/latest/index.html"},"admission-controller/1.30":{"displayVersion":"1.30-next","title":"Admission Controller","version":"1.30","name":"admission-controller","prerelease":"-next","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"SUSE Security Admission Controller","elemental-product-name":"SUSE® Rancher Prime: OS Manager","fleet-product-name":"SUSE® Rancher Prime: Continuous Delivery","harvester-product-name-tm":"SUSE® Virtualization","harvester-product-name":"SUSE Virtualization","k3k-product-name":"SUSE Virtual Clusters","k3k-product-name-tm":"SUSE® Rancher Prime: Virtual Clusters","k3s-product-name":"SUSE® Rancher Prime: K3s","kubewarden-product-name":"SUSE® Rancher Prime: Admission Policy Manager","longhorn-product-name":"SUSE Storage","longhorn-product-name-tm":"SUSE® Storage","neuvector-product-name":"SUSE® Security","rancher-prime":"Cloud Native","rancher-product-name":"SUSE Rancher Prime","rancher-product-name-tm":"SUSE® Rancher Prime","rancher-short-name":"Rancher","rke2-product-name":"SUSE® Rancher Prime: RKE2","rke2-short-name":"RKE2","stackstate-product-name":"SUSE® Observability","turtles-product-name":"SUSE® Rancher Prime: Cluster API","page-project-data":[{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"Cluster API","url-part":"cluster-api","url":"https://documentation.suse.com/cloudnative/cluster-api"},{"title":"Continuous Delivery","url-part":"continuous-delivery","url":"https://documentation.suse.com/cloudnative/continuous-delivery"},{"title":"K3s","url-part":"k3s","url":"https://documentation.suse.com/cloudnative/k3s"},{"title":"OS Manager","url-part":"os-manager","url":"https://documentation.suse.com/cloudnative/os-manager"},{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"RKE2","url-part":"rke2","url":"https://documentation.suse.com/cloudnative/rke2"},{"title":"SUSE Observability","url-part":"suse-observability","url":"https://documentation.suse.com/cloudnative/suse-observability"},{"title":"SUSE Rancher Manager","url-part":"rancher-manager","url":"https://documentation.suse.com/cloudnative/rancher-manager"},{"title":"SUSE Security","url-part":"security","url":"https://documentation.suse.com/cloudnative/security"},{"title":"SUSE Storage","url-part":"storage","url":"https://documentation.suse.com/cloudnative/storage"},{"title":"SUSE Virtualization","url-part":"virtualization","url":"https://documentation.suse.com/cloudnative/virtualization"},{"title":"SUSE Virtual Clusters","url-part":"virtual-clusters","url":"https://documentation.suse.com/cloudnative/virtual-clusters"}],"page-draft-preview-only":"true","kw-build-type":"product","kw-rancher-product-name":"SUSE Security Admission Controller","kw-community-product-name":"Kubewarden","page-pagination":"","tabs-sync-option":""},"sourcemap":false,"extensions":[{},{}]},"url":"/admission-controller/1.30/en/introduction.html","navigation":[{"items":[{"content":"Introduction","url":"/admission-controller/1.30/en/introduction.html","urlType":"internal"},{"content":"Quick start","url":"/admission-controller/1.30/en/quick-start.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Writing SUSE Security Admission Controller policies","url":"/admission-controller/1.30/en/tutorials/writing-policies/index.html","urlType":"internal","items":[{"content":"Introduction to CEL","url":"/admission-controller/1.30/en/tutorials/writing-policies/CEL/01-intro-cel.html","urlType":"internal","items":[{"content":"Reusing ValidatingAdmissionPolicies","url":"/admission-controller/1.30/en/tutorials/writing-policies/CEL/02-reusing-vap.html","urlType":"internal"},{"content":"Context-aware CEL policies","url":"/admission-controller/1.30/en/tutorials/writing-policies/CEL/03-context-aware.html","urlType":"internal"},{"content":"Sigstore host capabilities","url":"/admission-controller/1.30/en/tutorials/writing-policies/CEL/04-example-sigstore.html","urlType":"internal"}]},{"content":"Rust","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/01-intro-rust.html","urlType":"internal","items":[{"content":"Creating a policy","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/02-create-policy.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/03-define-policy-settings.html","urlType":"internal"},{"content":"Writing validation logic","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/04-write-validation-logic.html","urlType":"internal"},{"content":"Creating a new mutation policy","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/05-mutation-policy.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/06-logging.html","urlType":"internal"},{"content":"Building and distributing policies","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/07-build-and-distribute.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.30/en/tutorials/writing-policies/rust/08-raw-policies.html","urlType":"internal"}]},{"content":"Writing policies in Go","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/01-intro-go.html","urlType":"internal","items":[{"content":"Creating a new validation policy","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/02-scaffold.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/03-policy-settings.html","urlType":"internal"},{"content":"Writing the validation logic","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/04-validation.html","urlType":"internal"},{"content":"End-to-end testing","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/05-e2e-tests.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/06-logging.html","urlType":"internal"},{"content":"Integrating with GitHub Actions","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/07-automate.html","urlType":"internal"},{"content":"Distributing policy","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/08-distribute.html","urlType":"internal"},{"content":"Validation using JSON queries","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/09-validation-with-queries.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.30/en/tutorials/writing-policies/go/10-raw-policies.html","urlType":"internal"}]},{"content":"Rego","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/01-intro-rego.html","urlType":"internal","items":[{"content":"Builtin support","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/02-builtin-support.html","urlType":"internal"},{"content":"Open Policy Agent","items":[{"content":"Introduction to Open Policy Agent","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/open-policy-agent/01-intro.html","urlType":"internal"},{"content":"Creating a new policy","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/open-policy-agent/02-create-policy.html","urlType":"internal"},{"content":"Build and run a OPA policy for Admission Controller","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/open-policy-agent/03-build-and-run.html","urlType":"internal"},{"content":"Distributing an OPA policy with SUSE Security Admission Controller","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/open-policy-agent/04-distribute.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/open-policy-agent/05-raw-policies.html","urlType":"internal"}]},{"content":"Gatekeeper","items":[{"content":"Gatekeeper support","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/gatekeeper/01-intro.html","urlType":"internal"},{"content":"Creating a new Gatekeeper Rego policy","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/gatekeeper/02-create-policy.html","urlType":"internal"},{"content":"Build and run a Gatekeeper policy","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/gatekeeper/03-build-and-run.html","urlType":"internal"},{"content":"Distributing a Gatekeeper policy with SUSE Security Admission Controller","url":"/admission-controller/1.30/en/tutorials/writing-policies/rego/gatekeeper/04-distribute.html","urlType":"internal"}]}]},{"content":"C#","url":"/admission-controller/1.30/en/tutorials/writing-policies/dotnet.html","urlType":"internal"},{"content":"Swift","url":"/admission-controller/1.30/en/tutorials/writing-policies/swift.html","urlType":"internal"},{"content":"Typescript","url":"/admission-controller/1.30/en/tutorials/writing-policies/typescript.html","urlType":"internal"},{"content":"Other languages","url":"/admission-controller/1.30/en/tutorials/writing-policies/other-languages.html","urlType":"internal"},{"content":"WASI","items":[{"content":"WASI","url":"/admission-controller/1.30/en/tutorials/writing-policies/wasi/01-intro-wasi.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.30/en/tutorials/writing-policies/wasi/02-raw-policies.html","urlType":"internal"}]},{"content":"Policy metadata","url":"/admission-controller/1.30/en/tutorials/writing-policies/metadata.html","urlType":"internal"}]},{"content":"Testing policies","items":[{"content":"Policy testing","url":"/admission-controller/1.30/en/tutorials/testing-policies/index.html","urlType":"internal"},{"content":"Testing for policy authors","url":"/admission-controller/1.30/en/tutorials/testing-policies/02-policy-authors.html","urlType":"internal"},{"content":"Testing for cluster operators","url":"/admission-controller/1.30/en/tutorials/testing-policies/03-cluster-operators.html","urlType":"internal"}]},{"content":"Verifying SUSE Security Admission Controller","url":"/admission-controller/1.30/en/tutorials/verifying-kubewarden.html","urlType":"internal"},{"content":"Publish policies to Artifact Hub","url":"/admission-controller/1.30/en/tutorials/publish-policy-to-artifact-hub.html","urlType":"internal"}]},{"content":"Explanations","items":[{"content":"Mutating policies","url":"/admission-controller/1.30/en/explanations/mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.30/en/explanations/context-aware-policies.html","urlType":"internal"},{"content":"Policy Groups","url":"/admission-controller/1.30/en/explanations/policy-groups.html","urlType":"internal"},{"content":"Certificate rotation","url":"/admission-controller/1.30/en/explanations/certificates.html","urlType":"internal"},{"content":"Distributing policies","url":"/admission-controller/1.30/en/explanations/distributing-policies.html","urlType":"internal"},{"content":"Comparisons","items":[{"content":"SUSE Security Admission Controller vs OPA Gatekeeper","url":"/admission-controller/1.30/en/explanations/comparisons/opa-comparison.html","urlType":"internal"}]},{"content":"What is the Audit Scanner?","url":"/admission-controller/1.30/en/explanations/audit-scanner/audit-scanner.html","urlType":"internal","items":[{"content":"Audit Scanner - Limitations","url":"/admission-controller/1.30/en/explanations/audit-scanner/limitations.html","urlType":"internal"},{"content":"Audit Scanner - Policy Reports","url":"/admission-controller/1.30/en/explanations/audit-scanner/policy-reports.html","urlType":"internal"}]},{"content":"Admission Controller architecture","url":"/admission-controller/1.30/en/explanations/architecture.html","urlType":"internal"}]},{"content":"Howtos","items":[{"content":"Common tasks","url":"/admission-controller/1.30/en/howtos/tasks.html","urlType":"internal"},{"content":"Install <code>kwctl</code>","url":"/admission-controller/1.30/en/howtos/install-kwctl.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.30/en/howtos/production-deployments.html","urlType":"internal"},{"content":"Deployment at scale","url":"/admission-controller/1.30/en/howtos/deploy-at-scale.html","urlType":"internal"},{"content":"Audit Scanner","url":"/admission-controller/1.30/en/howtos/audit-scanner.html","urlType":"internal"},{"content":"Configuring policies","url":"/admission-controller/1.30/en/howtos/policies.html","urlType":"internal"},{"content":"Emergency disable","url":"/admission-controller/1.30/en/howtos/emergency-disable.html","urlType":"internal"},{"content":"Configuring Policy Servers","items":[{"content":"Using custom CAs","url":"/admission-controller/1.30/en/howtos/policy-servers/01-custom-cas.html","urlType":"internal"},{"content":"Configuring PolicyServers to use private registries","url":"/admission-controller/1.30/en/howtos/policy-servers/02-private-registry.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.30/en/howtos/policy-servers/03-production-deployments.html","urlType":"internal"}]},{"content":"Policy groups","url":"/admission-controller/1.30/en/howtos/policy-groups.html","urlType":"internal"},{"content":"PSP migration","url":"/admission-controller/1.30/en/howtos/psp-migration.html","urlType":"internal"},{"content":"ValidatingAdmissionPolicy migration","url":"/admission-controller/1.30/en/howtos/vap-migration.html","urlType":"internal"},{"content":"Pod Security Admission","url":"/admission-controller/1.30/en/howtos/pod-security-admission-with-kubewarden.html","urlType":"internal"},{"content":"Custom certificate authorities","url":"/admission-controller/1.30/en/howtos/custom-certificate-authorities.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.30/en/howtos/raw-policies.html","urlType":"internal"},{"content":"ArgoCD Installation","url":"/admission-controller/1.30/en/howtos/argocd-installation.html","urlType":"internal"},{"content":"Security","url":"/admission-controller/1.30/en/howtos/security-hardening/security-hardening.html","urlType":"internal","items":[{"content":"Secure supply chain","url":"/admission-controller/1.30/en/howtos/security-hardening/secure-supply-chain.html","urlType":"internal"},{"content":"Enable mTLS with K3s","url":"/admission-controller/1.30/en/howtos/security-hardening/webhook-mtls.html","urlType":"internal"}]},{"content":"Air gap","items":[{"content":"Requirements","url":"/admission-controller/1.30/en/howtos/airgap/01-requirements.html","urlType":"internal"},{"content":"Installation","url":"/admission-controller/1.30/en/howtos/airgap/02-install.html","urlType":"internal"},{"content":"Hauler installation","url":"/admission-controller/1.30/en/howtos/airgap/03-hauler.html","urlType":"internal"}]},{"content":"Telemetry quick starts","items":[{"content":"Open Telemetry quick start","url":"/admission-controller/1.30/en/howtos/telemetry/10-opentelemetry-qs.html","urlType":"internal"},{"content":"Tracing quickstart","url":"/admission-controller/1.30/en/howtos/telemetry/20-tracing-qs.html","urlType":"internal"},{"content":"Metrics quickstart","url":"/admission-controller/1.30/en/howtos/telemetry/30-metrics-qs.html","urlType":"internal"},{"content":"Custom OpenTelemetry Collector","url":"/admission-controller/1.30/en/howtos/telemetry/40-custom-otel-collector.html","urlType":"internal"}]},{"content":"Rancher Fleet","url":"/admission-controller/1.30/en/howtos/Rancher-Fleet.html","urlType":"internal"},{"content":"Rancher UI extension","items":[{"content":"Quickstart","url":"/admission-controller/1.30/en/howtos/ui-extension/01-install.html","urlType":"internal"},{"content":"Monitoring","url":"/admission-controller/1.30/en/howtos/ui-extension/02-metrics.html","urlType":"internal"},{"content":"Tracing","url":"/admission-controller/1.30/en/howtos/ui-extension/03-tracing.html","urlType":"internal"}]},{"content":"Rancher Application Collection","items":[{"content":"Verify images","url":"/admission-controller/1.30/en/howtos/application-collection/01-verify-images.html","urlType":"internal"}]},{"content":"Workarounds","items":[{"content":"Certificate rotation","url":"/admission-controller/1.30/en/howtos/workarounds/policy-server-certificate-expiry.html","urlType":"internal"}]},{"content":"Contribution guide","url":"/admission-controller/1.30/en/howtos/contribution-guide/contribution-guide.html","urlType":"internal","items":[{"content":"Contributing to documentation","url":"/admission-controller/1.30/en/howtos/contribution-guide/contributing.html","urlType":"internal"},{"content":"Improving documentation","url":"/admission-controller/1.30/en/howtos/contribution-guide/suggesting-an-improvement.html","urlType":"internal"}]},{"content":"Migrating Gatekeeper Policies to SUSE Security Admission Controller","url":"/admission-controller/1.30/en/howtos/gatekeeper-migration.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"Custom Resource Definitions (CRD)","url":"/admission-controller/1.30/en/reference/CRDs.html","urlType":"internal"},{"content":"Dependency matrix","url":"/admission-controller/1.30/en/reference/dependency-matrix.html","urlType":"internal"},{"content":"Artifacts","url":"/admission-controller/1.30/en/reference/artifacts.html","urlType":"internal"},{"content":"Upgrade path","url":"/admission-controller/1.30/en/reference/upgrade-path.html","urlType":"internal"},{"content":"Metrics reference","url":"/admission-controller/1.30/en/reference/metrics-reference.html","urlType":"internal"},{"content":"Monitor mode","url":"/admission-controller/1.30/en/reference/monitor-mode.html","urlType":"internal"},{"content":"Policy specification","items":[{"content":"Policy communication specification","url":"/admission-controller/1.30/en/reference/spec/01-intro-spec.html","urlType":"internal"},{"content":"Policy settings","url":"/admission-controller/1.30/en/reference/spec/02-settings.html","urlType":"internal"},{"content":"Validating policies","url":"/admission-controller/1.30/en/reference/spec/03-validating-policies.html","urlType":"internal"},{"content":"Mutating policies","url":"/admission-controller/1.30/en/reference/spec/04-mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.30/en/reference/spec/05-context-aware-policies.html","urlType":"internal"},{"content":"Host capabilities","items":[{"content":"Host capabilities specification","url":"/admission-controller/1.30/en/reference/spec/host-capabilities/01-intro-host-capabilities.html","urlType":"internal"},{"content":"Signature verifier policies","url":"/admission-controller/1.30/en/reference/spec/host-capabilities/02-signature-verifier-policies.html","urlType":"internal"},{"content":"Container registry capabilities","url":"/admission-controller/1.30/en/reference/spec/host-capabilities/03-container-registry.html","urlType":"internal"},{"content":"Network capabilities","url":"/admission-controller/1.30/en/reference/spec/host-capabilities/04-net.html","urlType":"internal"},{"content":"Cryptographic capabilities","url":"/admission-controller/1.30/en/reference/spec/host-capabilities/05-crypto.html","urlType":"internal"},{"content":"Kubernetes capabilities","url":"/admission-controller/1.30/en/reference/spec/host-capabilities/06-kubernetes.html","urlType":"internal"}]}]},{"content":"OCI registry support for Admission Controller","url":"/admission-controller/1.30/en/reference/oci-registries-support.html","urlType":"internal"},{"content":"Security","items":[{"content":"Webhooks","url":"/admission-controller/1.30/en/reference/security-hardening/webhooks-hardening.html","urlType":"internal"}]},{"content":"Threat Model","url":"/admission-controller/1.30/en/reference/threat-model.html","urlType":"internal"},{"content":"Policy evaluation timeout protection","url":"/admission-controller/1.30/en/reference/policy-evaluation-timeout.html","urlType":"internal"},{"content":"Verification configuration format","url":"/admission-controller/1.30/en/reference/verification-config.html","urlType":"internal"},{"content":"Reference for sources.yaml","url":"/admission-controller/1.30/en/reference/sources_yaml.html","urlType":"internal"},{"content":"<code>kwctl</code> CLI","url":"/admission-controller/1.30/en/reference/kwctl-cli.html","urlType":"internal"},{"content":"Policy Server CLI","url":"/admission-controller/1.30/en/reference/policy-server-cli.html","urlType":"internal"}]},{"content":"For who?","url":"/admission-controller/1.30/en/personas.html","urlType":"internal"},{"content":"Use cases","url":"/admission-controller/1.30/en/use-cases.html","urlType":"internal"},{"content":"Organization","url":"/admission-controller/1.30/en/organization.html","urlType":"internal"},{"content":"Enterprise","url":"/admission-controller/1.30/en/enterprise.html","urlType":"internal"},{"content":"Glossary","url":"/admission-controller/1.30/en/glossary.html","urlType":"internal"},{"content":"Security disclosure","url":"/admission-controller/1.30/en/disclosure.html","urlType":"internal"}],"root":true,"order":0}]},"admission-controller/1.29":{"displayVersion":"1.29","title":"Admission Controller","version":"1.29","name":"admission-controller","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"SUSE Security Admission Controller","elemental-product-name":"SUSE® Rancher Prime: OS Manager","fleet-product-name":"SUSE® Rancher Prime: Continuous Delivery","harvester-product-name-tm":"SUSE® Virtualization","harvester-product-name":"SUSE Virtualization","k3k-product-name":"SUSE Virtual Clusters","k3k-product-name-tm":"SUSE® Rancher Prime: Virtual Clusters","k3s-product-name":"SUSE® Rancher Prime: K3s","kubewarden-product-name":"SUSE® Rancher Prime: Admission Policy Manager","longhorn-product-name":"SUSE Storage","longhorn-product-name-tm":"SUSE® Storage","neuvector-product-name":"SUSE® Security","rancher-prime":"Cloud Native","rancher-product-name":"SUSE Rancher Prime","rancher-product-name-tm":"SUSE® Rancher Prime","rancher-short-name":"Rancher","rke2-product-name":"SUSE® Rancher Prime: RKE2","rke2-short-name":"RKE2","stackstate-product-name":"SUSE® Observability","turtles-product-name":"SUSE® Rancher Prime: Cluster API","page-project-data":[{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"Cluster API","url-part":"cluster-api","url":"https://documentation.suse.com/cloudnative/cluster-api"},{"title":"Continuous Delivery","url-part":"continuous-delivery","url":"https://documentation.suse.com/cloudnative/continuous-delivery"},{"title":"K3s","url-part":"k3s","url":"https://documentation.suse.com/cloudnative/k3s"},{"title":"OS Manager","url-part":"os-manager","url":"https://documentation.suse.com/cloudnative/os-manager"},{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"RKE2","url-part":"rke2","url":"https://documentation.suse.com/cloudnative/rke2"},{"title":"SUSE Observability","url-part":"suse-observability","url":"https://documentation.suse.com/cloudnative/suse-observability"},{"title":"SUSE Rancher Manager","url-part":"rancher-manager","url":"https://documentation.suse.com/cloudnative/rancher-manager"},{"title":"SUSE Security","url-part":"security","url":"https://documentation.suse.com/cloudnative/security"},{"title":"SUSE Storage","url-part":"storage","url":"https://documentation.suse.com/cloudnative/storage"},{"title":"SUSE Virtualization","url-part":"virtualization","url":"https://documentation.suse.com/cloudnative/virtualization"},{"title":"SUSE Virtual Clusters","url-part":"virtual-clusters","url":"https://documentation.suse.com/cloudnative/virtual-clusters"}],"page-draft-preview-only":"true","kw-build-type":"product","kw-rancher-product-name":"SUSE Security Admission Controller","kw-community-product-name":"Kubewarden","page-pagination":"","tabs-sync-option":""},"sourcemap":false,"extensions":[{},{}]},"url":"/admission-controller/1.29/en/introduction.html","navigation":[{"items":[{"content":"Introduction","url":"/admission-controller/1.29/en/introduction.html","urlType":"internal"},{"content":"Quick start","url":"/admission-controller/1.29/en/quick-start.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Writing Kubewarden policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/index.html","urlType":"internal","items":[{"content":"Introduction to CEL","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/01-intro-cel.html","urlType":"internal","items":[{"content":"Reusing ValidatingAdmissionPolicies","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/02-reusing-vap.html","urlType":"internal"},{"content":"Context-aware CEL policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/03-context-aware.html","urlType":"internal"},{"content":"Sigstore host capabilities","url":"/admission-controller/1.29/en/tutorials/writing-policies/CEL/04-example-sigstore.html","urlType":"internal"}]},{"content":"Rust","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/01-intro-rust.html","urlType":"internal","items":[{"content":"Creating a policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/02-create-policy.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/03-define-policy-settings.html","urlType":"internal"},{"content":"Writing validation logic","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/04-write-validation-logic.html","urlType":"internal"},{"content":"Creating a new mutation policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/05-mutation-policy.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/06-logging.html","urlType":"internal"},{"content":"Building and distributing policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/07-build-and-distribute.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/rust/08-raw-policies.html","urlType":"internal"}]},{"content":"Writing policies in Go","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/01-intro-go.html","urlType":"internal","items":[{"content":"Creating a new validation policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/02-scaffold.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/03-policy-settings.html","urlType":"internal"},{"content":"Writing the validation logic","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/04-validation.html","urlType":"internal"},{"content":"End-to-end testing","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/05-e2e-tests.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/06-logging.html","urlType":"internal"},{"content":"Integrating with GitHub Actions","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/07-automate.html","urlType":"internal"},{"content":"Distributing policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/08-distribute.html","urlType":"internal"},{"content":"Validation using JSON queries","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/09-validation-with-queries.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/go/10-raw-policies.html","urlType":"internal"}]},{"content":"Rego","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/01-intro-rego.html","urlType":"internal","items":[{"content":"Builtin support","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/02-builtin-support.html","urlType":"internal"},{"content":"Open Policy Agent","items":[{"content":"Introduction to Open Policy Agent","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/01-intro.html","urlType":"internal"},{"content":"Creating a new policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/02-create-policy.html","urlType":"internal"},{"content":"Build and run a OPA policy for Kubewarden","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/03-build-and-run.html","urlType":"internal"},{"content":"Distributing an OPA policy with Kubewarden","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/04-distribute.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/open-policy-agent/05-raw-policies.html","urlType":"internal"}]},{"content":"Gatekeeper","items":[{"content":"Gatekeeper support","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/01-intro.html","urlType":"internal"},{"content":"Creating a new Gatekeeper Rego policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/02-create-policy.html","urlType":"internal"},{"content":"Build and run a Gatekeeper policy","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/03-build-and-run.html","urlType":"internal"},{"content":"Distributing a Gatekeeper policy with Kubewarden","url":"/admission-controller/1.29/en/tutorials/writing-policies/rego/gatekeeper/04-distribute.html","urlType":"internal"}]}]},{"content":"C#","url":"/admission-controller/1.29/en/tutorials/writing-policies/dotnet.html","urlType":"internal"},{"content":"Swift","url":"/admission-controller/1.29/en/tutorials/writing-policies/swift.html","urlType":"internal"},{"content":"Typescript","url":"/admission-controller/1.29/en/tutorials/writing-policies/typescript.html","urlType":"internal"},{"content":"Other languages","url":"/admission-controller/1.29/en/tutorials/writing-policies/other-languages.html","urlType":"internal"},{"content":"WASI","items":[{"content":"WASI","url":"/admission-controller/1.29/en/tutorials/writing-policies/wasi/01-intro-wasi.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.29/en/tutorials/writing-policies/wasi/02-raw-policies.html","urlType":"internal"}]},{"content":"Policy metadata","url":"/admission-controller/1.29/en/tutorials/writing-policies/metadata.html","urlType":"internal"}]},{"content":"Testing policies","items":[{"content":"Policy testing","url":"/admission-controller/1.29/en/tutorials/testing-policies/index.html","urlType":"internal"},{"content":"Testing for policy authors","url":"/admission-controller/1.29/en/tutorials/testing-policies/02-policy-authors.html","urlType":"internal"},{"content":"Testing for cluster operators","url":"/admission-controller/1.29/en/tutorials/testing-policies/03-cluster-operators.html","urlType":"internal"}]},{"content":"Verifying Kubewarden","url":"/admission-controller/1.29/en/tutorials/verifying-kubewarden.html","urlType":"internal"},{"content":"Publish policies to Artifact Hub","url":"/admission-controller/1.29/en/tutorials/publish-policy-to-artifact-hub.html","urlType":"internal"}]},{"content":"Explanations","items":[{"content":"Mutating policies","url":"/admission-controller/1.29/en/explanations/mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.29/en/explanations/context-aware-policies.html","urlType":"internal"},{"content":"Policy Groups","url":"/admission-controller/1.29/en/explanations/policy-groups.html","urlType":"internal"},{"content":"Certificate rotation","url":"/admission-controller/1.29/en/explanations/certificates.html","urlType":"internal"},{"content":"Distributing policies","url":"/admission-controller/1.29/en/explanations/distributing-policies.html","urlType":"internal"},{"content":"Comparisons","items":[{"content":"Kubewarden vs OPA Gatekeeper","url":"/admission-controller/1.29/en/explanations/comparisons/opa-comparison.html","urlType":"internal"}]},{"content":"What is the Audit Scanner?","url":"/admission-controller/1.29/en/explanations/audit-scanner/audit-scanner.html","urlType":"internal","items":[{"content":"Audit Scanner - Limitations","url":"/admission-controller/1.29/en/explanations/audit-scanner/limitations.html","urlType":"internal"},{"content":"Audit Scanner - Policy Reports","url":"/admission-controller/1.29/en/explanations/audit-scanner/policy-reports.html","urlType":"internal"}]},{"content":"Admission Controller architecture","url":"/admission-controller/1.29/en/explanations/architecture.html","urlType":"internal"}]},{"content":"Howtos","items":[{"content":"Common tasks","url":"/admission-controller/1.29/en/howtos/tasks.html","urlType":"internal"},{"content":"Install <code>kwctl</code>","url":"/admission-controller/1.29/en/howtos/install-kwctl.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.29/en/howtos/production-deployments.html","urlType":"internal"},{"content":"Deployment at scale","url":"/admission-controller/1.29/en/howtos/deploy-at-scale.html","urlType":"internal"},{"content":"Audit Scanner","url":"/admission-controller/1.29/en/howtos/audit-scanner.html","urlType":"internal"},{"content":"Configuring policies","url":"/admission-controller/1.29/en/howtos/policies.html","urlType":"internal"},{"content":"Emergency disable","url":"/admission-controller/1.29/en/howtos/emergency-disable.html","urlType":"internal"},{"content":"Configuring Policy Servers","items":[{"content":"Using custom CAs","url":"/admission-controller/1.29/en/howtos/policy-servers/01-custom-cas.html","urlType":"internal"},{"content":"Configuring PolicyServers to use private registries","url":"/admission-controller/1.29/en/howtos/policy-servers/02-private-registry.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.29/en/howtos/policy-servers/03-production-deployments.html","urlType":"internal"}]},{"content":"Policy groups","url":"/admission-controller/1.29/en/howtos/policy-groups.html","urlType":"internal"},{"content":"PSP migration","url":"/admission-controller/1.29/en/howtos/psp-migration.html","urlType":"internal"},{"content":"ValidatingAdmissionPolicy migration","url":"/admission-controller/1.29/en/howtos/vap-migration.html","urlType":"internal"},{"content":"Pod Security Admission","url":"/admission-controller/1.29/en/howtos/pod-security-admission-with-kubewarden.html","urlType":"internal"},{"content":"Custom certificate authorities","url":"/admission-controller/1.29/en/howtos/custom-certificate-authorities.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.29/en/howtos/raw-policies.html","urlType":"internal"},{"content":"ArgoCD Installation","url":"/admission-controller/1.29/en/howtos/argocd-installation.html","urlType":"internal"},{"content":"Security","url":"/admission-controller/1.29/en/howtos/security-hardening/security-hardening.html","urlType":"internal","items":[{"content":"Secure supply chain","url":"/admission-controller/1.29/en/howtos/security-hardening/secure-supply-chain.html","urlType":"internal"},{"content":"Enable mTLS with K3s","url":"/admission-controller/1.29/en/howtos/security-hardening/webhook-mtls.html","urlType":"internal"}]},{"content":"Air gap","items":[{"content":"Requirements","url":"/admission-controller/1.29/en/howtos/airgap/01-requirements.html","urlType":"internal"},{"content":"Installation","url":"/admission-controller/1.29/en/howtos/airgap/02-install.html","urlType":"internal"},{"content":"Hauler installation","url":"/admission-controller/1.29/en/howtos/airgap/03-hauler.html","urlType":"internal"}]},{"content":"Telemetry quick starts","items":[{"content":"Open Telemetry quick start","url":"/admission-controller/1.29/en/howtos/telemetry/10-opentelemetry-qs.html","urlType":"internal"},{"content":"Tracing quickstart","url":"/admission-controller/1.29/en/howtos/telemetry/20-tracing-qs.html","urlType":"internal"},{"content":"Metrics quickstart","url":"/admission-controller/1.29/en/howtos/telemetry/30-metrics-qs.html","urlType":"internal"},{"content":"Custom OpenTelemetry Collector","url":"/admission-controller/1.29/en/howtos/telemetry/40-custom-otel-collector.html","urlType":"internal"}]},{"content":"Rancher Fleet","url":"/admission-controller/1.29/en/howtos/Rancher-Fleet.html","urlType":"internal"},{"content":"Rancher UI extension","items":[{"content":"Quickstart","url":"/admission-controller/1.29/en/howtos/ui-extension/01-install.html","urlType":"internal"},{"content":"Monitoring","url":"/admission-controller/1.29/en/howtos/ui-extension/02-metrics.html","urlType":"internal"},{"content":"Tracing","url":"/admission-controller/1.29/en/howtos/ui-extension/03-tracing.html","urlType":"internal"}]},{"content":"Rancher Application Collection","items":[{"content":"Verify images","url":"/admission-controller/1.29/en/howtos/application-collection/01-verify-images.html","urlType":"internal"}]},{"content":"Workarounds","items":[{"content":"Certificate rotation","url":"/admission-controller/1.29/en/howtos/workarounds/policy-server-certificate-expiry.html","urlType":"internal"}]},{"content":"Contribution guide","url":"/admission-controller/1.29/en/howtos/contribution-guide/contribution-guide.html","urlType":"internal","items":[{"content":"Contributing to documentation","url":"/admission-controller/1.29/en/howtos/contribution-guide/contributing.html","urlType":"internal"},{"content":"Improving documentation","url":"/admission-controller/1.29/en/howtos/contribution-guide/suggesting-an-improvement.html","urlType":"internal"}]},{"content":"Migrating Gatekeeper policies to Kubewarden","url":"/admission-controller/1.29/en/howtos/gatekeeper-migration.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"Custom Resource Definitions (CRD)","url":"/admission-controller/1.29/en/reference/CRDs.html","urlType":"internal"},{"content":"Dependency matrix","url":"/admission-controller/1.29/en/reference/dependency-matrix.html","urlType":"internal"},{"content":"Artifacts","url":"/admission-controller/1.29/en/reference/artifacts.html","urlType":"internal"},{"content":"Upgrade path","url":"/admission-controller/1.29/en/reference/upgrade-path.html","urlType":"internal"},{"content":"Metrics reference","url":"/admission-controller/1.29/en/reference/metrics-reference.html","urlType":"internal"},{"content":"Monitor mode","url":"/admission-controller/1.29/en/reference/monitor-mode.html","urlType":"internal"},{"content":"Policy specification","items":[{"content":"Policy communication specification","url":"/admission-controller/1.29/en/reference/spec/01-intro-spec.html","urlType":"internal"},{"content":"Policy settings","url":"/admission-controller/1.29/en/reference/spec/02-settings.html","urlType":"internal"},{"content":"Validating policies","url":"/admission-controller/1.29/en/reference/spec/03-validating-policies.html","urlType":"internal"},{"content":"Mutating policies","url":"/admission-controller/1.29/en/reference/spec/04-mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.29/en/reference/spec/05-context-aware-policies.html","urlType":"internal"},{"content":"Host capabilities","items":[{"content":"Host capabilities specification","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/01-intro-host-capabilities.html","urlType":"internal"},{"content":"Signature verifier policies","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/02-signature-verifier-policies.html","urlType":"internal"},{"content":"Container registry capabilities","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/03-container-registry.html","urlType":"internal"},{"content":"Network capabilities","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/04-net.html","urlType":"internal"},{"content":"Cryptographic capabilities","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/05-crypto.html","urlType":"internal"},{"content":"Kubernetes capabilities","url":"/admission-controller/1.29/en/reference/spec/host-capabilities/06-kubernetes.html","urlType":"internal"}]}]},{"content":"OCI registry support for Kubewarden","url":"/admission-controller/1.29/en/reference/oci-registries-support.html","urlType":"internal"},{"content":"Security","items":[{"content":"Webhooks","url":"/admission-controller/1.29/en/reference/security-hardening/webhooks-hardening.html","urlType":"internal"}]},{"content":"Threat Model","url":"/admission-controller/1.29/en/reference/threat-model.html","urlType":"internal"},{"content":"Policy evaluation timeout protection","url":"/admission-controller/1.29/en/reference/policy-evaluation-timeout.html","urlType":"internal"},{"content":"Verification configuration format","url":"/admission-controller/1.29/en/reference/verification-config.html","urlType":"internal"},{"content":"Reference for sources.yaml","url":"/admission-controller/1.29/en/reference/sources_yaml.html","urlType":"internal"},{"content":"<code>kwctl</code> CLI","url":"/admission-controller/1.29/en/reference/kwctl-cli.html","urlType":"internal"},{"content":"Policy Server CLI","url":"/admission-controller/1.29/en/reference/policy-server-cli.html","urlType":"internal"}]},{"content":"For who?","url":"/admission-controller/1.29/en/personas.html","urlType":"internal"},{"content":"Use cases","url":"/admission-controller/1.29/en/use-cases.html","urlType":"internal"},{"content":"Organization","url":"/admission-controller/1.29/en/organization.html","urlType":"internal"},{"content":"Enterprise","url":"/admission-controller/1.29/en/enterprise.html","urlType":"internal"},{"content":"Glossary","url":"/admission-controller/1.29/en/glossary.html","urlType":"internal"},{"content":"Security disclosure","url":"/admission-controller/1.29/en/disclosure.html","urlType":"internal"}],"root":true,"order":0}]},"admission-controller/1.28":{"displayVersion":"1.28","title":"Admission Controller","version":"1.28","name":"admission-controller","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"SUSE Security Admission Controller","elemental-product-name":"SUSE® Rancher Prime: OS Manager","fleet-product-name":"SUSE® Rancher Prime: Continuous Delivery","harvester-product-name-tm":"SUSE® Virtualization","harvester-product-name":"SUSE Virtualization","k3k-product-name":"SUSE Virtual Clusters","k3k-product-name-tm":"SUSE® Rancher Prime: Virtual Clusters","k3s-product-name":"SUSE® Rancher Prime: K3s","kubewarden-product-name":"SUSE® Rancher Prime: Admission Policy Manager","longhorn-product-name":"SUSE Storage","longhorn-product-name-tm":"SUSE® Storage","neuvector-product-name":"SUSE® Security","rancher-prime":"Cloud Native","rancher-product-name":"SUSE Rancher Prime","rancher-product-name-tm":"SUSE® Rancher Prime","rancher-short-name":"Rancher","rke2-product-name":"SUSE® Rancher Prime: RKE2","rke2-short-name":"RKE2","stackstate-product-name":"SUSE® Observability","turtles-product-name":"SUSE® Rancher Prime: Cluster API","page-project-data":[{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"Cluster API","url-part":"cluster-api","url":"https://documentation.suse.com/cloudnative/cluster-api"},{"title":"Continuous Delivery","url-part":"continuous-delivery","url":"https://documentation.suse.com/cloudnative/continuous-delivery"},{"title":"K3s","url-part":"k3s","url":"https://documentation.suse.com/cloudnative/k3s"},{"title":"OS Manager","url-part":"os-manager","url":"https://documentation.suse.com/cloudnative/os-manager"},{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"RKE2","url-part":"rke2","url":"https://documentation.suse.com/cloudnative/rke2"},{"title":"SUSE Observability","url-part":"suse-observability","url":"https://documentation.suse.com/cloudnative/suse-observability"},{"title":"SUSE Rancher Manager","url-part":"rancher-manager","url":"https://documentation.suse.com/cloudnative/rancher-manager"},{"title":"SUSE Security","url-part":"security","url":"https://documentation.suse.com/cloudnative/security"},{"title":"SUSE Storage","url-part":"storage","url":"https://documentation.suse.com/cloudnative/storage"},{"title":"SUSE Virtualization","url-part":"virtualization","url":"https://documentation.suse.com/cloudnative/virtualization"},{"title":"SUSE Virtual Clusters","url-part":"virtual-clusters","url":"https://documentation.suse.com/cloudnative/virtual-clusters"}],"page-draft-preview-only":"true","kw-build-type":"product","kw-rancher-product-name":"SUSE Security Admission Controller","kw-community-product-name":"Kubewarden","page-pagination":"","tabs-sync-option":""},"sourcemap":false,"extensions":[{},{}]},"url":"/admission-controller/1.28/en/introduction.html","navigation":[{"items":[{"content":"Introduction","url":"/admission-controller/1.28/en/introduction.html","urlType":"internal"},{"content":"Quick start","url":"/admission-controller/1.28/en/quick-start.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Writing Kubewarden policies","url":"/admission-controller/1.28/en/tutorials/writing-policies/index.html","urlType":"internal","items":[{"content":"Introduction to CEL","url":"/admission-controller/1.28/en/tutorials/writing-policies/CEL/01-intro-cel.html","urlType":"internal","items":[{"content":"Reusing ValidatingAdmissionPolicies","url":"/admission-controller/1.28/en/tutorials/writing-policies/CEL/02-reusing-vap.html","urlType":"internal"},{"content":"Context-aware CEL policies","url":"/admission-controller/1.28/en/tutorials/writing-policies/CEL/03-context-aware.html","urlType":"internal"},{"content":"Sigstore host capabilities","url":"/admission-controller/1.28/en/tutorials/writing-policies/CEL/04-example-sigstore.html","urlType":"internal"}]},{"content":"Rust","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/01-intro-rust.html","urlType":"internal","items":[{"content":"Creating a policy","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/02-create-policy.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/03-define-policy-settings.html","urlType":"internal"},{"content":"Writing validation logic","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/04-write-validation-logic.html","urlType":"internal"},{"content":"Creating a new mutation policy","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/05-mutation-policy.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/06-logging.html","urlType":"internal"},{"content":"Building and distributing policies","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/07-build-and-distribute.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.28/en/tutorials/writing-policies/rust/08-raw-policies.html","urlType":"internal"}]},{"content":"Writing policies in Go","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/01-intro-go.html","urlType":"internal","items":[{"content":"Creating a new validation policy","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/02-scaffold.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/03-policy-settings.html","urlType":"internal"},{"content":"Writing the validation logic","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/04-validation.html","urlType":"internal"},{"content":"End-to-end testing","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/05-e2e-tests.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/06-logging.html","urlType":"internal"},{"content":"Integrating with GitHub Actions","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/07-automate.html","urlType":"internal"},{"content":"Distributing policy","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/08-distribute.html","urlType":"internal"},{"content":"Validation using JSON queries","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/09-validation-with-queries.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.28/en/tutorials/writing-policies/go/10-raw-policies.html","urlType":"internal"}]},{"content":"Rego","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/01-intro-rego.html","urlType":"internal","items":[{"content":"Builtin support","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/02-builtin-support.html","urlType":"internal"},{"content":"Open Policy Agent","items":[{"content":"Introduction to Open Policy Agent","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/open-policy-agent/01-intro.html","urlType":"internal"},{"content":"Creating a new policy","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/open-policy-agent/02-create-policy.html","urlType":"internal"},{"content":"Build and run a OPA policy for Kubewarden","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/open-policy-agent/03-build-and-run.html","urlType":"internal"},{"content":"Distributing an OPA policy with Kubewarden","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/open-policy-agent/04-distribute.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/open-policy-agent/05-raw-policies.html","urlType":"internal"}]},{"content":"Gatekeeper","items":[{"content":"Gatekeeper support","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/gatekeeper/01-intro.html","urlType":"internal"},{"content":"Creating a new Gatekeeper Rego policy","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/gatekeeper/02-create-policy.html","urlType":"internal"},{"content":"Build and run a Gatekeeper policy","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/gatekeeper/03-build-and-run.html","urlType":"internal"},{"content":"Distributing a Gatekeeper policy with Kubewarden","url":"/admission-controller/1.28/en/tutorials/writing-policies/rego/gatekeeper/04-distribute.html","urlType":"internal"}]}]},{"content":"C#","url":"/admission-controller/1.28/en/tutorials/writing-policies/dotnet.html","urlType":"internal"},{"content":"Swift","url":"/admission-controller/1.28/en/tutorials/writing-policies/swift.html","urlType":"internal"},{"content":"Typescript","url":"/admission-controller/1.28/en/tutorials/writing-policies/typescript.html","urlType":"internal"},{"content":"Other languages","url":"/admission-controller/1.28/en/tutorials/writing-policies/other-languages.html","urlType":"internal"},{"content":"WASI","items":[{"content":"WASI","url":"/admission-controller/1.28/en/tutorials/writing-policies/wasi/01-intro-wasi.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.28/en/tutorials/writing-policies/wasi/02-raw-policies.html","urlType":"internal"}]},{"content":"Policy metadata","url":"/admission-controller/1.28/en/tutorials/writing-policies/metadata.html","urlType":"internal"}]},{"content":"Testing policies","items":[{"content":"Policy testing","url":"/admission-controller/1.28/en/tutorials/testing-policies/index.html","urlType":"internal"},{"content":"Testing for policy authors","url":"/admission-controller/1.28/en/tutorials/testing-policies/02-policy-authors.html","urlType":"internal"},{"content":"Testing for cluster operators","url":"/admission-controller/1.28/en/tutorials/testing-policies/03-cluster-operators.html","urlType":"internal"}]},{"content":"Verifying Kubewarden","url":"/admission-controller/1.28/en/tutorials/verifying-kubewarden.html","urlType":"internal"},{"content":"Publish policies to Artifact Hub","url":"/admission-controller/1.28/en/tutorials/publish-policy-to-artifact-hub.html","urlType":"internal"}]},{"content":"Explanations","items":[{"content":"Mutating policies","url":"/admission-controller/1.28/en/explanations/mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.28/en/explanations/context-aware-policies.html","urlType":"internal"},{"content":"Policy Groups","url":"/admission-controller/1.28/en/explanations/policy-groups.html","urlType":"internal"},{"content":"Certificate rotation","url":"/admission-controller/1.28/en/explanations/certificates.html","urlType":"internal"},{"content":"Distributing policies","url":"/admission-controller/1.28/en/explanations/distributing-policies.html","urlType":"internal"},{"content":"Comparisons","items":[{"content":"Kubewarden vs OPA Gatekeeper","url":"/admission-controller/1.28/en/explanations/comparisons/opa-comparison.html","urlType":"internal"}]},{"content":"What is the Audit Scanner?","url":"/admission-controller/1.28/en/explanations/audit-scanner/audit-scanner.html","urlType":"internal","items":[{"content":"Audit Scanner - Limitations","url":"/admission-controller/1.28/en/explanations/audit-scanner/limitations.html","urlType":"internal"},{"content":"Audit Scanner - Policy Reports","url":"/admission-controller/1.28/en/explanations/audit-scanner/policy-reports.html","urlType":"internal"}]},{"content":"Admission Controller architecture","url":"/admission-controller/1.28/en/explanations/architecture.html","urlType":"internal"}]},{"content":"Howtos","items":[{"content":"Common tasks","url":"/admission-controller/1.28/en/howtos/tasks.html","urlType":"internal"},{"content":"Install <code>kwctl</code>","url":"/admission-controller/1.28/en/howtos/install-kwctl.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.28/en/howtos/production-deployments.html","urlType":"internal"},{"content":"Deployment at scale","url":"/admission-controller/1.28/en/howtos/deploy-at-scale.html","urlType":"internal"},{"content":"Audit Scanner","url":"/admission-controller/1.28/en/howtos/audit-scanner.html","urlType":"internal"},{"content":"Configuring policies","url":"/admission-controller/1.28/en/howtos/policies.html","urlType":"internal"},{"content":"Emergency disable","url":"/admission-controller/1.28/en/howtos/emergency-disable.html","urlType":"internal"},{"content":"Configuring Policy Servers","items":[{"content":"Using custom CAs","url":"/admission-controller/1.28/en/howtos/policy-servers/01-custom-cas.html","urlType":"internal"},{"content":"Configuring PolicyServers to use private registries","url":"/admission-controller/1.28/en/howtos/policy-servers/02-private-registry.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.28/en/howtos/policy-servers/03-production-deployments.html","urlType":"internal"}]},{"content":"Policy groups","url":"/admission-controller/1.28/en/howtos/policy-groups.html","urlType":"internal"},{"content":"PSP migration","url":"/admission-controller/1.28/en/howtos/psp-migration.html","urlType":"internal"},{"content":"ValidatingAdmissionPolicy migration","url":"/admission-controller/1.28/en/howtos/vap-migration.html","urlType":"internal"},{"content":"Pod Security Admission","url":"/admission-controller/1.28/en/howtos/pod-security-admission-with-kubewarden.html","urlType":"internal"},{"content":"Custom certificate authorities","url":"/admission-controller/1.28/en/howtos/custom-certificate-authorities.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.28/en/howtos/raw-policies.html","urlType":"internal"},{"content":"ArgoCD Installation","url":"/admission-controller/1.28/en/howtos/argocd-installation.html","urlType":"internal"},{"content":"Security","url":"/admission-controller/1.28/en/howtos/security-hardening/security-hardening.html","urlType":"internal","items":[{"content":"Secure supply chain","url":"/admission-controller/1.28/en/howtos/security-hardening/secure-supply-chain.html","urlType":"internal"},{"content":"Enable mTLS with K3s","url":"/admission-controller/1.28/en/howtos/security-hardening/webhook-mtls.html","urlType":"internal"}]},{"content":"Air gap","items":[{"content":"Requirements","url":"/admission-controller/1.28/en/howtos/airgap/01-requirements.html","urlType":"internal"},{"content":"Installation","url":"/admission-controller/1.28/en/howtos/airgap/02-install.html","urlType":"internal"},{"content":"Hauler installation","url":"/admission-controller/1.28/en/howtos/airgap/03-hauler.html","urlType":"internal"}]},{"content":"Telemetry quick starts","items":[{"content":"Open Telemetry quick start","url":"/admission-controller/1.28/en/howtos/telemetry/10-opentelemetry-qs.html","urlType":"internal"},{"content":"Tracing quickstart","url":"/admission-controller/1.28/en/howtos/telemetry/20-tracing-qs.html","urlType":"internal"},{"content":"Metrics quickstart","url":"/admission-controller/1.28/en/howtos/telemetry/30-metrics-qs.html","urlType":"internal"},{"content":"Custom OpenTelemetry Collector","url":"/admission-controller/1.28/en/howtos/telemetry/40-custom-otel-collector.html","urlType":"internal"}]},{"content":"Rancher Fleet","url":"/admission-controller/1.28/en/howtos/Rancher-Fleet.html","urlType":"internal"},{"content":"Rancher UI extension","items":[{"content":"Quickstart","url":"/admission-controller/1.28/en/howtos/ui-extension/01-install.html","urlType":"internal"},{"content":"Monitoring","url":"/admission-controller/1.28/en/howtos/ui-extension/02-metrics.html","urlType":"internal"},{"content":"Tracing","url":"/admission-controller/1.28/en/howtos/ui-extension/03-tracing.html","urlType":"internal"}]},{"content":"Contribution guide","url":"/admission-controller/1.28/en/howtos/contribution-guide/contribution-guide.html","urlType":"internal","items":[{"content":"Contributing to Kubewarden documentation","url":"/admission-controller/1.28/en/howtos/contribution-guide/contributing.html","urlType":"internal"},{"content":"Suggesting a doc improvement","url":"/admission-controller/1.28/en/howtos/contribution-guide/suggesting-an-improvement.html","urlType":"internal"}]},{"content":"Migrating Gatekeeper policies to Kubewarden","url":"/admission-controller/1.28/en/howtos/gatekeeper-migration.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"Custom Resource Definitions (CRD)","url":"/admission-controller/1.28/en/reference/CRDs.html","urlType":"internal"},{"content":"Dependency matrix","url":"/admission-controller/1.28/en/reference/dependency-matrix.html","urlType":"internal"},{"content":"Artifacts","url":"/admission-controller/1.28/en/reference/artifacts.html","urlType":"internal"},{"content":"Upgrade path","url":"/admission-controller/1.28/en/reference/upgrade-path.html","urlType":"internal"},{"content":"Metrics reference","url":"/admission-controller/1.28/en/reference/metrics-reference.html","urlType":"internal"},{"content":"Monitor mode","url":"/admission-controller/1.28/en/reference/monitor-mode.html","urlType":"internal"},{"content":"Policy specification","items":[{"content":"Policy communication specification","url":"/admission-controller/1.28/en/reference/spec/01-intro-spec.html","urlType":"internal"},{"content":"Policy settings","url":"/admission-controller/1.28/en/reference/spec/02-settings.html","urlType":"internal"},{"content":"Validating policies","url":"/admission-controller/1.28/en/reference/spec/03-validating-policies.html","urlType":"internal"},{"content":"Mutating policies","url":"/admission-controller/1.28/en/reference/spec/04-mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.28/en/reference/spec/05-context-aware-policies.html","urlType":"internal"},{"content":"Host capabilities","items":[{"content":"Host capabilities specification","url":"/admission-controller/1.28/en/reference/spec/host-capabilities/01-intro-host-capabilities.html","urlType":"internal"},{"content":"Signature verifier policies","url":"/admission-controller/1.28/en/reference/spec/host-capabilities/02-signature-verifier-policies.html","urlType":"internal"},{"content":"Container registry capabilities","url":"/admission-controller/1.28/en/reference/spec/host-capabilities/03-container-registry.html","urlType":"internal"},{"content":"Network capabilities","url":"/admission-controller/1.28/en/reference/spec/host-capabilities/04-net.html","urlType":"internal"},{"content":"Cryptographic capabilities","url":"/admission-controller/1.28/en/reference/spec/host-capabilities/05-crypto.html","urlType":"internal"},{"content":"Kubernetes capabilities","url":"/admission-controller/1.28/en/reference/spec/host-capabilities/06-kubernetes.html","urlType":"internal"}]}]},{"content":"OCI registry support for Kubewarden","url":"/admission-controller/1.28/en/reference/oci-registries-support.html","urlType":"internal"},{"content":"Security","items":[{"content":"Webhooks","url":"/admission-controller/1.28/en/reference/security-hardening/webhooks-hardening.html","urlType":"internal"}]},{"content":"Threat Model","url":"/admission-controller/1.28/en/reference/threat-model.html","urlType":"internal"},{"content":"Policy evaluation timeout protection","url":"/admission-controller/1.28/en/reference/policy-evaluation-timeout.html","urlType":"internal"},{"content":"Verification configuration format","url":"/admission-controller/1.28/en/reference/verification-config.html","urlType":"internal"},{"content":"Reference for sources.yaml","url":"/admission-controller/1.28/en/reference/sources_yaml.html","urlType":"internal"},{"content":"<code>kwctl</code> CLI","url":"/admission-controller/1.28/en/reference/kwctl-cli.html","urlType":"internal"},{"content":"Policy Server CLI","url":"/admission-controller/1.28/en/reference/policy-server-cli.html","urlType":"internal"}]},{"content":"For who?","url":"/admission-controller/1.28/en/personas.html","urlType":"internal"},{"content":"Use cases","url":"/admission-controller/1.28/en/use-cases.html","urlType":"internal"},{"content":"Organization","url":"/admission-controller/1.28/en/organization.html","urlType":"internal"},{"content":"Enterprise","url":"/admission-controller/1.28/en/enterprise.html","urlType":"internal"},{"content":"Glossary","url":"/admission-controller/1.28/en/glossary.html","urlType":"internal"},{"content":"Security disclosure","url":"/admission-controller/1.28/en/disclosure.html","urlType":"internal"}],"root":true,"order":0}]},"admission-controller/1.27":{"displayVersion":"1.27","title":"Admission Controller","version":"1.27","name":"admission-controller","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"SUSE Security Admission Controller","elemental-product-name":"SUSE® Rancher Prime: OS Manager","fleet-product-name":"SUSE® Rancher Prime: Continuous Delivery","harvester-product-name-tm":"SUSE® Virtualization","harvester-product-name":"SUSE Virtualization","k3k-product-name":"SUSE Virtual Clusters","k3k-product-name-tm":"SUSE® Rancher Prime: Virtual Clusters","k3s-product-name":"SUSE® Rancher Prime: K3s","kubewarden-product-name":"SUSE® Rancher Prime: Admission Policy Manager","longhorn-product-name":"SUSE Storage","longhorn-product-name-tm":"SUSE® Storage","neuvector-product-name":"SUSE® Security","rancher-prime":"Cloud Native","rancher-product-name":"SUSE Rancher Prime","rancher-product-name-tm":"SUSE® Rancher Prime","rancher-short-name":"Rancher","rke2-product-name":"SUSE® Rancher Prime: RKE2","rke2-short-name":"RKE2","stackstate-product-name":"SUSE® Observability","turtles-product-name":"SUSE® Rancher Prime: Cluster API","page-project-data":[{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"Cluster API","url-part":"cluster-api","url":"https://documentation.suse.com/cloudnative/cluster-api"},{"title":"Continuous Delivery","url-part":"continuous-delivery","url":"https://documentation.suse.com/cloudnative/continuous-delivery"},{"title":"K3s","url-part":"k3s","url":"https://documentation.suse.com/cloudnative/k3s"},{"title":"OS Manager","url-part":"os-manager","url":"https://documentation.suse.com/cloudnative/os-manager"},{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"RKE2","url-part":"rke2","url":"https://documentation.suse.com/cloudnative/rke2"},{"title":"SUSE Observability","url-part":"suse-observability","url":"https://documentation.suse.com/cloudnative/suse-observability"},{"title":"SUSE Rancher Manager","url-part":"rancher-manager","url":"https://documentation.suse.com/cloudnative/rancher-manager"},{"title":"SUSE Security","url-part":"security","url":"https://documentation.suse.com/cloudnative/security"},{"title":"SUSE Storage","url-part":"storage","url":"https://documentation.suse.com/cloudnative/storage"},{"title":"SUSE Virtualization","url-part":"virtualization","url":"https://documentation.suse.com/cloudnative/virtualization"},{"title":"SUSE Virtual Clusters","url-part":"virtual-clusters","url":"https://documentation.suse.com/cloudnative/virtual-clusters"}],"page-draft-preview-only":"true","kw-build-type":"product","kw-rancher-product-name":"SUSE Security Admission Controller","kw-community-product-name":"Kubewarden","page-pagination":"","tabs-sync-option":""},"sourcemap":false,"extensions":[{},{}]},"url":"/admission-controller/1.27/en/introduction.html","navigation":[{"items":[{"content":"Introduction","url":"/admission-controller/1.27/en/introduction.html","urlType":"internal"},{"content":"Quick start","url":"/admission-controller/1.27/en/quick-start.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Writing Kubewarden policies","url":"/admission-controller/1.27/en/tutorials/writing-policies/index.html","urlType":"internal","items":[{"content":"Introduction to CEL","url":"/admission-controller/1.27/en/tutorials/writing-policies/CEL/01-intro-cel.html","urlType":"internal","items":[{"content":"Reusing ValidatingAdmissionPolicies","url":"/admission-controller/1.27/en/tutorials/writing-policies/CEL/02-reusing-vap.html","urlType":"internal"},{"content":"Context-aware CEL policies","url":"/admission-controller/1.27/en/tutorials/writing-policies/CEL/03-context-aware.html","urlType":"internal"},{"content":"Sigstore host capabilities","url":"/admission-controller/1.27/en/tutorials/writing-policies/CEL/04-example-sigstore.html","urlType":"internal"}]},{"content":"Rust","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/01-intro-rust.html","urlType":"internal","items":[{"content":"Creating a policy","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/02-create-policy.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/03-define-policy-settings.html","urlType":"internal"},{"content":"Writing validation logic","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/04-write-validation-logic.html","urlType":"internal"},{"content":"Creating a new mutation policy","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/05-mutation-policy.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/06-logging.html","urlType":"internal"},{"content":"Building and distributing policies","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/07-build-and-distribute.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.27/en/tutorials/writing-policies/rust/08-raw-policies.html","urlType":"internal"}]},{"content":"Writing policies in Go","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/01-intro-go.html","urlType":"internal","items":[{"content":"Creating a new validation policy","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/02-scaffold.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/03-policy-settings.html","urlType":"internal"},{"content":"Writing the validation logic","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/04-validation.html","urlType":"internal"},{"content":"End-to-end testing","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/05-e2e-tests.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/06-logging.html","urlType":"internal"},{"content":"Integrating with GitHub Actions","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/07-automate.html","urlType":"internal"},{"content":"Distributing policy","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/08-distribute.html","urlType":"internal"},{"content":"Validation using JSON queries","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/09-validation-with-queries.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.27/en/tutorials/writing-policies/go/10-raw-policies.html","urlType":"internal"}]},{"content":"Rego","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/01-intro-rego.html","urlType":"internal","items":[{"content":"Builtin support","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/02-builtin-support.html","urlType":"internal"},{"content":"Open Policy Agent","items":[{"content":"Introduction to Open Policy Agent","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/open-policy-agent/01-intro.html","urlType":"internal"},{"content":"Creating a new policy","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/open-policy-agent/02-create-policy.html","urlType":"internal"},{"content":"Build and run a OPA policy for Kubewarden","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/open-policy-agent/03-build-and-run.html","urlType":"internal"},{"content":"Distributing an OPA policy with Kubewarden","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/open-policy-agent/04-distribute.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/open-policy-agent/05-raw-policies.html","urlType":"internal"}]},{"content":"Gatekeeper","items":[{"content":"Gatekeeper support","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/gatekeeper/01-intro.html","urlType":"internal"},{"content":"Creating a new Gatekeeper Rego policy","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/gatekeeper/02-create-policy.html","urlType":"internal"},{"content":"Build and run a Gatekeeper policy","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/gatekeeper/03-build-and-run.html","urlType":"internal"},{"content":"Distributing a Gatekeeper policy with Kubewarden","url":"/admission-controller/1.27/en/tutorials/writing-policies/rego/gatekeeper/04-distribute.html","urlType":"internal"}]}]},{"content":"C#","url":"/admission-controller/1.27/en/tutorials/writing-policies/dotnet.html","urlType":"internal"},{"content":"Swift","url":"/admission-controller/1.27/en/tutorials/writing-policies/swift.html","urlType":"internal"},{"content":"Typescript","url":"/admission-controller/1.27/en/tutorials/writing-policies/typescript.html","urlType":"internal"},{"content":"Other languages","url":"/admission-controller/1.27/en/tutorials/writing-policies/other-languages.html","urlType":"internal"},{"content":"WASI","items":[{"content":"WASI","url":"/admission-controller/1.27/en/tutorials/writing-policies/wasi/01-intro-wasi.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.27/en/tutorials/writing-policies/wasi/02-raw-policies.html","urlType":"internal"}]},{"content":"Policy metadata","url":"/admission-controller/1.27/en/tutorials/writing-policies/metadata.html","urlType":"internal"}]},{"content":"Testing policies","items":[{"content":"Policy testing","url":"/admission-controller/1.27/en/tutorials/testing-policies/index.html","urlType":"internal"},{"content":"Testing for policy authors","url":"/admission-controller/1.27/en/tutorials/testing-policies/02-policy-authors.html","urlType":"internal"},{"content":"Testing for cluster operators","url":"/admission-controller/1.27/en/tutorials/testing-policies/03-cluster-operators.html","urlType":"internal"}]},{"content":"Verifying Kubewarden","url":"/admission-controller/1.27/en/tutorials/verifying-kubewarden.html","urlType":"internal"},{"content":"Publish policies to Artifact Hub","url":"/admission-controller/1.27/en/tutorials/publish-policy-to-artifact-hub.html","urlType":"internal"}]},{"content":"Explanations","items":[{"content":"Mutating policies","url":"/admission-controller/1.27/en/explanations/mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.27/en/explanations/context-aware-policies.html","urlType":"internal"},{"content":"Policy Groups","url":"/admission-controller/1.27/en/explanations/policy-groups.html","urlType":"internal"},{"content":"Certificate rotation","url":"/admission-controller/1.27/en/explanations/certificates.html","urlType":"internal"},{"content":"Distributing policies","url":"/admission-controller/1.27/en/explanations/distributing-policies.html","urlType":"internal"},{"content":"Comparisons","items":[{"content":"Kubewarden vs OPA Gatekeeper","url":"/admission-controller/1.27/en/explanations/comparisons/opa-comparison.html","urlType":"internal"}]},{"content":"What is the Audit Scanner?","url":"/admission-controller/1.27/en/explanations/audit-scanner/audit-scanner.html","urlType":"internal","items":[{"content":"Audit Scanner - Limitations","url":"/admission-controller/1.27/en/explanations/audit-scanner/limitations.html","urlType":"internal"},{"content":"Audit Scanner - Policy Reports","url":"/admission-controller/1.27/en/explanations/audit-scanner/policy-reports.html","urlType":"internal"}]},{"content":"Admission Controller architecture","url":"/admission-controller/1.27/en/explanations/architecture.html","urlType":"internal"}]},{"content":"Howtos","items":[{"content":"Common tasks","url":"/admission-controller/1.27/en/howtos/tasks.html","urlType":"internal"},{"content":"Install <code>kwctl</code>","url":"/admission-controller/1.27/en/howtos/install-kwctl.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.27/en/howtos/production-deployments.html","urlType":"internal"},{"content":"Deployment at scale","url":"/admission-controller/1.27/en/howtos/deploy-at-scale.html","urlType":"internal"},{"content":"Audit Scanner","url":"/admission-controller/1.27/en/howtos/audit-scanner.html","urlType":"internal"},{"content":"Configuring policies","url":"/admission-controller/1.27/en/howtos/policies.html","urlType":"internal"},{"content":"Emergency disable","url":"/admission-controller/1.27/en/howtos/emergency-disable.html","urlType":"internal"},{"content":"Configuring Policy Servers","items":[{"content":"Using custom CAs","url":"/admission-controller/1.27/en/howtos/policy-servers/01-custom-cas.html","urlType":"internal"},{"content":"Configuring PolicyServers to use private registries","url":"/admission-controller/1.27/en/howtos/policy-servers/02-private-registry.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.27/en/howtos/policy-servers/03-production-deployments.html","urlType":"internal"}]},{"content":"Policy groups","url":"/admission-controller/1.27/en/howtos/policy-groups.html","urlType":"internal"},{"content":"PSP migration","url":"/admission-controller/1.27/en/howtos/psp-migration.html","urlType":"internal"},{"content":"ValidatingAdmissionPolicy migration","url":"/admission-controller/1.27/en/howtos/vap-migration.html","urlType":"internal"},{"content":"Pod Security Admission","url":"/admission-controller/1.27/en/howtos/pod-security-admission-with-kubewarden.html","urlType":"internal"},{"content":"Custom certificate authorities","url":"/admission-controller/1.27/en/howtos/custom-certificate-authorities.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.27/en/howtos/raw-policies.html","urlType":"internal"},{"content":"ArgoCD Installation","url":"/admission-controller/1.27/en/howtos/argocd-installation.html","urlType":"internal"},{"content":"Security","url":"/admission-controller/1.27/en/howtos/security-hardening/security-hardening.html","urlType":"internal","items":[{"content":"Secure supply chain","url":"/admission-controller/1.27/en/howtos/security-hardening/secure-supply-chain.html","urlType":"internal"},{"content":"Enable mTLS with K3s","url":"/admission-controller/1.27/en/howtos/security-hardening/webhook-mtls.html","urlType":"internal"}]},{"content":"Air gap","items":[{"content":"Requirements","url":"/admission-controller/1.27/en/howtos/airgap/01-requirements.html","urlType":"internal"},{"content":"Installation","url":"/admission-controller/1.27/en/howtos/airgap/02-install.html","urlType":"internal"}]},{"content":"Telemetry quick starts","items":[{"content":"Open Telemetry quick start","url":"/admission-controller/1.27/en/howtos/telemetry/10-opentelemetry-qs.html","urlType":"internal"},{"content":"Tracing quickstart","url":"/admission-controller/1.27/en/howtos/telemetry/20-tracing-qs.html","urlType":"internal"},{"content":"Metrics quickstart","url":"/admission-controller/1.27/en/howtos/telemetry/30-metrics-qs.html","urlType":"internal"},{"content":"Custom OpenTelemetry Collector","url":"/admission-controller/1.27/en/howtos/telemetry/40-custom-otel-collector.html","urlType":"internal"}]},{"content":"Rancher Fleet","url":"/admission-controller/1.27/en/howtos/Rancher-Fleet.html","urlType":"internal"},{"content":"Rancher UI extension","items":[{"content":"Quickstart","url":"/admission-controller/1.27/en/howtos/ui-extension/01-install.html","urlType":"internal"},{"content":"Monitoring","url":"/admission-controller/1.27/en/howtos/ui-extension/02-metrics.html","urlType":"internal"},{"content":"Tracing","url":"/admission-controller/1.27/en/howtos/ui-extension/03-tracing.html","urlType":"internal"}]},{"content":"Contribution guide","url":"/admission-controller/1.27/en/howtos/contribution-guide/contribution-guide.html","urlType":"internal","items":[{"content":"Contributing to Kubewarden documentation","url":"/admission-controller/1.27/en/howtos/contribution-guide/contributing.html","urlType":"internal"},{"content":"Suggesting a doc improvement","url":"/admission-controller/1.27/en/howtos/contribution-guide/suggesting-an-improvement.html","urlType":"internal"}]},{"content":"Migrating Gatekeeper policies to Kubewarden","url":"/admission-controller/1.27/en/howtos/gatekeeper-migration.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"Custom Resource Definitions (CRD)","url":"/admission-controller/1.27/en/reference/CRDs.html","urlType":"internal"},{"content":"Dependency matrix","url":"/admission-controller/1.27/en/reference/dependency-matrix.html","urlType":"internal"},{"content":"Artifacts","url":"/admission-controller/1.27/en/reference/artifacts.html","urlType":"internal"},{"content":"Upgrade path","url":"/admission-controller/1.27/en/reference/upgrade-path.html","urlType":"internal"},{"content":"Metrics reference","url":"/admission-controller/1.27/en/reference/metrics-reference.html","urlType":"internal"},{"content":"Monitor mode","url":"/admission-controller/1.27/en/reference/monitor-mode.html","urlType":"internal"},{"content":"Policy specification","items":[{"content":"Policy communication specification","url":"/admission-controller/1.27/en/reference/spec/01-intro-spec.html","urlType":"internal"},{"content":"Policy settings","url":"/admission-controller/1.27/en/reference/spec/02-settings.html","urlType":"internal"},{"content":"Validating policies","url":"/admission-controller/1.27/en/reference/spec/03-validating-policies.html","urlType":"internal"},{"content":"Mutating policies","url":"/admission-controller/1.27/en/reference/spec/04-mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.27/en/reference/spec/05-context-aware-policies.html","urlType":"internal"},{"content":"Host capabilities","items":[{"content":"Host capabilities specification","url":"/admission-controller/1.27/en/reference/spec/host-capabilities/01-intro-host-capabilities.html","urlType":"internal"},{"content":"Signature verifier policies","url":"/admission-controller/1.27/en/reference/spec/host-capabilities/02-signature-verifier-policies.html","urlType":"internal"},{"content":"Container registry capabilities","url":"/admission-controller/1.27/en/reference/spec/host-capabilities/03-container-registry.html","urlType":"internal"},{"content":"Network capabilities","url":"/admission-controller/1.27/en/reference/spec/host-capabilities/04-net.html","urlType":"internal"},{"content":"Cryptographic capabilities","url":"/admission-controller/1.27/en/reference/spec/host-capabilities/05-crypto.html","urlType":"internal"},{"content":"Kubernetes capabilities","url":"/admission-controller/1.27/en/reference/spec/host-capabilities/06-kubernetes.html","urlType":"internal"}]}]},{"content":"OCI registry support for Kubewarden","url":"/admission-controller/1.27/en/reference/oci-registries-support.html","urlType":"internal"},{"content":"Security","items":[{"content":"Webhooks","url":"/admission-controller/1.27/en/reference/security-hardening/webhooks-hardening.html","urlType":"internal"}]},{"content":"Threat Model","url":"/admission-controller/1.27/en/reference/threat-model.html","urlType":"internal"},{"content":"Policy evaluation timeout protection","url":"/admission-controller/1.27/en/reference/policy-evaluation-timeout.html","urlType":"internal"},{"content":"Verification configuration format","url":"/admission-controller/1.27/en/reference/verification-config.html","urlType":"internal"},{"content":"Reference for sources.yaml","url":"/admission-controller/1.27/en/reference/sources_yaml.html","urlType":"internal"},{"content":"<code>kwctl</code> CLI","url":"/admission-controller/1.27/en/reference/kwctl-cli.html","urlType":"internal"},{"content":"Policy Server CLI","url":"/admission-controller/1.27/en/reference/policy-server-cli.html","urlType":"internal"}]},{"content":"For who?","url":"/admission-controller/1.27/en/personas.html","urlType":"internal"},{"content":"Use cases","url":"/admission-controller/1.27/en/use-cases.html","urlType":"internal"},{"content":"Organization","url":"/admission-controller/1.27/en/organization.html","urlType":"internal"},{"content":"Enterprise","url":"/admission-controller/1.27/en/enterprise.html","urlType":"internal"},{"content":"Glossary","url":"/admission-controller/1.27/en/glossary.html","urlType":"internal"},{"content":"Security disclosure","url":"/admission-controller/1.27/en/disclosure.html","urlType":"internal"}],"root":true,"order":0}]},"admission-controller/1.26":{"displayVersion":"1.26","title":"Admission Controller","version":"1.26","name":"admission-controller","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"SUSE Security Admission Controller","elemental-product-name":"SUSE® Rancher Prime: OS Manager","fleet-product-name":"SUSE® Rancher Prime: Continuous Delivery","harvester-product-name-tm":"SUSE® Virtualization","harvester-product-name":"SUSE Virtualization","k3k-product-name":"SUSE Virtual Clusters","k3k-product-name-tm":"SUSE® Rancher Prime: Virtual Clusters","k3s-product-name":"SUSE® Rancher Prime: K3s","kubewarden-product-name":"SUSE® Rancher Prime: Admission Policy Manager","longhorn-product-name":"SUSE Storage","longhorn-product-name-tm":"SUSE® Storage","neuvector-product-name":"SUSE® Security","rancher-prime":"Cloud Native","rancher-product-name":"SUSE Rancher Prime","rancher-product-name-tm":"SUSE® Rancher Prime","rancher-short-name":"Rancher","rke2-product-name":"SUSE® Rancher Prime: RKE2","rke2-short-name":"RKE2","stackstate-product-name":"SUSE® Observability","turtles-product-name":"SUSE® Rancher Prime: Cluster API","page-project-data":[{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"Cluster API","url-part":"cluster-api","url":"https://documentation.suse.com/cloudnative/cluster-api"},{"title":"Continuous Delivery","url-part":"continuous-delivery","url":"https://documentation.suse.com/cloudnative/continuous-delivery"},{"title":"K3s","url-part":"k3s","url":"https://documentation.suse.com/cloudnative/k3s"},{"title":"OS Manager","url-part":"os-manager","url":"https://documentation.suse.com/cloudnative/os-manager"},{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"RKE2","url-part":"rke2","url":"https://documentation.suse.com/cloudnative/rke2"},{"title":"SUSE Observability","url-part":"suse-observability","url":"https://documentation.suse.com/cloudnative/suse-observability"},{"title":"SUSE Rancher Manager","url-part":"rancher-manager","url":"https://documentation.suse.com/cloudnative/rancher-manager"},{"title":"SUSE Security","url-part":"security","url":"https://documentation.suse.com/cloudnative/security"},{"title":"SUSE Storage","url-part":"storage","url":"https://documentation.suse.com/cloudnative/storage"},{"title":"SUSE Virtualization","url-part":"virtualization","url":"https://documentation.suse.com/cloudnative/virtualization"},{"title":"SUSE Virtual Clusters","url-part":"virtual-clusters","url":"https://documentation.suse.com/cloudnative/virtual-clusters"}],"page-draft-preview-only":"true","kw-build-type":"product","kw-rancher-product-name":"SUSE Security Admission Controller","kw-community-product-name":"Kubewarden","page-pagination":"","tabs-sync-option":""},"sourcemap":false,"extensions":[{},{}]},"url":"/admission-controller/1.26/en/introduction.html","navigation":[{"items":[{"content":"Introduction","url":"/admission-controller/1.26/en/introduction.html","urlType":"internal"},{"content":"Quick start","url":"/admission-controller/1.26/en/quick-start.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Writing Kubewarden policies","url":"/admission-controller/1.26/en/tutorials/writing-policies/index.html","urlType":"internal","items":[{"content":"Introduction to CEL","url":"/admission-controller/1.26/en/tutorials/writing-policies/CEL/01-intro-cel.html","urlType":"internal","items":[{"content":"Reusing ValidatingAdmissionPolicies","url":"/admission-controller/1.26/en/tutorials/writing-policies/CEL/02-reusing-vap.html","urlType":"internal"},{"content":"Context-aware CEL policies","url":"/admission-controller/1.26/en/tutorials/writing-policies/CEL/03-context-aware.html","urlType":"internal"},{"content":"Sigstore host capabilities","url":"/admission-controller/1.26/en/tutorials/writing-policies/CEL/04-example-sigstore.html","urlType":"internal"}]},{"content":"Rust","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/01-intro-rust.html","urlType":"internal","items":[{"content":"Creating a policy","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/02-create-policy.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/03-define-policy-settings.html","urlType":"internal"},{"content":"Writing validation logic","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/04-write-validation-logic.html","urlType":"internal"},{"content":"Creating a new mutation policy","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/05-mutation-policy.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/06-logging.html","urlType":"internal"},{"content":"Building and distributing policies","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/07-build-and-distribute.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.26/en/tutorials/writing-policies/rust/08-raw-policies.html","urlType":"internal"}]},{"content":"Writing policies in Go","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/01-intro-go.html","urlType":"internal","items":[{"content":"Creating a new validation policy","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/02-scaffold.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/03-policy-settings.html","urlType":"internal"},{"content":"Writing the validation logic","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/04-validation.html","urlType":"internal"},{"content":"End-to-end testing","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/05-e2e-tests.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/06-logging.html","urlType":"internal"},{"content":"Integrating with GitHub Actions","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/07-automate.html","urlType":"internal"},{"content":"Distributing policy","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/08-distribute.html","urlType":"internal"},{"content":"Validation using JSON queries","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/09-validation-with-queries.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.26/en/tutorials/writing-policies/go/10-raw-policies.html","urlType":"internal"}]},{"content":"Rego","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/01-intro-rego.html","urlType":"internal","items":[{"content":"Builtin support","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/02-builtin-support.html","urlType":"internal"},{"content":"Open Policy Agent","items":[{"content":"Introduction to Open Policy Agent","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/open-policy-agent/01-intro.html","urlType":"internal"},{"content":"Creating a new policy","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/open-policy-agent/02-create-policy.html","urlType":"internal"},{"content":"Build and run a OPA policy for Kubewarden","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/open-policy-agent/03-build-and-run.html","urlType":"internal"},{"content":"Distributing an OPA policy with Kubewarden","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/open-policy-agent/04-distribute.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/open-policy-agent/05-raw-policies.html","urlType":"internal"}]},{"content":"Gatekeeper","items":[{"content":"Gatekeeper support","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/gatekeeper/01-intro.html","urlType":"internal"},{"content":"Creating a new Gatekeeper Rego policy","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/gatekeeper/02-create-policy.html","urlType":"internal"},{"content":"Build and run a Gatekeeper policy","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/gatekeeper/03-build-and-run.html","urlType":"internal"},{"content":"Distributing a Gatekeeper policy with Kubewarden","url":"/admission-controller/1.26/en/tutorials/writing-policies/rego/gatekeeper/04-distribute.html","urlType":"internal"}]}]},{"content":"C#","url":"/admission-controller/1.26/en/tutorials/writing-policies/dotnet.html","urlType":"internal"},{"content":"Swift","url":"/admission-controller/1.26/en/tutorials/writing-policies/swift.html","urlType":"internal"},{"content":"Typescript","url":"/admission-controller/1.26/en/tutorials/writing-policies/typescript.html","urlType":"internal"},{"content":"Other languages","url":"/admission-controller/1.26/en/tutorials/writing-policies/other-languages.html","urlType":"internal"},{"content":"WASI","items":[{"content":"WASI","url":"/admission-controller/1.26/en/tutorials/writing-policies/wasi/01-intro-wasi.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.26/en/tutorials/writing-policies/wasi/02-raw-policies.html","urlType":"internal"}]},{"content":"Policy metadata","url":"/admission-controller/1.26/en/tutorials/writing-policies/metadata.html","urlType":"internal"}]},{"content":"Testing policies","items":[{"content":"Policy testing","url":"/admission-controller/1.26/en/tutorials/testing-policies/index.html","urlType":"internal"},{"content":"Testing for policy authors","url":"/admission-controller/1.26/en/tutorials/testing-policies/02-policy-authors.html","urlType":"internal"},{"content":"Testing for cluster operators","url":"/admission-controller/1.26/en/tutorials/testing-policies/03-cluster-operators.html","urlType":"internal"}]},{"content":"Verifying Kubewarden","url":"/admission-controller/1.26/en/tutorials/verifying-kubewarden.html","urlType":"internal"},{"content":"Publish policies to Artifact Hub","url":"/admission-controller/1.26/en/tutorials/publish-policy-to-artifact-hub.html","urlType":"internal"}]},{"content":"Explanations","items":[{"content":"Mutating policies","url":"/admission-controller/1.26/en/explanations/mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.26/en/explanations/context-aware-policies.html","urlType":"internal"},{"content":"Policy Groups","url":"/admission-controller/1.26/en/explanations/policy-groups.html","urlType":"internal"},{"content":"Certificate rotation","url":"/admission-controller/1.26/en/explanations/certificates.html","urlType":"internal"},{"content":"Distributing policies","url":"/admission-controller/1.26/en/explanations/distributing-policies.html","urlType":"internal"},{"content":"Comparisons","items":[{"content":"Kubewarden vs OPA Gatekeeper","url":"/admission-controller/1.26/en/explanations/comparisons/opa-comparison.html","urlType":"internal"}]},{"content":"What is the Audit Scanner?","url":"/admission-controller/1.26/en/explanations/audit-scanner/audit-scanner.html","urlType":"internal","items":[{"content":"Audit Scanner - Limitations","url":"/admission-controller/1.26/en/explanations/audit-scanner/limitations.html","urlType":"internal"},{"content":"Audit Scanner - Policy Reports","url":"/admission-controller/1.26/en/explanations/audit-scanner/policy-reports.html","urlType":"internal"}]},{"content":"Admission Controller architecture","url":"/admission-controller/1.26/en/explanations/architecture.html","urlType":"internal"}]},{"content":"Howtos","items":[{"content":"Common tasks","url":"/admission-controller/1.26/en/howtos/tasks.html","urlType":"internal"},{"content":"Install <code>kwctl</code>","url":"/admission-controller/1.26/en/howtos/install-kwctl.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.26/en/howtos/production-deployments.html","urlType":"internal"},{"content":"Deployment at scale","url":"/admission-controller/1.26/en/howtos/deploy-at-scale.html","urlType":"internal"},{"content":"Audit Scanner","url":"/admission-controller/1.26/en/howtos/audit-scanner.html","urlType":"internal"},{"content":"Configuring policies","url":"/admission-controller/1.26/en/howtos/policies.html","urlType":"internal"},{"content":"Emergency disable","url":"/admission-controller/1.26/en/howtos/emergency-disable.html","urlType":"internal"},{"content":"Configuring Policy Servers","items":[{"content":"Using custom CAs","url":"/admission-controller/1.26/en/howtos/policy-servers/01-custom-cas.html","urlType":"internal"},{"content":"Configuring PolicyServers to use private registries","url":"/admission-controller/1.26/en/howtos/policy-servers/02-private-registry.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.26/en/howtos/policy-servers/03-production-deployments.html","urlType":"internal"}]},{"content":"Policy groups","url":"/admission-controller/1.26/en/howtos/policy-groups.html","urlType":"internal"},{"content":"PSP migration","url":"/admission-controller/1.26/en/howtos/psp-migration.html","urlType":"internal"},{"content":"ValidatingAdmissionPolicy migration","url":"/admission-controller/1.26/en/howtos/vap-migration.html","urlType":"internal"},{"content":"Pod Security Admission","url":"/admission-controller/1.26/en/howtos/pod-security-admission-with-kubewarden.html","urlType":"internal"},{"content":"Custom certificate authorities","url":"/admission-controller/1.26/en/howtos/custom-certificate-authorities.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.26/en/howtos/raw-policies.html","urlType":"internal"},{"content":"ArgoCD Installation","url":"/admission-controller/1.26/en/howtos/argocd-installation.html","urlType":"internal"},{"content":"Security","url":"/admission-controller/1.26/en/howtos/security-hardening/security-hardening.html","urlType":"internal","items":[{"content":"Secure supply chain","url":"/admission-controller/1.26/en/howtos/security-hardening/secure-supply-chain.html","urlType":"internal"},{"content":"Enable mTLS with K3s","url":"/admission-controller/1.26/en/howtos/security-hardening/webhook-mtls.html","urlType":"internal"}]},{"content":"Air gap","items":[{"content":"Requirements","url":"/admission-controller/1.26/en/howtos/airgap/01-requirements.html","urlType":"internal"},{"content":"Installation","url":"/admission-controller/1.26/en/howtos/airgap/02-install.html","urlType":"internal"}]},{"content":"Telemetry quick starts","items":[{"content":"Open Telemetry quick start","url":"/admission-controller/1.26/en/howtos/telemetry/10-opentelemetry-qs.html","urlType":"internal"},{"content":"Tracing quickstart","url":"/admission-controller/1.26/en/howtos/telemetry/20-tracing-qs.html","urlType":"internal"},{"content":"Metrics quickstart","url":"/admission-controller/1.26/en/howtos/telemetry/30-metrics-qs.html","urlType":"internal"},{"content":"Custom OpenTelemetry Collector","url":"/admission-controller/1.26/en/howtos/telemetry/40-custom-otel-collector.html","urlType":"internal"}]},{"content":"Rancher Fleet","url":"/admission-controller/1.26/en/howtos/Rancher-Fleet.html","urlType":"internal"},{"content":"Rancher UI extension","items":[{"content":"Quickstart","url":"/admission-controller/1.26/en/howtos/ui-extension/01-install.html","urlType":"internal"},{"content":"Monitoring","url":"/admission-controller/1.26/en/howtos/ui-extension/02-metrics.html","urlType":"internal"},{"content":"Tracing","url":"/admission-controller/1.26/en/howtos/ui-extension/03-tracing.html","urlType":"internal"}]},{"content":"Contribution guide","url":"/admission-controller/1.26/en/howtos/contribution-guide/contribution-guide.html","urlType":"internal","items":[{"content":"Contributing to Kubewarden documentation","url":"/admission-controller/1.26/en/howtos/contribution-guide/contributing.html","urlType":"internal"},{"content":"Suggesting a doc improvement","url":"/admission-controller/1.26/en/howtos/contribution-guide/suggesting-an-improvement.html","urlType":"internal"}]},{"content":"Migrating Gatekeeper policies to Kubewarden","url":"/admission-controller/1.26/en/howtos/gatekeeper-migration.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"Custom Resource Definitions (CRD)","url":"/admission-controller/1.26/en/reference/CRDs.html","urlType":"internal"},{"content":"Dependency matrix","url":"/admission-controller/1.26/en/reference/dependency-matrix.html","urlType":"internal"},{"content":"Artifacts","url":"/admission-controller/1.26/en/reference/artifacts.html","urlType":"internal"},{"content":"Upgrade path","url":"/admission-controller/1.26/en/reference/upgrade-path.html","urlType":"internal"},{"content":"Metrics reference","url":"/admission-controller/1.26/en/reference/metrics-reference.html","urlType":"internal"},{"content":"Monitor mode","url":"/admission-controller/1.26/en/reference/monitor-mode.html","urlType":"internal"},{"content":"Policy specification","items":[{"content":"Policy communication specification","url":"/admission-controller/1.26/en/reference/spec/01-intro-spec.html","urlType":"internal"},{"content":"Policy settings","url":"/admission-controller/1.26/en/reference/spec/02-settings.html","urlType":"internal"},{"content":"Validating policies","url":"/admission-controller/1.26/en/reference/spec/03-validating-policies.html","urlType":"internal"},{"content":"Mutating policies","url":"/admission-controller/1.26/en/reference/spec/04-mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.26/en/reference/spec/05-context-aware-policies.html","urlType":"internal"},{"content":"Host capabilities","items":[{"content":"Host capabilities specification","url":"/admission-controller/1.26/en/reference/spec/host-capabilities/01-intro-host-capabilities.html","urlType":"internal"},{"content":"Signature verifier policies","url":"/admission-controller/1.26/en/reference/spec/host-capabilities/02-signature-verifier-policies.html","urlType":"internal"},{"content":"Container registry capabilities","url":"/admission-controller/1.26/en/reference/spec/host-capabilities/03-container-registry.html","urlType":"internal"},{"content":"Network capabilities","url":"/admission-controller/1.26/en/reference/spec/host-capabilities/04-net.html","urlType":"internal"},{"content":"Cryptographic capabilities","url":"/admission-controller/1.26/en/reference/spec/host-capabilities/05-crypto.html","urlType":"internal"},{"content":"Kubernetes capabilities","url":"/admission-controller/1.26/en/reference/spec/host-capabilities/06-kubernetes.html","urlType":"internal"}]}]},{"content":"OCI registry support for Kubewarden","url":"/admission-controller/1.26/en/reference/oci-registries-support.html","urlType":"internal"},{"content":"Security","items":[{"content":"Webhooks","url":"/admission-controller/1.26/en/reference/security-hardening/webhooks-hardening.html","urlType":"internal"}]},{"content":"Threat Model","url":"/admission-controller/1.26/en/reference/threat-model.html","urlType":"internal"},{"content":"Policy evaluation timeout protection","url":"/admission-controller/1.26/en/reference/policy-evaluation-timeout.html","urlType":"internal"},{"content":"Verification configuration format","url":"/admission-controller/1.26/en/reference/verification-config.html","urlType":"internal"},{"content":"Reference for sources.yaml","url":"/admission-controller/1.26/en/reference/sources_yaml.html","urlType":"internal"},{"content":"<code>kwctl</code> CLI","url":"/admission-controller/1.26/en/reference/kwctl-cli.html","urlType":"internal"},{"content":"Policy Server CLI","url":"/admission-controller/1.26/en/reference/policy-server-cli.html","urlType":"internal"}]},{"content":"For who?","url":"/admission-controller/1.26/en/personas.html","urlType":"internal"},{"content":"Use cases","url":"/admission-controller/1.26/en/use-cases.html","urlType":"internal"},{"content":"Organization","url":"/admission-controller/1.26/en/organization.html","urlType":"internal"},{"content":"Enterprise","url":"/admission-controller/1.26/en/enterprise.html","urlType":"internal"},{"content":"Glossary","url":"/admission-controller/1.26/en/glossary.html","urlType":"internal"},{"content":"Security disclosure","url":"/admission-controller/1.26/en/disclosure.html","urlType":"internal"}],"root":true,"order":0}]},"admission-controller/1.25":{"displayVersion":"1.25","title":"Admission Controller","version":"1.25","name":"admission-controller","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"SUSE Security Admission Controller","elemental-product-name":"SUSE® Rancher Prime: OS Manager","fleet-product-name":"SUSE® Rancher Prime: Continuous Delivery","harvester-product-name-tm":"SUSE® Virtualization","harvester-product-name":"SUSE Virtualization","k3k-product-name":"SUSE Virtual Clusters","k3k-product-name-tm":"SUSE® Rancher Prime: Virtual Clusters","k3s-product-name":"SUSE® Rancher Prime: K3s","kubewarden-product-name":"SUSE® Rancher Prime: Admission Policy Manager","longhorn-product-name":"SUSE Storage","longhorn-product-name-tm":"SUSE® Storage","neuvector-product-name":"SUSE® Security","rancher-prime":"Cloud Native","rancher-product-name":"SUSE Rancher Prime","rancher-product-name-tm":"SUSE® Rancher Prime","rancher-short-name":"Rancher","rke2-product-name":"SUSE® Rancher Prime: RKE2","rke2-short-name":"RKE2","stackstate-product-name":"SUSE® Observability","turtles-product-name":"SUSE® Rancher Prime: Cluster API","page-project-data":[{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"Cluster API","url-part":"cluster-api","url":"https://documentation.suse.com/cloudnative/cluster-api"},{"title":"Continuous Delivery","url-part":"continuous-delivery","url":"https://documentation.suse.com/cloudnative/continuous-delivery"},{"title":"K3s","url-part":"k3s","url":"https://documentation.suse.com/cloudnative/k3s"},{"title":"OS Manager","url-part":"os-manager","url":"https://documentation.suse.com/cloudnative/os-manager"},{"title":"Policy Manager","url-part":"policy-manager","url":"https://documentation.suse.com/cloudnative/policy-manager"},{"title":"RKE2","url-part":"rke2","url":"https://documentation.suse.com/cloudnative/rke2"},{"title":"SUSE Observability","url-part":"suse-observability","url":"https://documentation.suse.com/cloudnative/suse-observability"},{"title":"SUSE Rancher Manager","url-part":"rancher-manager","url":"https://documentation.suse.com/cloudnative/rancher-manager"},{"title":"SUSE Security","url-part":"security","url":"https://documentation.suse.com/cloudnative/security"},{"title":"SUSE Storage","url-part":"storage","url":"https://documentation.suse.com/cloudnative/storage"},{"title":"SUSE Virtualization","url-part":"virtualization","url":"https://documentation.suse.com/cloudnative/virtualization"},{"title":"SUSE Virtual Clusters","url-part":"virtual-clusters","url":"https://documentation.suse.com/cloudnative/virtual-clusters"}],"page-draft-preview-only":"true","kw-build-type":"product","kw-rancher-product-name":"SUSE Security Admission Controller","kw-community-product-name":"Kubewarden","page-pagination":"","tabs-sync-option":""},"sourcemap":false,"extensions":[{},{}]},"url":"/admission-controller/1.25/en/introduction.html","navigation":[{"items":[{"content":"Introduction","url":"/admission-controller/1.25/en/introduction.html","urlType":"internal"},{"content":"Quick start","url":"/admission-controller/1.25/en/quick-start.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Writing Kubewarden policies","url":"/admission-controller/1.25/en/tutorials/writing-policies/index.html","urlType":"internal","items":[{"content":"Introduction to CEL","url":"/admission-controller/1.25/en/tutorials/writing-policies/CEL/01-intro-cel.html","urlType":"internal","items":[{"content":"Reusing ValidatingAdmissionPolicies","url":"/admission-controller/1.25/en/tutorials/writing-policies/CEL/02-reusing-vap.html","urlType":"internal"},{"content":"Context-aware CEL policies","url":"/admission-controller/1.25/en/tutorials/writing-policies/CEL/03-context-aware.html","urlType":"internal"},{"content":"Sigstore host capabilities","url":"/admission-controller/1.25/en/tutorials/writing-policies/CEL/04-example-sigstore.html","urlType":"internal"}]},{"content":"Rust","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/01-intro-rust.html","urlType":"internal","items":[{"content":"Creating a policy","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/02-create-policy.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/03-define-policy-settings.html","urlType":"internal"},{"content":"Writing validation logic","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/04-write-validation-logic.html","urlType":"internal"},{"content":"Creating a new mutation policy","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/05-mutation-policy.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/06-logging.html","urlType":"internal"},{"content":"Building and distributing policies","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/07-build-and-distribute.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.25/en/tutorials/writing-policies/rust/08-raw-policies.html","urlType":"internal"}]},{"content":"Writing policies in Go","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/01-intro-go.html","urlType":"internal","items":[{"content":"Creating a new validation policy","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/02-scaffold.html","urlType":"internal"},{"content":"Defining policy settings","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/03-policy-settings.html","urlType":"internal"},{"content":"Writing the validation logic","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/04-validation.html","urlType":"internal"},{"content":"End-to-end testing","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/05-e2e-tests.html","urlType":"internal"},{"content":"Logging","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/06-logging.html","urlType":"internal"},{"content":"Integrating with GitHub Actions","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/07-automate.html","urlType":"internal"},{"content":"Distributing policy","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/08-distribute.html","urlType":"internal"},{"content":"Validation using JSON queries","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/09-validation-with-queries.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.25/en/tutorials/writing-policies/go/10-raw-policies.html","urlType":"internal"}]},{"content":"Rego","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/01-intro-rego.html","urlType":"internal","items":[{"content":"Builtin support","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/02-builtin-support.html","urlType":"internal"},{"content":"Open Policy Agent","items":[{"content":"Introduction to Open Policy Agent","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/open-policy-agent/01-intro.html","urlType":"internal"},{"content":"Creating a new policy","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/open-policy-agent/02-create-policy.html","urlType":"internal"},{"content":"Build and run a OPA policy for Kubewarden","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/open-policy-agent/03-build-and-run.html","urlType":"internal"},{"content":"Distributing an OPA policy with Kubewarden","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/open-policy-agent/04-distribute.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/open-policy-agent/05-raw-policies.html","urlType":"internal"}]},{"content":"Gatekeeper","items":[{"content":"Gatekeeper support","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/gatekeeper/01-intro.html","urlType":"internal"},{"content":"Creating a new Gatekeeper Rego policy","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/gatekeeper/02-create-policy.html","urlType":"internal"},{"content":"Build and run a Gatekeeper policy","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/gatekeeper/03-build-and-run.html","urlType":"internal"},{"content":"Distributing a Gatekeeper policy with Kubewarden","url":"/admission-controller/1.25/en/tutorials/writing-policies/rego/gatekeeper/04-distribute.html","urlType":"internal"}]}]},{"content":"C#","url":"/admission-controller/1.25/en/tutorials/writing-policies/dotnet.html","urlType":"internal"},{"content":"Swift","url":"/admission-controller/1.25/en/tutorials/writing-policies/swift.html","urlType":"internal"},{"content":"Typescript","url":"/admission-controller/1.25/en/tutorials/writing-policies/typescript.html","urlType":"internal"},{"content":"Other languages","url":"/admission-controller/1.25/en/tutorials/writing-policies/other-languages.html","urlType":"internal"},{"content":"WASI","items":[{"content":"WASI","url":"/admission-controller/1.25/en/tutorials/writing-policies/wasi/01-intro-wasi.html","urlType":"internal"},{"content":"Writing raw policies","url":"/admission-controller/1.25/en/tutorials/writing-policies/wasi/02-raw-policies.html","urlType":"internal"}]},{"content":"Policy metadata","url":"/admission-controller/1.25/en/tutorials/writing-policies/metadata.html","urlType":"internal"}]},{"content":"Testing policies","items":[{"content":"Policy testing","url":"/admission-controller/1.25/en/tutorials/testing-policies/index.html","urlType":"internal"},{"content":"Testing for policy authors","url":"/admission-controller/1.25/en/tutorials/testing-policies/02-policy-authors.html","urlType":"internal"},{"content":"Testing for cluster operators","url":"/admission-controller/1.25/en/tutorials/testing-policies/03-cluster-operators.html","urlType":"internal"}]},{"content":"Verifying Kubewarden","url":"/admission-controller/1.25/en/tutorials/verifying-kubewarden.html","urlType":"internal"},{"content":"Publish policies to Artifact Hub","url":"/admission-controller/1.25/en/tutorials/publish-policy-to-artifact-hub.html","urlType":"internal"}]},{"content":"Explanations","items":[{"content":"Mutating policies","url":"/admission-controller/1.25/en/explanations/mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.25/en/explanations/context-aware-policies.html","urlType":"internal"},{"content":"Policy Groups","url":"/admission-controller/1.25/en/explanations/policy-groups.html","urlType":"internal"},{"content":"Certificate rotation","url":"/admission-controller/1.25/en/explanations/certificates.html","urlType":"internal"},{"content":"Distributing policies","url":"/admission-controller/1.25/en/explanations/distributing-policies.html","urlType":"internal"},{"content":"Comparisons","items":[{"content":"Kubewarden vs OPA Gatekeeper","url":"/admission-controller/1.25/en/explanations/comparisons/opa-comparison.html","urlType":"internal"}]},{"content":"What is the Audit Scanner?","url":"/admission-controller/1.25/en/explanations/audit-scanner/audit-scanner.html","urlType":"internal","items":[{"content":"Audit Scanner - Limitations","url":"/admission-controller/1.25/en/explanations/audit-scanner/limitations.html","urlType":"internal"},{"content":"Audit Scanner - Policy Reports","url":"/admission-controller/1.25/en/explanations/audit-scanner/policy-reports.html","urlType":"internal"}]},{"content":"Admission Controller architecture","url":"/admission-controller/1.25/en/explanations/architecture.html","urlType":"internal"}]},{"content":"Howtos","items":[{"content":"Common tasks","url":"/admission-controller/1.25/en/howtos/tasks.html","urlType":"internal"},{"content":"Install <code>kwctl</code>","url":"/admission-controller/1.25/en/howtos/install-kwctl.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.25/en/howtos/production-deployments.html","urlType":"internal"},{"content":"Audit Scanner","url":"/admission-controller/1.25/en/howtos/audit-scanner.html","urlType":"internal"},{"content":"Configuring policies","url":"/admission-controller/1.25/en/howtos/policies.html","urlType":"internal"},{"content":"Emergency disable","url":"/admission-controller/1.25/en/howtos/emergency-disable.html","urlType":"internal"},{"content":"Configuring Policy Servers","items":[{"content":"Using custom CAs","url":"/admission-controller/1.25/en/howtos/policy-servers/01-custom-cas.html","urlType":"internal"},{"content":"Configuring PolicyServers to use private registries","url":"/admission-controller/1.25/en/howtos/policy-servers/02-private-registry.html","urlType":"internal"},{"content":"Production deployments","url":"/admission-controller/1.25/en/howtos/policy-servers/03-production-deployments.html","urlType":"internal"}]},{"content":"Policy groups","url":"/admission-controller/1.25/en/howtos/policy-groups.html","urlType":"internal"},{"content":"PSP migration","url":"/admission-controller/1.25/en/howtos/psp-migration.html","urlType":"internal"},{"content":"ValidatingAdmissionPolicy migration","url":"/admission-controller/1.25/en/howtos/vap-migration.html","urlType":"internal"},{"content":"Pod Security Admission","url":"/admission-controller/1.25/en/howtos/pod-security-admission-with-kubewarden.html","urlType":"internal"},{"content":"Custom certificate authorities","url":"/admission-controller/1.25/en/howtos/custom-certificate-authorities.html","urlType":"internal"},{"content":"Raw policies","url":"/admission-controller/1.25/en/howtos/raw-policies.html","urlType":"internal"},{"content":"ArgoCD Installation","url":"/admission-controller/1.25/en/howtos/argocd-installation.html","urlType":"internal"},{"content":"Security","items":[{"content":"Secure supply chain","url":"/admission-controller/1.25/en/howtos/security-hardening/secure-supply-chain.html","urlType":"internal"},{"content":"Enable mTLS with K3s","url":"/admission-controller/1.25/en/howtos/security-hardening/webhook-mtls.html","urlType":"internal"}]},{"content":"Air gap","items":[{"content":"Requirements","url":"/admission-controller/1.25/en/howtos/airgap/01-requirements.html","urlType":"internal"},{"content":"Installation","url":"/admission-controller/1.25/en/howtos/airgap/02-install.html","urlType":"internal"}]},{"content":"Telemetry quick starts","items":[{"content":"Open Telemetry quick start","url":"/admission-controller/1.25/en/howtos/telemetry/10-opentelemetry-qs.html","urlType":"internal"},{"content":"Tracing quickstart","url":"/admission-controller/1.25/en/howtos/telemetry/20-tracing-qs.html","urlType":"internal"},{"content":"Metrics quickstart","url":"/admission-controller/1.25/en/howtos/telemetry/30-metrics-qs.html","urlType":"internal"},{"content":"Custom OpenTelemetry Collector","url":"/admission-controller/1.25/en/howtos/telemetry/40-custom-otel-collector.html","urlType":"internal"}]},{"content":"Rancher Fleet","url":"/admission-controller/1.25/en/howtos/Rancher-Fleet.html","urlType":"internal"},{"content":"Rancher UI extension","items":[{"content":"Quickstart","url":"/admission-controller/1.25/en/howtos/ui-extension/01-install.html","urlType":"internal"},{"content":"Monitoring","url":"/admission-controller/1.25/en/howtos/ui-extension/02-metrics.html","urlType":"internal"},{"content":"Tracing","url":"/admission-controller/1.25/en/howtos/ui-extension/03-tracing.html","urlType":"internal"}]},{"content":"Contribution guide","url":"/admission-controller/1.25/en/howtos/contribution-guide/contribution-guide.html","urlType":"internal","items":[{"content":"Contributing to Kubewarden documentation","url":"/admission-controller/1.25/en/howtos/contribution-guide/contributing.html","urlType":"internal"},{"content":"Suggesting a doc improvement","url":"/admission-controller/1.25/en/howtos/contribution-guide/suggesting-an-improvement.html","urlType":"internal"}]}]},{"content":"Reference","items":[{"content":"Custom Resource Definitions (CRD)","url":"/admission-controller/1.25/en/reference/CRDs.html","urlType":"internal"},{"content":"Dependency matrix","url":"/admission-controller/1.25/en/reference/dependency-matrix.html","urlType":"internal"},{"content":"Artifacts","url":"/admission-controller/1.25/en/reference/artifacts.html","urlType":"internal"},{"content":"Upgrade path","url":"/admission-controller/1.25/en/reference/upgrade-path.html","urlType":"internal"},{"content":"Metrics reference","url":"/admission-controller/1.25/en/reference/metrics-reference.html","urlType":"internal"},{"content":"Monitor mode","url":"/admission-controller/1.25/en/reference/monitor-mode.html","urlType":"internal"},{"content":"Policy specification","items":[{"content":"Policy communication specification","url":"/admission-controller/1.25/en/reference/spec/01-intro-spec.html","urlType":"internal"},{"content":"Policy settings","url":"/admission-controller/1.25/en/reference/spec/02-settings.html","urlType":"internal"},{"content":"Validating policies","url":"/admission-controller/1.25/en/reference/spec/03-validating-policies.html","urlType":"internal"},{"content":"Mutating policies","url":"/admission-controller/1.25/en/reference/spec/04-mutating-policies.html","urlType":"internal"},{"content":"Context aware policies","url":"/admission-controller/1.25/en/reference/spec/05-context-aware-policies.html","urlType":"internal"},{"content":"Host capabilities","items":[{"content":"Host capabilities specification","url":"/admission-controller/1.25/en/reference/spec/host-capabilities/01-intro-host-capabilities.html","urlType":"internal"},{"content":"Signature verifier policies","url":"/admission-controller/1.25/en/reference/spec/host-capabilities/02-signature-verifier-policies.html","urlType":"internal"},{"content":"Container registry capabilities","url":"/admission-controller/1.25/en/reference/spec/host-capabilities/03-container-registry.html","urlType":"internal"},{"content":"Network capabilities","url":"/admission-controller/1.25/en/reference/spec/host-capabilities/04-net.html","urlType":"internal"},{"content":"Cryptographic capabilities","url":"/admission-controller/1.25/en/reference/spec/host-capabilities/05-crypto.html","urlType":"internal"},{"content":"Kubernetes capabilities","url":"/admission-controller/1.25/en/reference/spec/host-capabilities/06-kubernetes.html","urlType":"internal"}]}]},{"content":"OCI registry support for Kubewarden","url":"/admission-controller/1.25/en/reference/oci-registries-support.html","urlType":"internal"},{"content":"Security","items":[{"content":"Webhooks","url":"/admission-controller/1.25/en/reference/security-hardening/webhooks-hardening.html","urlType":"internal"}]},{"content":"Threat Model","url":"/admission-controller/1.25/en/reference/threat-model.html","urlType":"internal"},{"content":"Policy evaluation timeout protection","url":"/admission-controller/1.25/en/reference/policy-evaluation-timeout.html","urlType":"internal"},{"content":"Verification configuration format","url":"/admission-controller/1.25/en/reference/verification-config.html","urlType":"internal"},{"content":"Reference for sources.yaml","url":"/admission-controller/1.25/en/reference/sources_yaml.html","urlType":"internal"},{"content":"<code>kwctl</code> CLI","url":"/admission-controller/1.25/en/reference/kwctl-cli.html","urlType":"internal"},{"content":"Policy Server CLI","url":"/admission-controller/1.25/en/reference/policy-server-cli.html","urlType":"internal"}]},{"content":"For who?","url":"/admission-controller/1.25/en/personas.html","urlType":"internal"},{"content":"Use cases","url":"/admission-controller/1.25/en/use-cases.html","urlType":"internal"},{"content":"Organization","url":"/admission-controller/1.25/en/organization.html","urlType":"internal"},{"content":"Enterprise","url":"/admission-controller/1.25/en/enterprise.html","urlType":"internal"},{"content":"Glossary","url":"/admission-controller/1.25/en/glossary.html","urlType":"internal"},{"content":"Security disclosure","url":"/admission-controller/1.25/en/disclosure.html","urlType":"internal"}],"root":true,"order":0}]}}}})